% use lib 'lib';
% use Dissertacao qw( years_mentioned );
% use List::Util qw( uniq );
% my %dataset = %{ $_[0] };
% my %references = %{ $_[1] };
% my %sum_by_year = ();
year,projects,releases,mentions,cite,use,contribute
% foreach my $k (keys %dataset) {
%   my @mentions = years_mentioned $k, \%dataset, \%references;
%   my @releases = map { m/^(\d{4})-/; $1 } grep { /^\d{4}-/ } map { $_->{released_at} } @{ $dataset{$k}{releases}{versions} };
%   my @years = uniq sort @mentions, @releases;
%   $sum_by_year{$years[0]}{projects}++;
%   foreach my $r (grep { $dataset{$k}{references}{$_}{is_software_mentioned} eq 'yes' } keys %{ $dataset{$k}{references} }) {
%     $sum_by_year{$references{$r}->get('year')}{mentions}++;
%     $sum_by_year{$references{$r}->get('year')}{$dataset{$k}{references}{$r}{mention_type}}++;
%   }
%   foreach my $y (map { m/^(\d{4})-/;$1 } grep {/^\d{4}-/} map {$_->{released_at}} @{$dataset{$k}{releases}{versions}}) {
%     $sum_by_year{$y}{releases}++;
%   }
% }
% foreach my $y (sort keys %sum_by_year) {
<%== $y %>,<%== $sum_by_year{$y}{projects} %>,<%== $sum_by_year{$y}{releases} %>,<%== $sum_by_year{$y}{mentions} %>,<%== $sum_by_year{$y}{cite} %>,<%== $sum_by_year{$y}{use} %>,<%== $sum_by_year{$y}{contribute} %>
% }
%# vim: filetype=epl
