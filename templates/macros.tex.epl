% use List::Util qw ( uniq );
% my %dataset = %{ $_[0] };
% my %total = ();
% my @mentions = ();
% foreach my $k (sort keys %dataset) {
%   $total{acm} += $dataset{$k}{search}{acm}{results};
%   $total{ieee} += $dataset{$k}{search}{ieee}{results};
%   $total{total} += ($dataset{$k}{search}{acm}{results} + $dataset{$k}{search}{ieee}{results});
%   foreach my $id (keys %{ $dataset{$k}{references} }) {
%     push(@mentions, $id) if $dataset{$k}{references}{$id}{really_refers_to_software} eq 'yes';
%   }
% }
\newcommand{\SearchACMCount}{<%== $total{acm} %>}
\newcommand{\SearchIEEECount}{<%== $total{ieee} %>}
\newcommand{\SearchCount}{<%== $total{total} %>}
%# TODO a macro \SearchUniqueCount abaixo não deveria acessar o arquivo
%#      cache/references.bib, é necessário refatorar o render-template
%#      para evitar isto, ou incluir as informaçoes no próprio dataset.yml
%#      de alguma forma
\newcommand{\SearchUniqueCount}{<%== `./bin/count documents/references.bib` %>}
\newcommand{\ScreeningCount}{<%== scalar @mentions %>}
\newcommand{\ScreeningUniqueCount}{<%== scalar uniq @mentions %>}
%# vim: filetype=epl
