#!/usr/bin/perl
use Modern::Perl '2014';
use experimental 'signatures';
use File::Basename;
use Statistics::Descriptive;

foreach my $tool (grep { -d $_ } glob("$ENV{PWD}/static-analysis-tools/*")) {
  foreach my $dir (grep { -d $_ } glob("$tool/*")) {
    unless (-e "$dir.doxyparse") {
      say "doxyparse $dir > $dir.doxyparse";
      `doxyparse $dir > $dir.doxyparse`;
    }
    unless (-e "$dir.analizo.metrics") {
      say "analizo metrics $dir > $dir.analizo.metrics";
      `analizo metrics $dir > $dir.analizo.metrics`;
    }
    unless (-e "$dir.analizo.dsm.png") {
      say "analizo dsm -o $dir.analizo.dsm.png $dir";
      `analizo dsm -o $dir.analizo.dsm.png $dir`;
    }
    unless (-e "$dir.sloccount") {
      say "sloccount $dir > $dir.sloccount";
      `sloccount $dir > $dir.sloccount`;
    }
  }
}

sub metric_values($file, $metric) {
  my @values = ();
  open my $FILE, '<', $file;
  while(my $line = <$FILE>) {
    if ($line =~ m/^(?:$metric): (.+)/) {
      push @values, $1;
    }
  }
  close $FILE;
  return @values;
}

sub metric_value($file, $metric) {
  open my $FILE, '<', $file;
  while(my $line = <$FILE>) {
    if ($line =~ m/^(?:$metric): (.+)/) {
      return $1;
    }
  }
  close $FILE;
  return;
}

foreach my $tool_dir (grep { -d $_ } glob("$ENV{PWD}/static-analysis-tools/*")) {
  my $tool = basename($tool_dir);
  open my $OUTPUT, '>', "metricas/metrics-$tool.csv" or die $!;
  print $OUTPUT "tool, release, total_modules, change_cost, sc_75, sc_90, sc_95\n";
  foreach my $file (glob("$tool_dir/*.metrics")) {
    my $release = basename($file, '.analizo.metrics');
    my $total_modules = metric_value($file, 'total_modules');
    my $change_cost = metric_value($file, 'change_cost');
    my $stat = Statistics::Descriptive::Full->new();
    $stat->add_data(metric_values($file, 'sc'));
    my $sc_75 = $stat->percentile(75);
    my $sc_90 = $stat->percentile(90);
    my $sc_95 = $stat->percentile(95);
    print $OUTPUT join(', ', $tool, $release, $total_modules, $change_cost, $sc_75, $sc_90, $sc_95);
    print $OUTPUT "\n";
  }
  close $OUTPUT;
}
