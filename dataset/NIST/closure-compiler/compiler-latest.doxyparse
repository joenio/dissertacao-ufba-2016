file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/base.js
module base.js
   variable $jscomp in line 26
      protection public
   variable scope in line 29
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6/array.js
module array.js
   variable array in line 21
      protection public
   variable done_ in line 29
   variable arrayIterator_ in line 44
   variable findInternal_ in line 78
   variable from in line 108
      protection public
   variable of in line 138
      protection public
   variable entries in line 152
      protection public
   variable $install in line 161
      protection public
   variable keys in line 174
      protection public
   variable values in line 197
      protection public
   variable copyWithin in line 223
      protection public
   variable fill in line 274
      protection public
   variable find in line 304
      protection public
   variable findIndex in line 329
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6/map.js
module map.js
   variable Map in line 27
      protection public
   variable index_ in line 329
   variable defineProperty_ in line 338
   variable Entry_ in line 352
   variable previous in line 356
      protection public
   variable next in line 360
      protection public
   variable head in line 364
      protection public
   variable key in line 368
      protection public
   variable value in line 372
      protection public
   variable ASSUME_NO_NATIVE in line 379
      protection public
   variable $install in line 383
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6/math.js
module math.js
   variable math in line 21
      protection public
   variable clz32 in line 32
      protection public
   variable imul in line 67
      protection public
   variable sign in line 93
      protection public
   variable log10 in line 107
      protection public
   variable log2 in line 120
      protection public
   variable log1p in line 134
      protection public
   variable expm1 in line 164
      protection public
   variable cosh in line 191
      protection public
   variable sinh in line 205
      protection public
   variable tanh in line 220
      protection public
   variable acosh in line 238
      protection public
   variable asinh in line 252
      protection public
   variable atanh in line 268
      protection public
   variable hypot in line 284
      protection public
   variable trunc in line 320
      protection public
   variable cbrt in line 336
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6/number.js
module number.js
   variable number in line 21
      protection public
   variable isFinite in line 32
      protection public
   variable isInteger in line 46
      protection public
   variable isNaN in line 61
      protection public
   variable isSafeInteger in line 75
      protection public
   variable EPSILON in line 88
      protection public
   variable MAX_SAFE_INTEGER in line 98
      protection public
   variable MIN_SAFE_INTEGER in line 108
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6/object.js
module object.js
   variable object in line 21
      protection public
   variable assign in line 34
      protection public
   variable is in line 61
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6/runtime.js
module runtime.js
   variable getGlobal in line 30
      protection public
   variable global in line 42
      protection public
   variable initSymbol in line 49
      protection public
   variable symbolCounter_ in line 60
   variable Symbol in line 69
      protection public
   variable initSymbolIterator in line 79
      protection public
   variable makeIterator in line 98
      protection public
   variable arrayFromIterator in line 133
      protection public
   variable arrayFromIterable in line 149
      protection public
   variable arrayFromArguments in line 163
      protection public
   variable inherits in line 202
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6/set.js
module set.js
   variable Set in line 27
      protection public
   variable ASSUME_NO_NATIVE in line 164
      protection public
   variable $install in line 168
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6/string.js
module string.js
   variable string in line 21
      protection public
   variable noRegExp_ in line 30
   variable fromCodePoint in line 47
      protection public
   variable repeat in line 76
      protection public
   variable $install in line 96
      protection public
   variable codePointAt in line 112
      protection public
   variable includes in line 155
      protection public
   variable startsWith in line 184
      protection public
   variable endsWith in line 221
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6_dart_runtime.js
module es6_dart_runtime.js
   variable getSuperPropertyDescriptor_ in line 40
   variable superGet in line 64
      protection public
   variable superSet in line 79
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/es6_runtime.js
module es6_runtime.js
   variable getGlobal in line 21
      protection public
   variable global in line 24
      protection public
   variable initSymbol in line 25
      protection public
   variable symbolCounter_ in line 32
   variable Symbol in line 35
      protection public
   variable initSymbolIterator in line 38
      protection public
   variable makeIterator in line 49
      protection public
   variable arrayFromIterator in line 69
      protection public
   variable arrayFromIterable in line 80
      protection public
   variable arrayFromArguments in line 89
      protection public
   variable inherits in line 98
      protection public
   variable array in line 113
      protection public
   variable done_ in line 115
   variable arrayIterator_ in line 122
   variable findInternal_ in line 147
   variable from in line 165
      protection public
   variable of in line 191
      protection public
   variable entries in line 202
      protection public
   variable $install in line 207
      protection public
   variable keys in line 214
      protection public
   variable values in line 227
      protection public
   variable copyWithin in line 243
      protection public
   variable fill in line 282
      protection public
   variable find in line 303
      protection public
   variable findIndex in line 316
      protection public
   variable Map in line 327
      protection public
   variable checkBrowserConformance_ in line 340
   variable createHead_ in line 367
   variable getId_ in line 374
   variable set in line 390
      protection public
   variable prototype in line 411
      protection public
   variable clear in line 430
      protection public
   variable has in line 437
      protection public
   variable get in line 442
      protection public
   variable maybeGetEntry_ in line 449
   variable forEach in line 483
      protection public
   variable iter_ in line 492
   variable index_ in line 514
   variable defineProperty_ in line 518
   variable Entry_ in line 524
   variable previous in line 526
      protection public
   variable next in line 527
      protection public
   variable head in line 528
      protection public
   variable key in line 529
      protection public
   variable value in line 530
      protection public
   variable ASSUME_NO_NATIVE in line 531
      protection public
   variable math in line 547
      protection public
   variable clz32 in line 550
      protection public
   variable imul in line 580
      protection public
   variable sign in line 592
      protection public
   variable log10 in line 598
      protection public
   variable log2 in line 603
      protection public
   variable log1p in line 608
      protection public
   variable expm1 in line 627
      protection public
   variable cosh in line 644
      protection public
   variable sinh in line 650
      protection public
   variable tanh in line 659
      protection public
   variable acosh in line 670
      protection public
   variable asinh in line 676
      protection public
   variable atanh in line 686
      protection public
   variable hypot in line 694
      protection public
   variable trunc in line 728
      protection public
   variable cbrt in line 738
      protection public
   variable number in line 746
      protection public
   variable isFinite in line 749
      protection public
   variable isInteger in line 757
      protection public
   variable isNaN in line 765
      protection public
   variable isSafeInteger in line 770
      protection public
   variable EPSILON in line 773
      protection public
   variable MAX_SAFE_INTEGER in line 774
      protection public
   variable MIN_SAFE_INTEGER in line 775
      protection public
   variable object in line 776
      protection public
   variable assign in line 780
      protection public
   variable is in line 799
      protection public
   variable Set in line 809
      protection public
   variable add in line 843
      protection public
   variable string in line 894
      protection public
   variable noRegExp_ in line 897
   variable fromCodePoint in line 904
      protection public
   variable repeat in line 930
      protection public
   variable codePointAt in line 955
      protection public
   variable includes in line 982
      protection public
   variable startsWith in line 997
      protection public
   variable endsWith in line 1022
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/license.js
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/com/google/javascript/jscomp/js/runtime_type_check.js
module runtime_type_check.js
   variable typecheck in line 24
      protection public
   variable suspendChecking in line 32
      protection public
   variable log in line 42
      protection public
   variable checkType in line 53
      protection public
   variable prettify_ in line 85
   variable getClassName_ in line 105
   variable Checker in line 123
      protection public
   variable check in line 132
      protection public
   variable ValueChecker_ in line 144
   variable toString in line 161
      protection public
   variable NullChecker_ in line 174
   variable ExternClassChecker_ in line 209
   variable windows in line 224
      protection public
   variable oldOpenFuns in line 232
      protection public
   variable trackOpenOnWindow in line 240
      protection public
   variable getGlobalThis_ in line 266
   variable theTop in line 276
      protection public
   variable checkWindow_ in line 314
   variable ClassChecker_ in line 339
   variable InterfaceChecker_ in line 371
   variable ObjectChecker_ in line 403
   variable nullChecker in line 424
      protection public
   variable valueChecker in line 433
      protection public
   variable externClassChecker in line 444
      protection public
   variable classChecker in line 455
      protection public
   variable interfaceChecker in line 466
      protection public
   variable objectChecker in line 476
      protection public
   function trackOpenOnWindow((null)) in line 274
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function if((null)) in line 277
      protection public
      3 lines of code
      1 parameters
      4 conditional paths
      uses variable $jscomp defined in base.js
      uses variable theTop defined in runtime_type_check.js
      uses variable checkWindow_ defined in runtime_type_check.js
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/CheckForNull.java
module javax::annotation::CheckForNull
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/CheckForSigned.java
module javax::annotation::CheckForSigned
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/CheckReturnValue.java
module javax::annotation::CheckReturnValue
   function when() in line 16
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/concurrent/GuardedBy.java
module javax::annotation::concurrent::GuardedBy
   function value() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/concurrent/Immutable.java
module javax::annotation::concurrent::Immutable
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/concurrent/NotThreadSafe.java
module javax::annotation::concurrent::NotThreadSafe
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/concurrent/ThreadSafe.java
module javax::annotation::concurrent::ThreadSafe
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/Detainted.java
module javax::annotation::Detainted
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/MatchesPattern.java
module javax::annotation::MatchesPattern
   function flags() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 17
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module javax::annotation::MatchesPattern::Checker
   inherits from javax::annotation::meta::TypeQualifierValidator
   function forConstantValue(MatchesPattern,Object) in line 22
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function value() defined in javax::annotation::MatchesPattern
      uses function flags() defined in javax::annotation::MatchesPattern
      uses variable value defined in map.js
      uses variable ALWAYS defined in javax::annotation::meta::When
      uses enumvalue NEVER defined in javax::annotation::meta::When
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/meta/Exclusive.java
module javax::annotation::meta::Exclusive
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/meta/Exhaustive.java
module javax::annotation::meta::Exhaustive
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/meta/TypeQualifier.java
module javax::annotation::meta::TypeQualifier
   function applicableTo() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/meta/TypeQualifierDefault.java
module javax::annotation::meta::TypeQualifierDefault
   function value() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/meta/TypeQualifierNickname.java
module javax::annotation::meta::TypeQualifierNickname
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/meta/TypeQualifierValidator.java
module javax::annotation::meta::TypeQualifierValidator
   function forConstantValue(@Nonnull A,Object) in line 20
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/meta/When.java
module javax::annotation::meta::When
   variable ALWAYS in line 15
      protection public
   variable MAYBE in line 19
      protection public
   variable UNKNOWN in line 17
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/Nonnegative.java
module javax::annotation::Nonnegative
   function when() in line 16
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module javax::annotation::Nonnegative::Checker
   inherits from javax::annotation::meta::TypeQualifierValidator
   function forConstantValue(Nonnegative,Object) in line 20
      protection public
      20 lines of code
      2 parameters
      6 conditional paths
      uses enumvalue NEVER defined in javax::annotation::meta::When
      uses variable value defined in map.js
      uses variable ALWAYS defined in javax::annotation::meta::When
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/Nonnull.java
module javax::annotation::Nonnull
   function when() in line 15
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module javax::annotation::Nonnull::Checker
   inherits from javax::annotation::meta::TypeQualifierValidator
   function forConstantValue(Nonnull,Object) in line 19
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable value defined in map.js
      uses enumvalue NEVER defined in javax::annotation::meta::When
      uses variable ALWAYS defined in javax::annotation::meta::When
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/Nullable.java
module javax::annotation::Nullable
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/OverridingMethodsMustInvokeSuper.java
module javax::annotation::OverridingMethodsMustInvokeSuper
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/ParametersAreNonnullByDefault.java
module javax::annotation::ParametersAreNonnullByDefault
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/ParametersAreNullableByDefault.java
module javax::annotation::ParametersAreNullableByDefault
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/PropertyKey.java
module javax::annotation::PropertyKey
   function when() in line 14
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/RegEx.java
module javax::annotation::RegEx
   function when() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module javax::annotation::RegEx::Checker
   inherits from javax::annotation::meta::TypeQualifierValidator
   function forConstantValue(RegEx,Object) in line 27
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable value defined in map.js
      uses enumvalue NEVER defined in javax::annotation::meta::When
      uses variable ALWAYS defined in javax::annotation::meta::When
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/Signed.java
module javax::annotation::Signed
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/Syntax.java
module javax::annotation::Syntax
   function value() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function when() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/Tainted.java
module javax::annotation::Tainted
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/Untainted.java
module javax::annotation::Untainted
   function when() in line 14
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/WillClose.java
module javax::annotation::WillClose
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/WillCloseWhenClosed.java
module javax::annotation::WillCloseWhenClosed
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/compiler/javax/annotation/WillNotClose.java
module javax::annotation::WillNotClose
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/closure-compiler/compiler-latest/README.md
