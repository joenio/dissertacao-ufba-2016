file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/fingerd.c
module fingerd.c
   macro definition ENTRIES in line 52
      protection public
   variable copyright in line 35
      protection public
   variable sccsid in line 41
      protection public
   function main(void) in line 46
      protection public
      60 lines of code
      1 parameters
      14 conditional paths
      uses macro definition ENTRIES defined in fingerd.c
      uses function fatal(char *) defined in fingerd.c
   function fatal(char *) in line 107
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/gethostbyname.c
module gethostbyname.c
   function gethostbyname(char *) in line 10
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function main(void) in line 12
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function gethostbyname(char *) defined in gethostbyname.c
      uses variable hostent::h_name defined in gethostbyname.c
   variable hostent::h_addr_list in line 6
      protection public
   variable hostent::h_addrtype in line 4
      protection public
   variable hostent::h_aliases in line 3
      protection public
   variable hostent::h_length in line 5
      protection public
   variable hostent::h_name in line 2
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/hdrs.c
module hdrs.c
   function main(int,char **) in line 11
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/main.c
module main.c
   function main(int,char **) in line 1
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/route.c
module route.c
   macro definition _PATH_PROCNET_ROUTE in line 36
      protection public
   macro definition mask_in_addr in line 42
      protection public
   macro definition full_mask in line 43
      protection public
   variable Version in line 33
      protection public
   variable opt_n in line 178
      protection public
   variable opt_v in line 179
      protection public
   variable skfd in line 180
      protection public
   function getsock(char *,struct sockaddr *) in line 46
      protection public
      33 lines of code
      2 parameters
      5 conditional paths
   function resolve(char *,struct sockaddr *) in line 80
      protection public
      39 lines of code
      2 parameters
      4 conditional paths
      uses function gethostbyname(char *) defined in gethostbyname.c
      uses variable hostent::h_addr_list defined in gethostbyname.c
      uses variable hostent::h_length defined in gethostbyname.c
      uses variable hostent::h_name defined in gethostbyname.c
   function rresolve(char *,struct sockaddr *,int) in line 121
      protection public
      49 lines of code
      3 parameters
      9 conditional paths
      uses variable hostent::h_name defined in gethostbyname.c
   function reserror(char *) in line 172
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function usage(void) in line 183
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function rt_print(void) in line 194
      protection public
      63 lines of code
      1 parameters
      10 conditional paths
      uses macro definition _PATH_PROCNET_ROUTE defined in route.c
      uses function getsock(char *,struct sockaddr *) defined in route.c
      uses function rresolve(char *,struct sockaddr *,int) defined in route.c
      uses variable opt_n defined in route.c
   function rt_add(char **) in line 259
      protection public
      157 lines of code
      1 parameters
      34 conditional paths
      uses function usage(void) defined in route.c
      uses function resolve(char *,struct sockaddr *) defined in route.c
      uses function reserror(char *) defined in route.c
      uses variable opt_v defined in route.c
      uses macro definition mask_in_addr defined in route.c
      uses macro definition full_mask defined in route.c
      uses variable skfd defined in route.c
   function rt_del(char **) in line 419
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses function usage(void) defined in route.c
      uses function resolve(char *,struct sockaddr *) defined in route.c
      uses function reserror(char *) defined in route.c
      uses variable skfd defined in route.c
   function main(int,char **) in line 447
      protection public
      51 lines of code
      2 parameters
      10 conditional paths
      uses variable opt_n defined in route.c
      uses variable opt_v defined in route.c
      uses function usage(void) defined in route.c
      uses function rt_print(void) defined in route.c
      uses variable skfd defined in route.c
      uses function rt_add(char **) defined in route.c
      uses function rt_del(char **) defined in route.c
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/talkd-bsd4.2/announce.c
module announce.c
   macro definition max in line 123
      protection public
   macro definition N_LINES in line 124
      protection public
   macro definition N_CHARS in line 125
      protection public
   variable sccsid in line 35
      protection public
   variable hostname in line 52
      protection public
   function announce(CTL_MSG *,char *) in line 61
      protection public
      28 lines of code
      2 parameters
      7 conditional paths
      uses function announce_proc(CTL_MSG *,char *) defined in announce.c
      uses variable request defined in talkd.c
   function announce_proc(CTL_MSG *,char *) in line 94
      protection public
      28 lines of code
      2 parameters
      5 conditional paths
      uses variable request defined in talkd.c
      uses function print_mesg(FILE *,CTL_MSG *,char *) defined in announce.c
   function print_mesg(FILE *,CTL_MSG *,char *) in line 133
      protection public
      62 lines of code
      3 parameters
      4 conditional paths
      uses macro definition N_LINES defined in announce.c
      uses macro definition N_CHARS defined in announce.c
      uses macro definition max defined in announce.c
      uses variable hostname defined in announce.c
      uses variable request defined in talkd.c
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/talkd-bsd4.2/print.c
module print.c
   macro definition NTYPES in line 48
      protection public
   macro definition NANSWERS in line 52
      protection public
   variable sccsid in line 35
      protection public
   variable types in line 46
      protection public
   variable answers in line 49
      protection public
   function print_request(char *,CTL_MSG *) in line 54
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable tp defined in table.c
      uses macro definition NTYPES defined in print.c
      uses variable types defined in print.c
   function print_response(char *,CTL_RESPONSE *) in line 69
      protection public
      18 lines of code
      2 parameters
      3 conditional paths
      uses variable tp defined in table.c
      uses macro definition NTYPES defined in print.c
      uses variable types defined in print.c
      uses macro definition NANSWERS defined in print.c
      uses variable answers defined in print.c
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/talkd-bsd4.2/process.c
module process.c
   macro definition satosin in line 145
      protection public
   macro definition SCMPN in line 191
      protection public
   variable sccsid in line 35
      protection public
   function find_request() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function find_match() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function process_request(CTL_MSG *,CTL_RESPONSE *) in line 60
      protection public
      70 lines of code
      2 parameters
      12 conditional paths
      uses macro definition debug defined in newsolver.c
      uses function print_request(char *,CTL_MSG *) defined in print.c
      uses function do_announce(CTL_MSG *,CTL_RESPONSE *) defined in process.c
      uses function find_request() defined in process.c
      uses function insert_table(CTL_MSG *,CTL_RESPONSE *) defined in table.c
      uses function find_match() defined in process.c
      uses function delete_invite(int) defined in table.c
      uses function print_response(char *,CTL_RESPONSE *) defined in print.c
   function do_announce(CTL_MSG *,CTL_RESPONSE *) in line 131
      protection public
      41 lines of code
      2 parameters
      5 conditional paths
      uses function find_user(char *,char *) defined in process.c
      uses macro definition satosin defined in process.c
      uses function find_request() defined in process.c
      uses function insert_table(CTL_MSG *,CTL_RESPONSE *) defined in table.c
      uses function announce(CTL_MSG *,char *) defined in announce.c
      uses variable hostent::h_name defined in gethostbyname.c
      uses function new_id() defined in table.c
   function find_user(char *,char *) in line 178
      protection public
      38 lines of code
      2 parameters
      8 conditional paths
      uses macro definition SCMPN defined in process.c
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/talkd-bsd4.2/table.c
module table.c
   macro definition MAX_ID in line 56
      protection public
   macro definition NIL in line 58
      protection public
   typedef TABLE_ENTRY in line 60
      protection public
   variable sccsid in line 35
      protection public
   variable debug in line 60
      protection public
   variable tp in line 60
      protection public
   variable txp in line 60
      protection public
   variable table in line 73
      protection public
   function find_request() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function find_match() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function find_match(CTL_MSG *) in line 82
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses variable tp defined in table.c
      uses variable txp defined in table.c
      uses variable debug defined in table.c
      uses function print_request(char *,CTL_MSG *) defined in print.c
      uses variable table_entry::request defined in table.c
      uses variable table defined in table.c
      uses macro definition NIL defined in table.c
      uses variable table_entry::next defined in table.c
      uses variable table_entry::time defined in table.c
   function find_request(CTL_MSG *) in line 116
      protection public
      36 lines of code
      1 parameters
      7 conditional paths
      uses variable tp defined in table.c
      uses variable txp defined in table.c
      uses variable debug defined in table.c
      uses function print_request(char *,CTL_MSG *) defined in print.c
      uses variable table_entry::request defined in table.c
      uses variable table defined in table.c
      uses macro definition NIL defined in table.c
      uses variable table_entry::next defined in table.c
      uses variable table_entry::time defined in table.c
   function insert_table(CTL_MSG *,CTL_RESPONSE *) in line 153
      protection public
      25 lines of code
      2 parameters
      3 conditional paths
      uses variable tp defined in table.c
      uses variable txp defined in table.c
      uses variable table_entry::request defined in table.c
      uses function new_id() defined in table.c
      uses variable response defined in talkd.c
      uses macro definition NIL defined in table.c
      uses variable table_entry::time defined in table.c
      uses variable table_entry::next defined in table.c
      uses variable table defined in table.c
      uses variable table_entry::last defined in table.c
   function new_id() in line 182
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses macro definition MAX_ID defined in table.c
   function delete_invite(int) in line 196
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses variable table defined in table.c
      uses variable debug defined in table.c
      uses macro definition NIL defined in table.c
      uses variable table_entry::next defined in table.c
      uses variable table_entry::request defined in table.c
      uses function print_request(char *,CTL_MSG *) defined in print.c
   function delete(TABLE_ENTRY *) in line 220
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable debug defined in table.c
      uses function print_request(char *,CTL_MSG *) defined in print.c
      uses variable table defined in table.c
      uses variable table_entry::next defined in table.c
      uses macro definition NIL defined in table.c
      uses variable table_entry::last defined in table.c
   variable table_entry::last in line 70
      protection public
   variable table_entry::next in line 69
      protection public
   variable table_entry::request in line 67
      protection public
   variable table_entry::time in line 68
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/examples/talkd-bsd4.2/talkd.c
module talkd.c
   macro definition TIMEOUT in line 73
      protection public
   macro definition MAXIDLE in line 74
      protection public
   variable copyright in line 35
      protection public
   variable sccsid in line 41
      protection public
   variable request in line 63
      protection public
   variable response in line 64
      protection public
   variable sockt in line 66
      protection public
   variable debug in line 67
      protection public
   variable lastmsgtime in line 69
      protection public
   variable hostname in line 71
      protection public
   function timeout() in line 68
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable lastmsgtime defined in talkd.c
      uses macro definition MAXIDLE defined in talkd.c
      uses macro definition TIMEOUT defined in talkd.c
   function main(int,argv) in line 76
      protection public
      43 lines of code
      2 parameters
      9 conditional paths
      uses variable request defined in talkd.c
      uses variable hostname defined in talkd.c
      uses variable debug defined in talkd.c
      uses function timeout() defined in talkd.c
      uses macro definition TIMEOUT defined in talkd.c
      uses variable lastmsgtime defined in talkd.c
      uses function process_request(CTL_MSG *,CTL_RESPONSE *) defined in process.c
      uses variable response defined in talkd.c
      uses variable sockt defined in talkd.c
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/include-wrap/stdarg.h
module stdarg.h
   typedef __gnuc_va_list in line 7
      protection public
   typedef va_list in line 8
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/NIST/boon/boon-1.0/newsolver.c
module newsolver.c
   macro definition fatal in line 27
      protection public
   macro definition debug in line 34
      protection public
   macro definition warn in line 38
      protection public
   macro definition INF in line 60
      protection public
   macro definition NEGINF in line 61
      protection public
   macro definition INFADD0_FATAL in line 97
      protection public
   macro definition MAXDEPENDS in line 405
      protection public
   macro definition EQNSTBLSIZ in line 871
      protection public
   macro definition SETTBLSIZ in line 1647
      protection public
   macro definition MINLONG in line 2157
      protection public
   enumeration setflags_t in line 386
      protection public
   typedef intinf in line 59
      protection public
   typedef eqnlist_t in line 246
      protection public
   typedef set_t in line 419
      protection public
   typedef termlist_t in line 430
      protection public
   typedef eqn_t in line 444
      protection public
   variable debugging in line 33
      protection public
   variable infzero in line 73
      protection public
   variable zerorange in line 162
      protection public
   variable emptyrange in line 163
      protection public
   variable affineidentity in line 255
      protection public
   variable neqns in line 872
      protection public
   variable eqnssiz in line 872
      protection public
   variable the_eqns in line 874
      protection public
   variable eqns in line 875
      protection public
   variable allsets in line 1017
      protection public
   variable settbl in line 1648
      protection public
   variable ready_to_check_graph in line 1878
      protection public
   enumvalue ALIVE in line 386
      protection public
   enumvalue SURVIVES in line 386
      protection public
   enumvalue FINALIZED in line 386
      protection public
   enumvalue QUERIED in line 386
      protection public
   enumvalue RELEVANT in line 386
      protection public
   enumvalue MARKED in line 387
      protection public
   enumvalue GRAY in line 387
      protection public
   function debug_check_graph(void) in line 22
      protection public
      70 lines of code
      1 parameters
      18 conditional paths
      uses variable ready_to_check_graph defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses variable eqnlist_s::next defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
   function debug_dumpalleqns(void) in line 23
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses macro definition debug defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses variable eqns defined in newsolver.c
   function fatal_hook(void) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function warn_hook(void) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function mymalloc(size_t) in line 42
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses macro definition fatal defined in newsolver.c
   function myrealloc(void *,size_t) in line 48
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses macro definition fatal defined in newsolver.c
   function inf(long int) in line 63
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses macro definition NEGINF defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses macro definition INF defined in newsolver.c
   function infstr(intinf) in line 74
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses macro definition NEGINF defined in newsolver.c
      uses macro definition INF defined in newsolver.c
   function infsign(intinf) in line 85
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses macro definition INF defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses variable infzero defined in newsolver.c
   function infadd0(intinf,intinf,intinf) in line 98
      protection public
      13 lines of code
      3 parameters
      12 conditional paths
      uses macro definition NEGINF defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses function infsign(intinf) defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses macro definition INFADD0_FATAL defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
   function infadd(intinf,intinf) in line 111
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function infadd0(intinf,intinf,intinf) defined in newsolver.c
      uses macro definition INFADD0_FATAL defined in newsolver.c
   function infnegate(intinf) in line 114
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses macro definition INF defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
   function infsub(intinf,intinf) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function infadd(intinf,intinf) defined in newsolver.c
      uses function infnegate(intinf) defined in newsolver.c
   function infmul(intinf,intinf) in line 125
      protection public
      11 lines of code
      2 parameters
      7 conditional paths
      uses macro definition NEGINF defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses function infsign(intinf) defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
   function infdiv(intinf,intinf) in line 136
      protection public
      19 lines of code
      2 parameters
      8 conditional paths
      uses macro definition fatal defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable infzero defined in newsolver.c
   function rangestr(range_t) in line 165
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function infstr(intinf) defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
   function rangesingleton(intinf) in line 171
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
   function rangeempty(range_t) in line 181
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
   function rangeadd(range_t,range_t) in line 184
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable emptyrange defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses function infadd0(intinf,intinf,intinf) defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses macro definition INF defined in newsolver.c
   function rangemul(intinf,range_t) in line 192
      protection public
      21 lines of code
      2 parameters
      4 conditional paths
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable emptyrange defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses variable zerorange defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses function infmul(intinf,intinf) defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
   function rangesub(range_t,range_t) in line 213
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function rangeadd(range_t,range_t) defined in newsolver.c
      uses function rangemul(intinf,range_t) defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
   function rangesubset(range_t,range_t) in line 216
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable range_t::lo defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses macro definition INF defined in newsolver.c
   function rangeunion(range_t,range_t) in line 220
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable emptyrange defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
   function rangemin(range_t,range_t) in line 228
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable emptyrange defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
   function rangeeq(range_t,range_t) in line 236
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
   function affineapp(affine_t,range_t) in line 259
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function rangeadd(range_t,range_t) defined in newsolver.c
      uses function rangesub(range_t,range_t) defined in newsolver.c
      uses function rangemul(intinf,range_t) defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses variable affine_t::z defined in newsolver.c
      uses variable affine_t::b defined in newsolver.c
   function affineeq(affine_t,affine_t) in line 263
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable affine_t::z defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses function rangeeq(range_t,range_t) defined in newsolver.c
      uses variable affine_t::b defined in newsolver.c
   function randomrange(void) in line 268
      protection public
      14 lines of code
      1 parameters
      6 conditional paths
      uses variable range_t::lo defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
   function affinecomp(affine_t,affine_t) in line 285
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
      uses function infadd(intinf,intinf) defined in newsolver.c
      uses function infmul(intinf,intinf) defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses variable affine_t::z defined in newsolver.c
      uses function rangeadd(range_t,range_t) defined in newsolver.c
      uses function rangesub(range_t,range_t) defined in newsolver.c
      uses function rangemul(intinf,range_t) defined in newsolver.c
      uses variable affine_t::b defined in newsolver.c
      uses function randomrange(void) defined in newsolver.c
      uses function affineapp(affine_t,range_t) defined in newsolver.c
      uses function rangeeq(range_t,range_t) defined in newsolver.c
   function affinedecomp(affine_t,affine_t) in line 302
      protection public
      31 lines of code
      2 parameters
      1 conditional paths
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable affine_t::b defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses variable affine_t::z defined in newsolver.c
      uses function infsub(intinf,intinf) defined in newsolver.c
      uses function infmul(intinf,intinf) defined in newsolver.c
      uses function infdiv(intinf,intinf) defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses function infadd(intinf,intinf) defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses function affinecomp(affine_t,affine_t) defined in newsolver.c
      uses function affineeq(affine_t,affine_t) defined in newsolver.c
   function randomaffine(void) in line 334
      protection public
      23 lines of code
      1 parameters
      12 conditional paths
      uses variable affine_t::z defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses variable affine_t::b defined in newsolver.c
      uses function randomrange(void) defined in newsolver.c
   function affinetest(void) in line 357
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function randomaffine(void) defined in newsolver.c
      uses function affinecomp(affine_t,affine_t) defined in newsolver.c
      uses function affinedecomp(affine_t,affine_t) defined in newsolver.c
      uses function affineeq(affine_t,affine_t) defined in newsolver.c
   function affinestr(affine_t) in line 369
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function infstr(intinf) defined in newsolver.c
      uses variable affine_t::z defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses function rangestr(range_t) defined in newsolver.c
      uses variable affine_t::b defined in newsolver.c
   function debug_dumpeqn(eqn_t *) in line 447
      protection public
      33 lines of code
      1 parameters
      9 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function rangestr(range_t) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::extra_depends defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
   function deleqn0(eqnlist_t *,eqn_t *,int) in line 483
      protection public
      25 lines of code
      3 parameters
      6 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqnlist_s::next defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
   function deleqn(eqnlist_t *,eqn_t *) in line 508
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function deleqn0(eqnlist_t *,eqn_t *,int) defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
   function inseqn(eqnlist_t *,eqn_t *) in line 514
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqnlist_s::next defined in newsolver.c
      uses function mymalloc(size_t) defined in newsolver.c
   function dupeqn(eqnlist_t *) in line 526
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable eqnlist_s::next defined in newsolver.c
      uses function inseqn(eqnlist_t *,eqn_t *) defined in newsolver.c
   function delterm(termlist_t *,term_t *) in line 534
      protection public
      22 lines of code
      2 parameters
      4 conditional paths
      uses variable termlist_s::t defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
   function maybecoalesce(term_t *,term_t *) in line 556
      protection public
      18 lines of code
      2 parameters
      2 conditional paths
      uses variable term_t::s defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses function infstr(intinf) defined in newsolver.c
      uses function infadd(intinf,intinf) defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
   function insterm(termlist_t *,term_t *) in line 577
      protection public
      34 lines of code
      2 parameters
      7 conditional paths
      uses function mymalloc(size_t) defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses function maybecoalesce(term_t *,term_t *) defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
   function dupterm(termlist_t *) in line 612
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable termlist_s::next defined in newsolver.c
      uses function insterm(termlist_t *,term_t *) defined in newsolver.c
   function infeasible(void) in line 621
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function rangeinrange(range_t,range_t *) in line 627
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable range_t::lo defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses macro definition INF defined in newsolver.c
   function checkhardbounds(set_t *) in line 643
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable set_s::r defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable set_s::hardbound defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function infstr(intinf) defined in newsolver.c
      uses function infeasible(void) defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
   function rangeinset(range_t,set_t *) in line 661
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses macro definition debug defined in newsolver.c
      uses function rangestr(range_t) defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function rangeinrange(range_t,range_t *) defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue SURVIVES defined in newsolver.c
      uses function checkhardbounds(set_t *) defined in newsolver.c
   function adddepends_set(set_t *,set_t *) in line 674
      protection public
      13 lines of code
      2 parameters
      5 conditional paths
      uses macro definition MAXDEPENDS defined in newsolver.c
      uses variable set_s::depends defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
   function adddepends(set_t *,eqn_t *) in line 689
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function adddepends_set(set_t *,set_t *) defined in newsolver.c
      uses variable eqn_s::extra_depends defined in newsolver.c
   function overwritedepends(set_t *,eqn_t *) in line 704
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable eqn_s::extra_depends defined in newsolver.c
      uses variable set_s::depends defined in newsolver.c
      uses function adddepends(set_t *,eqn_t *) defined in newsolver.c
   function overwritedepends_set(set_t *,set_t *) in line 713
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable set_s::depends defined in newsolver.c
      uses macro definition MAXDEPENDS defined in newsolver.c
      uses function killeqn(eqn_t *) defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
   function killeqn(eqn_t *) in line 720
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses macro definition debug defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
      uses function deleqn0(eqnlist_t *,eqn_t *,int) defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses function deleqn(eqnlist_t *,eqn_t *) defined in newsolver.c
   function simplify(eqn_t *,int) in line 723
      protection public
      62 lines of code
      2 parameters
      8 conditional paths
      uses variable eqnlist_s::next defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses function killeqn(eqn_t *) defined in newsolver.c
      uses function rangemul(intinf,range_t) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses function rangeadd(range_t,range_t) defined in newsolver.c
      uses function rangemin(range_t,range_t) defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
      uses function deleqn0(eqnlist_t *,eqn_t *,int) defined in newsolver.c
      uses function delterm(termlist_t *,term_t *) defined in newsolver.c
      uses variable tp defined in table.c
      uses function mymalloc(size_t) defined in newsolver.c
      uses variable eqn_s::extra_depends defined in newsolver.c
      uses function insterm(termlist_t *,term_t *) defined in newsolver.c
      uses function finalize(set_t *) defined in newsolver.c
   function finalize(set_t *) in line 786
      protection public
      29 lines of code
      1 parameters
      3 conditional paths
      uses variable eqnlist_s::next defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses function simplifyprune(eqn_t *) defined in newsolver.c
   function prune(eqn_t *) in line 792
      protection public
      25 lines of code
      1 parameters
      3 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses function killeqn(eqn_t *) defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses function finalize(set_t *) defined in newsolver.c
   function simplifyprune(eqn_t *) in line 818
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses function simplify(eqn_t *,int) defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses function rangeinset(range_t,set_t *) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses function overwritedepends(set_t *,eqn_t *) defined in newsolver.c
      uses function prune(eqn_t *) defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function finalize(set_t *) defined in newsolver.c
   function neweqn(void) in line 876
      protection public
      20 lines of code
      1 parameters
      2 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqnssiz defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses variable zerorange defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::extra_depends defined in newsolver.c
   function isdup(eqn_t *) in line 933
      protection public
      48 lines of code
      1 parameters
      10 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses variable eqnlist_s::next defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses function rangesubset(range_t,range_t) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses function rangeinrange(range_t,range_t *) defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue SURVIVES defined in newsolver.c
   function addeqn_unlessdup(eqn_t *) in line 991
      protection public
      23 lines of code
      1 parameters
      3 conditional paths
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses function isdup(eqn_t *) defined in newsolver.c
      uses function neweqn(void) defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses function inseqn(eqnlist_t *,eqn_t *) defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
   function dfsvisit(set_t *,int) in line 1071
      protection public
      55 lines of code
      2 parameters
      9 conditional paths
      uses variable set_s::name defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue MARKED defined in newsolver.c
      uses enumvalue GRAY defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable eqnlist_s::next defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses function minflow(set_t *,eqn_t *) defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses function edgelbl(set_t *,eqn_t *) defined in newsolver.c
      uses function rangeinset(range_t,set_t *) defined in newsolver.c
      uses function affineapp(affine_t,range_t) defined in newsolver.c
      uses function adddepends(set_t *,eqn_t *) defined in newsolver.c
      uses function overwritedepends(set_t *,eqn_t *) defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses function handlecycle(set_t *,eqn_t *) defined in newsolver.c
      uses variable set_s::dfs_backptr_s defined in newsolver.c
      uses variable set_s::dfs_backptr_e defined in newsolver.c
      uses variable set_s::runningaf defined in newsolver.c
      uses function affinecomp(affine_t,affine_t) defined in newsolver.c
      uses function unifycycle(set_t *,eqn_t *,int) defined in newsolver.c
   function findcycles(void) in line 1072
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue SURVIVES defined in newsolver.c
      uses enumvalue ALIVE defined in newsolver.c
      uses enumvalue MARKED defined in newsolver.c
      uses enumvalue GRAY defined in newsolver.c
      uses variable set_s::dfs_backptr_s defined in newsolver.c
      uses variable set_s::dfs_backptr_e defined in newsolver.c
      uses variable set_s::runningaf defined in newsolver.c
      uses variable affineidentity defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses function dfsvisit(set_t *,int) defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses function simplifyprune(eqn_t *) defined in newsolver.c
   function edgelbl(set_t *,eqn_t *) in line 1108
      protection public
      29 lines of code
      2 parameters
      4 conditional paths
      uses variable tp defined in table.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable affine_t::z defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses variable affine_t::b defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses function infnegate(intinf) defined in newsolver.c
      uses function rangeadd(range_t,range_t) defined in newsolver.c
      uses function rangemul(intinf,range_t) defined in newsolver.c
   function minflow(set_t *,eqn_t *) in line 1139
      protection public
      18 lines of code
      2 parameters
      3 conditional paths
      uses variable tp defined in table.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses function rangemin(range_t,range_t) defined in newsolver.c
      uses function rangemul(intinf,range_t) defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses function rangestr(range_t) defined in newsolver.c
      uses function rangeinset(range_t,set_t *) defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses function overwritedepends(set_t *,eqn_t *) defined in newsolver.c
      uses function handlecycle(set_t *,eqn_t *) defined in newsolver.c
   function handlecycle(set_t *,eqn_t *) in line 1158
      protection public
      68 lines of code
      2 parameters
      8 conditional paths
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable affineidentity defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses variable set_s::dfs_backptr_s defined in newsolver.c
      uses variable set_s::dfs_backptr_e defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses function edgelbl(set_t *,eqn_t *) defined in newsolver.c
      uses function affinecomp(affine_t,affine_t) defined in newsolver.c
      uses function affinestr(affine_t) defined in newsolver.c
      uses variable affine_t::z defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses macro definition warn defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses function affineapp(affine_t,range_t) defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses function rangeinset(range_t,set_t *) defined in newsolver.c
      uses function affineeq(affine_t,affine_t) defined in newsolver.c
      uses function unify(set_t *,range_t,set_t *) defined in newsolver.c
   function unifycycle(set_t *,eqn_t *,int) in line 1312
      protection public
      40 lines of code
      3 parameters
      3 conditional paths
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::dfs_backptr_s defined in newsolver.c
      uses variable set_s::dfs_backptr_e defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function edgelbl(set_t *,eqn_t *) defined in newsolver.c
      uses variable affine_t::z defined in newsolver.c
      uses variable affine_t::a defined in newsolver.c
      uses variable affine_t::b defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses function infsub(intinf,intinf) defined in newsolver.c
      uses function unify(set_t *,range_t,set_t *) defined in newsolver.c
   function unify(set_t *,range_t,set_t *) in line 1382
      protection public
      143 lines of code
      3 parameters
      18 conditional paths
      uses function rangeempty(range_t) defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function rangestr(range_t) defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses function rangeinset(range_t,set_t *) defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable eqnlist_s::next defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
      uses function killeqn(eqn_t *) defined in newsolver.c
      uses function finalize(set_t *) defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
      uses function mymalloc(size_t) defined in newsolver.c
      uses function delterm(termlist_t *,term_t *) defined in newsolver.c
      uses function deleqn(eqnlist_t *,eqn_t *) defined in newsolver.c
      uses function insterm(termlist_t *,term_t *) defined in newsolver.c
      uses function inseqn(eqnlist_t *,eqn_t *) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses function rangeadd(range_t,range_t) defined in newsolver.c
      uses function rangemul(intinf,range_t) defined in newsolver.c
      uses function isdup(eqn_t *) defined in newsolver.c
      uses function rangesub(range_t,range_t) defined in newsolver.c
      uses function overwritedepends_set(set_t *,set_t *) defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::extra_depends defined in newsolver.c
      uses function addeqn_unlessdup(eqn_t *) defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue SURVIVES defined in newsolver.c
   function dfs_relevant(set_t *) in line 1428
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue RELEVANT defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
   function removeirrelevant(void) in line 1445
      protection public
      48 lines of code
      1 parameters
      9 conditional paths
      uses variable eqnlist_s::next defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue RELEVANT defined in newsolver.c
      uses enumvalue QUERIED defined in newsolver.c
      uses function dfs_relevant(set_t *) defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses function killeqn(eqn_t *) defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
   function initsettbl(void) in line 1651
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses macro definition SETTBLSIZ defined in newsolver.c
      uses variable settbl defined in newsolver.c
   function hash(unsigned char *,unsigned int) in line 1657
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function newset(char *) in line 1665
      protection public
      24 lines of code
      1 parameters
      3 conditional paths
      uses function mymalloc(size_t) defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses variable set_s::hardbound defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses variable set_s::depends defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses variable allsets defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
   function getset(char *) in line 1690
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function hash(unsigned char *,unsigned int) defined in newsolver.c
      uses macro definition SETTBLSIZ defined in newsolver.c
      uses variable settbl defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function newset(char *) defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
   function readterm(term_t *,char *) in line 1709
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses function getset(char *) defined in newsolver.c
   function readleft(char *,eqn_t *) in line 1723
      protection public
      36 lines of code
      2 parameters
      8 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses function rangeadd(range_t,range_t) defined in newsolver.c
      uses function rangesingleton(intinf) defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses function mymalloc(size_t) defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses function getset(char *) defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function insterm(termlist_t *,term_t *) defined in newsolver.c
   function readquery(char *) in line 1760
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getset(char *) defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue QUERIED defined in newsolver.c
   function readeqn(char *) in line 1766
      protection public
      93 lines of code
      1 parameters
      17 conditional paths
      uses variable eqnlist_s::e defined in newsolver.c
      uses function readquery(char *) defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses function neweqn(void) defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses function readterm(term_t *,char *) defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses function rangesingleton(intinf) defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses function rangemin(range_t,range_t) defined in newsolver.c
      uses function mymalloc(size_t) defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses function insterm(termlist_t *,term_t *) defined in newsolver.c
      uses function getset(char *) defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses variable set_s::hardbound defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses function readleft(char *,eqn_t *) defined in newsolver.c
   function do_unifies(void) in line 1863
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses macro definition debug defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses function unify(set_t *,range_t,set_t *) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
   function seteffects(void) in line 1951
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses macro definition debug defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses function inseqn(eqnlist_t *,eqn_t *) defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable set_s::affects defined in newsolver.c
      uses variable ready_to_check_graph defined in newsolver.c
   function orphans(void) in line 1969
      protection public
      23 lines of code
      1 parameters
      6 conditional paths
      uses macro definition debug defined in newsolver.c
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses variable set_s::affectedby defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses function finalize(set_t *) defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses function rangeinset(range_t,set_t *) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses function overwritedepends(set_t *,eqn_t *) defined in newsolver.c
      uses function prune(eqn_t *) defined in newsolver.c
   function touch_finalized(void) in line 1995
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses macro definition debug defined in newsolver.c
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses enumvalue SURVIVES defined in newsolver.c
   function findemptyc(void) in line 2007
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses macro definition debug defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses variable debugging defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses macro definition warn defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
   function readsystem(void) in line 2021
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses function readeqn(char *) defined in newsolver.c
      uses function seteffects(void) defined in newsolver.c
      uses function debug_check_graph(void) defined in newsolver.c
      uses function removeirrelevant(void) defined in newsolver.c
      uses function findemptyc(void) defined in newsolver.c
      uses function do_unifies(void) defined in newsolver.c
      uses function orphans(void) defined in newsolver.c
      uses function touch_finalized(void) defined in newsolver.c
   function isasolution(void) in line 2045
      protection public
      45 lines of code
      1 parameters
      8 conditional paths
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses function rangeempty(range_t) defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses variable set_s::hardbound defined in newsolver.c
      uses variable range_t::lo defined in newsolver.c
      uses variable range_t::hi defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function rangestr(range_t) defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqnlist_s::e defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses variable eqn_s::c defined in newsolver.c
      uses variable eqn_s::eflags defined in newsolver.c
      uses variable eqn_s::rhs defined in newsolver.c
      uses variable term_t::s defined in newsolver.c
      uses variable term_t::coeff defined in newsolver.c
      uses function inf(long int) defined in newsolver.c
      uses variable eqn_s::op defined in newsolver.c
      uses variable eqn_s::lhs defined in newsolver.c
      uses variable termlist_s::next defined in newsolver.c
      uses variable termlist_s::t defined in newsolver.c
      uses variable infzero defined in newsolver.c
      uses function rangemul(intinf,range_t) defined in newsolver.c
      uses function rangemin(range_t,range_t) defined in newsolver.c
      uses function rangeadd(range_t,range_t) defined in newsolver.c
      uses function debug_dumpeqn(eqn_t *) defined in newsolver.c
   function aftermath(void) in line 2091
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses function debug_check_graph(void) defined in newsolver.c
      uses function isasolution(void) defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue QUERIED defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses function rangestr(range_t) defined in newsolver.c
      uses variable set_s::r defined in newsolver.c
      uses variable set_s::depends defined in newsolver.c
      uses macro definition MAXDEPENDS defined in newsolver.c
   function showstatus(int) in line 2112
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses enumvalue RELEVANT defined in newsolver.c
      uses variable neqns defined in newsolver.c
      uses variable eqns defined in newsolver.c
      uses macro definition debug defined in newsolver.c
   function run(void) in line 2132
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses macro definition debug defined in newsolver.c
      uses function debug_check_graph(void) defined in newsolver.c
      uses function showstatus(int) defined in newsolver.c
      uses function findcycles(void) defined in newsolver.c
   function again(void) in line 2142
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses macro definition debug defined in newsolver.c
      uses variable allsets defined in newsolver.c
      uses variable set_s::nextset defined in newsolver.c
      uses variable set_s::flags defined in newsolver.c
      uses enumvalue FINALIZED defined in newsolver.c
      uses variable set_s::name defined in newsolver.c
      uses enumvalue SURVIVES defined in newsolver.c
   function main(int,char **) in line 2162
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable debugging defined in newsolver.c
      uses macro definition INF defined in newsolver.c
      uses macro definition fatal defined in newsolver.c
      uses macro definition NEGINF defined in newsolver.c
      uses macro definition MINLONG defined in newsolver.c
      uses function initsettbl(void) defined in newsolver.c
      uses function affinetest(void) defined in newsolver.c
      uses function readsystem(void) defined in newsolver.c
      uses function run(void) defined in newsolver.c
      uses macro definition debug defined in newsolver.c
      uses function isasolution(void) defined in newsolver.c
      uses function again(void) defined in newsolver.c
      uses function aftermath(void) defined in newsolver.c
   variable range_t::hi in line 159
      protection public
   variable range_t::lo in line 158
      protection public
   variable eqnlist_s::e in line 244
      protection public
   variable eqnlist_s::next in line 245
      protection public
   variable affine_t::a in line 251
      protection public
   variable affine_t::b in line 252
      protection public
   variable affine_t::z in line 250
      protection public
   variable set_s::affectedby in line 399
      protection public
   variable set_s::affects in line 398
      protection public
   variable set_s::depends in line 406
      protection public
   variable set_s::dfs_backptr_e in line 414
      protection public
   variable set_s::dfs_backptr_s in line 413
      protection public
   variable set_s::flags in line 396
      protection public
   variable set_s::hardbound in line 394
      protection public
   variable set_s::name in line 401
      protection public
   variable set_s::nextset in line 403
      protection public
   variable set_s::r in line 393
      protection public
   variable set_s::runningaf in line 418
      protection public
   variable term_t::coeff in line 423
      protection public
   variable term_t::s in line 424
      protection public
   variable termlist_s::next in line 429
      protection public
   variable termlist_s::t in line 428
      protection public
   variable eqn_s::c in line 437
      protection public
   variable eqn_s::eflags in line 440
      protection public
   variable eqn_s::extra_depends in line 442
      protection public
   variable eqn_s::lhs in line 436
      protection public
   variable eqn_s::op in line 438
      protection public
   variable eqn_s::rhs in line 441
      protection public
