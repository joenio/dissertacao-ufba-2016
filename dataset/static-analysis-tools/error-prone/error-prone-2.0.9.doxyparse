file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotation/src/main/java/com/google/errorprone/BugPattern.java
module com::google::errorprone::BugPattern
   function altNames() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable AUTOGENERATED defined in com::google::errorprone::BugPattern::LinkType
   function category() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function customSuppressionAnnotations() in line 202
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function documentSuppression() in line 212
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function explanation() in line 131
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function generateExamplesFromTestCases() in line 225
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function link() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function linkType() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function maturity() in line 155
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function name() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function severity() in line 133
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function summary() in line 123
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressibility() in line 170
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::BugPattern::LinkType
   variable AUTOGENERATED in line 57
      protection public
   variable CUSTOM in line 61
      protection public
   variable NONE in line 66
      protection public
module com::google::errorprone::BugPattern::Category
   variable DAGGER in line 89
      protection public
   variable GUAVA in line 81
      protection public
   variable GUICE in line 85
      protection public
   variable INJECT in line 101
      protection public
   variable JDK in line 77
      protection public
   variable JMOCK in line 109
      protection public
   variable JUNIT in line 93
      protection public
   variable MOCKITO in line 105
      protection public
   variable ONE_OFF in line 97
      protection public
module com::google::errorprone::BugPattern::SeverityLevel
   function enabled() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SeverityLevel(boolean) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable enabled in line 144
   variable ERROR in line 136
      protection public
   variable NOT_A_PROBLEM in line 142
      protection public
   variable SUGGESTION in line 138
      protection public
   variable WARNING in line 137
      protection public
module com::google::errorprone::BugPattern::MaturityLevel
   function MaturityLevel(String) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable SUPPRESS_WARNINGS defined in com::google::errorprone::BugPattern::Suppressibility
   variable description in line 161
      protection public
   variable EXPERIMENTAL in line 159
      protection public
   variable MATURE in line 158
      protection public
module com::google::errorprone::BugPattern::Suppressibility
   function disableable() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Suppressibility(boolean) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable CUSTOM_ANNOTATION in line 181
      protection public
   variable disableable in line 187
   variable SUPPRESS_WARNINGS in line 177
      protection public
   variable UNSUPPRESSIBLE in line 185
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotation/src/main/java/com/google/errorprone/BugPatternValidator.java
module com::google::errorprone::BugPatternValidator
   function validate(BugPattern) in line 45
      protection public
      44 lines of code
      1 parameters
      13 conditional paths
      uses variable COMMA_JOINER defined in com::google::errorprone::BugPatternValidator
      uses variable GET_CANONICAL_NAME defined in com::google::errorprone::BugPatternValidator
   variable COMMA_JOINER in line 43
   variable GET_CANONICAL_NAME in line 35
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotation/src/main/java/com/google/errorprone/ValidationException.java
module com::google::errorprone::ValidationException
   inherits from Exception
   function ValidationException(String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotation/src/test/java/com/google/errorprone/BugPatternValidatorTest.java
module com::google::errorprone::BugPatternValidatorTest
   function basicBugPattern() in line 39
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
   function customSuppressionAnnotation() in line 159
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable CUSTOM_ANNOTATION defined in com::google::errorprone::BugPattern::Suppressibility
   function customSuppressionAnnotationButNoneSpecified() in line 234
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable CUSTOM_ANNOTATION defined in com::google::errorprone::BugPattern::Suppressibility
   function customSuppressionAnnotationButSuppressWarnings() in line 198
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable CUSTOM_ANNOTATION defined in com::google::errorprone::BugPattern::Suppressibility
   function customSuppressionAnnotationsIncludesSuppressWarnings() in line 216
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable CUSTOM_ANNOTATION defined in com::google::errorprone::BugPattern::Suppressibility
   function linkTypeCustomAndIncludesLink() in line 80
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable CUSTOM defined in com::google::errorprone::BugPattern::LinkType
   function linkTypeCustomButNoLink() in line 94
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable CUSTOM defined in com::google::errorprone::BugPattern::LinkType
   function linkTypeNoneAndNoLink() in line 52
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable NONE defined in com::google::errorprone::BugPattern::LinkType
   function linkTypeNoneButIncludesLink() in line 66
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable NONE defined in com::google::errorprone::BugPattern::LinkType
   function multipleCustomSuppressionAnnotations() in line 177
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable CUSTOM_ANNOTATION defined in com::google::errorprone::BugPattern::Suppressibility
   function suppressWarningsButIncludesCustomAnnotation() in line 108
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable SUPPRESS_WARNINGS defined in com::google::errorprone::BugPattern::Suppressibility
   function unsuppressible() in line 126
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable UNSUPPRESSIBLE defined in com::google::errorprone::BugPattern::Suppressibility
   function unsuppressibleButIncludesCustomAnnotation() in line 141
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable UNSUPPRESSIBLE defined in com::google::errorprone::BugPattern::Suppressibility
module com::google::errorprone::BugPatternValidatorTest::CustomSuppressionAnnotation
module com::google::errorprone::BugPatternValidatorTest::CustomSuppressionAnnotation2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/CanIgnoreReturnValue.java
module com::google::errorprone::annotations::CanIgnoreReturnValue
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/CompileTimeConstant.java
module com::google::errorprone::annotations::CompileTimeConstant
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/concurrent/LockMethod.java
module com::google::errorprone::annotations::concurrent::LockMethod
   function value() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/concurrent/UnlockMethod.java
module com::google::errorprone::annotations::concurrent::UnlockMethod
   function value() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/ForOverride.java
module com::google::errorprone::annotations::ForOverride
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/Immutable.java
module com::google::errorprone::annotations::Immutable
   function containerOf() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/IncompatibleModifiers.java
module com::google::errorprone::annotations::IncompatibleModifiers
   function value() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/NoAllocation.java
module com::google::errorprone::annotations::NoAllocation
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/RequiredModifiers.java
module com::google::errorprone::annotations::RequiredModifiers
   function value() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/SuppressPackageLocation.java
module com::google::errorprone::annotations::SuppressPackageLocation
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/annotations/src/main/java/com/google/errorprone/annotations/Var.java
module com::google::errorprone::annotations::Var
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/ant/src/main/java/com/google/errorprone/ErrorProneAntCompilerAdapter.java
module com::google::errorprone::ErrorProneAntCompilerAdapter
   inherits from org::apache::tools::ant::taskdefs::compilers::DefaultCompilerAdapter
   function execute() in line 44
      protection public
      33 lines of code
      0 parameters
      6 conditional paths
module com::google::errorprone::ErrorProneAntCompilerAdapter::AntRunner
   inherits from com::google::common::base::Function
   function apply(String[]) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/ant/src/main/java/com/google/errorprone/ErrorProneExternalCompilerAdapter.java
module com::google::errorprone::ErrorProneExternalCompilerAdapter
   inherits from org::apache::tools::ant::taskdefs::compilers::DefaultCompilerAdapter
   function addResourceSource(Path,String) in line 114
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable classpath defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
   function createClasspath() in line 45
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable classpath defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
   function createJvmArg() in line 61
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable jvmArgs defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
   function execute() in line 68
      protection public
      45 lines of code
      0 parameters
      8 conditional paths
      uses variable memoryStackSize defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
      uses variable jvmArgs defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
      uses function addResourceSource(Path,String) defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
      uses variable classpath defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
   function setClasspath(Path) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classpath defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
   function setClasspathRef(Reference) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClasspath() defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
   function setMemoryStackSize(String) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memoryStackSize defined in com::google::errorprone::ErrorProneExternalCompilerAdapter
   variable classpath in line 37
   variable jvmArgs in line 39
   variable memoryStackSize in line 38
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/CONTRIBUTING.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/AnalysesConfig.java
module com::google::errorprone::analysis::AnalysesConfig
   abstract class
   function create(ErrorProneOptions) in line 30
      protection public
      3 lines of code
      1 parameters
      4 conditional paths
      uses function knownAnalysisNames() defined in com::google::errorprone::analysis::TopLevelAnalysis
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/BugCheckerLocalAnalysis.java
module com::google::errorprone::analysis::BugCheckerLocalAnalysis
   inherits from com::sun::source::util::SimpleTreeVisitor
   inherits from com::google::errorprone::analysis::LocalAnalysis
   function allNames() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function allNames() defined in com::google::errorprone::bugpatterns::BugChecker
   function analyze(TreePath,Context,AnalysesConfig,DescriptionListener) in line 169
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function canonicalName() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function canonicalName() defined in com::google::errorprone::bugpatterns::BugChecker
   function customSuppressionAnnotations() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function customSuppressionAnnotations() defined in com::google::errorprone::bugpatterns::BugChecker
   function defaultAction(Tree,VisitorState) in line 175
      3 lines of code
      2 parameters
      1 conditional paths
   function report(Description,VisitorState) in line 179
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function reportMatch(Description) defined in com::google::errorprone::VisitorState
   function suppressibility() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function suppressibility() defined in com::google::errorprone::bugpatterns::BugChecker
   function visitAnnotatedType(AnnotatedTypeTree,VisitorState) in line 636
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchAnnotatedType(AnnotatedTypeTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::AnnotatedTypeTreeMatcher
   function visitAnnotation(AnnotationTree,VisitorState) in line 195
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchAnnotation(AnnotationTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function visitArrayAccess(ArrayAccessTree,VisitorState) in line 186
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchArrayAccess(ArrayAccessTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ArrayAccessTreeMatcher
   function visitArrayType(ArrayTypeTree,VisitorState) in line 573
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchArrayType(ArrayTypeTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ArrayTypeTreeMatcher
   function visitAssert(AssertTree,VisitorState) in line 420
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchAssert(AssertTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::AssertTreeMatcher
   function visitAssignment(AssignmentTree,VisitorState) in line 474
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchAssignment(AssignmentTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::AssignmentTreeMatcher
   function visitBinary(BinaryTree,VisitorState) in line 501
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchBinary(BinaryTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function visitBlock(BlockTree,VisitorState) in line 258
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchBlock(BlockTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::BlockTreeMatcher
   function visitBreak(BreakTree,VisitorState) in line 384
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchBreak(BreakTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::BreakTreeMatcher
   function visitCase(CaseTree,VisitorState) in line 321
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchCase(CaseTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::CaseTreeMatcher
   function visitCatch(CatchTree,VisitorState) in line 348
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchCatch(CatchTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::CatchTreeMatcher
   function visitClass(ClassTree,VisitorState) in line 222
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchClass(ClassTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function visitCompilationUnit(CompilationUnitTree,VisitorState) in line 204
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchCompilationUnit(CompilationUnitTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   function visitCompoundAssignment(CompoundAssignmentTree,VisitorState) in line 483
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchCompoundAssignment(CompoundAssignmentTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::CompoundAssignmentTreeMatcher
   function visitConditionalExpression(ConditionalExpressionTree,VisitorState) in line 357
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchConditionalExpression(ConditionalExpressionTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ConditionalExpressionTreeMatcher
   function visitContinue(ContinueTree,VisitorState) in line 393
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchContinue(ContinueTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ContinueTreeMatcher
   function visitDoWhileLoop(DoWhileLoopTree,VisitorState) in line 267
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchDoWhileLoop(DoWhileLoopTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::DoWhileLoopTreeMatcher
   function visitEmptyStatement(EmptyStatementTree,VisitorState) in line 249
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchEmptyStatement(EmptyStatementTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::EmptyStatementTreeMatcher
   function visitEnhancedForLoop(EnhancedForLoopTree,VisitorState) in line 294
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchEnhancedForLoop(EnhancedForLoopTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::EnhancedForLoopTreeMatcher
   function visitExpressionStatement(ExpressionStatementTree,VisitorState) in line 375
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchExpressionStatement(ExpressionStatementTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ExpressionStatementTreeMatcher
   function visitForLoop(ForLoopTree,VisitorState) in line 285
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchForLoop(ForLoopTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ForLoopTreeMatcher
   function visitIdentifier(IdentifierTree,VisitorState) in line 546
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchIdentifier(IdentifierTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::IdentifierTreeMatcher
   function visitIf(IfTree,VisitorState) in line 366
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchIf(IfTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::IfTreeMatcher
   function visitImport(ImportTree,VisitorState) in line 213
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchImport(ImportTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ImportTreeMatcher
   function visitInstanceOf(InstanceOfTree,VisitorState) in line 519
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchInstanceOf(InstanceOfTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::InstanceOfTreeMatcher
   function visitIntersectionType(IntersectionTypeTree,VisitorState) in line 600
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchIntersectionType(IntersectionTypeTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::IntersectionTypeTreeMatcher
   function visitLabeledStatement(LabeledStatementTree,VisitorState) in line 303
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchLabeledStatement(LabeledStatementTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::LabeledStatementTreeMatcher
   function visitLambdaExpression(LambdaExpressionTree,VisitorState) in line 456
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchLambdaExpression(LambdaExpressionTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::LambdaExpressionTreeMatcher
   function visitLiteral(LiteralTree,VisitorState) in line 555
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchLiteral(LiteralTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::LiteralTreeMatcher
   function visitMemberReference(MemberReferenceTree,VisitorState) in line 537
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchMemberReference(MemberReferenceTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::MemberReferenceTreeMatcher
   function visitMemberSelect(MemberSelectTree,VisitorState) in line 528
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchMemberSelect(MemberSelectTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::MemberSelectTreeMatcher
   function visitMethod(MethodTree,VisitorState) in line 231
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchMethod(MethodTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function visitMethodInvocation(MethodInvocationTree,VisitorState) in line 429
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchMethodInvocation(MethodInvocationTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function visitModifiers(ModifiersTree,VisitorState) in line 627
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchModifiers(ModifiersTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ModifiersTreeMatcher
   function visitNewArray(NewArrayTree,VisitorState) in line 447
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchNewArray(NewArrayTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::NewArrayTreeMatcher
   function visitNewClass(NewClassTree,VisitorState) in line 438
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchNewClass(NewClassTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   function visitParameterizedType(ParameterizedTypeTree,VisitorState) in line 582
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchParameterizedType(ParameterizedTypeTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ParameterizedTypeTreeMatcher
   function visitParenthesized(ParenthesizedTree,VisitorState) in line 465
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchParenthesized(ParenthesizedTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ParenthesizedTreeMatcher
   function visitPrimitiveType(PrimitiveTypeTree,VisitorState) in line 564
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchPrimitiveType(PrimitiveTypeTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::PrimitiveTypeTreeMatcher
   function visitReturn(ReturnTree,VisitorState) in line 402
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchReturn(ReturnTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function visitSwitch(SwitchTree,VisitorState) in line 312
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchSwitch(SwitchTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::SwitchTreeMatcher
   function visitSynchronized(SynchronizedTree,VisitorState) in line 330
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchSynchronized(SynchronizedTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::SynchronizedTreeMatcher
   function visitThrow(ThrowTree,VisitorState) in line 411
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchThrow(ThrowTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::ThrowTreeMatcher
   function visitTry(TryTree,VisitorState) in line 339
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchTry(TryTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::TryTreeMatcher
   function visitTypeCast(TypeCastTree,VisitorState) in line 510
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchTypeCast(TypeCastTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::TypeCastTreeMatcher
   function visitTypeParameter(TypeParameterTree,VisitorState) in line 609
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchTypeParameter(TypeParameterTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::TypeParameterTreeMatcher
   function visitUnary(UnaryTree,VisitorState) in line 492
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchUnary(UnaryTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::UnaryTreeMatcher
   function visitUnionType(UnionTypeTree,VisitorState) in line 591
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchUnionType(UnionTypeTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::UnionTypeTreeMatcher
   function visitVariable(VariableTree,VisitorState) in line 240
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchVariable(VariableTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function visitWhileLoop(WhileLoopTree,VisitorState) in line 276
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchWhileLoop(WhileLoopTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::WhileLoopTreeMatcher
   function visitWildcard(WildcardTree,VisitorState) in line 618
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function report(Description,VisitorState) defined in com::google::errorprone::analysis::BugCheckerLocalAnalysis
      uses function matchWildcard(WildcardTree,VisitorState) defined in com::google::errorprone::bugpatterns::BugChecker::WildcardTreeMatcher
   variable checker in line 142
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/ErrorProneTopLevelAnalysis.java
module com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
   function create(BugChecker,MaturityLevel) in line 36
      7 lines of code
      2 parameters
      1 conditional paths
      uses function canonicalName() defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable MATURE defined in com::google::errorprone::BugPattern::MaturityLevel
      uses function defaultSeverity() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function suppressibility() defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable disableable defined in com::google::errorprone::BugPattern::Suppressibility
   function create(BugChecker...) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(BugChecker,MaturityLevel) defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
   function create(Iterable<?extends BugChecker >) in line 64
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function create(BugChecker,MaturityLevel) defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
   function createFromClasses(Iterable<?extends Class<?extends BugChecker >>) in line 100
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function create(BugChecker,MaturityLevel) defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
      uses variable INSTANTIATE_CHECKER defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
   function createFromServiceLoader() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function create(BugChecker,MaturityLevel) defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
      uses variable bugCheckerLoader defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
   function createMature(BugChecker) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(BugChecker,MaturityLevel) defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
      uses variable MATURE defined in com::google::errorprone::BugPattern::MaturityLevel
   function createMature(Iterable<?extends BugChecker >) in line 76
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function create(BugChecker,MaturityLevel) defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
      uses variable MATURE defined in com::google::errorprone::BugPattern::MaturityLevel
   function createMatureFromClasses(Iterable<?extends Class<?extends BugChecker >>) in line 108
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function createMature(BugChecker) defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
      uses variable INSTANTIATE_CHECKER defined in com::google::errorprone::analysis::ErrorProneTopLevelAnalysis
   function ErrorProneTopLevelAnalysis() in line 123
      1 lines of code
      0 parameters
      1 conditional paths
   variable bugCheckerLoader in line 120
   variable INSTANTIATE_CHECKER in line 84
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/LocalAnalysis.java
module com::google::errorprone::analysis::LocalAnalysis
   inherits from com::google::errorprone::matchers::Suppressible
   function analyze(TreePath,Context,AnalysesConfig,DescriptionListener) in line 30
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/LocalAnalysisAsTopLevelAnalysis.java
module com::google::errorprone::analysis::LocalAnalysisAsTopLevelAnalysis
   inherits from com::google::errorprone::analysis::TopLevelAnalysis
   abstract class
   function analyze(CompilationUnitTree,final Context,final AnalysesConfig,DescriptionListener) in line 77
      protection public
      13 lines of code
      4 parameters
      2 conditional paths
      uses function suppressed(Tree,Context) defined in com::google::errorprone::analysis::LocalAnalysisAsTopLevelAnalysis
      uses function analyze(TreePath,Context,AnalysesConfig,DescriptionListener) defined in com::google::errorprone::analysis::LocalAnalysis
   function knownAnalysisNames() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function allNames() defined in com::google::errorprone::matchers::Suppressible
   function suppressed(Tree,Context) in line 54
      21 lines of code
      2 parameters
      6 conditional paths
      uses function allNames() defined in com::google::errorprone::matchers::Suppressible
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/RecompilingTopLevelAnalysis.java
module com::google::errorprone::analysis::RecompilingTopLevelAnalysis
   inherits from com::google::errorprone::analysis::TopLevelAnalysis
   abstract class
   function analyze(final CompilationUnitTree,final Context,AnalysesConfig,final DescriptionListener) in line 73
      protection public
      17 lines of code
      4 parameters
      1 conditional paths
      uses function analyze(CompilationUnitTree,Context,AnalysesConfig,DescriptionListener) defined in com::google::errorprone::analysis::TopLevelAnalysis
      uses function onDescribed(Description) defined in com::google::errorprone::DescriptionListener
      uses function filterFixes(Predicate<?super Fix >) defined in com::google::errorprone::matchers::Description
   function argsForTask(JavacTaskImpl) in line 176
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFieldReflectively(JavacTaskImpl,String) defined in com::google::errorprone::analysis::RecompilingTopLevelAnalysis
   function asListOrNull(@Nullable E[]) in line 167
      3 lines of code
      1 parameters
      1 conditional paths
   function classesForTask(JavacTaskImpl) in line 180
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFieldReflectively(JavacTaskImpl,String) defined in com::google::errorprone::analysis::RecompilingTopLevelAnalysis
   function compiles(Fix,JCCompilationUnit,Context) in line 100
      46 lines of code
      3 parameters
      7 conditional paths
      uses function getReplacements(EndPosTable) defined in com::google::errorprone::fixes::Fix
      uses function fileObjectsForTask(JavacTaskImpl) defined in com::google::errorprone::analysis::RecompilingTopLevelAnalysis
      uses function asListOrNull(@Nullable E[]) defined in com::google::errorprone::analysis::RecompilingTopLevelAnalysis
      uses function argsForTask(JavacTaskImpl) defined in com::google::errorprone::analysis::RecompilingTopLevelAnalysis
      uses function classesForTask(JavacTaskImpl) defined in com::google::errorprone::analysis::RecompilingTopLevelAnalysis
      uses function countErrors(DiagnosticCollector< JavaFileObject >) defined in com::google::errorprone::analysis::RecompilingTopLevelAnalysis
   function countErrors(DiagnosticCollector< JavaFileObject >) in line 147
      9 lines of code
      1 parameters
      3 conditional paths
   function create(TopLevelAnalysis) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function fileObjectsForTask(JavacTaskImpl) in line 172
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFieldReflectively(JavacTaskImpl,String) defined in com::google::errorprone::analysis::RecompilingTopLevelAnalysis
   function getFieldReflectively(JavacTaskImpl,String) in line 157
      9 lines of code
      2 parameters
      2 conditional paths
   function knownAnalysisNames() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function knownAnalysisNames() defined in com::google::errorprone::analysis::TopLevelAnalysis
module com::google::errorprone::analysis::RecompilingTopLevelAnalysis::ByStartPosition
   inherits from java::util::Comparator
   variable compare in line 97
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/SumTopLevelAnalysis.java
module com::google::errorprone::analysis::SumTopLevelAnalysis
   inherits from com::google::errorprone::analysis::TopLevelAnalysis
   abstract class
   function analyze(CompilationUnitTree,Context,AnalysesConfig,DescriptionListener) in line 52
      protection public
      6 lines of code
      4 parameters
      2 conditional paths
   function create(Iterable<?extends TopLevelAnalysis >) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function knownAnalysisNames() in line 43
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysis.java
module com::google::errorprone::analysis::TopLevelAnalysis
   function analyze(CompilationUnitTree,Context,AnalysesConfig,DescriptionListener) in line 34
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function knownAnalysisNames() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/analysis/TopLevelAnalysisWithSeverity.java
module com::google::errorprone::analysis::TopLevelAnalysisWithSeverity
   inherits from com::google::errorprone::analysis::TopLevelAnalysis
   abstract class
   function analyze(CompilationUnitTree,Context,AnalysesConfig,final DescriptionListener) in line 59
      protection public
      46 lines of code
      4 parameters
      9 conditional paths
      uses function getSeverityMap() defined in com::google::errorprone::ErrorProneOptions
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable WARNING defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable enabled defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function analyze(CompilationUnitTree,Context,AnalysesConfig,DescriptionListener) defined in com::google::errorprone::analysis::TopLevelAnalysis
      uses function onDescribed(Description) defined in com::google::errorprone::DescriptionListener
      uses function applySeverityOverride(SeverityLevel) defined in com::google::errorprone::matchers::Description
   function knownAnalysisNames() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function knownAnalysisNames() defined in com::google::errorprone::analysis::TopLevelAnalysis
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/DescriptionBasedDiff.java
module com::google::errorprone::apply::DescriptionBasedDiff
   inherits from com::google::errorprone::DescriptionListener
   inherits from com::google::errorprone::apply::Diff
   function addReplacement(Replacement) in line 91
      28 lines of code
      1 parameters
      2 conditional paths
      uses function startPosition() defined in com::google::errorprone::fixes::Replacement
      uses function endPosition() defined in com::google::errorprone::fixes::Replacement
      uses variable replacements defined in com::google::errorprone::apply::DescriptionBasedDiff
   function applyDifferences(SourceFile) in line 121
      protection public
      20 lines of code
      1 parameters
      3 conditional paths
      uses variable replacements defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses variable importsToAdd defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses variable importsToRemove defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses variable compilationUnit defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function addAll(Collection< String >) defined in com::google::errorprone::apply::ImportStatements
      uses function removeAll(Collection< String >) defined in com::google::errorprone::apply::ImportStatements
      uses function getStartPos() defined in com::google::errorprone::apply::ImportStatements
      uses function getEndPos() defined in com::google::errorprone::apply::ImportStatements
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function create(JCCompilationUnit) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function DescriptionBasedDiff(JCCompilationUnit) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses variable compilationUnit defined in com::google::errorprone::apply::DescriptionBasedDiff
   function getRelevantFileName() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourcePath defined in com::google::errorprone::apply::DescriptionBasedDiff
   function isEmpty() in line 73
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable importsToAdd defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses variable importsToRemove defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses variable replacements defined in com::google::errorprone::apply::DescriptionBasedDiff
   function onDescribed(Description) in line 79
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable fixes defined in com::google::errorprone::matchers::Description
      uses variable importsToAdd defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function getImportsToAdd() defined in com::google::errorprone::fixes::Fix
      uses variable importsToRemove defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function getImportsToRemove() defined in com::google::errorprone::fixes::Fix
      uses function getReplacements(EndPosTable) defined in com::google::errorprone::fixes::Fix
      uses variable endPositions defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function addReplacement(Replacement) defined in com::google::errorprone::apply::DescriptionBasedDiff
   function DescriptionBasedDiff(JCCompilationUnit) in line 59
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable compilationUnit defined in com::google::errorprone::apply::DescriptionBasedDiff
   variable compilationUnit in line 49
   variable endPositions in line 52
   variable importsToAdd in line 50
   variable importsToRemove in line 51
   variable replacements in line 53
   variable sourcePath in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/Diff.java
module com::google::errorprone::apply::Diff
   function applyDifferences(SourceFile) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getRelevantFileName() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/DiffApplier.java
module com::google::errorprone::apply::DiffApplier
   inherits from com::google::common::util::concurrent::AbstractService
   function decrementTasks() in line 86
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable runState defined in com::google::errorprone::apply::DiffApplier
      uses variable workerService defined in com::google::errorprone::apply::DiffApplier
      uses variable destination defined in com::google::errorprone::apply::DiffApplier
      uses function flush() defined in com::google::errorprone::apply::FileDestination
      uses variable logger defined in com::google::errorprone::apply::DiffApplier
      uses variable completedFiles defined in com::google::errorprone::apply::DiffApplier
      uses variable stopwatch defined in com::google::errorprone::apply::DiffApplier
      uses variable diffsFailedPaths defined in com::google::errorprone::apply::DiffApplier
   function doStart() in line 75
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable stopwatch defined in com::google::errorprone::apply::DiffApplier
      uses variable runState defined in com::google::errorprone::apply::DiffApplier
   function doStop() in line 82
      3 lines of code
      0 parameters
      1 conditional paths
      uses function decrementTasks() defined in com::google::errorprone::apply::DiffApplier
   function put(Diff) in line 133
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable refactoredPaths defined in com::google::errorprone::apply::DiffApplier
      uses variable diff defined in com::google::errorprone::apply::DiffApplier::Task
      uses function getRelevantFileName() defined in com::google::errorprone::apply::Diff
      uses variable runState defined in com::google::errorprone::apply::DiffApplier
      uses variable workerService defined in com::google::errorprone::apply::DiffApplier
   function DiffApplier(int,FileSource,FileDestination) in line 54
      protection public
      19 lines of code
      3 parameters
      1 conditional paths
      uses variable source defined in com::google::errorprone::apply::DiffApplier
      uses variable destination defined in com::google::errorprone::apply::DiffApplier
   variable completedFiles in line 48
   variable destination in line 47
   variable diffsFailedPaths in line 45
   variable logger in line 42
   variable refactoredPaths in line 44
   variable runState in line 52
   variable source in line 46
   variable stopwatch in line 49
   variable workerService in line 43
module com::google::errorprone::apply::DiffApplier::Task
   inherits from Runnable
   function run() in line 112
      protection public
      19 lines of code
      0 parameters
      3 conditional paths
      uses variable source defined in com::google::errorprone::apply::DiffApplier
      uses function readFile(String) defined in com::google::errorprone::apply::FileSource
      uses variable diff defined in com::google::errorprone::apply::DiffApplier::Task
      uses function getRelevantFileName() defined in com::google::errorprone::apply::Diff
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::Diff
      uses variable destination defined in com::google::errorprone::apply::DiffApplier
      uses function writeFile(SourceFile) defined in com::google::errorprone::apply::FileDestination
      uses variable completedFiles defined in com::google::errorprone::apply::DiffApplier
      uses variable logger defined in com::google::errorprone::apply::DiffApplier
      uses variable stopwatch defined in com::google::errorprone::apply::DiffApplier
      uses variable diffsFailedPaths defined in com::google::errorprone::apply::DiffApplier
      uses function decrementTasks() defined in com::google::errorprone::apply::DiffApplier
   variable diff in line 105
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/DiffNotApplicableException.java
module com::google::errorprone::apply::DiffNotApplicableException
   inherits from RuntimeException
   function DiffNotApplicableException(String) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DiffNotApplicableException(String,Throwable) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function DiffNotApplicableException(Throwable) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/DiffSupplier.java
module com::google::errorprone::apply::DiffSupplier
   function getDiffs(FileSource,@Nullable String[]) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/DiscardingFileDestination.java
module com::google::errorprone::apply::DiscardingFileDestination
   inherits from com::google::errorprone::apply::FileDestination
   function flush() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function writeFile(SourceFile) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable log defined in com::google::errorprone::apply::DiscardingFileDestination
      uses function getPath() defined in com::google::errorprone::apply::SourceFile
   variable log in line 26
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/FileDestination.java
module com::google::errorprone::apply::FileDestination
   function flush() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function writeFile(SourceFile) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/FileSource.java
module com::google::errorprone::apply::FileSource
   function readFile(String) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/ImportStatements.java
module com::google::errorprone::apply::ImportStatements
   function add(String) in line 134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable importStrings defined in com::google::errorprone::apply::ImportStatements
   function addAll(Collection< String >) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable importStrings defined in com::google::errorprone::apply::ImportStatements
   function create(JCCompilationUnit) in line 73
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ImportStatements(JCExpression,List< JCImport >,EndPosTable) defined in com::google::errorprone::apply::ImportStatements
   function getEndPos() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endPos defined in com::google::errorprone::apply::ImportStatements
   function getStartPos() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startPos defined in com::google::errorprone::apply::ImportStatements
   function remove(String) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable importStrings defined in com::google::errorprone::apply::ImportStatements
   function removeAll(Collection< String >) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable importStrings defined in com::google::errorprone::apply::ImportStatements
   function toString() in line 177
      protection public
      37 lines of code
      0 parameters
      9 conditional paths
      uses variable importStrings defined in com::google::errorprone::apply::ImportStatements
      uses variable hasExistingImports defined in com::google::errorprone::apply::ImportStatements
      uses function getKind(String) defined in com::google::errorprone::apply::ImportStatements::Kind
      uses variable THIRD_PARTY defined in com::google::errorprone::apply::ImportStatements::Kind
      uses variable TOPLEVEL_PATTERN defined in com::google::errorprone::apply::ImportStatements
   function ImportStatements(JCExpression,List< JCImport >,EndPosTable) in line 78
      protection public
      34 lines of code
      3 parameters
      3 conditional paths
      uses variable hasExistingImports defined in com::google::errorprone::apply::ImportStatements
      uses variable startPos defined in com::google::errorprone::apply::ImportStatements
      uses variable endPos defined in com::google::errorprone::apply::ImportStatements
      uses variable importStrings defined in com::google::errorprone::apply::ImportStatements
      uses variable IMPORT_ORDERING defined in com::google::errorprone::apply::ImportStatements
   variable endPos in line 48
   variable hasExistingImports in line 50
   variable IMPORT_ORDERING in line 56
   variable importStrings in line 49
   variable startPos in line 47
   variable TOPLEVEL_PATTERN in line 70
module com::google::errorprone::apply::ImportStatements::Kind
   function getKind(String) in line 247
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
   variable GOOGLE in line 236
      protection public
   variable JAVA in line 238
      protection public
   variable STATIC in line 235
      protection public
   variable THIRD_PARTY in line 237
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/apply/SourceFile.java
module com::google::errorprone::apply::SourceFile
   function create(JavaFileObject) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function SourceFile(String,CharSequence) defined in com::google::errorprone::apply::SourceFile
   function getAsSequence() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
   function getFragmentByChars(int,int) in line 98
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
   function getFragmentByLines(int,int) in line 108
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getLines() defined in com::google::errorprone::apply::SourceFile
   function getLines() in line 64
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
   function getLines(int,int) in line 113
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
   function getPath() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable path defined in com::google::errorprone::apply::SourceFile
   function getSourceText() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
   function replaceChars(int,int,String) in line 165
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
      uses variable path defined in com::google::errorprone::apply::SourceFile
   function replaceLines(List< String >) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
   function replaceLines(int,int,List< String >) in line 142
      protection public
      16 lines of code
      3 parameters
      4 conditional paths
      uses function getLines() defined in com::google::errorprone::apply::SourceFile
      uses function replaceLines(List< String >) defined in com::google::errorprone::apply::SourceFile
   function setSourceText(CharSequence) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
   function SourceFile(String,CharSequence) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable path defined in com::google::errorprone::apply::SourceFile
      uses variable sourceBuilder defined in com::google::errorprone::apply::SourceFile
   variable path in line 42
   variable sourceBuilder in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/BugCheckerInfo.java
module com::google::errorprone::BugCheckerInfo
   inherits from java::io::Serializable
   function allNames() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function buildDescriptionFromChecker(Tree,BugChecker) in line 160
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable checker defined in com::google::errorprone::BugCheckerInfo
   function canonicalName() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function checkerClass() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checker defined in com::google::errorprone::BugCheckerInfo
   function create(Class<?extends BugChecker >) in line 104
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::BugCheckerInfo
      uses function BugCheckerInfo(Class<?extends BugChecker >,BugPattern) defined in com::google::errorprone::BugCheckerInfo
   function createLinkUrl(BugPattern) in line 133
      19 lines of code
      1 parameters
      5 conditional paths
      uses function linkType() defined in com::google::errorprone::BugPattern
      uses variable URL_FORMAT defined in com::google::errorprone::BugCheckerInfo
      uses function name() defined in com::google::errorprone::BugPattern
      uses function link() defined in com::google::errorprone::BugPattern
   function customSuppressionAnnotations() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function defaultSeverity() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function equals(Object) in line 215
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::BugCheckerInfo
   function hashCode() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checker defined in com::google::errorprone::BugCheckerInfo
   function linkUrl() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function maturity() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function message() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function severity(Map< String, SeverityLevel >) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function canonicalName() defined in com::google::errorprone::BugCheckerInfo
      uses function defaultSeverity() defined in com::google::errorprone::BugCheckerInfo
   function suppressibility() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function canonicalName() defined in com::google::errorprone::BugCheckerInfo
   function BugCheckerInfo(Class<?extends BugChecker >,BugPattern) in line 114
      16 lines of code
      2 parameters
      2 conditional paths
      uses variable checker defined in com::google::errorprone::BugCheckerInfo
      uses function canonicalName() defined in com::google::errorprone::BugCheckerInfo
      uses function name() defined in com::google::errorprone::BugPattern
      uses function allNames() defined in com::google::errorprone::BugCheckerInfo
      uses function altNames() defined in com::google::errorprone::BugPattern
      uses function message() defined in com::google::errorprone::BugCheckerInfo
      uses function summary() defined in com::google::errorprone::BugPattern
      uses function maturity() defined in com::google::errorprone::BugCheckerInfo
      uses function maturity() defined in com::google::errorprone::BugPattern
      uses function defaultSeverity() defined in com::google::errorprone::BugCheckerInfo
      uses function severity() defined in com::google::errorprone::BugPattern
      uses function linkUrl() defined in com::google::errorprone::BugCheckerInfo
      uses function createLinkUrl(BugPattern) defined in com::google::errorprone::BugCheckerInfo
      uses function suppressibility() defined in com::google::errorprone::BugCheckerInfo
      uses function suppressibility() defined in com::google::errorprone::BugPattern
      uses variable CUSTOM_ANNOTATION defined in com::google::errorprone::BugPattern::Suppressibility
      uses function customSuppressionAnnotations() defined in com::google::errorprone::BugCheckerInfo
      uses function customSuppressionAnnotations() defined in com::google::errorprone::BugPattern
   variable allNames in line 65
   variable canonicalName in line 58
   variable checker in line 52
   variable customSuppressionAnnotations in line 102
   variable defaultSeverity in line 76
   variable linkUrl in line 89
   variable maturity in line 82
   variable message in line 71
   variable suppressibility in line 95
   variable URL_FORMAT in line 131
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/AbstractAsyncTypeReturnsNull.java
module com::google::errorprone::bugpatterns::AbstractAsyncTypeReturnsNull
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   abstract class
   function matchReturn(ReturnTree,VisitorState) in line 49
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function overridesMethodOfClass(final Class<?>) in line 60
      19 lines of code
      1 parameters
      1 conditional paths
   variable implementsAsyncTypeMethod in line 42
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/AbstractJUnit4InitMethodNotRun.java
module com::google::errorprone::bugpatterns::AbstractJUnit4InitMethodNotRun
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   abstract class
   function annotationReplacements() in line 83
      1 lines of code
      0 parameters
      1 conditional paths
   function correctAnnotation() in line 72
      1 lines of code
      0 parameters
      1 conditional paths
   function findAnnotation(MethodTree,VisitorState,String) in line 196
      11 lines of code
      3 parameters
      1 conditional paths
   function getUnqualifiedClassName(String) in line 192
      3 lines of code
      1 parameters
      1 conditional paths
   function makeProtectedPublic(MethodTree,VisitorState,String,SuggestedFix.Builder,boolean) in line 162
      14 lines of code
      5 parameters
      1 conditional paths
   function matchMethod(MethodTree,VisitorState) in line 96
      protection public
      61 lines of code
      2 parameters
      1 conditional paths
   function methodMatcher() in line 63
      1 lines of code
      0 parameters
      1 conditional paths
   function tryToReplaceAnnotation(MethodTree,VisitorState,String,String) in line 178
      13 lines of code
      4 parameters
      1 conditional paths
   function AbstractJUnit4InitMethodNotRun() in line 55
      3 lines of code
      0 parameters
      1 conditional paths
   variable isJUnit4TestClass in line 53
   variable JUNIT_TEST in line 52
module com::google::errorprone::bugpatterns::AbstractJUnit4InitMethodNotRun::AnnotationReplacements
   inherits from java::io::Serializable
   function AnnotationReplacements(String,String) in line 212
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable goodAnnotation defined in com::google::errorprone::bugpatterns::AbstractJUnit4InitMethodNotRun::AnnotationReplacements
      uses variable badAnnotation defined in com::google::errorprone::bugpatterns::AbstractJUnit4InitMethodNotRun::AnnotationReplacements
   variable badAnnotation in line 210
   variable goodAnnotation in line 209
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/AbstractReturnValueIgnored.java
module com::google::errorprone::bugpatterns::AbstractReturnValueIgnored
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   abstract class
   function describe(MethodInvocationTree,VisitorState) in line 85
      protection public
      31 lines of code
      2 parameters
      5 conditional paths
      uses function equals(Object) defined in com::google::errorprone::bugpatterns::BugChecker
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function describeMatch(Tree,Fix) defined in com::google::errorprone::bugpatterns::BugChecker
   function identifierHasName(final String) in line 72
      8 lines of code
      1 parameters
      1 conditional paths
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 53
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function identifierHasName(final String) defined in com::google::errorprone::bugpatterns::AbstractReturnValueIgnored
      uses function specializedMatcher() defined in com::google::errorprone::bugpatterns::AbstractReturnValueIgnored
      uses function describe(MethodInvocationTree,VisitorState) defined in com::google::errorprone::bugpatterns::AbstractReturnValueIgnored
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function specializedMatcher() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/AbstractSuppressWarningsMatcher.java
module com::google::errorprone::bugpatterns::AbstractSuppressWarningsMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   abstract class
   function getSuggestedFix(AnnotationTree) in line 48
      40 lines of code
      1 parameters
      1 conditional paths
   function processSuppressWarningsValues(List< String >) in line 46
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiable.java
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiable
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function buildErrorMessage(Tree,String) in line 71
      5 lines of code
      2 parameters
      1 conditional paths
   function matchClass(ClassTree,VisitorState) in line 78
      protection public
      41 lines of code
      2 parameters
      9 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable FRAGMENT_CLASS in line 62
   variable FRAGMENT_CLASS_V4 in line 66
   variable FRAGMENT_MATCHER in line 68
   variable MESSAGE_BASE in line 60
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidString.java
module com::google::errorprone::bugpatterns::android::MislabeledAndroidString
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MemberSelectTreeMatcher
   function matchMemberSelect(MemberSelectTree,VisitorState) in line 76
      protection public
      24 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable R_STRING_CLASSNAME in line 57
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnored.java
module com::google::errorprone::bugpatterns::android::RectIntersectReturnValueIgnored
   inherits from com::google::errorprone::bugpatterns::AbstractReturnValueIgnored
   function describe(MethodInvocationTree,VisitorState) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function specializedMatcher() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ArrayEquals.java
module com::google::errorprone::bugpatterns::ArrayEquals
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 81
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable instanceEqualsMatcher in line 61
   variable staticEqualsMatcher in line 69
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ArrayHashCode.java
module com::google::errorprone::bugpatterns::ArrayHashCode
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 89
      protection public
      46 lines of code
      2 parameters
      9 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function rewriteArrayArgument(ExpressionTree,Types) in line 141
      9 lines of code
      2 parameters
      2 conditional paths
   variable instanceHashCodeMethodMatcher in line 76
   variable jdk7HashCodeMethodMatcher in line 69
   variable varargsHashCodeMethodMatcher in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ArraysAsListPrimitiveArray.java
module com::google::errorprone::bugpatterns::ArraysAsListPrimitiveArray
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 77
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable ARRAYS_AS_LIST_SINGLE_ARRAY in line 56
   variable GUAVA_UTILS in line 61
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ArrayToString.java
module com::google::errorprone::bugpatterns::ArrayToString
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 58
      protection public
      29 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable getStackTraceMatcher in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignment.java
module com::google::errorprone::bugpatterns::ArrayToStringCompoundAssignment
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompoundAssignmentTreeMatcher
   function matchCompoundAssignment(CompoundAssignmentTree,VisitorState) in line 60
      protection public
      18 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable assignmentMatcher in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenation.java
module com::google::errorprone::bugpatterns::ArrayToStringConcatenation
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function matchBinary(BinaryTree,VisitorState) in line 61
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable arrayMatcher in line 50
   variable concatenationMatcher in line 53
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/AssertFalse.java
module com::google::errorprone::bugpatterns::AssertFalse
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AssertTreeMatcher
   function matchAssert(AssertTree,VisitorState) in line 53
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable ASSERT_FALSE_MATCHER in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNull.java
module com::google::errorprone::bugpatterns::AsyncFunctionReturnsNull
   inherits from com::google::errorprone::bugpatterns::AbstractAsyncTypeReturnsNull
   function AsyncFunctionReturnsNull() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/BadAnnotationImplementation.java
module com::google::errorprone::bugpatterns::BadAnnotationImplementation
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function getMatchingMethod(Type,Name,Predicate< MethodSymbol >) in line 135
      14 lines of code
      3 parameters
      4 conditional paths
   function matchClass(ClassTree,final VisitorState) in line 75
      protection public
      59 lines of code
      2 parameters
      7 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getName(String) defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   variable CLASS_TREE_MATCHER in line 70
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/BadComparable.java
module com::google::errorprone::bugpatterns::BadComparable
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::TypeCastTreeMatcher
   function getTypeOfSubtract(BinaryTree) in line 95
      7 lines of code
      1 parameters
      2 conditional paths
   function matches(TypeCastTree,VisitorState) in line 107
      20 lines of code
      2 parameters
      3 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function matchTypeCast(TypeCastTree,VisitorState) in line 129
      protection public
      33 lines of code
      2 parameters
      6 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable COMPARABLE_CLASS_MATCHER in line 75
   variable COMPARABLE_METHOD_MATCHER in line 68
   variable COMPARATOR_CLASS_MATCHER in line 86
   variable COMPARATOR_METHOD_MATCHER in line 79
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/BadShiftAmount.java
module com::google::errorprone::bugpatterns::BadShiftAmount
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function matchBinary(BinaryTree,VisitorState) in line 101
      protection public
      32 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function toString(JCCompilationUnit) defined in com::google::errorprone::fixes::Fix
      uses function getSourceCode() defined in com::google::errorprone::VisitorState
   variable BAD_SHIFT_AMOUNT_INT in line 66
   variable BINARY_TREE_MATCHER in line 92
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/BugChecker.java
module com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::matchers::Suppressible
   inherits from java::io::Serializable
   abstract class
   function allNames() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable allNames defined in com::google::errorprone::BugCheckerInfo
   function buildDescription(Tree) in line 131
      3 lines of code
      1 parameters
      1 conditional paths
      uses function buildDescriptionFromChecker(Tree,BugChecker) defined in com::google::errorprone::bugpatterns::BugChecker
   function buildDescriptionFromChecker(Tree,BugChecker) in line 142
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function canonicalName() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function linkUrl() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function defaultSeverity() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function message() defined in com::google::errorprone::bugpatterns::BugChecker
   function canonicalName() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable canonicalName defined in com::google::errorprone::BugCheckerInfo
   function customSuppressionAnnotations() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable customSuppressionAnnotations defined in com::google::errorprone::BugCheckerInfo
   function defaultSeverity() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable defaultSeverity defined in com::google::errorprone::BugCheckerInfo
   function describeMatch(Tree,Fix) in line 112
      5 lines of code
      2 parameters
      1 conditional paths
      uses function buildDescription(Tree) defined in com::google::errorprone::bugpatterns::BugChecker
   function describeMatch(Tree) in line 122
      3 lines of code
      1 parameters
      1 conditional paths
      uses function buildDescription(Tree) defined in com::google::errorprone::bugpatterns::BugChecker
   function equals(Object) in line 402
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function BugChecker() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function canonicalName() defined in com::google::errorprone::matchers::Suppressible
      uses function canonicalName() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function defaultSeverity() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function maturity() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function suppressibility() defined in com::google::errorprone::matchers::Suppressible
      uses function suppressibility() defined in com::google::errorprone::bugpatterns::BugChecker
   function hashCode() in line 414
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function canonicalName() defined in com::google::errorprone::matchers::Suppressible
      uses function defaultSeverity() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function maturity() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function suppressibility() defined in com::google::errorprone::matchers::Suppressible
   function linkUrl() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable linkUrl defined in com::google::errorprone::BugCheckerInfo
   function maturity() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable maturity defined in com::google::errorprone::BugCheckerInfo
   function message() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable message defined in com::google::errorprone::BugCheckerInfo
   function severity(Map< String, SeverityLevel >) in line 173
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function canonicalName() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function defaultSeverity() defined in com::google::errorprone::bugpatterns::BugChecker
   function suppressibility() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable suppressibility defined in com::google::errorprone::BugCheckerInfo
   function BugChecker() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in com::google::errorprone::bugpatterns::BugChecker
   variable info in line 102
module com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchAnnotation(AnnotationTree,VisitorState) in line 192
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::AnnotatedTypeTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchAnnotatedType(AnnotatedTypeTree,VisitorState) in line 196
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ArrayAccessTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchArrayAccess(ArrayAccessTree,VisitorState) in line 200
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ArrayTypeTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchArrayType(ArrayTypeTree,VisitorState) in line 204
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::AssertTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchAssert(AssertTree,VisitorState) in line 208
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::AssignmentTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchAssignment(AssignmentTree,VisitorState) in line 212
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchBinary(BinaryTree,VisitorState) in line 216
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::BlockTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchBlock(BlockTree,VisitorState) in line 220
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::BreakTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchBreak(BreakTree,VisitorState) in line 224
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::CaseTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchCase(CaseTree,VisitorState) in line 228
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::CatchTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchCatch(CatchTree,VisitorState) in line 232
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchClass(ClassTree,VisitorState) in line 236
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchCompilationUnit(CompilationUnitTree,VisitorState) in line 240
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::CompoundAssignmentTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchCompoundAssignment(CompoundAssignmentTree,VisitorState) in line 244
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ConditionalExpressionTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchConditionalExpression(ConditionalExpressionTree,VisitorState) in line 249
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ContinueTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchContinue(ContinueTree,VisitorState) in line 253
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::DoWhileLoopTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchDoWhileLoop(DoWhileLoopTree,VisitorState) in line 257
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::EmptyStatementTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchEmptyStatement(EmptyStatementTree,VisitorState) in line 261
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::EnhancedForLoopTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchEnhancedForLoop(EnhancedForLoopTree,VisitorState) in line 265
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ExpressionStatementTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchExpressionStatement(ExpressionStatementTree,VisitorState) in line 271
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ForLoopTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchForLoop(ForLoopTree,VisitorState) in line 275
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::IdentifierTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchIdentifier(IdentifierTree,VisitorState) in line 279
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::IfTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchIf(IfTree,VisitorState) in line 283
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ImportTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchImport(ImportTree,VisitorState) in line 287
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::InstanceOfTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchInstanceOf(InstanceOfTree,VisitorState) in line 291
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::IntersectionTypeTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchIntersectionType(IntersectionTypeTree,VisitorState) in line 295
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::LabeledStatementTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchLabeledStatement(LabeledStatementTree,VisitorState) in line 299
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::LambdaExpressionTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchLambdaExpression(LambdaExpressionTree,VisitorState) in line 303
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::LiteralTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchLiteral(LiteralTree,VisitorState) in line 307
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::MemberReferenceTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchMemberReference(MemberReferenceTree,VisitorState) in line 311
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::MemberSelectTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchMemberSelect(MemberSelectTree,VisitorState) in line 315
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchMethod(MethodTree,VisitorState) in line 319
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 323
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ModifiersTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchModifiers(ModifiersTree,VisitorState) in line 327
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::NewArrayTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchNewArray(NewArrayTree,VisitorState) in line 331
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchNewClass(NewClassTree,VisitorState) in line 335
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ParameterizedTypeTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchParameterizedType(ParameterizedTypeTree,VisitorState) in line 342
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ParenthesizedTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchParenthesized(ParenthesizedTree,VisitorState) in line 346
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::PrimitiveTypeTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchPrimitiveType(PrimitiveTypeTree,VisitorState) in line 350
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchReturn(ReturnTree,VisitorState) in line 354
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::SwitchTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchSwitch(SwitchTree,VisitorState) in line 358
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::SynchronizedTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchSynchronized(SynchronizedTree,VisitorState) in line 362
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::ThrowTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchThrow(ThrowTree,VisitorState) in line 366
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::TryTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchTry(TryTree,VisitorState) in line 370
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::TypeCastTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchTypeCast(TypeCastTree,VisitorState) in line 374
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::TypeParameterTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchTypeParameter(TypeParameterTree,VisitorState) in line 378
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::UnaryTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchUnary(UnaryTree,VisitorState) in line 382
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::UnionTypeTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchUnionType(UnionTypeTree,VisitorState) in line 386
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchVariable(VariableTree,VisitorState) in line 390
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::WhileLoopTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchWhileLoop(WhileLoopTree,VisitorState) in line 394
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BugChecker::WildcardTreeMatcher
   inherits from com::google::errorprone::matchers::Suppressible
   function matchWildcard(WildcardTree,VisitorState) in line 398
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/CannotMockFinalClass.java
module com::google::errorprone::bugpatterns::CannotMockFinalClass
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 90
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchVariable(VariableTree,VisitorState) in line 83
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable creationOfMockForFinalClass in line 77
   variable enclosingClassIsJunit4Test in line 69
   variable runWithJunit4 in line 65
   variable variableOfFinalClassAnnotatedMock in line 72
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameter.java
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameter
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function evaluateCallers(MethodSymbol) in line 113
      72 lines of code
      1 parameters
      7 conditional paths
      uses function findEnclosing(Class<?extends T >...) defined in com::google::errorprone::VisitorState
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function indexTypeByName(List<?extends VariableTree >) in line 186
      7 lines of code
      1 parameters
      2 conditional paths
   function isIdentifierWithName(ExpressionTree,String) in line 210
      3 lines of code
      2 parameters
      1 conditional paths
   function matchCompilationUnit(CompilationUnitTree,VisitorState) in line 81
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function matchMethod(MethodTree,VisitorState) in line 104
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 93
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
   function referencesIdentifierWithName(final String,ExpressionTree,VisitorState) in line 199
      10 lines of code
      3 parameters
      1 conditional paths
   function reportMatch(Tree,VisitorState,Tree,String) in line 194
      4 lines of code
      4 parameters
      1 conditional paths
      uses function reportMatch(Description) defined in com::google::errorprone::VisitorState
   variable callersToEvaluate in line 78
   variable paramTypesForMethod in line 77
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameter::Caller
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/CheckReturnValue.java
module com::google::errorprone::bugpatterns::CheckReturnValue
   inherits from com::google::errorprone::bugpatterns::AbstractReturnValueIgnored
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function checkEnclosingClasses(MethodSymbol,VisitorState) in line 82
      11 lines of code
      2 parameters
      3 conditional paths
   function checkPackage(MethodSymbol,VisitorState) in line 94
      3 lines of code
      2 parameters
      1 conditional paths
   function matchClass(ClassTree,VisitorState) in line 208
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchMethod(MethodTree,VisitorState) in line 173
      protection public
      29 lines of code
      2 parameters
      6 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function mockitoInvocation(MethodInvocationTree,VisitorState) in line 220
      10 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function shouldCheckReturnValue(Symbol,VisitorState) in line 72
      9 lines of code
      2 parameters
      3 conditional paths
   function specializedMatcher() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable BOTH_ERROR in line 160
   variable MATCHER in line 98
   variable MOCKITO_MATCHER in line 145
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ClassCanBeStatic.java
module com::google::errorprone::bugpatterns::ClassCanBeStatic
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function matchClass(ClassTree,VisitorState) in line 111
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function referenceEnclosing(ClassTree,Types) in line 86
      3 lines of code
      2 parameters
      1 conditional paths
   variable classTreeMatcher in line 70
module com::google::errorprone::bugpatterns::ClassCanBeStatic::ReferenceEnclosing
   inherits from com::google::errorprone::matchers::Matcher
   function matches(IdentifierTree,VisitorState) in line 104
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function ReferenceEnclosing(ClassTree,Types) in line 98
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable currentClass in line 95
   variable types in line 96
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ClassName.java
module com::google::errorprone::bugpatterns::ClassName
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   function matchCompilationUnit(CompilationUnitTree,VisitorState) in line 55
      protection public
      26 lines of code
      2 parameters
      6 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/AbstractCollectionIncompatibleTypeMatcher.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::AbstractCollectionIncompatibleTypeMatcher
   abstract class
   function extractTypeArgAsMemberOfSupertype(Type,Symbol,int,Types) in line 147
      11 lines of code
      4 parameters
      1 conditional paths
   function matches(MethodInvocationTree,VisitorState) in line 115
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::collectionincompatibletype::AbstractCollectionIncompatibleTypeMatcher::MatchResult
   abstract class
   function create(ExpressionTree,Type,Type,AbstractCollectionIncompatibleTypeMatcher) in line 104
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
   function matcher() in line 102
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function sourceTree() in line 99
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function sourceType() in line 100
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function targetType() in line 101
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleType.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleType
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function firstNonNullMatchResult(Iterable<?extends AbstractCollectionIncompatibleTypeMatcher >,MethodInvocationTree,VisitorState) in line 228
      13 lines of code
      3 parameters
      3 conditional paths
   function getSimpleName(Type) in line 246
      15 lines of code
      1 parameters
      3 conditional paths
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 145
      protection public
      81 lines of code
      2 parameters
      10 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function CollectionIncompatibleType() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NONE defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleType::FixType
   function CollectionIncompatibleType(FixType) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable DIRECT_MATCHERS in line 97
   variable fixType in line 78
   variable TYPE_ARG_MATCHERS in line 119
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleType::FixType
   variable CAST in line 74
      protection public
   variable NONE in line 73
      protection public
   variable PRINT_TYPES_AS_COMMENT in line 75
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/MethodArgMatcher.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::MethodArgMatcher
   inherits from com::google::errorprone::bugpatterns::collectionincompatibletype::AbstractCollectionIncompatibleTypeMatcher
   function MethodArgMatcher(String,String,int,int) in line 49
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
   variable methodArgIndex in line 41
   variable methodMatcher in line 38
   variable typeArgIndex in line 40
   variable typeName in line 39
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/collectionincompatibletype/TypeArgOfMethodArgMatcher.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::TypeArgOfMethodArgMatcher
   inherits from com::google::errorprone::bugpatterns::collectionincompatibletype::AbstractCollectionIncompatibleTypeMatcher
   function TypeArgOfMethodArgMatcher(String,String,int,int,String,int) in line 57
      protection public
      14 lines of code
      6 parameters
      1 conditional paths
   variable methodArgIndex in line 41
   variable methodArgTypeArgIndex in line 43
   variable methodArgTypeName in line 42
   variable methodMatcher in line 38
   variable receiverTypeArgIndex in line 40
   variable receiverTypeName in line 39
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ComparisonOutOfRange.java
module com::google::errorprone::bugpatterns::ComparisonOutOfRange
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function describe(BinaryTree,VisitorState) in line 188
      protection public
      39 lines of code
      2 parameters
      4 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
      uses function toString(JCCompilationUnit) defined in com::google::errorprone::fixes::Fix
      uses function getSourceCode() defined in com::google::errorprone::VisitorState
   function matchBinary(BinaryTree,VisitorState) in line 172
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable BYTE_MATCHER in line 168
   variable CHAR_MATCHER in line 169
   variable MESSAGE_TEMPLATE in line 62
module com::google::errorprone::bugpatterns::ComparisonOutOfRange::BadComparisonMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function init(Symtab) in line 94
      17 lines of code
      1 parameters
      3 conditional paths
   function matches(BinaryTree,VisitorState) in line 113
      protection public
      53 lines of code
      2 parameters
      10 conditional paths
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function BadComparisonMatcher(Class<?>) in line 80
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   variable comparisonType in line 76
   variable initialized in line 75
   variable maxValue in line 77
   variable minValue in line 78
   variable type in line 73
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/CompileTimeConstantChecker.java
module com::google::errorprone::bugpatterns::CompileTimeConstantChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   function handleMatch(ExpressionTree,VisitorState) in line 141
      14 lines of code
      2 parameters
      3 conditional paths
   function matchArguments(VisitorState,final Symbol.MethodSymbol,Iterator<?extends ExpressionTree >) in line 96
      40 lines of code
      3 parameters
      9 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 164
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchNewClass(NewClassTree,VisitorState) in line 157
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable compileTimeConstExpressionMatcher in line 80
   variable DID_YOU_MEAN_FINAL_FMT_MESSAGE in line 77
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/DaggerProvidesNull.java
module com::google::errorprone::bugpatterns::DaggerProvidesNull
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function hasAnyNullableAnnotation(MethodSymbol) in line 119
      8 lines of code
      1 parameters
      3 conditional paths
   function matchReturn(ReturnTree,VisitorState) in line 66
      protection public
      48 lines of code
      2 parameters
      6 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/DeadException.java
module com::google::errorprone::bugpatterns::DeadException
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   function matchNewClass(NewClassTree,VisitorState) in line 72
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable LAST defined in com::google::errorprone::matchers::ChildMultiMatcher::MatchType
   variable MATCHER in line 63
      protection public
module com::google::errorprone::bugpatterns::DeadException::ChildOfBlockOrCase
   inherits from com::google::errorprone::matchers::ChildMultiMatcher
   function getChildNodes(T,VisitorState) in line 103
      14 lines of code
      2 parameters
      4 conditional paths
      uses function findEnclosing(Class<?extends T >...) defined in com::google::errorprone::VisitorState
   function ChildOfBlockOrCase(MatchType,Matcher< StatementTree >) in line 98
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/DepAnn.java
module com::google::errorprone::bugpatterns::DepAnn
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function checkDeprecatedAnnotation(Tree,VisitorState) in line 74
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchClass(ClassTree,VisitorState) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function matchMethod(MethodTree,VisitorState) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function matchVariable(VariableTree,VisitorState) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/DivZero.java
module com::google::errorprone::bugpatterns::DivZero
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompoundAssignmentTreeMatcher
   function matchBinary(BinaryTree,VisitorState) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function matchCompoundAssignment(CompoundAssignmentTree,VisitorState) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function matchDivZero(Tree,ExpressionTree,VisitorState) in line 63
      22 lines of code
      3 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ElementsCountedInLoop.java
module com::google::errorprone::bugpatterns::ElementsCountedInLoop
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::EnhancedForLoopTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::WhileLoopTreeMatcher
   function extractSingleStatement(JCStatement) in line 114
      10 lines of code
      1 parameters
      3 conditional paths
   function getIncrementedIdentifer(JCStatement) in line 129
      40 lines of code
      1 parameters
      14 conditional paths
   function isConstantOne(JCExpression) in line 170
      17 lines of code
      1 parameters
      5 conditional paths
   function matchEnhancedForLoop(EnhancedForLoopTree,VisitorState) in line 85
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchWhileLoop(WhileLoopTree,VisitorState) in line 68
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/EmptyIfStatement.java
module com::google::errorprone::bugpatterns::EmptyIfStatement
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::EmptyStatementTreeMatcher
   function matchEmptyStatement(EmptyStatementTree,VisitorState) in line 64
      protection public
      33 lines of code
      2 parameters
      4 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/EmptyTopLevelDeclaration.java
module com::google::errorprone::bugpatterns::EmptyTopLevelDeclaration
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   function matchCompilationUnit(CompilationUnitTree,VisitorState) in line 54
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function delete(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/EqualsHashCode.java
module com::google::errorprone::bugpatterns::EqualsHashCode
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function matchClass(ClassTree,VisitorState) in line 77
      protection public
      34 lines of code
      2 parameters
      7 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getName(String) defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function resolveMethod(VisitorState,TypeSymbol,Name,Iterable< Type >,Iterable< Type >) in line 112
      protection public
      22 lines of code
      5 parameters
      2 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
   variable EQUALS_MATCHER in line 69
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/EqualsIncompatibleType.java
module com::google::errorprone::bugpatterns::EqualsIncompatibleType
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,final VisitorState) in line 79
      protection public
      78 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
      uses function getName(String) defined in com::google::errorprone::VisitorState
   variable INSTANCE_EQUALS_INVOCATION_MATCHER in line 73
   variable STATIC_EQUALS_INVOCATION_MATCHER in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/EqualsNaN.java
module com::google::errorprone::bugpatterns::EqualsNaN
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function matchBinary(BinaryTree,VisitorState) in line 48
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchNaN(ExpressionTree) in line 82
      12 lines of code
      1 parameters
      4 conditional paths
   function toString(JCTree,VisitorState) in line 76
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/FallThroughSuppression.java
module com::google::errorprone::bugpatterns::FallThroughSuppression
   inherits from com::google::errorprone::bugpatterns::AbstractSuppressWarningsMatcher
   function matchAnnotation(AnnotationTree,VisitorState) in line 57
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function processSuppressWarningsValues(List< String >) in line 65
      3 lines of code
      1 parameters
      1 conditional paths
   variable matcher in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/Finally.java
module com::google::errorprone::bugpatterns::Finally
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ContinueTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::ThrowTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::BreakTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchBreak(BreakTree,VisitorState) in line 85
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchContinue(ContinueTree,VisitorState) in line 77
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchReturn(ReturnTree,VisitorState) in line 101
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchThrow(ThrowTree,VisitorState) in line 93
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
module com::google::errorprone::bugpatterns::Finally::MatchResult
   variable KEEP_LOOKING in line 109
      protection public
   variable NO_MATCH in line 109
      protection public
module com::google::errorprone::bugpatterns::Finally::FinallyCompletionMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function matchAncestor(Tree,Tree) in line 147
      10 lines of code
      2 parameters
      1 conditional paths
   function matches(T,VisitorState) in line 125
      protection public
      18 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::Finally::FinallyJumpMatcher
   inherits from FinallyCompletionMatcher< StatementTree >
   function matchAncestor(Tree,Tree) in line 191
      29 lines of code
      2 parameters
      8 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::bugpatterns::Finally::MatchResult
      uses variable BREAK defined in com::google::errorprone::bugpatterns::Finally::FinallyJumpMatcher::JumpType
   function FinallyJumpMatcher(JCContinue) in line 171
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable CONTINUE defined in com::google::errorprone::bugpatterns::Finally::FinallyJumpMatcher::JumpType
   function FinallyJumpMatcher(JCBreak) in line 176
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable BREAK defined in com::google::errorprone::bugpatterns::Finally::FinallyJumpMatcher::JumpType
   variable jumpType in line 164
   variable label in line 163
module com::google::errorprone::bugpatterns::Finally::FinallyJumpMatcher::JumpType
   variable BREAK in line 167
      protection public
   variable CONTINUE in line 169
      protection public
module com::google::errorprone::bugpatterns::Finally::FinallyThrowMatcher
   inherits from FinallyCompletionMatcher< ThrowTree >
   function matchAncestor(Tree,Tree) in line 227
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::bugpatterns::Finally::MatchResult
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ForOverrideChecker.java
module com::google::errorprone::bugpatterns::ForOverrideChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function getOutermostClass(VisitorState) in line 173
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function getOverriddenMethods(VisitorState,MethodSymbol) in line 128
      41 lines of code
      2 parameters
      6 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function hasAnnotation(String,Symbol) in line 188
      8 lines of code
      2 parameters
      3 conditional paths
   function matchMethod(MethodTree,VisitorState) in line 98
      protection public
      21 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 73
      protection public
      23 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable FOR_OVERRIDE in line 66
   variable GUAVA_FOR_OVERRIDE in line 70
   variable MESSAGE_BASE in line 67
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/GetClassOnClass.java
module com::google::errorprone::bugpatterns::GetClassOnClass
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 61
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable getClassMethodMatcher in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScoping.java
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScoping
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function matchClass(ClassTree,VisitorState) in line 112
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getMatchingNode() defined in com::google::errorprone::matchers::MultiMatcher
   variable ASSISTED_ANNOTATION in line 67
   variable ASSISTED_INJECT_ANNOTATION in line 70
   variable assistedMatcher in line 94
   variable classAnnotationMatcher in line 76
   variable constructorWithInjectMatcher in line 83
   variable GUICE_INJECT_ANNOTATION in line 68
   variable GUICE_SCOPE_ANNOTATION in line 65
   variable JAVAX_INJECT_ANNOTATION in line 69
   variable JAVAX_SCOPE_ANNOTATION in line 66
   variable MATCHER in line 109
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/GuiceAssistedParameters.java
module com::google::errorprone::bugpatterns::GuiceAssistedParameters
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function describe(VariableTree,VisitorState) in line 109
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
   function matchVariable(VariableTree,VisitorState) in line 63
      protection public
      45 lines of code
      2 parameters
      13 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable ASSISTED_ANNOTATION in line 49
   variable constructorAssistedParameterMatcher in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalField.java
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalField
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function isField(Tree,VisitorState) in line 87
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchVariable(VariableTree,VisitorState) in line 68
      protection public
      18 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in Matcher< T >
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable context defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable ANNOTATED_WITH_GUICE_INJECT_MATCHER in line 57
   variable FINAL_FIELD_MATCHER in line 60
   variable GUICE_INJECT_ANNOTATION in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethod.java
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethod
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function isAnnotatedWith(MethodSymbol,String) in line 105
      10 lines of code
      2 parameters
      3 conditional paths
   function matchMethod(MethodTree,VisitorState) in line 79
      protection public
      25 lines of code
      2 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GUICE_INJECT_ANNOTATION in line 68
   variable INJECTABLE_METHOD_MATCHER in line 71
   variable JAVAX_INJECT_ANNOTATION in line 69
   variable OVERRIDE_ANNOTATION in line 67
   variable OVERRIDE_METHOD_MATCHER in line 75
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethod.java
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethod
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function findSuperMethod(MethodSymbol,VisitorState) in line 99
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function isAnnotatedWith(MethodSymbol,String) in line 111
      9 lines of code
      2 parameters
      3 conditional paths
   function matchMethod(MethodTree,VisitorState) in line 69
      protection public
      29 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable GUICE_INJECT_ANNOTATION in line 59
   variable INJECTABLE_METHOD_MATCHER in line 62
   variable JAVAX_INJECT_ANNOTATION in line 60
   variable OVERRIDE_ANNOTATION in line 58
   variable OVERRIDE_METHOD_MATCHER in line 65
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/HashtableContains.java
module com::google::errorprone::bugpatterns::HashtableContains
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 61
      protection public
      54 lines of code
      2 parameters
      6 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function replaceMethodName(MethodInvocationTree,VisitorState,String) in line 116
      8 lines of code
      3 parameters
      1 conditional paths
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/IncompatibleModifiersChecker.java
module com::google::errorprone::bugpatterns::IncompatibleModifiersChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getIncompatibleModifiers(AnnotationTree,VisitorState) in line 75
      18 lines of code
      2 parameters
      4 conditional paths
      uses function getName(String) defined in com::google::errorprone::VisitorState
      uses function value() defined in com::google::errorprone::annotations::IncompatibleModifiers
   function matchAnnotation(AnnotationTree,VisitorState) in line 95
      protection public
      29 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
   variable GUAVA_ANNOTATION in line 64
   variable MESSAGE_TEMPLATE in line 59
   variable TO_MODIFIER in line 67
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructors.java
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructors
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function matchAnnotation(AnnotationTree,VisitorState) in line 81
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable ASSISTED_INJECT_ANNOTATION in line 57
   variable constructorsWithInjectAndAssistedInjectMatcher in line 77
   variable constructorWithAssistedInjectMatcher in line 70
   variable constructorWithInjectMatcher in line 63
   variable GUICE_INJECT_ANNOTATION in line 55
   variable JAVAX_INJECT_ANNOTATION in line 56
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructor.java
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructor
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function matchAnnotation(AnnotationTree,VisitorState) in line 81
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable ASSISTED_INJECT_ANNOTATION in line 51
   variable constructorWithAssistedInjectMatcher in line 63
   variable constructorWithInjectMatcher in line 57
   variable GUICE_INJECT_ANNOTATION in line 49
   variable injectOrAssistedInjectMatcher in line 69
   variable JAVAX_INJECT_ANNOTATION in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotations.java
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotations
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   variable BINDING_ANNOTATION_MATCHER in line 59
   variable GUICE_BINDING_ANNOTATION in line 50
   variable GUICE_INJECT_ANNOTATION in line 49
   variable OPTIONAL_INJECTION_MATCHER in line 53
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotation.java
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotation
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function describe(ClassTree,VisitorState) in line 86
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addStaticImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function matchClass(ClassTree,VisitorState) in line 64
      protection public
      21 lines of code
      2 parameters
      7 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GUICE_SCOPE_ANNOTATION in line 53
   variable JAVAX_SCOPE_ANNOTATION in line 54
   variable SCOPE_ANNOTATION_MATCHER in line 60
   variable TARGET_ANNOTATION in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethod.java
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethod
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function isAbstract(Tree) in line 79
      3 lines of code
      1 parameters
      1 conditional paths
   function isMethod(Tree) in line 75
      3 lines of code
      1 parameters
      1 conditional paths
   function matchAnnotation(AnnotationTree,VisitorState) in line 63
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
   variable JAVAX_INJECT_ANNOTATION in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalField.java
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalField
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getAnnotatedNode(VisitorState) in line 71
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function isField(Tree,VisitorState) in line 75
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchAnnotation(AnnotationTree,VisitorState) in line 62
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable FINAL_FIELD_MATCHER in line 51
   variable JAVAX_INJECT_ANNOTATION in line 49
   variable JAVAX_INJECT_ANNOTATION_MATCHER in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructor.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructor
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function describe(MethodTree,VisitorState) in line 80
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function matches(AnnotationTree,VisitorState) defined in com::google::errorprone::matchers::AnnotationType
   function matchMethod(MethodTree,VisitorState) in line 66
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GUICE_INJECT_ANNOTATION in line 53
   variable GUICE_INJECT_MATCHER in line 62
   variable INJECTABLE_METHOD_MATCHER in line 56
   variable JAVAX_INJECT_ANNOTATION in line 54
   variable JAVAX_INJECT_MATCHER in line 59
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifier.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifier
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getSiblingAnnotations(VisitorState) in line 70
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchAnnotation(AnnotationTree,VisitorState) in line 55
      protection public
      14 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GUICE_BINDING_ANNOTATION in line 47
   variable JAVAX_QUALIFER_ANNOTATION in line 48
   variable QUALIFIER_ANNOTATION_MATCHER in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClass.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClass
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function matchAnnotation(AnnotationTree,VisitorState) in line 63
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GUICE_SCOPE_ANNOTATION in line 52
   variable JAVAX_SCOPE_ANNOTATION in line 53
   variable scopeAnnotationMatcher in line 59
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotation.java
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotation
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getAnnotationTypeFromMetaAnnotation(VisitorState) in line 95
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchAnnotation(AnnotationTree,VisitorState) in line 84
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GUICE_BINDING_ANNOTATION in line 49
   variable GUICE_SCOPE_ANNOTATION in line 47
   variable HAS_QUALIFIER_ANNOTATION_MATCHER in line 62
   variable HAS_SCOPE_ANNOTATION_MATCHER in line 56
   variable JAVAX_QUALIFER_ANNOTATION in line 50
   variable JAVAX_SCOPE_ANNOTATION in line 48
   variable QUALIFIER_OR_SCOPE_MATCHER in line 73
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClass.java
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClass
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getCurrentlyAnnotatedNode(VisitorState) in line 80
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchAnnotation(AnnotationTree,VisitorState) in line 70
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GUICE_SCOPE_ANNOTATION in line 49
   variable INTERFACE_AND_ABSTRACT_TYPE_MATCHER in line 60
   variable JAVAX_SCOPE_ANNOTATION in line 50
   variable SCOPE_ANNOTATION_MATCHER in line 56
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetention.java
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetention
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function describe(ClassTree,VisitorState) in line 78
      protection public
      22 lines of code
      2 parameters
      4 conditional paths
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addStaticImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function matchClass(ClassTree,VisitorState) in line 64
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GUICE_BINDING_ANNOTATION in line 52
   variable GUICE_SCOPE_ANNOTATION in line 50
   variable JAVAX_QUALIFER_ANNOTATION in line 53
   variable JAVAX_SCOPE_ANNOTATION in line 51
   variable RETENTION_ANNOTATION in line 54
   variable SCOPE_OR_QUALIFIER_ANNOTATION_MATCHER in line 59
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InsecureCipherMode.java
module com::google::errorprone::bugpatterns::InsecureCipherMode
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function buildErrorMessage(MethodInvocationTree,String) in line 58
      5 lines of code
      2 parameters
      1 conditional paths
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 65
      protection public
      41 lines of code
      2 parameters
      6 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable GETINSTANCE_MATCHER in line 54
   variable MESSAGE_BASE in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/InvalidPatternSyntax.java
module com::google::errorprone::bugpatterns::InvalidPatternSyntax
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 102
      protection public
      26 lines of code
      2 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable BAD_REGEX_LITERAL in line 56
   variable BAD_REGEX_USAGE in line 84
   variable MESSAGE_BASE in line 53
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/IsInstanceOfClass.java
module com::google::errorprone::bugpatterns::IsInstanceOfClass
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 69
      protection public
      6 lines of code
      2 parameters
      14 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   variable INSTANCE_OF_CLASS in line 55
module com::google::errorprone::bugpatterns::IsInstanceOfClass::Kind
   variable EXPR in line 121
      protection public
   variable GET_CLASS in line 119
      protection public
   variable LITERAL in line 118
      protection public
module com::google::errorprone::bugpatterns::IsInstanceOfClass::Operand
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/IterableAndIterator.java
module com::google::errorprone::bugpatterns::IterableAndIterator
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function matchAnySuperType(ClassTree,VisitorState) in line 75
      18 lines of code
      2 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function matchClass(ClassTree,VisitorState) in line 95
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable ITERABLE in line 56
   variable ITERABLE_AND_ITERATOR_MATCHER in line 72
   variable ITERABLE_MATCHER in line 62
   variable ITERATOR in line 57
   variable ITERATOR_MATCHER in line 67
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotation.java
module com::google::errorprone::bugpatterns::JMockTestWithoutRunWithOrRuleAnnotation
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function matchVariable(VariableTree,VisitorState) in line 78
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable BUG_PATTERN_MATCHER in line 73
   variable enclosingClassRunsWithJMockTestRunner in line 66
   variable fieldHasRuleAnnotation in line 63
   variable fieldIsMockery in line 59
   variable JMOCK_TEST_RUNNER_CLASS in line 57
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/JUnit3TestNotRun.java
module com::google::errorprone::bugpatterns::JUnit3TestNotRun
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function matchMethod(MethodTree,VisitorState) in line 89
      protection public
      29 lines of code
      2 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable MISSPELLED_NAME in line 73
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRun.java
module com::google::errorprone::bugpatterns::JUnit4SetUpNotRun
   inherits from com::google::errorprone::bugpatterns::AbstractJUnit4InitMethodNotRun
   function annotationReplacements() in line 72
      5 lines of code
      0 parameters
      1 conditional paths
   function correctAnnotation() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
   function methodMatcher() in line 62
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRun.java
module com::google::errorprone::bugpatterns::JUnit4TearDownNotRun
   inherits from com::google::errorprone::bugpatterns::AbstractJUnit4InitMethodNotRun
   function annotationReplacements() in line 72
      5 lines of code
      0 parameters
      1 conditional paths
   function correctAnnotation() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
   function methodMatcher() in line 62
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/JUnit4TestNotRun.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRun
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function matchMethod(MethodTree,VisitorState) in line 67
      protection public
      35 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable isJUnit4TestClass in line 57
   variable JUNIT4_TEST_ANNOTATION in line 56
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/JUnitAmbiguousTestClass.java
module com::google::errorprone::bugpatterns::JUnitAmbiguousTestClass
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function matchClass(ClassTree,VisitorState) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable matcher in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffix.java
module com::google::errorprone::bugpatterns::LongLiteralLowerCaseSuffix
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::LiteralTreeMatcher
   function getLongLiteral(LiteralTree,VisitorState) in line 73
      14 lines of code
      2 parameters
      3 conditional paths
      uses function getSourceCode() defined in com::google::errorprone::VisitorState
   function matchLiteral(LiteralTree,VisitorState) in line 89
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable LONG_LITERAL_PATTERN in line 66
   variable matcher in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/MalformedFormatString.java
module com::google::errorprone::bugpatterns::MalformedFormatString
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function getFormatterType(Type) in line 119
      5 lines of code
      1 parameters
      1 conditional paths
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 126
      protection public
      56 lines of code
      2 parameters
      10 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getEndPosition(JCTree) defined in com::google::errorprone::VisitorState
   variable BOXED_TYPE_NAMES in line 99
   variable EXTRA_ARGUMENTS_MESSAGE in line 68
   variable isPrintfLike in line 71
   variable isPrintfLikeWithLocale in line 85
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitch.java
module com::google::errorprone::bugpatterns::MissingCasesInEnumSwitch
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::SwitchTreeMatcher
   function buildFixes(SwitchTree,VisitorState,Set< String >,Builder) in line 86
      22 lines of code
      4 parameters
      2 conditional paths
      uses function getEndPosition(JCTree) defined in com::google::errorprone::VisitorState
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   function buildMessage(Set< String >) in line 118
      23 lines of code
      1 parameters
      4 conditional paths
   function collectEnumSwitchCases(SwitchTree) in line 143
      10 lines of code
      1 parameters
      3 conditional paths
   function hasDefaultCase(SwitchTree) in line 155
      8 lines of code
      1 parameters
      3 conditional paths
   function isDefaultCase(CaseTree) in line 165
      3 lines of code
      1 parameters
      1 conditional paths
   function matchSwitch(SwitchTree,VisitorState) in line 63
      protection public
      21 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function setMessage(String) defined in com::google::errorprone::matchers::Description::Builder
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/MissingFail.java
module com::google::errorprone::bugpatterns::MissingFail
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::TryTreeMatcher
   function anyCatchBlockMatches(TryTree,VisitorState,Matcher< Tree >) in line 350
      8 lines of code
      3 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function exceptionToString(TryTree) in line 242
      10 lines of code
      1 parameters
      3 conditional paths
   function hasAssertInCatch(TryTree,VisitorState) in line 337
      3 lines of code
      2 parameters
      1 conditional paths
   function hasBooleanAssertVariableInCatch(TryTree,VisitorState) in line 288
      3 lines of code
      2 parameters
      1 conditional paths
   function hasContinue(TryTree,VisitorState) in line 308
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function hasExpectedException(TryTree) in line 341
      8 lines of code
      1 parameters
      3 conditional paths
   function hasFieldAssignmentInCatch(TryTree,VisitorState) in line 296
      3 lines of code
      2 parameters
      1 conditional paths
   function hasFinally(TryTree) in line 304
      3 lines of code
      1 parameters
      1 conditional paths
   function hasThrowOrFail(TryTree,VisitorState) in line 333
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function hasWhileTrue(TryTree,VisitorState) in line 280
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function isInapplicableExceptionType(TryTree,VisitorState) in line 316
      8 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function isInClass(TryTree,VisitorState,Matcher< ClassTree >) in line 284
      3 lines of code
      3 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function isInInapplicableMethod(TryTree,VisitorState) in line 329
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function isInLoop(VisitorState,TryTree) in line 312
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(TryTree,VisitorState) defined in com::google::errorprone::bugpatterns::MissingFail::InLoopMatcher
   function lastTryStatementIsAssert(TryTree,VisitorState) in line 292
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in Matcher< T >
   function logsInCatch(VisitorState,TryTree) in line 300
      3 lines of code
      2 parameters
      1 conditional paths
   function matchTry(TryTree,VisitorState) in line 218
      protection public
      19 lines of code
      2 parameters
      2 conditional paths
      uses function postfixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function removeStaticImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addStaticImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function returnsInTryCatchOrAfter(TryTree,VisitorState) in line 325
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::NextStatement
   function tryTreeMatches(TryTree,VisitorState) in line 253
      26 lines of code
      2 parameters
      5 conditional paths
   variable ASSERT_CALL in line 152
   variable ASSERT_EQUALS in line 113
   variable ASSERT_FALSE in line 124
   variable ASSERT_FALSE_FALSE in line 137
   variable ASSERT_FALSE_TRUE in line 131
   variable ASSERT_IN_BLOCK in line 163
   variable ASSERT_LAST_CALL_IN_TRY in line 159
   variable ASSERT_TRUE in line 120
   variable ASSERT_TRUE_FALSE in line 128
   variable ASSERT_TRUE_TRUE in line 134
   variable ASSERT_UNEQUAL in line 117
   variable BOOLEAN_ASSERT_VAR in line 204
   variable BOOLEAN_ASSERT_VAR_IN_BLOCK in line 208
   variable CONTINUE_IN_BLOCK in line 196
   variable FAIL in line 149
   variable FAIL_PATTERN in line 148
   variable FIELD_ASSIGNMENT in line 199
   variable FIELD_ASSIGNMENT_IN_BLOCK in line 201
   variable IN_LOOP in line 191
   variable INAPPLICABLE_EXCEPTION in line 185
   variable JAVA_ASSERT_FALSE in line 141
   variable JUNIT3_TEST_CLASS in line 212
   variable LOG_CALL in line 144
   variable LOG_IN_BLOCK in line 145
   variable NON_TEST_METHOD in line 178
   variable REAL_ASSERT_CALL in line 154
   variable RETURN_AFTER in line 182
   variable RETURN_IN_BLOCK in line 180
   variable TEST_CLASS in line 214
   variable THROW_OR_FAIL_IN_BLOCK in line 167
   variable THROW_STATEMENT in line 166
   variable VERIFY_CALL in line 157
   variable WHILE_TRUE_IN_BLOCK in line 193
module com::google::errorprone::bugpatterns::MissingFail::AssertMethodMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function matches(ExpressionTree,VisitorState) in line 362
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::MissingFail::LogMethodMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function matches(ExpressionTree,VisitorState) in line 371
      protection public
      18 lines of code
      2 parameters
      6 conditional paths
module com::google::errorprone::bugpatterns::MissingFail::InLoopMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function matches(TryTree,VisitorState) in line 397
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
module com::google::errorprone::bugpatterns::MissingFail::WhileTrueLoopMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function matches(WhileLoopTree,VisitorState) in line 408
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::MissingFail::IgnoredEnclosingMethodMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function matches(TryTree,VisitorState) in line 421
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable looksLikeJUnit3SetUp defined in com::google::errorprone::matchers::JUnitMatchers
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable looksLikeJUnit3TearDown defined in com::google::errorprone::matchers::JUnitMatchers
module com::google::errorprone::bugpatterns::MissingFail::UnequalIntegerLiteralMatcher
   inherits from com::google::errorprone::matchers::MultiMatcher
   function getMatchingNode() in line 471
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matches(MethodInvocationTree,VisitorState) in line 449
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function matches(List<?extends ExpressionTree >) in line 454
      15 lines of code
      1 parameters
      5 conditional paths
   function UnequalIntegerLiteralMatcher(Matcher< ExpressionTree >) in line 444
      3 lines of code
      1 parameters
      1 conditional paths
   variable methodSelectMatcher in line 442
module com::google::errorprone::bugpatterns::MissingFail::ChildOfTryMatcher
   inherits from com::google::errorprone::matchers::ChildMultiMatcher
   function getChildNodes(TryTree,VisitorState) in line 483
      3 lines of code
      2 parameters
      1 conditional paths
   function ChildOfTryMatcher(MatchType,Matcher< Tree >) in line 478
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/MissingOverride.java
module com::google::errorprone::bugpatterns::MissingOverride
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function getFirstOverride(Symbol,Types) in line 85
      21 lines of code
      2 parameters
      7 conditional paths
   function matchMethod(MethodTree,VisitorState) in line 50
      protection public
      30 lines of code
      2 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/MisusedWeekYear.java
module com::google::errorprone::bugpatterns::MisusedWeekYear
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   function constructDescription(Tree,ExpressionTree) in line 134
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 105
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchNewClass(NewClassTree,VisitorState) in line 120
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable applyPatternMatcher in line 91
   variable ICU_SIMPLE_DATE_FORMAT in line 65
   variable JAVA_SIMPLE_DATE_FORMAT in line 64
   variable simpleDateFormatConstructorMatcher in line 67
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/MockitoCast.java
module com::google::errorprone::bugpatterns::MockitoCast
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   function matchCompilationUnit(CompilationUnitTree,final VisitorState) in line 80
      protection public
      27 lines of code
      2 parameters
      9 conditional paths
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
   variable BAD_ANSWER_STRATEGIES in line 76
   variable MOCK_ANNOTATION in line 73
   variable MOCKITO_CLASS in line 69
   variable UI_FIELD_ANNOTATION in line 71
   variable WHEN_MATCHER in line 171
module com::google::errorprone::bugpatterns::MockitoCast::MockInitializationScanner
   inherits from com::sun::source::util::TreeScanner
   function recordInitialization(Tree,ExpressionTree) in line 139
      30 lines of code
      2 parameters
      1 conditional paths
   function visitAssignment(AssignmentTree,Void) in line 134
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitVariable(VariableTree,Void) in line 128
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function MockInitializationScanner(Set< Symbol >) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable badAnswers in line 121
   variable mockVariables in line 120
module com::google::errorprone::bugpatterns::MockitoCast::WhenNeedsCastScanner
   inherits from com::sun::source::util::TreePathScanner
   function matchMethodInvocation(MethodInvocationTree,final VisitorState) in line 194
      protection public
      46 lines of code
      2 parameters
      1 conditional paths
   function visitMethodInvocation(MethodInvocationTree,Void) in line 186
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::MockitoCast::MockAnswerStrategyScanner
   inherits from com::sun::source::util::TreeScanner
   function reduce(Boolean,Boolean) in line 285
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function scan(Tree,Void) in line 264
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
   function MockAnswerStrategyScanner(VisitorState,Set< VarSymbol >) in line 258
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable badMocks in line 256
   variable state in line 255
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/MockitoUsage.java
module com::google::errorprone::bugpatterns::MockitoUsage
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function buildFix(Description.Builder,MethodInvocationTree,VisitorState) in line 89
      33 lines of code
      3 parameters
      4 conditional paths
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function addStaticImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 66
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
      uses function setMessage(String) defined in com::google::errorprone::matchers::Description::Builder
   variable MESSAGE_FORMAT in line 52
   variable MOCK_METHOD in line 54
   variable NEVER_METHOD in line 62
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItself.java
module com::google::errorprone::bugpatterns::ModifyingCollectionWithItself
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function describe(MethodInvocationTree,VisitorState) in line 99
      protection public
      90 lines of code
      2 parameters
      17 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function toString(JCCompilationUnit) defined in com::google::errorprone::fixes::Fix
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 71
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/MultipleTopLevelClasses.java
module com::google::errorprone::bugpatterns::MultipleTopLevelClasses
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   function matchCompilationUnit(CompilationUnitTree,VisitorState) in line 54
      protection public
      47 lines of code
      2 parameters
      11 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignment.java
module com::google::errorprone::bugpatterns::NarrowingCompoundAssignment
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompoundAssignmentTreeMatcher
   function matchCompoundAssignment(CompoundAssignmentTree,VisitorState) in line 130
      protection public
      37 lines of code
      2 parameters
      8 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   variable DEFICIENT_TYPES in line 63
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NoAllocationChecker.java
module com::google::errorprone::bugpatterns::NoAllocationChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AssignmentTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompoundAssignmentTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::EnhancedForLoopTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::NewArrayTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::TypeCastTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::UnaryTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function matchAssignment(AssignmentTree,VisitorState) in line 457
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchBinary(BinaryTree,VisitorState) in line 425
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchCompoundAssignment(CompoundAssignmentTree,VisitorState) in line 435
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchEnhancedForLoop(EnhancedForLoopTree,VisitorState) in line 446
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 413
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchNewArray(NewArrayTree,VisitorState) in line 393
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchNewClass(NewClassTree,VisitorState) in line 403
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchReturn(ReturnTree,VisitorState) in line 490
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchTypeCast(TypeCastTree,VisitorState) in line 479
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchUnary(UnaryTree,VisitorState) in line 501
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchVariable(VariableTree,VisitorState) in line 468
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable ALL_COMPOUND_OPERATORS in line 167
   variable anyExpression in line 153
   variable anyStatement in line 155
   variable anyVariable in line 157
   variable arrayExpression in line 161
   variable boxingAssignment in line 279
   variable boxingCast in line 300
   variable boxingInitialization in line 289
   variable boxingInvocation in line 324
   variable boxingReturn in line 310
   variable boxingUnary in line 375
   variable COMMON_MESSAGE_SUFFIX in line 144
   variable compoundAssignmentMatcher in line 254
   variable foreachMatcher in line 265
   variable isString in line 159
   variable methodMatcher in line 233
   variable newArrayMatcher in line 214
   variable newClassMatcher in line 223
   variable noAllocationMethodInvocationMatcher in line 150
   variable noAllocationMethodMatcher in line 147
   variable primitiveArrayExpression in line 165
   variable primitiveExpression in line 163
   variable stringConcatenationMatcher in line 243
   variable withinThrowOrAnnotation in line 187
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdate.java
module com::google::errorprone::bugpatterns::NonAtomicVolatileUpdate
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::UnaryTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompoundAssignmentTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::AssignmentTreeMatcher
   function assignmentIncrementDecrementMatcher(ExpressionTree) in line 160
      18 lines of code
      1 parameters
      1 conditional paths
   function expressionFromUnaryTree(final Matcher< ExpressionTree >) in line 75
      9 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function matchAssignment(AssignmentTree,VisitorState) in line 180
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchCompoundAssignment(CompoundAssignmentTree,VisitorState) in line 149
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchUnary(UnaryTree,VisitorState) in line 127
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function variableFromAssignmentTree(final Matcher< ExpressionTree >) in line 101
      9 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function variableFromCompoundAssignmentTree(final Matcher< ExpressionTree >) in line 88
      9 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable compoundAssignmentIncrementDecrementMatcher in line 138
   variable unaryIncrementDecrementMatcher in line 115
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImport.java
module com::google::errorprone::bugpatterns::NonCanonicalStaticImport
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ImportTreeMatcher
   function matchImport(ImportTree,VisitorState) in line 43
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImport.java
module com::google::errorprone::bugpatterns::NonCanonicalStaticMemberImport
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ImportTreeMatcher
   function matchImport(ImportTree,VisitorState) in line 47
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstant.java
module com::google::errorprone::bugpatterns::NonFinalCompileTimeConstant
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function matchMethod(MethodTree,VisitorState) in line 62
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function maybeFix(Builder,VariableTree,VarSymbol) in line 84
      17 lines of code
      3 parameters
      5 conditional paths
      uses function postfixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NonOverridingEquals.java
module com::google::errorprone::bugpatterns::NonOverridingEquals
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function matchMethod(MethodTree,VisitorState) in line 104
      protection public
      64 lines of code
      2 parameters
      7 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function findEnclosing(Class<?extends T >...) defined in com::google::errorprone::VisitorState
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable enclosingClassOverridesEquals in line 81
   variable MATCHER in line 73
   variable MESSAGE_BASE in line 65
   variable noFixMatcher in line 98
module com::google::errorprone::bugpatterns::NonOverridingEquals::CastState
   function CastState(Name,String,SuggestedFix.Builder) in line 174
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::NonOverridingEquals::CastScanner
   inherits from com::sun::source::util::TreeScanner
   function visitIdentifier(IdentifierTree,CastState) in line 187
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotation.java
module com::google::errorprone::bugpatterns::NonRuntimeAnnotation
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 49
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NullableConstructor.java
module com::google::errorprone::bugpatterns::NullableConstructor
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getAnnotatedNode(VisitorState) in line 61
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchAnnotation(AnnotationTree,VisitorState) in line 45
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NullablePrimitive.java
module com::google::errorprone::bugpatterns::NullablePrimitive
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getAnnotatedNode(VisitorState) in line 78
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchAnnotation(AnnotationTree,VisitorState) in line 55
      protection public
      22 lines of code
      2 parameters
      6 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable IS_PRIMITIVE_TYPE_MATCHER in line 50
   variable METHOD_RETURNS_NON_PRIMITIVE_TYPE_MATCHER in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NullableVoid.java
module com::google::errorprone::bugpatterns::NullableVoid
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getAnnotatedNode(VisitorState) in line 73
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function matchAnnotation(AnnotationTree,VisitorState) in line 51
      protection public
      21 lines of code
      2 parameters
      6 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/NumericEquality.java
module com::google::errorprone::bugpatterns::NumericEquality
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function isFinal(Symbol) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function matchBinary(BinaryTree,VisitorState) in line 61
      protection public
      31 lines of code
      2 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable MATCHER in line 56
      protection public
   variable SUBCLASS_OF_NUMBER in line 54
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/OptionalEquality.java
module com::google::errorprone::bugpatterns::OptionalEquality
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function getNullness(ExpressionTree,VisitorState) in line 101
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function getNullness(TreePath,Context) defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis
      uses variable context defined in com::google::errorprone::VisitorState
   function isOptionalType(Type,VisitorState) in line 106
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getTypeFromString(String) defined in com::google::errorprone::VisitorState
   function matchBinary(BinaryTree,VisitorState) in line 57
      protection public
      19 lines of code
      2 parameters
      7 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable nullnessAnalysis in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/Overrides.java
module com::google::errorprone::bugpatterns::Overrides
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function matchMethod(MethodTree,VisitorState) in line 54
      protection public
      56 lines of code
      2 parameters
      9 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/package-info.java
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/fixes/package-info.java
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/package-info.java
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/suppliers/package-info.java
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/util/package-info.java
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/PackageLocation.java
module com::google::errorprone::bugpatterns::PackageLocation
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   function getFilePath(URI) in line 86
      11 lines of code
      1 parameters
      3 conditional paths
   function matchCompilationUnit(CompilationUnitTree,VisitorState) in line 57
      protection public
      26 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNull.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNull
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 61
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
   variable matcher in line 56
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitive.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitive
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function createCheckArgumentOrStateCall(MethodInvocationTree,VisitorState,ExpressionTree) in line 148
      24 lines of code
      3 parameters
      3 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function describe(MethodInvocationTree,VisitorState) in line 111
      protection public
      32 lines of code
      2 parameters
      6 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function hasMethodParameter(TreePath,ExpressionTree) in line 183
      25 lines of code
      2 parameters
      8 conditional paths
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 85
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsExpensiveString.java
module com::google::errorprone::bugpatterns::PreconditionsExpensiveString
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 77
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable matcher in line 64
module com::google::errorprone::bugpatterns::PreconditionsExpensiveString::StringFormatCallContainsNoSpecialFormattingMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function matches(ExpressionTree,VisitorState) in line 106
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
   variable invalidFormatCharacters in line 98
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholder.java
module com::google::errorprone::bugpatterns::PreconditionsInvalidPlaceholder
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function describe(MethodInvocationTree,VisitorState) in line 93
      protection public
      20 lines of code
      2 parameters
      3 conditional paths
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   function expectedArguments(String) in line 59
      7 lines of code
      1 parameters
      2 conditional paths
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 68
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable BAD_PLACEHOLDER_REGEX in line 90
   variable PRECONDITIONS_CHECK in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethod.java
module com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethod
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable isVarargs in line 63
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparison.java
module com::google::errorprone::bugpatterns::ProtoFieldNullComparison
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function getMethodName(ExpressionTree) in line 92
      6 lines of code
      1 parameters
      1 conditional paths
   function isFieldGetMethod(String) in line 88
      3 lines of code
      1 parameters
      1 conditional paths
   function isGetListMethodInvocation(ExpressionTree,VisitorState) in line 99
      19 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function isGetMethodInvocation(ExpressionTree,VisitorState) in line 119
      19 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function isNull(ExpressionTree) in line 79
      3 lines of code
      1 parameters
      1 conditional paths
   function isProtoMessageGetInvocation(ExpressionTree,VisitorState) in line 83
      4 lines of code
      2 parameters
      1 conditional paths
   function receiverIsProtoMessage(ExpressionTree,VisitorState) in line 139
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function replaceLast(String,String,String) in line 143
      5 lines of code
      3 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable COMPARISON_OPERATORS in line 63
   variable LIST_INTERFACE in line 58
   variable MATCHER in line 66
   variable PROTO_SUPER_CLASS in line 53
   variable protoMessageReceiverMatcher in line 55
   variable returnsListMatcher in line 60
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNull.java
module com::google::errorprone::bugpatterns::ProtoFieldPreconditionsCheckNotNull
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function isFieldGetMethod(String) in line 89
      3 lines of code
      1 parameters
      1 conditional paths
   function isGetListMethodInvocation(ExpressionTree,VisitorState) in line 93
      19 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function isGetMethodInvocation(ExpressionTree,VisitorState) in line 113
      19 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function isProtoMessageGetInvocation(ExpressionTree,VisitorState) in line 84
      4 lines of code
      2 parameters
      1 conditional paths
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 138
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
   function receiverIsProtoMessage(ExpressionTree,VisitorState) in line 133
      3 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable CHECK_NOT_NULL_MATCHER in line 78
   variable LIST_INTERFACE in line 64
   variable PROTO_MESSAGE_INVOCATION_MATCHER in line 69
   variable PROTO_SUPER_CLASS in line 59
   variable protoMessageReceiverMatcher in line 61
   variable returnsListMatcher in line 66
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ProtoStringFieldReferenceEquality.java
module com::google::errorprone::bugpatterns::ProtoStringFieldReferenceEquality
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function matchBinary(BinaryTree,VisitorState) in line 53
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable PROTO_STRING_METHOD in line 48
   variable PROTO_SUPER_CLASS in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/RequiredModifiersChecker.java
module com::google::errorprone::bugpatterns::RequiredModifiersChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function getRequiredModifiers(AnnotationTree,VisitorState) in line 74
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
      uses function value() defined in com::google::errorprone::annotations::RequiredModifiers
   function matchAnnotation(AnnotationTree,VisitorState) in line 94
      protection public
      29 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
   variable GUAVA_ANNOTATION in line 63
   variable MESSAGE_TEMPLATE in line 59
   variable TO_MODIFIER in line 66
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/ReturnValueIgnored.java
module com::google::errorprone::bugpatterns::ReturnValueIgnored
   inherits from com::google::errorprone::bugpatterns::AbstractReturnValueIgnored
   function methodReceiverHasType(final Set< String >) in line 86
      9 lines of code
      1 parameters
      1 conditional paths
   function methodReturnsSameTypeAsReceiver() in line 73
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function specializedMatcher() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable typesToCheck in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/SelfAssignment.java
module com::google::errorprone::bugpatterns::SelfAssignment
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AssignmentTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function describeForAssignment(AssignmentTree,VisitorState) in line 152
      protection public
      100 lines of code
      2 parameters
      18 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function toString(JCCompilationUnit) defined in com::google::errorprone::fixes::Fix
   function describeForVarDecl(VariableTree,VisitorState) in line 123
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
   function matchAssignment(AssignmentTree,VisitorState) in line 78
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchVariable(VariableTree,VisitorState) in line 87
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function stripCheckNotNull(ExpressionTree,VisitorState) in line 113
      9 lines of code
      2 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/SelfEquality.java
module com::google::errorprone::bugpatterns::SelfEquality
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function matchBinary(BinaryTree,VisitorState) in line 63
      protection public
      92 lines of code
      2 parameters
      16 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
      uses function getPath() defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/SelfEquals.java
module com::google::errorprone::bugpatterns::SelfEquals
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function describe(MethodInvocationTree,VisitorState) in line 137
      protection public
      63 lines of code
      2 parameters
      13 conditional paths
      uses variable NONE defined in com::google::errorprone::bugpatterns::SelfEquals::MatchState
      uses variable OBJECTS_EQUAL defined in com::google::errorprone::bugpatterns::SelfEquals::MatchState
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 125
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable OBJECTS_EQUAL defined in com::google::errorprone::bugpatterns::SelfEquals::MatchState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable EQUALS defined in com::google::errorprone::bugpatterns::SelfEquals::MatchState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function SelfEquals() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SelfEquals(boolean,boolean) in line 116
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   variable checkEquals in line 103
   variable checkGuava in line 98
   variable equalsMatcher in line 80
   variable guavaMatcher in line 67
   variable matchState in line 87
module com::google::errorprone::bugpatterns::SelfEquals::MatchState
   variable EQUALS in line 93
      protection public
   variable NONE in line 90
      protection public
   variable OBJECTS_EQUAL in line 91
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZero.java
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function anyOfIterable(Iterable< Matcher< T >>) in line 269
      14 lines of code
      1 parameters
      3 conditional paths
   function arrayLengthMatcher() in line 190
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function buildInstanceMethodMatcher() in line 134
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable LENGTH defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::MethodName
      uses variable SIZE defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::MethodName
   function buildStaticMethodMatcher() in line 145
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable SIZE defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::MethodName
      uses variable LENGTH defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::MethodName
   function classHasIsEmptyFunction() in line 177
      12 lines of code
      0 parameters
      3 conditional paths
   function isGreaterThanEqualToZero(BinaryTree) in line 242
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable GREATER_THAN_EQUAL defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::ExpressionType
      uses variable LESS_THAN_EQUAL defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::ExpressionType
      uses variable MISMATCH defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::ExpressionType
   function isSubtypeOfAny(Iterable< String >) in line 165
      9 lines of code
      1 parameters
      1 conditional paths
   function matchBinary(BinaryTree,VisitorState) in line 109
      protection public
      24 lines of code
      2 parameters
      7 conditional paths
      uses variable MISMATCH defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::ExpressionType
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses variable GREATER_THAN_EQUAL defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::ExpressionType
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function provideReplacementForMethodInvocation(BinaryTree,MethodInvocationTree,VisitorState,ExpressionType) in line 198
      12 lines of code
      4 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   function provideReplacementForStaticMethodInvocation(BinaryTree,MethodInvocationTree,final VisitorState,ExpressionType) in line 211
      22 lines of code
      4 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   function removeEqualsFromComparison(BinaryTree,VisitorState,ExpressionType) in line 234
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable GREATER_THAN_EQUAL defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::ExpressionType
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   function staticMethodMatcher(Iterable< String >,final String) in line 154
      10 lines of code
      2 parameters
      1 conditional paths
   variable ARRAY_LENGTH_MATCHER in line 104
   variable CLASSES in line 80
   variable HAS_EMPTY_METHOD in line 105
   variable INSTANCE_METHOD_MATCHER in line 100
   variable STATIC_CLASSES in line 95
   variable STATIC_METHOD_MATCHER in line 102
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::MethodName
   variable LENGTH in line 74
      protection public
   variable SIZE in line 74
      protection public
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZero::ExpressionType
   variable GREATER_THAN_EQUAL in line 76
      protection public
   variable LESS_THAN_EQUAL in line 76
      protection public
   variable MISMATCH in line 76
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstance.java
module com::google::errorprone::bugpatterns::StaticAccessedFromInstance
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MemberSelectTreeMatcher
   function matchMemberSelect(MemberSelectTree,VisitorState) in line 67
      protection public
      55 lines of code
      2 parameters
      6 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   variable MESSAGE_TEMPLATE in line 56
   variable staticAccessedFromInstanceMatcher in line 59
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/StaticImports.java
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/StringBuilderInitWithChar.java
module com::google::errorprone::bugpatterns::StringBuilderInitWithChar
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   function matchNewClass(NewClassTree,VisitorState) in line 49
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/StringEquality.java
module com::google::errorprone::bugpatterns::StringEquality
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::BinaryTreeMatcher
   function considerOneOf(final T,final T,final HandleChoice< T, R >) in line 134
      4 lines of code
      3 parameters
      1 conditional paths
      uses function apply(T,T) defined in com::google::errorprone::bugpatterns::StringEquality::HandleChoice
   function isNonNull(ExpressionTree,VisitorState) in line 139
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function getNullness(TreePath,Context) defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis
      uses variable context defined in com::google::errorprone::VisitorState
   function matchBinary(BinaryTree,final VisitorState) in line 86
      protection public
      43 lines of code
      2 parameters
      5 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function methodCall(ExpressionTree,String,ExpressionTree...) in line 149
      21 lines of code
      3 parameters
      4 conditional paths
   variable MATCHER in line 80
      protection public
   variable nullnessAnalysis in line 56
   variable STRING_OPERANDS in line 63
module com::google::errorprone::bugpatterns::StringEquality::HandleChoice
   function apply(T,T) in line 131
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecated.java
module com::google::errorprone::bugpatterns::SuppressWarningsDeprecated
   inherits from com::google::errorprone::bugpatterns::AbstractSuppressWarningsMatcher
   function matchAnnotation(AnnotationTree,VisitorState) in line 57
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function processSuppressWarningsValues(List< String >) in line 65
      7 lines of code
      1 parameters
      3 conditional paths
   variable matcher in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/AbstractLockMethodChecker.java
module com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   abstract class
   function buildMessage(String) in line 66
      1 lines of code
      1 parameters
      1 conditional paths
   function formatLockString(Set< GuardedByExpression >) in line 101
      6 lines of code
      1 parameters
      1 conditional paths
   function getActual(MethodTree,VisitorState) in line 55
      1 lines of code
      2 parameters
      1 conditional paths
   function getLockExpressions(MethodTree) in line 50
      1 lines of code
      1 parameters
      1 conditional paths
   function getUnwanted(MethodTree,VisitorState) in line 61
      1 lines of code
      2 parameters
      1 conditional paths
   function matchMethod(MethodTree,final VisitorState) in line 69
      protection public
      31 lines of code
      2 parameters
      5 conditional paths
      uses function getLockExpressions(MethodTree) defined in com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function parseLockExpressions(List< String >,Tree,VisitorState) defined in com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
      uses function buildDescription(Tree) defined in com::google::errorprone::bugpatterns::BugChecker
      uses function getUnwanted(MethodTree,VisitorState) defined in com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
      uses function message() defined in com::google::errorprone::bugpatterns::BugChecker
      uses function buildMessage(String) defined in com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
      uses function formatLockString(Set< GuardedByExpression >) defined in com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
      uses function getActual(MethodTree,VisitorState) defined in com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
   function parseLockExpressions(List< String >,Tree,VisitorState) in line 108
      13 lines of code
      3 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLocking.java
module com::google::errorprone::bugpatterns::threadsafety::DoubleCheckedLocking
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::IfTreeMatcher
   function findFieldDeclaration(TreePath,VarSymbol) in line 322
      14 lines of code
      2 parameters
      5 conditional paths
   function getChild(StatementTree,final Class< T >) in line 285
      28 lines of code
      2 parameters
      4 conditional paths
   function getNullCheckedExpression(ExpressionTree) in line 264
      16 lines of code
      1 parameters
      4 conditional paths
   function handleField(IfTree,VarSymbol,VisitorState) in line 94
      17 lines of code
      3 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
   function handleLocal(DCLInfo,VisitorState) in line 167
      22 lines of code
      2 parameters
      12 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function isImmutable(Type,VisitorState) in line 126
      19 lines of code
      2 parameters
      9 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function matchIf(IfTree,VisitorState) in line 73
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable IMMUTABLE_WHITELIST in line 112
module com::google::errorprone::bugpatterns::threadsafety::DoubleCheckedLocking::DCLInfo
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinder.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByBinder
   function bind(JCTree.JCExpression,BinderContext) in line 104
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable BINDER defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByBinder
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses variable TYPE_LITERAL defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   function bindExpression(JCTree.JCExpression,VisitorState) in line 53
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function bind(JCTree.JCExpression,BinderContext) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByBinder
      uses function of(Resolver,ClassSymbol,Types,Names) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByBinder::BinderContext
      uses function findEnclosing(Class<?extends T >...) defined in com::google::errorprone::VisitorState
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses variable context defined in com::google::errorprone::VisitorState
      uses variable context defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses variable enclosingClass defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   variable BINDER in line 172
   variable F in line 170
module com::google::errorprone::bugpatterns::threadsafety::GuardedByBinder::BinderContext
   function of(Resolver,ClassSymbol,Types,Names) in line 98
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function BinderContext(Resolver,ClassSymbol,Types,Names) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByBinder::BinderContext
   function BinderContext(Resolver,ClassSymbol,Types,Names) in line 91
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::threadsafety::GuardedByBinder::Resolver
   function resolveEnclosingClass(ExpressionTree) in line 131
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function resolveIdentifier(IdentifierTree) in line 120
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function resolveMethod(MethodInvocationTree,Name) in line 122
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function resolveMethod(MethodInvocationTree,GuardedByExpression,Name) in line 124
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function resolveSelect(GuardedByExpression,MemberSelectTree) in line 127
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function resolveTypeLiteral(ExpressionTree) in line 129
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByChecker.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByChecker
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByValidator
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function buildMessage(GuardedByExpression,HeldLockSet) in line 125
      40 lines of code
      2 parameters
      6 conditional paths
      uses function sym() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function base() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Select
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses enumvalue ERROR defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   function checkGuardedAccess(Tree,GuardedByExpression,HeldLockSet,VisitorState) in line 86
      29 lines of code
      4 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses enumvalue ERROR defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   function enclosingInstance(GuardedByExpression) in line 177
      9 lines of code
      1 parameters
      3 conditional paths
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses variable SELECT defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
      uses variable THIS defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   function findOuterInstance(GuardedByExpression) in line 166
      10 lines of code
      1 parameters
      3 conditional paths
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses variable SELECT defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
      uses function sym() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function base() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Select
   function isRWLock(GuardedByExpression,VisitorState) in line 191
      13 lines of code
      2 parameters
      3 conditional paths
      uses function type() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function matchMethod(MethodTree,final VisitorState) in line 56
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function checkGuardedAccess(Tree,GuardedByExpression,HeldLockSet,VisitorState) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByChecker
   function matchVariable(VariableTree,VisitorState) in line 78
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function report(Description,VisitorState) in line 207
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function reportMatch(Description) defined in com::google::errorprone::VisitorState
   variable JUC_READ_WRITE_LOCK in line 53
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByExpression.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   abstract class
   function debugPrint() in line 259
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function print(GuardedByExpression) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::DebugPrinter
   function kind() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function sym() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function print(GuardedByExpression) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::PrettyPrinter
   function type() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::ClassLiteral
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   abstract class
   function create(Symbol) in line 54
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable CLASS_LITERAL defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::TypeLiteral
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   abstract class
   function create(Symbol) in line 65
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable TYPE_LITERAL defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::LocalVariable
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   abstract class
   function create(Symbol) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable LOCAL_VARIABLE defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Erroneous
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   function guardString() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function kind() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses enumvalue ERROR defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   function sym() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function type() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable guardString in line 85
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::ThisLiteral
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   function kind() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable THIS defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   function sym() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function type() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ThisLiteral() in line 135
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Select
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   abstract class
   function base() in line 144
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function create(GuardedByExpression,Symbol,Type) in line 146
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable SELECT defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
      uses function sym() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function type() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Factory
   variable syntheticOuterFields in line 157
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   variable CLASS_LITERAL in line 247
      protection public
   variable LOCAL_VARIABLE in line 249
      protection public
   variable SELECT in line 250
      protection public
   variable THIS in line 246
      protection public
   variable TYPE_LITERAL in line 248
      protection public
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::PrettyPrinter
   function pprint(GuardedByExpression,StringBuilder) in line 274
      20 lines of code
      2 parameters
      7 conditional paths
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function sym() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   function pprintSelect(Select,StringBuilder) in line 295
      23 lines of code
      2 parameters
      6 conditional paths
      uses function sym() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function base() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Select
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses variable SELECT defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
      uses variable THIS defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   function print(GuardedByExpression) in line 268
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::DebugPrinter
   function pprint(GuardedByExpression,StringBuilder) in line 330
      18 lines of code
      2 parameters
      7 conditional paths
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function sym() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   function pprintSelect(Select,StringBuilder) in line 349
      9 lines of code
      2 parameters
      2 conditional paths
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function base() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Select
      uses function sym() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   function print(GuardedByExpression) in line 324
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedBySymbolResolver.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByBinder::Resolver
   function attribIdent(String) in line 242
      5 lines of code
      1 parameters
      1 conditional paths
      uses function context() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function getName(String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses variable compilationUnit defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function context() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function enclosingClass() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function from(Tree,VisitorState) in line 58
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function from(Tree,VisitorState) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable context defined in com::google::errorprone::VisitorState
   function from(ClassSymbol,CompilationUnitTree,Context,Tree) in line 66
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function GuardedBySymbolResolver(ClassSymbol,CompilationUnitTree,Context,Tree) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses variable compilationUnit defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function context() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function getField(Symbol,String) in line 149
      3 lines of code
      2 parameters
      9 conditional paths
      uses variable types defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function getName(String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function getLexicallyEnclosing(ClassSymbol,String) in line 227
      14 lines of code
      2 parameters
      4 conditional paths
   function getMethod(Symbol,String) in line 137
      3 lines of code
      2 parameters
      1 conditional paths
   function getName(String) in line 248
      3 lines of code
      1 parameters
      1 conditional paths
      uses function context() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function getSuperType(Symbol,String) in line 218
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable types defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function resolveEnclosingClass(ExpressionTree) in line 253
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function resolveType(String,SearchSuperTypes) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses variable NO defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver::SearchSuperTypes
   function resolveIdentifier(IdentifierTree) in line 89
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
      uses function enclosingClass() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses variable decl defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function getField(Symbol,String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function resolveType(String,SearchSuperTypes) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses variable YES defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver::SearchSuperTypes
   function resolveMethod(MethodInvocationTree,javax.lang.model.element.Name) in line 123
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getMethod(Symbol,String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function enclosingClass() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function resolveMethod(MethodInvocationTree,GuardedByExpression,javax.lang.model.element.Name) in line 129
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses variable THIS defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
      uses function enclosingClass() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function type() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function getMethod(Symbol,String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function resolveSelect(GuardedByExpression,MemberSelectTree) in line 142
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses variable THIS defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
      uses function enclosingClass() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function type() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses function getField(Symbol,String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function resolveType(String,SearchSuperTypes) in line 199
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable YES defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver::SearchSuperTypes
      uses function getSuperType(Symbol,String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function enclosingClass() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function getLexicallyEnclosing(ClassSymbol,String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function attribIdent(String) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   function resolveTypeLiteral(ExpressionTree) in line 183
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function resolveType(String,SearchSuperTypes) defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses variable YES defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver::SearchSuperTypes
   function GuardedBySymbolResolver(ClassSymbol,CompilationUnitTree,Context,Tree) in line 71
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable compilationUnit defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function enclosingClass() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
      uses function context() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver
   variable compilationUnit in line 54
   variable context in line 55
   variable decl in line 53
   variable enclosingClass in line 52
   variable types in line 56
module com::google::errorprone::bugpatterns::threadsafety::GuardedBySymbolResolver::SearchSuperTypes
   variable NO in line 193
      protection public
   variable YES in line 193
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByUtils.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByUtils
   function isGuardedByValid(Tree,VisitorState) in line 86
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses variable CLASS_LITERAL defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
   function parseString(String,Context) in line 55
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
module com::google::errorprone::bugpatterns::threadsafety::GuardedByUtils::GuardedByValidationResult
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidator.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByValidator
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function matchMethod(MethodTree,final VisitorState) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function matchVariable(VariableTree,VisitorState) in line 65
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   variable MESSAGE_FORMAT in line 57
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzer.java
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer
   function analyze(VisitorState,LockEventListener) in line 89
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function handleMonitorGuards(VisitorState,HeldLockSet) defined in com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer
      uses function getPath() defined in com::google::errorprone::VisitorState
   function handleMonitorGuards(VisitorState,HeldLockSet) in line 99
      20 lines of code
      2 parameters
      5 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable MONITOR_GUARD_CLASS defined in com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer
   variable LOCK_RESOURCES in line 305
   variable MONITOR_GUARD_CLASS in line 96
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer::LockEventListener
   function handleGuardedAccess(ExpressionTree,GuardedByExpression,HeldLockSet) in line 82
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer::LockScanner
   inherits from com::sun::source::util::TreePathScanner
   function checkMatch(ExpressionTree,HeldLockSet) in line 250
      22 lines of code
      2 parameters
      4 conditional paths
      uses function handleGuardedAccess(ExpressionTree,GuardedByExpression,HeldLockSet) defined in com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer::LockEventListener
   function getSuppressionNames() in line 216
      7 lines of code
      0 parameters
      1 conditional paths
      uses function altNames() defined in com::google::errorprone::BugPattern
      uses function name() defined in com::google::errorprone::BugPattern
   function isSuppressed(Tree) in line 228
      12 lines of code
      1 parameters
      4 conditional paths
   function visitIdentifier(IdentifierTree,HeldLockSet) in line 202
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitMemberSelect(MemberSelectTree,HeldLockSet) in line 196
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitMethod(MethodTree,HeldLockSet) in line 133
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
   function visitNewClass(NewClassTree,HeldLockSet) in line 208
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitSynchronized(SynchronizedTree,HeldLockSet) in line 184
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function visitTry(TryTree,HeldLockSet) in line 159
      protection public
      23 lines of code
      2 parameters
      2 conditional paths
   function visitVariable(VariableTree,HeldLockSet) in line 242
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function LockScanner(VisitorState,LockEventListener) in line 127
      4 lines of code
      2 parameters
      1 conditional paths
   variable F in line 125
   variable listener in line 123
   variable SUPPRESSION_NAMES in line 214
   variable visitorState in line 122
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer::LockResource
   abstract class
   function createLockMatcher() in line 293
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createUnlockMatcher() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer::LockOperationFinder
   inherits from com::sun::source::util::TreeScanner
   function handleReleasedLocks(MethodInvocationTree) in line 354
      23 lines of code
      1 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function handleUnlockAnnotatedMethods(MethodInvocationTree) in line 381
      18 lines of code
      1 parameters
      10 conditional paths
      uses function value() defined in com::google::errorprone::annotations::concurrent::UnlockMethod
      uses variable LOCK_RESOURCES defined in com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer
      uses function kind() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
      uses variable SELECT defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
      uses variable THIS defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression::Kind
      uses function toString() defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByExpression
   function visitMethodInvocation(MethodInvocationTree,Void) in line 342
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function LockOperationFinder(VisitorState,Matcher< ExpressionTree >) in line 335
      5 lines of code
      2 parameters
      1 conditional paths
   variable lockOperationMatcher in line 324
   variable locks in line 333
   variable READ_WRITE_ACCESSOR_MATCHER in line 327
   variable READ_WRITE_LOCK_CLASS in line 322
   variable state in line 332
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer::ReleasedLockFinder
   function unlockMatchers() in line 411
      9 lines of code
      0 parameters
      1 conditional paths
   variable UNLOCK_MATCHER in line 408
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer::AcquiredLockFinder
   function unlockMatchers() in line 436
      9 lines of code
      0 parameters
      1 conditional paths
   variable LOCK_MATCHER in line 433
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzer::ExpectedLockCalculator
   function getSelectInstance(GuardedByExpression) in line 522
      6 lines of code
      1 parameters
      1 conditional paths
   function helper(GuardedByExpression,GuardedByExpression) in line 529
      13 lines of code
      2 parameters
      1 conditional paths
   function isGuardReferenceAbsolute(GuardedByExpression) in line 510
      8 lines of code
      1 parameters
      1 conditional paths
   variable F in line 453
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockSet.java
module com::google::errorprone::bugpatterns::threadsafety::HeldLockSet
   function allLocks() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function plus(GuardedByExpression) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function plusAll(Collection< GuardedByExpression >) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function HeldLockSet() in line 39
      3 lines of code
      0 parameters
      1 conditional paths
   function HeldLockSet(PSet< GuardedByExpression >) in line 43
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/IllegalGuardedBy.java
module com::google::errorprone::bugpatterns::threadsafety::IllegalGuardedBy
   inherits from RuntimeException
   function checkGuardedBy(boolean,String) in line 32
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function IllegalGuardedBy(String) defined in com::google::errorprone::bugpatterns::threadsafety::IllegalGuardedBy
   function checkGuardedBy(boolean,String,Object...) in line 41
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
      uses function IllegalGuardedBy(String) defined in com::google::errorprone::bugpatterns::threadsafety::IllegalGuardedBy
   function toString() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IllegalGuardedBy(String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableAnnotationInfo.java
module com::google::errorprone::bugpatterns::threadsafety::ImmutableAnnotationInfo
   abstract class
   function containerOf() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function create(String,Iterable< String >) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function typeName() defined in com::google::errorprone::bugpatterns::threadsafety::ImmutableAnnotationInfo
      uses function containerOf() defined in com::google::errorprone::bugpatterns::threadsafety::ImmutableAnnotationInfo
   function create(String) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(String,Iterable< String >) defined in com::google::errorprone::bugpatterns::threadsafety::ImmutableAnnotationInfo
      uses function typeName() defined in com::google::errorprone::bugpatterns::threadsafety::ImmutableAnnotationInfo
   function typeName() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableChecker.java
module com::google::errorprone::bugpatterns::threadsafety::ImmutableChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function areFieldsImmutable(Optional< ClassTree >,ImmutableSet< String >,ClassType,VisitorState) in line 253
      40 lines of code
      4 parameters
      6 conditional paths
   function checkFieldsAndSupertypesForImmutability(Optional< ClassTree >,ImmutableSet< String >,ClassType,VisitorState) in line 187
      59 lines of code
      4 parameters
      9 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function checkSubtype(ClassTree,VisitorState) in line 509
      19 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function getPrettyName(Symbol,VisitorState) in line 632
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function handleAnonymousClass(ClassTree,VisitorState) in line 475
      30 lines of code
      2 parameters
      4 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function immutableInstantiation(ImmutableSet< String >,ImmutableAnnotationInfo,Type,VisitorState) in line 356
      28 lines of code
      4 parameters
      5 conditional paths
      uses function containerOf() defined in com::google::errorprone::bugpatterns::threadsafety::ImmutableAnnotationInfo
   function immutableSupertype(Symbol,VisitorState) in line 533
      23 lines of code
      2 parameters
      6 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function containerOf() defined in com::google::errorprone::annotations::Immutable
   function immutableTypeParametersInScope(Symbol) in line 599
      31 lines of code
      1 parameters
      9 conditional paths
      uses function containerOf() defined in com::google::errorprone::bugpatterns::threadsafety::ImmutableAnnotationInfo
   function isFieldImmutable(Optional< Tree >,ImmutableSet< String >,ClassSymbol,ClassType,VarSymbol,VisitorState) in line 295
      50 lines of code
      6 parameters
      6 conditional paths
      uses function reportMatch(Description) defined in com::google::errorprone::VisitorState
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function matchClass(ClassTree,VisitorState) in line 125
      protection public
      53 lines of code
      2 parameters
      7 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function containerOf() defined in com::google::errorprone::bugpatterns::threadsafety::ImmutableAnnotationInfo
module com::google::errorprone::bugpatterns::threadsafety::ImmutableChecker::Violation
   abstract class
   function create(ConsPStack< String >) in line 87
      3 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::threadsafety::ImmutableChecker::ImmutableTypeVisitor
   inherits from Types::SimpleVisitor
   function visitArrayType(ArrayType,Void) in line 409
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitType(Type,Void) in line 436
      protection public
      34 lines of code
      2 parameters
      9 conditional paths
   function visitTypeVar(TypeVar,Void) in line 414
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
   function visitWildcardType(WildcardType,Void) in line 404
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function ImmutableTypeVisitor(ImmutableSet< String >,VisitorState) in line 398
      4 lines of code
      2 parameters
      1 conditional paths
   variable immutableTyParams in line 395
   variable state in line 396
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodChecker.java
module com::google::errorprone::bugpatterns::threadsafety::LockMethodChecker
   inherits from com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
   function buildMessage(String) in line 63
      4 lines of code
      1 parameters
      1 conditional paths
   function getActual(MethodTree,VisitorState) in line 53
      3 lines of code
      2 parameters
      1 conditional paths
   function getLockExpressions(MethodTree) in line 45
      6 lines of code
      1 parameters
      1 conditional paths
      uses function value() defined in com::google::errorprone::annotations::concurrent::LockMethod
   function getUnwanted(MethodTree,VisitorState) in line 58
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/StaticGuardedByInstance.java
module com::google::errorprone::bugpatterns::threadsafety::StaticGuardedByInstance
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::SynchronizedTreeMatcher
   function matchSynchronized(SynchronizedTree,VisitorState) in line 60
      protection public
      18 lines of code
      2 parameters
      10 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function reportMatch(Description) defined in com::google::errorprone::VisitorState
   variable MESSAGE in line 56
      protection public
module com::google::errorprone::bugpatterns::threadsafety::StaticGuardedByInstance::WriteVisitor
   inherits from com::sun::source::util::TreeScanner
   function recordWrite(ExpressionTree) in line 89
      6 lines of code
      1 parameters
      1 conditional paths
   function visitAssignment(AssignmentTree,Void) in line 97
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitCompoundAssignment(CompoundAssignmentTree,Void) in line 103
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitNewClass(NewClassTree,Void) in line 130
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitSynchronized(SynchronizedTree,Void) in line 124
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitUnary(UnaryTree,Void) in line 109
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   variable writes in line 87
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalField.java
module com::google::errorprone::bugpatterns::threadsafety::SynchronizeOnNonFinalField
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::SynchronizedTreeMatcher
   function matchSynchronized(SynchronizedTree,VisitorState) in line 51
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodChecker.java
module com::google::errorprone::bugpatterns::threadsafety::UnlockMethodChecker
   inherits from com::google::errorprone::bugpatterns::threadsafety::AbstractLockMethodChecker
   function buildMessage(String) in line 64
      4 lines of code
      1 parameters
      1 conditional paths
   function getActual(MethodTree,VisitorState) in line 54
      3 lines of code
      2 parameters
      1 conditional paths
   function getLockExpressions(MethodTree) in line 46
      6 lines of code
      1 parameters
      1 conditional paths
      uses function value() defined in com::google::errorprone::annotations::concurrent::UnlockMethod
   function getUnwanted(MethodTree,VisitorState) in line 59
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/threadsafety/WellKnownMutability.java
module com::google::errorprone::bugpatterns::threadsafety::WellKnownMutability
   function getBootstrapClasses() in line 88
      44 lines of code
      0 parameters
      1 conditional paths
   function getKnownUnsafeClasses() in line 136
      17 lines of code
      0 parameters
      1 conditional paths
   function isAssignableTo(Type,Supplier< Type >,VisitorState) in line 164
      8 lines of code
      3 parameters
      1 conditional paths
   variable MESSAGE_TYPE in line 155
   variable MUTABLE_MESSAGE_TYPE in line 158
   variable PROTOCOL_MESSAGE_TYPE in line 161
module com::google::errorprone::bugpatterns::threadsafety::WellKnownMutability::Builder
   function add(Class<?>,String...) in line 55
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
   function add(String,String...) in line 75
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function addAll(Set< Class<?>>) in line 48
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function build() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/TryFailThrowable.java
module com::google::errorprone::bugpatterns::TryFailThrowable
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::TryTreeMatcher
   function fixByCatchingException(TryTree) in line 173
      4 lines of code
      1 parameters
      1 conditional paths
   function fixByThrowingJavaLangError(StatementTree,VisitorState) in line 178
      4 lines of code
      2 parameters
      1 conditional paths
   function fixWithBoolean(TryTree,StatementTree,VisitorState) in line 207
      11 lines of code
      3 parameters
      1 conditional paths
      uses function delete(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function fixWithReturn(TryTree,StatementTree,VisitorState) in line 196
      10 lines of code
      3 parameters
      1 conditional paths
      uses function delete(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function fixWithReturnOrBoolean(TryTree,StatementTree,VisitorState) in line 183
      12 lines of code
      3 parameters
      2 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function getLastStatement(BlockTree) in line 334
      3 lines of code
      1 parameters
      1 conditional paths
   function getMessageSnippet(StatementTree,VisitorState,HasOtherParameters) in line 219
      10 lines of code
      3 parameters
      1 conditional paths
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   function getOnlyCatch(TryTree) in line 338
      3 lines of code
      1 parameters
      1 conditional paths
   function hasInitialStringParameter(MethodSymbol,VisitorState) in line 239
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function matchTry(TryTree,VisitorState) in line 153
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function addFix(Fix) defined in com::google::errorprone::matchers::Description::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function tryTreeMatches(TryTree,VisitorState) in line 246
      56 lines of code
      2 parameters
      10 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable failOrAssert in line 126
   variable javaLangError in line 120
   variable javaLangThrowable in line 119
   variable someAssertionFailure in line 121
module com::google::errorprone::bugpatterns::TryFailThrowable::HasOtherParameters
   variable TRUE in line 235
      protection public
module com::google::errorprone::bugpatterns::TryFailThrowable::MatchResult
module com::google::errorprone::bugpatterns::TryFailThrowable::CaughtType
   variable JAVA_LANG_ERROR in line 328
      protection public
   variable JAVA_LANG_THROWABLE in line 329
      protection public
   variable SOME_ASSERTION_FAILURE in line 330
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterQualifier.java
module com::google::errorprone::bugpatterns::TypeParameterQualifier
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MemberSelectTreeMatcher
   function matchMemberSelect(MemberSelectTree,VisitorState) in line 49
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses variable context defined in com::google::errorprone::VisitorState
      uses function getPath() defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormals.java
module com::google::errorprone::bugpatterns::TypeParameterUnusedInFormals
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function attemptFix(final TypeVar,MethodTree,VisitorState) in line 94
      36 lines of code
      3 parameters
      5 conditional paths
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchMethod(MethodTree,VisitorState) in line 60
      protection public
      33 lines of code
      2 parameters
      6 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function removeTypeParam(int,List<?extends TypeParameterTree >,VisitorState,SuggestedFix.Builder) in line 133
      30 lines of code
      4 parameters
      2 conditional paths
      uses function getEndPosition(JCTree) defined in com::google::errorprone::VisitorState
   function rewriteTypeUsages(final TypeVar,Tree,final String,final SuggestedFix.Builder,final VisitorState) in line 164
      31 lines of code
      5 parameters
      4 conditional paths
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
module com::google::errorprone::bugpatterns::TypeParameterUnusedInFormals::TypeParameterFinder
   inherits from Types::DefaultTypeVisitor
   function visitArrayType(Type.ArrayType,Void) in line 242
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitClassType(Type.ClassType,Void) in line 211
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
   function visitIntersectionClassType(Type.IntersectionClassType) in line 224
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function visitType(Type,Void) in line 260
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitTypeVar(Type.TypeVar,Void) in line 248
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function visitWildcardType(Type.WildcardType,Void) in line 231
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   variable seen in line 208
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImport.java
module com::google::errorprone::bugpatterns::UnnecessaryStaticImport
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ImportTreeMatcher
   function matchImport(ImportTree,VisitorState) in line 45
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgument.java
module com::google::errorprone::bugpatterns::UnnecessaryTypeArgument
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   function buildFix(Tree,List<?extends Tree >,VisitorState) in line 89
      24 lines of code
      3 parameters
      3 conditional paths
      uses function getEndPosition(JCTree) defined in com::google::errorprone::VisitorState
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   function check(Tree,List<?extends Tree >,VisitorState) in line 61
      24 lines of code
      3 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function matchNewClass(NewClassTree,VisitorState) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronized.java
module com::google::errorprone::bugpatterns::UnsynchronizedOverridesSynchronized
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function isSynchronized(MethodSymbol) in line 72
      3 lines of code
      1 parameters
      1 conditional paths
   function matchMethod(MethodTree,VisitorState) in line 46
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function getTypeFromString(String) defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/UnusedAnonymousClass.java
module com::google::errorprone::bugpatterns::UnusedAnonymousClass
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::NewClassTreeMatcher
   function matchNewClass(NewClassTree,VisitorState) in line 53
      protection public
      36 lines of code
      2 parameters
      9 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function sideEffectFreeConstructor(TypeSymbol,VisitorState) in line 94
      11 lines of code
      2 parameters
      4 conditional paths
      uses function getTypeFromString(String) defined in com::google::errorprone::VisitorState
   variable TYPE_WHITELIST in line 91
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/VarChecker.java
module com::google::errorprone::bugpatterns::VarChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function addVarAnnotation(VariableTree) in line 112
      3 lines of code
      1 parameters
      1 conditional paths
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function handleLocalOrParam(VariableTree,VisitorState,Symbol) in line 89
      22 lines of code
      3 parameters
      5 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function matchVariable(VariableTree,VisitorState) in line 58
      protection public
      21 lines of code
      2 parameters
      7 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
   variable UNNECESSARY_FINAL in line 55
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/WaitNotInLoop.java
module com::google::errorprone::bugpatterns::WaitNotInLoop
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 56
      protection public
      29 lines of code
      2 parameters
      6 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
   variable matcher in line 53
   variable MESSAGE_TEMPLATE in line 50
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/WildcardImport.java
module com::google::errorprone::bugpatterns::WildcardImport
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function findMatchingWildcardImport(ImmutableList< ImportTree >,TypeToImport) in line 186
      21 lines of code
      2 parameters
      4 conditional paths
   function getWildcardImports(List<?extends ImportTree >) in line 211
      15 lines of code
      1 parameters
      15 conditional paths
   function groupImports(ImmutableList< ImportTree >,Set< TypeToImport >) in line 162
      19 lines of code
      2 parameters
      3 conditional paths
   function matchClass(ClassTree,VisitorState) in line 116
      protection public
      41 lines of code
      2 parameters
      5 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function apply(ClassTree,VisitorState,ImmutableList< ImportTree >,Multimap< ImportTree, TypeToImport >,BugChecker) defined in com::google::errorprone::bugpatterns::WildcardImport::FixStrategy
   function WildcardImport() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function WildcardImport(FixStrategy) in line 80
      3 lines of code
      1 parameters
      1 conditional paths
   variable ASTERISK in line 66
   variable fixStrategy in line 74
module com::google::errorprone::bugpatterns::WildcardImport::TypeToImport
   abstract class
   function toString() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::WildcardImport::ImportCollector
   inherits from com::sun::source::util::TreeScanner
   function addStaticMember(Symbol) in line 270
      13 lines of code
      1 parameters
      1 conditional paths
   function addType(Type) in line 287
      13 lines of code
      1 parameters
      1 conditional paths
   function collect(JCClassDecl) in line 235
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitIdent(JCTree.JCIdent) in line 252
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function visitMethodDef(JCTree.JCMethodDecl) in line 242
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   variable seen in line 233
module com::google::errorprone::bugpatterns::WildcardImport::FixStrategy
   function apply(ClassTree,VisitorState,ImmutableList< ImportTree >,Multimap< ImportTree, TypeToImport >,BugChecker) in line 306
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::WildcardImport::FixStrategies
   inherits from com::google::errorprone::bugpatterns::WildcardImport::FixStrategy
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/bugpatterns/WrongParameterPackage.java
module com::google::errorprone::bugpatterns::WrongParameterPackage
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function describe(MethodTree,VisitorState) in line 100
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function matchMethod(MethodTree,VisitorState) in line 57
      protection public
      42 lines of code
      2 parameters
      10 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getTypes() defined in com::google::errorprone::VisitorState
   variable supermethod in line 54
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/CodeTransformer.java
module com::google::errorprone::CodeTransformer
   function annotations() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function apply(TreePath,Context,DescriptionListener) in line 35
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/CompositeCodeTransformer.java
module com::google::errorprone::CompositeCodeTransformer
   inherits from com::google::errorprone::CodeTransformer
   inherits from java::io::Serializable
   abstract class
   function annotations() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function apply(TreePath,Context,DescriptionListener) in line 47
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
      uses function transformers() defined in com::google::errorprone::CompositeCodeTransformer
   function compose(CodeTransformer...) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function transformers() defined in com::google::errorprone::CompositeCodeTransformer
   function compose(Iterable<?extends CodeTransformer >) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function transformers() defined in com::google::errorprone::CompositeCodeTransformer
   function transformers() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/dataflow/ConstantPropagationAnalysis.java
module com::google::errorprone::dataflow::ConstantPropagationAnalysis
   function numberValue(TreePath,Context) in line 38
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable CONSTANT_PROPAGATION defined in com::google::errorprone::dataflow::ConstantPropagationAnalysis
   variable CONSTANT_PROPAGATION in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/dataflow/DataFlow.java
module com::google::errorprone::dataflow::DataFlow
   function findPathFromEnclosingNodeToTopLevel(TreePath,Class< T >) in line 110
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   variable analysisCache in line 73
   variable cfgCache in line 89
   variable Store< S > in line 128
      protection public
module com::google::errorprone::dataflow::DataFlow::Result
   function getAnalysis() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getControlFlowGraph() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::dataflow::DataFlow::CFGParams
   function equals(Object) in line 215
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function equals(Object) defined in com::google::errorprone::dataflow::DataFlow::CFGParams
   function getEnvironment() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethodPath() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function CFGParams(TreePath,ProcessingEnvironment) in line 204
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::dataflow::DataFlow::AnalysisParams
   function equals(Object) in line 261
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function equals(Object) defined in com::google::errorprone::dataflow::DataFlow::AnalysisParams
      uses variable cfg defined in com::google::errorprone::dataflow::DataFlow::AnalysisParams
      uses variable transfer defined in com::google::errorprone::dataflow::DataFlow::AnalysisParams
   function getCFG() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEnvironment() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTransferFunction() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AnalysisParams(TransferFunction<?,?>,ControlFlowGraph,ProcessingEnvironment) in line 235
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
   variable cfg in line 232
   variable env in line 231
   variable transfer in line 233
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/dataflow/LocalStore.java
module com::google::errorprone::dataflow::LocalStore
   inherits from org::checkerframework::dataflow::analysis::Store
   function canAlias(FlowExpressions.Receiver,FlowExpressions.Receiver) in line 146
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function checkElementType(Element) in line 160
      10 lines of code
      1 parameters
      1 conditional paths
   function copy() in line 112
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function empty() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function equals(Object) in line 127
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getInformation(Element) in line 73
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function hasDOToutput() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function leastUpperBound(LocalStore< V >) in line 118
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function toBuilder() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toDOToutput() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LocalStore(Map< Element, V >) in line 63
      3 lines of code
      1 parameters
      1 conditional paths
   variable contents in line 61
   variable EMPTY in line 54
module com::google::errorprone::dataflow::LocalStore::Builder
   function build() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in com::google::errorprone::dataflow::LocalStore::Builder
   function setInformation(Element,V) in line 100
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function checkElementType(Element) defined in com::google::errorprone::dataflow::LocalStore
      uses variable contents defined in com::google::errorprone::dataflow::LocalStore::Builder
   variable contents in line 88
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/AbstractNullnessPropagationTransfer.java
module com::google::errorprone::dataflow::nullnesspropagation::AbstractNullnessPropagationTransfer
   inherits from org::checkerframework::dataflow::analysis::TransferFunction
   abstract class
   function conditionalResult(LocalStore< Nullness >,LocalStore< Nullness >,boolean) in line 377
      5 lines of code
      3 parameters
      1 conditional paths
   function initialStore(UnderlyingAST,List< LocalVariableNode >) in line 130
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function noStoreChanges(Nullness,TransferInput<?, LocalStore< Nullness >>) in line 364
      4 lines of code
      2 parameters
      1 conditional paths
   function orNullable(Nullness) in line 1036
      3 lines of code
      1 parameters
      1 conditional paths
   function updateRegularStore(Nullness,TransferInput<?, LocalStore< Nullness >>,ReadableLocalVariableUpdates) in line 370
      6 lines of code
      3 parameters
      1 conditional paths
   function updateStore(LocalStore< Nullness >,ReadableLocalVariableUpdates...) in line 1005
      11 lines of code
      2 parameters
      1 conditional paths
   function values(final TransferInput< Nullness, LocalStore< Nullness >>) in line 1017
      9 lines of code
      1 parameters
      1 conditional paths
   function values(final LocalStore< Nullness >) in line 1027
      8 lines of code
      1 parameters
      1 conditional paths
   function visitArrayAccess(ArrayAccessNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 759
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitArrayCreation(ArrayCreationNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 911
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitArrayType(ArrayTypeNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 924
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitAssertionError(AssertionErrorNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 864
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitAssignment(AssignmentNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 266
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitBitwiseAnd(BitwiseAndNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 633
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitBitwiseComplement(BitwiseComplementNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 498
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitBitwiseOr(BitwiseOrNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 644
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitBitwiseXor(BitwiseXorNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 655
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitBooleanLiteral(BooleanLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 439
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitCase(CaseNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 887
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitCharacterLiteral(CharacterLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 450
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitClassName(ClassNameNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 946
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitConditionalAnd(ConditionalAndNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 331
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitConditionalNot(ConditionalNotNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 343
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function visitConditionalOr(ConditionalOrNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 337
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitDoubleLiteral(DoubleLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 428
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitEqualTo(EqualToNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 236
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function visitExplicitThisLiteral(ExplicitThisLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 783
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitFieldAccess(FieldAccessNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 291
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitFloatingDivision(FloatingDivisionNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 567
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitFloatingRemainder(FloatingRemainderNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 589
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitFloatLiteral(FloatLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 417
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitGreaterThan(GreaterThanNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 700
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitGreaterThanOrEqual(GreaterThanOrEqualNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 711
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitImplicitThisLiteral(ImplicitThisLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 772
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitInstanceOf(InstanceOfNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 838
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitIntegerDivision(IntegerDivisionNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 556
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitIntegerLiteral(IntegerLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 395
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitIntegerRemainder(IntegerRemainderNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 578
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitLeftShift(LeftShiftNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 600
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitLessThan(LessThanNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 678
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitLessThanOrEqual(LessThanOrEqualNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 689
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitLocalVariable(LocalVariableNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 279
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitLongLiteral(LongLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 406
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitMarker(MarkerNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 979
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitMemberReference(FunctionalInterfaceNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 898
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitMethodAccess(MethodAccessNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 748
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitMethodInvocation(MethodInvocationNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 303
      protection public
      21 lines of code
      2 parameters
      1 conditional paths
   function visitNarrowingConversion(NarrowingConversionNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 225
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitNotEqual(NotEqualNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 251
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function visitNullChk(NullChkNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 509
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitNullLiteral(NullLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 191
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitNumericalAddition(NumericalAdditionNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 214
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitNumericalMinus(NumericalMinusNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 476
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitNumericalMultiplication(NumericalMultiplicationNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 544
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitNumericalPlus(NumericalPlusNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 487
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitNumericalSubtraction(NumericalSubtractionNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 531
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitObjectCreation(ObjectCreationNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 354
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitPackageName(PackageNameNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 957
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitParameterizedType(ParameterizedTypeNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 968
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitPrimitiveType(PrimitiveTypeNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 935
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitReturn(ReturnNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 805
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitShortLiteral(ShortLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 384
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitSignedRightShift(SignedRightShiftNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 611
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitStringConcatenate(StringConcatenateNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 520
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitStringConcatenateAssignment(StringConcatenateAssignmentNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 667
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitStringConversion(StringConversionNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 816
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitStringLiteral(StringLiteralNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 463
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitSuper(SuperNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 794
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitSynchronized(SynchronizedNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 851
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitTernaryExpression(TernaryExpressionNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 722
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitThrow(ThrowNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 875
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitTypeCast(TypeCastNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 203
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitUnsignedRightShift(UnsignedRightShiftNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 622
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitVariableDeclaration(VariableDeclarationNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 735
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitWideningConversion(WideningConversionNode,TransferInput< Nullness, LocalStore< Nullness >>) in line 827
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable NO_STORE_CHANGE in line 1050
module com::google::errorprone::dataflow::nullnesspropagation::AbstractNullnessPropagationTransfer::SubNodeValues
   function valueOfSubNode(Node) in line 140
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::dataflow::nullnesspropagation::AbstractNullnessPropagationTransfer::LocalVariableValues
   function valueOfLocalVariable(LocalVariableNode) in line 150
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::dataflow::nullnesspropagation::AbstractNullnessPropagationTransfer::LocalVariableUpdates
   function set(LocalVariableNode,Nullness) in line 160
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function set(VariableDeclarationNode,Nullness) in line 162
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::dataflow::nullnesspropagation::AbstractNullnessPropagationTransfer::ReadableLocalVariableUpdates
   inherits from com::google::errorprone::dataflow::nullnesspropagation::AbstractNullnessPropagationTransfer::LocalVariableUpdates
   function set(LocalVariableNode,Nullness) in line 994
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function set(VariableDeclarationNode,Nullness) in line 999
      protection public
      3 lines of code
      2 parameters
      3 conditional paths
      uses function toBuilder() defined in com::google::errorprone::dataflow::LocalStore
      uses function equals(Object) defined in com::google::errorprone::dataflow::LocalStore
      uses function getInformation(Element) defined in com::google::errorprone::dataflow::LocalStore
module com::google::errorprone::dataflow::nullnesspropagation::AbstractNullnessPropagationTransfer::ResultingStore
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/Nullness.java
module com::google::errorprone::dataflow::nullnesspropagation::Nullness
   inherits from org::checkerframework::dataflow::analysis::AbstractValue
   function deducedValueWhenNotEqual() in line 104
      protection public
      14 lines of code
      0 parameters
      5 conditional paths
   function greatestLowerBound(Nullness) in line 68
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
   function leastUpperBound(Nullness) in line 53
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
   function toString() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Nullness(String) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable BOTTOM in line 40
      protection public
   variable displayName in line 42
   variable NONNULL in line 39
      protection public
   variable NULL in line 38
      protection public
   variable NULLABLE in line 37
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessAnalysis.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis
   inherits from java::io::Serializable
   function getNullness(TreePath,Context) in line 70
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable nullnessPropagation defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis
   function NullnessAnalysis() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nullnessPropagation defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis
   function NullnessAnalysis(Predicate< MethodInfo >) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nullnessPropagation defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis
   variable nullnessPropagation in line 44
module com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis::MethodInfo
   function annotations() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clazz() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPrimitive() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function method() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTransfer.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer
   inherits from com::google::errorprone::dataflow::nullnesspropagation::AbstractNullnessPropagationTransfer
   inherits from java::io::Serializable
   function fieldInitializerNullnessIfAvailable(ClassAndField) in line 584
      39 lines of code
      1 parameters
      1 conditional paths
   function fieldNullness(@Nullable ClassAndField) in line 543
      31 lines of code
      1 parameters
      1 conditional paths
   function handleEqualityComparison(boolean,Node,Node,SubNodeValues,LocalVariableUpdates,LocalVariableUpdates) in line 472
      27 lines of code
      6 parameters
      1 conditional paths
   function hasNonNullConstantValue(LocalVariableNode) in line 504
      7 lines of code
      1 parameters
      1 conditional paths
   function hasPrimitiveType(Node) in line 500
      3 lines of code
      1 parameters
      1 conditional paths
   function isCatchVariable(VariableDeclarationNode) in line 455
      3 lines of code
      1 parameters
      1 conditional paths
   function member(Class<?>,String) in line 679
      3 lines of code
      2 parameters
      1 conditional paths
   function member(String,String) in line 683
      3 lines of code
      2 parameters
      1 conditional paths
   function returnValueNullness(@Nullable ClassAndMethod) in line 575
      7 lines of code
      1 parameters
      1 conditional paths
   function setConditionalArgumentNullness(LocalVariableUpdates,List< Node >,ClassAndMethod) in line 649
      7 lines of code
      3 parameters
      1 conditional paths
   function setReceiverNullness(LocalVariableUpdates,Node,Member) in line 624
      6 lines of code
      3 parameters
      1 conditional paths
   function setUnconditionalArgumentNullness(LocalVariableUpdates,List< Node >,ClassAndMethod) in line 636
      7 lines of code
      3 parameters
      1 conditional paths
   function tryGetFieldSymbol(Tree) in line 512
      7 lines of code
      1 parameters
      1 conditional paths
   function tryGetSymbol(Tree) in line 533
      9 lines of code
      1 parameters
      1 conditional paths
   function variablesAtIndexes(Set< Integer >,List< Node >) in line 657
      17 lines of code
      2 parameters
      1 conditional paths
   function writeObject(ObjectOutputStream) in line 687
      5 lines of code
      1 parameters
      1 conditional paths
   function NullnessPropagationTransfer() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NullnessPropagationTransfer(Predicate< MethodInfo >) in line 238
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable compilationUnit in line 223
   variable context in line 218
   variable methodReturnsNonNull in line 212
   variable serialVersionUID in line 134
   variable traversed in line 211
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::ReturnValueIsNonNull
   inherits from com::google::common::base::Predicate
   inherits from java::io::Serializable
   function apply(MethodInfo) in line 183
      protection public
      26 lines of code
      1 parameters
      39 conditional paths
      uses function annotations() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis::MethodInfo
      uses function method() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis::MethodInfo
      uses variable CLASSES_WITH_NON_NULLABLE_VALUE_OF_METHODS defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::ReturnValueIsNonNull
      uses function clazz() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis::MethodInfo
      uses function isPrimitive() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis::MethodInfo
      uses variable CLASSES_WITH_NON_NULLABLE_RETURNS defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::ReturnValueIsNonNull
      uses variable METHODS_WITH_NON_NULLABLE_RETURNS defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::ReturnValueIsNonNull
      uses function greatestLowerBound(Nullness) defined in com::google::errorprone::dataflow::nullnesspropagation::Nullness
      uses function deducedValueWhenNotEqual() defined in com::google::errorprone::dataflow::nullnesspropagation::Nullness
   variable CLASSES_WITH_NON_NULLABLE_RETURNS in line 154
   variable CLASSES_WITH_NON_NULLABLE_VALUE_OF_METHODS in line 165
   variable METHODS_WITH_NON_NULLABLE_RETURNS in line 143
   variable serialVersionUID in line 141
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::Member
   function isStatic() in line 676
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::MemberName
   function equals(Object) in line 704
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 713
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::ClassAndMethod
   inherits from com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::Member
   inherits from com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis::MethodInfo
   function annotations() in line 770
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clazz() in line 760
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPrimitive() in line 775
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 751
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function method() in line 765
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassAndMethod(String,String,List< String >,boolean,boolean,boolean) in line 726
      9 lines of code
      6 parameters
      1 conditional paths
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::ClassAndField
   inherits from com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransfer::Member
   function hasNonNullConstantValue() in line 812
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEnumConstant() in line 808
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFinal() in line 800
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPrimitive() in line 804
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 796
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassAndField(VarSymbol) in line 785
      5 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/DescriptionListener.java
module com::google::errorprone::DescriptionListener
   function onDescribed(Description) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/ErrorProneAnalyzer.java
module com::google::errorprone::ErrorProneAnalyzer
   inherits from com::sun::source::util::TaskListener
   function create(Scanner) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function create(CodeTransformer) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ErrorProneAnalyzer(CodeTransformer) defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable transformer defined in com::google::errorprone::ErrorProneAnalyzer
   function finished(TaskEvent) in line 96
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function reportReadyForAnalysis(TaskEvent,TreePath,boolean) defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable compiler defined in com::google::errorprone::ErrorProneAnalyzer
   function finishedCompilation(CompilationUnitTree) in line 122
      24 lines of code
      1 parameters
      5 conditional paths
      uses variable seen defined in com::google::errorprone::ErrorProneAnalyzer
   function init(Context,ErrorProneOptions) in line 61
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable initialized defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable context defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable errorProneOptions defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable log defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable compiler defined in com::google::errorprone::ErrorProneAnalyzer
   function register(Context,ErrorProneOptions) in line 70
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function init(Context,ErrorProneOptions) defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable context defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable errorProneOptions defined in com::google::errorprone::ErrorProneAnalyzer
   function reportReadyForAnalysis(TaskEvent,TreePath,boolean) in line 153
      protection public
      39 lines of code
      3 parameters
      5 conditional paths
      uses variable seen defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable context defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable errorProneOptions defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable log defined in com::google::errorprone::ErrorProneAnalyzer
      uses variable transformer defined in com::google::errorprone::ErrorProneAnalyzer
      uses function apply(TreePath,Context,DescriptionListener) defined in com::google::errorprone::CodeTransformer
      uses function finishedCompilation(CompilationUnitTree) defined in com::google::errorprone::ErrorProneAnalyzer
   function started(TaskEvent) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable initialized defined in com::google::errorprone::ErrorProneAnalyzer
   function ErrorProneAnalyzer(CodeTransformer) in line 86
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable transformer defined in com::google::errorprone::ErrorProneAnalyzer
   variable compiler in line 83
   variable context in line 80
   variable errorProneOptions in line 81
   variable initialized in line 84
   variable log in line 82
   variable seen in line 78
   variable transformer in line 76
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/ErrorProneCompiler.java
module com::google::errorprone::ErrorProneCompiler
   function compile(DiagnosticListener< JavaFileObject >,String[]) in line 78
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function listenToDiagnostics(DiagnosticListener<?super JavaFileObject >) defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses function build() defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses function run(String[]) defined in com::google::errorprone::ErrorProneCompiler
   function compile(String[]) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function build() defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses function run(String[]) defined in com::google::errorprone::ErrorProneCompiler
   function compile(String[],PrintWriter) in line 102
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function redirectOutputTo(PrintWriter) defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses function build() defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses function run(String[]) defined in com::google::errorprone::ErrorProneCompiler
   function defaultToLatestSupportedLanguageLevel(Iterable< String >) in line 171
      23 lines of code
      1 parameters
      3 conditional paths
   function enableEndPositions(Context) in line 324
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable EMPTY_LISTENER defined in com::google::errorprone::ErrorProneCompiler
   function loadVersionFromPom() in line 305
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable PROPERTIES_RESOURCE defined in com::google::errorprone::ErrorProneCompiler
   function main(String[]) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compile(DiagnosticListener< JavaFileObject >,String[]) defined in com::google::errorprone::ErrorProneCompiler
   function prepareCompilation(String[],Context) in line 221
      22 lines of code
      2 parameters
      2 conditional paths
      uses function defaultToLatestSupportedLanguageLevel(Iterable< String >) defined in com::google::errorprone::ErrorProneCompiler
      uses function setCompilePolicyToByFile(Iterable< String >) defined in com::google::errorprone::ErrorProneCompiler
      uses function getRemainingArgs() defined in com::google::errorprone::ErrorProneOptions
      uses variable diagnosticListener defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses variable scannerSupplier defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
      uses function setupMessageBundle(Context) defined in com::google::errorprone::ErrorProneCompiler
      uses function enableEndPositions(Context) defined in com::google::errorprone::ErrorProneCompiler
   function run(String[]) in line 160
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function run(String[],Context) in line 244
      11 lines of code
      2 parameters
      2 conditional paths
      uses function prepareCompilation(String[],Context) defined in com::google::errorprone::ErrorProneCompiler
      uses variable errOutput defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses variable compilerName defined in com::google::errorprone::ErrorProneCompiler::Builder
   function run(String[],List< JavaFileObject >) in line 256
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function run(String[]) defined in com::google::errorprone::ErrorProneCompiler
   function run(String[],Context,JavaFileManager,List< JavaFileObject >,Iterable<?extends Processor >) in line 264
      protection public
      29 lines of code
      5 parameters
      3 conditional paths
      uses function prepareCompilation(String[],Context) defined in com::google::errorprone::ErrorProneCompiler
      uses variable errOutput defined in com::google::errorprone::ErrorProneCompiler::Builder
   function setCompilePolicyToByFile(Iterable< String >) in line 203
      17 lines of code
      1 parameters
      4 conditional paths
   function setupMessageBundle(Context) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ErrorProneCompiler(String,PrintWriter,DiagnosticListener<?super JavaFileObject >,ScannerSupplier) in line 114
      10 lines of code
      4 parameters
      1 conditional paths
      uses variable errOutput defined in com::google::errorprone::ErrorProneCompiler
      uses variable compilerName defined in com::google::errorprone::ErrorProneCompiler
      uses variable diagnosticListener defined in com::google::errorprone::ErrorProneCompiler
      uses variable scannerSupplier defined in com::google::errorprone::ErrorProneCompiler
   variable compilerName in line 111
   variable diagnosticListener in line 109
   variable EMPTY_LISTENER in line 318
   variable errOutput in line 110
   variable PROPERTIES_RESOURCE in line 301
   variable scannerSupplier in line 112
module com::google::errorprone::ErrorProneCompiler::Builder
   function build() in line 131
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function ErrorProneCompiler(String,PrintWriter,DiagnosticListener<?super JavaFileObject >,ScannerSupplier) defined in com::google::errorprone::ErrorProneCompiler
      uses variable compilerName defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses variable errOutput defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses variable diagnosticListener defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses variable scannerSupplier defined in com::google::errorprone::ErrorProneCompiler::Builder
   function listenToDiagnostics(DiagnosticListener<?super JavaFileObject >) in line 149
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function named(String) in line 139
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable compilerName defined in com::google::errorprone::ErrorProneCompiler::Builder
   function redirectOutputTo(PrintWriter) in line 144
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable errOutput defined in com::google::errorprone::ErrorProneCompiler::Builder
   function report(ScannerSupplier) in line 154
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable scannerSupplier defined in com::google::errorprone::ErrorProneCompiler::Builder
   variable compilerName in line 128
   variable diagnosticListener in line 126
   variable errOutput in line 127
   variable scannerSupplier in line 129
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/ErrorProneError.java
module com::google::errorprone::ErrorProneError
   inherits from Error
   function formatMessage(JavaFileObject,DiagnosticPosition) in line 57
      15 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in com::google::errorprone::ErrorProneError
      uses variable pos defined in com::google::errorprone::ErrorProneError
   function logFatalError(Log) in line 45
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable source defined in com::google::errorprone::ErrorProneError
      uses variable pos defined in com::google::errorprone::ErrorProneError
      uses variable cause defined in com::google::errorprone::ErrorProneError
   function ErrorProneError(Throwable,DiagnosticPosition,JavaFileObject) in line 38
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses function formatMessage(JavaFileObject,DiagnosticPosition) defined in com::google::errorprone::ErrorProneError
      uses variable source defined in com::google::errorprone::ErrorProneError
      uses variable pos defined in com::google::errorprone::ErrorProneError
      uses variable cause defined in com::google::errorprone::ErrorProneError
   variable cause in line 34
   variable pos in line 35
   variable source in line 36
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/ErrorProneJavacJavaCompiler.java
module com::google::errorprone::ErrorProneJavacJavaCompiler
   inherits from com::sun::tools::javac::main::JavaCompiler
   function flow(Env< AttrContext >,Queue< Env< AttrContext >>) in line 86
      18 lines of code
      2 parameters
      3 conditional paths
      uses function postFlow(Env< AttrContext >) defined in com::google::errorprone::ErrorProneJavacJavaCompiler
      uses function logFatalError(Log) defined in com::google::errorprone::ErrorProneError
   function postFlow(Env< AttrContext >) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorProneAnalyzer defined in com::google::errorprone::ErrorProneJavacJavaCompiler
      uses function finished(TaskEvent) defined in com::google::errorprone::ErrorProneAnalyzer
   function preRegister(Context,final CodeTransformer,final ErrorProneOptions) in line 70
      protection public
      14 lines of code
      3 parameters
      1 conditional paths
      uses function ErrorProneJavacJavaCompiler(Context,CodeTransformer,ErrorProneOptions) defined in com::google::errorprone::ErrorProneJavacJavaCompiler
   function setupMessageBundle(Context) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ErrorProneJavacJavaCompiler(Context,CodeTransformer,ErrorProneOptions) in line 50
      11 lines of code
      3 parameters
      1 conditional paths
      uses function setupMessageBundle(Context) defined in com::google::errorprone::ErrorProneJavacJavaCompiler
      uses variable errorProneAnalyzer defined in com::google::errorprone::ErrorProneJavacJavaCompiler
      uses function init(Context,ErrorProneOptions) defined in com::google::errorprone::ErrorProneAnalyzer
   variable errorProneAnalyzer in line 41
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/ErrorProneJavaCompiler.java
module com::google::errorprone::ErrorProneJavaCompiler
   inherits from com::sun::tools::javac::main::JavaCompiler
   function getSourceVersions() in line 121
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable javacTool defined in com::google::errorprone::ErrorProneJavaCompiler
   function getStandardFileManager(DiagnosticListener<?super JavaFileObject >,Locale,Charset) in line 99
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable javacTool defined in com::google::errorprone::ErrorProneJavaCompiler
   function getTask(Writer,JavaFileManager,DiagnosticListener<?super JavaFileObject >,Iterable< String >,Iterable< String >,Iterable<?extends JavaFileObject >) in line 74
      protection public
      23 lines of code
      6 parameters
      2 conditional paths
      uses variable scannerSupplier defined in com::google::errorprone::ErrorProneJavaCompiler
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
      uses function getRemainingArgs() defined in com::google::errorprone::ErrorProneOptions
      uses variable javacTool defined in com::google::errorprone::ErrorProneJavaCompiler
   function isSupportedOption(String) in line 107
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable javacTool defined in com::google::errorprone::ErrorProneJavaCompiler
   function run(InputStream,OutputStream,OutputStream,String...) in line 116
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable javacTool defined in com::google::errorprone::ErrorProneJavaCompiler
   function ErrorProneJavaCompiler() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javacTool defined in com::google::errorprone::ErrorProneJavaCompiler
   function ErrorProneJavaCompiler(ScannerSupplier) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scannerSupplier defined in com::google::errorprone::ErrorProneJavaCompiler
   function ErrorProneJavaCompiler(JavaCompiler,ScannerSupplier) in line 68
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable javacTool defined in com::google::errorprone::ErrorProneJavaCompiler
      uses variable scannerSupplier defined in com::google::errorprone::ErrorProneJavaCompiler
   variable javacTool in line 52
   variable scannerSupplier in line 53
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/ErrorProneOptions.java
module com::google::errorprone::ErrorProneOptions
   function disableWarningsInGeneratedCode() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function empty() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EMPTY defined in com::google::errorprone::ErrorProneOptions
   function getRemainingArgs() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable remainingArgs defined in com::google::errorprone::ErrorProneOptions
   function getSeverityMap() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable severityMap defined in com::google::errorprone::ErrorProneOptions
   function ignoreUnknownChecks() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSupportedOption(String) in line 64
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable FLAG_PREFIX defined in com::google::errorprone::ErrorProneOptions
      uses variable IGNORE_UNKNOWN_CHECKS_FLAG defined in com::google::errorprone::ErrorProneOptions
      uses variable DISABLE_WARNINGS_IN_GENERATED_CODE_FLAG defined in com::google::errorprone::ErrorProneOptions
   function processArgs(Iterable< String >) in line 155
      protection public
      45 lines of code
      1 parameters
      8 conditional paths
      uses variable IGNORE_UNKNOWN_CHECKS_FLAG defined in com::google::errorprone::ErrorProneOptions
      uses function setIgnoreUnknownChecks(boolean) defined in com::google::errorprone::ErrorProneOptions::Builder
      uses variable DISABLE_WARNINGS_IN_GENERATED_CODE_FLAG defined in com::google::errorprone::ErrorProneOptions
      uses function setDisableWarningsInGeneratedCode(boolean) defined in com::google::errorprone::ErrorProneOptions::Builder
      uses variable FLAG_PREFIX defined in com::google::errorprone::ErrorProneOptions
      uses variable DEFAULT defined in com::google::errorprone::ErrorProneOptions::Severity
      uses function putSeverity(String,Severity) defined in com::google::errorprone::ErrorProneOptions::Builder
      uses function build(ImmutableList< String >) defined in com::google::errorprone::ErrorProneOptions::Builder
   function processArgs(String[]) in line 209
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function processArgs(Iterable< String >) defined in com::google::errorprone::ErrorProneOptions
   function ErrorProneOptions(ImmutableMap< String, Severity >,ImmutableList< String >,boolean,boolean) in line 88
      10 lines of code
      4 parameters
      1 conditional paths
      uses variable severityMap defined in com::google::errorprone::ErrorProneOptions
      uses variable remainingArgs defined in com::google::errorprone::ErrorProneOptions
      uses function ignoreUnknownChecks() defined in com::google::errorprone::ErrorProneOptions
      uses function disableWarningsInGeneratedCode() defined in com::google::errorprone::ErrorProneOptions
   variable DISABLE_WARNINGS_IN_GENERATED_CODE_FLAG in line 58
   variable disableWarningsInGeneratedCode in line 86
   variable EMPTY in line 141
   variable FLAG_PREFIX in line 57
   variable IGNORE_UNKNOWN_CHECKS_FLAG in line 56
   variable ignoreUnknownChecks in line 85
   variable remainingArgs in line 83
   variable severityMap in line 84
module com::google::errorprone::ErrorProneOptions::Severity
   variable DEFAULT in line 77
      protection public
   variable ERROR in line 81
      protection public
   variable OFF in line 78
      protection public
   variable WARN in line 79
      protection public
module com::google::errorprone::ErrorProneOptions::Builder
   function build(ImmutableList< String >) in line 132
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function ErrorProneOptions(ImmutableMap< String, Severity >,ImmutableList< String >,boolean,boolean) defined in com::google::errorprone::ErrorProneOptions
      uses variable severityMap defined in com::google::errorprone::ErrorProneOptions::Builder
      uses variable ignoreUnknownChecks defined in com::google::errorprone::ErrorProneOptions::Builder
      uses variable disableWarningsInGeneratedCode defined in com::google::errorprone::ErrorProneOptions::Builder
   function putSeverity(String,Severity) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable severityMap defined in com::google::errorprone::ErrorProneOptions::Builder
   function setDisableWarningsInGeneratedCode(boolean) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disableWarningsInGeneratedCode defined in com::google::errorprone::ErrorProneOptions::Builder
   function setIgnoreUnknownChecks(boolean) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreUnknownChecks defined in com::google::errorprone::ErrorProneOptions::Builder
   variable disableWarningsInGeneratedCode in line 117
   variable ignoreUnknownChecks in line 116
   variable severityMap in line 118
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/fixes/AdjustedPosition.java
module com::google::errorprone::fixes::AdjustedPosition
   inherits from com::sun::tools::javac::util::JCDiagnostic::DiagnosticPosition
   function getEndPosition(EndPosTable) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable position defined in com::google::errorprone::fixes::AdjustedPosition
      uses variable endPositionAdjustment defined in com::google::errorprone::fixes::AdjustedPosition
   function getPreferredPosition() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStartPosition() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable position defined in com::google::errorprone::fixes::AdjustedPosition
      uses variable startPositionAdjustment defined in com::google::errorprone::fixes::AdjustedPosition
   function getTree() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable position defined in com::google::errorprone::fixes::AdjustedPosition
   function AdjustedPosition(JCTree,int,int) in line 31
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable position defined in com::google::errorprone::fixes::AdjustedPosition
   variable endPositionAdjustment in line 29
   variable position in line 27
   variable startPositionAdjustment in line 28
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/fixes/AppliedFix.java
module com::google::errorprone::fixes::AppliedFix
   function fromSource(CharSequence,EndPosTable) in line 113
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function Applier(CharSequence,EndPosTable) defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses variable source defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses variable endPositions defined in com::google::errorprone::fixes::AppliedFix::Applier
   function getNewCodeSnippet() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable snippet defined in com::google::errorprone::fixes::AppliedFix
   function isRemoveLine() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AppliedFix(String,boolean) in line 37
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable snippet defined in com::google::errorprone::fixes::AppliedFix
      uses function isRemoveLine() defined in com::google::errorprone::fixes::AppliedFix
   variable isRemoveLine in line 35
   variable snippet in line 34
module com::google::errorprone::fixes::AppliedFix::Applier
   function apply(Fix) in line 63
      protection public
      48 lines of code
      1 parameters
      8 conditional paths
      uses variable source defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses function getReplacements(EndPosTable) defined in com::google::errorprone::fixes::Fix
      uses variable endPositions defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses variable snippet defined in com::google::errorprone::fixes::AppliedFix
      uses function isRemoveLine() defined in com::google::errorprone::fixes::AppliedFix
      uses function AppliedFix(String,boolean) defined in com::google::errorprone::fixes::AppliedFix
   function Applier(CharSequence,EndPosTable) in line 54
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses variable endPositions defined in com::google::errorprone::fixes::AppliedFix::Applier
   variable endPositions in line 52
   variable source in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/fixes/Fix.java
module com::google::errorprone::fixes::Fix
   function getImportsToAdd() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getImportsToRemove() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReplacements(EndPosTable) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString(JCCompilationUnit) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/fixes/IndexedPosition.java
module com::google::errorprone::fixes::IndexedPosition
   inherits from com::sun::tools::javac::util::JCDiagnostic::DiagnosticPosition
   function getEndPosition(EndPosTable) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getPreferredPosition() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStartPosition() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTree() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IndexedPosition(int,int) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/fixes/Replacement.java
module com::google::errorprone::fixes::Replacement
   abstract class
   function create(int,int,String) in line 30
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses function startPosition() defined in com::google::errorprone::fixes::Replacement
      uses function endPosition() defined in com::google::errorprone::fixes::Replacement
      uses function replaceWith() defined in com::google::errorprone::fixes::Replacement
   function endPosition() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function replaceWith() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function startPosition() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/fixes/SuggestedFix.java
module com::google::errorprone::fixes::SuggestedFix
   inherits from com::google::errorprone::fixes::Fix
   function addModifier(Tree,Modifier,VisitorState) in line 478
      protection public
      56 lines of code
      3 parameters
      13 conditional paths
      uses function getTokensForNode(Tree) defined in com::google::errorprone::VisitorState
      uses function getTokModifierKind(ErrorProneToken) defined in com::google::errorprone::fixes::SuggestedFix
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix
      uses function toString(JCCompilationUnit) defined in com::google::errorprone::fixes::Fix
      uses function getEndPosition(JCTree) defined in com::google::errorprone::VisitorState
   function builder() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function delete(Tree) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function builder() defined in com::google::errorprone::fixes::SuggestedFix
      uses function delete(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function getImportsToAdd() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable importsToAdd defined in com::google::errorprone::fixes::SuggestedFix
   function getImportsToRemove() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable importsToRemove defined in com::google::errorprone::fixes::SuggestedFix
   function getReplacements(EndPosTable) in line 100
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function startPosition() defined in com::google::errorprone::fixes::Replacement
      uses variable fixes defined in com::google::errorprone::fixes::SuggestedFix
   function getTokModifierKind(ErrorProneToken) in line 440
      31 lines of code
      1 parameters
      12 conditional paths
      uses function kind() defined in com::google::errorprone::util::ErrorProneToken
   function isEmpty() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function modifierOrder(Modifier) in line 390
      31 lines of code
      1 parameters
      12 conditional paths
   function postfixWith(Tree,String) in line 159
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function builder() defined in com::google::errorprone::fixes::SuggestedFix
      uses function postfixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function prefixWith(Tree,String) in line 154
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function builder() defined in com::google::errorprone::fixes::SuggestedFix
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function qualifyType(VisitorState,SuggestedFix.Builder,TypeSymbol) in line 565
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
      uses function getPath() defined in com::google::errorprone::VisitorState
   function qualifyType(TreeMaker,SuggestedFix.Builder,TypeSymbol) in line 584
      protection public
      18 lines of code
      3 parameters
      4 conditional paths
      uses function selectsPackage(JCExpression) defined in com::google::errorprone::fixes::SuggestedFix
   function removeModifier(Tree,Modifier,VisitorState) in line 539
      protection public
      24 lines of code
      3 parameters
      5 conditional paths
      uses function getTokensForNode(Tree) defined in com::google::errorprone::VisitorState
      uses function getTokModifierKind(ErrorProneToken) defined in com::google::errorprone::fixes::SuggestedFix
      uses function pos() defined in com::google::errorprone::util::ErrorProneToken
      uses function endPos() defined in com::google::errorprone::util::ErrorProneToken
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function replace(Tree,String) in line 119
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function builder() defined in com::google::errorprone::fixes::SuggestedFix
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function replace(int,int,String) in line 131
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function builder() defined in com::google::errorprone::fixes::SuggestedFix
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function replace(Tree,String,int,int) in line 148
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function builder() defined in com::google::errorprone::fixes::SuggestedFix
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function selectsPackage(JCExpression) in line 604
      14 lines of code
      1 parameters
      4 conditional paths
   function swap(Tree,Tree) in line 169
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function builder() defined in com::google::errorprone::fixes::SuggestedFix
      uses function swap(Tree,Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function toString(JCCompilationUnit) in line 89
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getReplacements(EndPosTable) defined in com::google::errorprone::fixes::SuggestedFix
   function SuggestedFix(List< FixOperation >,List< String >,List< String >) in line 64
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable fixes defined in com::google::errorprone::fixes::SuggestedFix
      uses variable importsToAdd defined in com::google::errorprone::fixes::SuggestedFix
      uses variable importsToRemove defined in com::google::errorprone::fixes::SuggestedFix
   variable fixes in line 60
   variable importsToAdd in line 61
   variable importsToRemove in line 62
module com::google::errorprone::fixes::SuggestedFix::Builder
   function addImport(String) in line 270
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable importsToAdd defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function addStaticImport(String) in line 279
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable importsToAdd defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function build() in line 190
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isEmpty() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function SuggestedFix(List< FixOperation >,List< String >,List< String >) defined in com::google::errorprone::fixes::SuggestedFix
      uses variable fixes defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable importsToAdd defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable importsToRemove defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function checkNotSyntheticConstructor(Tree) in line 316
      5 lines of code
      1 parameters
      2 conditional paths
   function delete(Tree) in line 251
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkNotSyntheticConstructor(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function isEmpty() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fixes defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable importsToAdd defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable importsToRemove defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function merge(Builder) in line 303
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable fixes defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable importsToAdd defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable importsToRemove defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function postfixWith(Tree,String) in line 246
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkNotSyntheticConstructor(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function with(FixOperation) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function prefixWith(Tree,String) in line 241
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkNotSyntheticConstructor(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function with(FixOperation) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function removeImport(String) in line 288
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable importsToRemove defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function removeStaticImport(String) in line 297
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable importsToRemove defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function replace(Tree,String) in line 202
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkNotSyntheticConstructor(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function with(FixOperation) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function replace(int,int,String) in line 215
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function with(FixOperation) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function replace(Tree,String,int,int) in line 233
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function checkNotSyntheticConstructor(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function with(FixOperation) defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function swap(Tree,Tree) in line 256
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function checkNotSyntheticConstructor(Tree) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable fixes defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function with(FixOperation) in line 197
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable fixes defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function Builder() in line 184
      1 lines of code
      0 parameters
      1 conditional paths
   variable fixes in line 180
   variable importsToAdd in line 181
   variable importsToRemove in line 182
module com::google::errorprone::fixes::SuggestedFix::FixOperation
   function getReplacement(EndPosTable) in line 326
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::fixes::SuggestedFix::InsertionFix
   inherits from com::google::errorprone::fixes::SuggestedFix::FixOperation
   abstract class
   function getInsertionIndex(EndPosTable) in line 331
      1 lines of code
      1 parameters
      1 conditional paths
   function getReplacement(EndPosTable) in line 342
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function InsertionFix(DiagnosticPosition,String) in line 336
      4 lines of code
      2 parameters
      1 conditional paths
   variable insertion in line 334
   variable tree in line 333
module com::google::errorprone::fixes::SuggestedFix::PostfixInsertion
   inherits from com::google::errorprone::fixes::SuggestedFix::InsertionFix
   function getInsertionIndex(EndPosTable) in line 354
      3 lines of code
      1 parameters
      1 conditional paths
   function PostfixInsertion(DiagnosticPosition,String) in line 349
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::fixes::SuggestedFix::PrefixInsertion
   inherits from com::google::errorprone::fixes::SuggestedFix::InsertionFix
   function getInsertionIndex(EndPosTable) in line 365
      3 lines of code
      1 parameters
      1 conditional paths
   function PrefixInsertion(DiagnosticPosition,String) in line 360
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::fixes::SuggestedFix::ReplacementFix
   inherits from com::google::errorprone::fixes::SuggestedFix::FixOperation
   function getReplacement(EndPosTable) in line 381
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function ReplacementFix(DiagnosticPosition,String) in line 375
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable original in line 372
   variable replacement in line 373
module com::google::errorprone::fixes::SuggestedFix::TokInfo
   inherits from Comparable
   abstract class
   function compareTo(TokInfo) in line 433
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function create(ErrorProneToken,Modifier) in line 428
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/internal/NonDelegatingClassLoader.java
module com::google::errorprone::internal::NonDelegatingClassLoader
   inherits from java::net::URLClassLoader
   function create(Set< String >,URLClassLoader) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable whiteList defined in com::google::errorprone::internal::NonDelegatingClassLoader
      uses variable original defined in com::google::errorprone::internal::NonDelegatingClassLoader
   function create(Set< String >,URL[],ClassLoader) in line 48
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses function NonDelegatingClassLoader(ClassLoader,URL[],Set< String >) defined in com::google::errorprone::internal::NonDelegatingClassLoader
      uses variable original defined in com::google::errorprone::internal::NonDelegatingClassLoader
      uses variable whiteList defined in com::google::errorprone::internal::NonDelegatingClassLoader
   function loadClass(String,boolean) in line 62
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable whiteList defined in com::google::errorprone::internal::NonDelegatingClassLoader
      uses variable original defined in com::google::errorprone::internal::NonDelegatingClassLoader
   function NonDelegatingClassLoader(ClassLoader,URL[],Set< String >) in line 55
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable original defined in com::google::errorprone::internal::NonDelegatingClassLoader
      uses variable whiteList defined in com::google::errorprone::internal::NonDelegatingClassLoader
   variable original in line 39
   variable whiteList in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/InvalidCommandLineOptionException.java
module com::google::errorprone::InvalidCommandLineOptionException
   inherits from Exception
   function InvalidCommandLineOptionException(String) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/JavacErrorDescriptionListener.java
module com::google::errorprone::JavacErrorDescriptionListener
   inherits from com::google::errorprone::DescriptionListener
   function onDescribed(Description) in line 73
      protection public
      48 lines of code
      1 parameters
      9 conditional paths
      uses variable log defined in com::google::errorprone::JavacErrorDescriptionListener
      uses variable sourceFile defined in com::google::errorprone::JavacErrorDescriptionListener
      uses variable fixes defined in com::google::errorprone::matchers::Description
      uses variable fixToAppliedFix defined in com::google::errorprone::JavacErrorDescriptionListener
      uses function getMessage() defined in com::google::errorprone::matchers::Description
      uses variable severity defined in com::google::errorprone::matchers::Description
      uses variable node defined in com::google::errorprone::matchers::Description
      uses variable MESSAGE_BUNDLE_KEY defined in com::google::errorprone::JavacErrorDescriptionListener
   function JavacErrorDescriptionListener(Log,EndPosTable,JavaFileObject) in line 58
      protection public
      13 lines of code
      3 parameters
      2 conditional paths
      uses variable log defined in com::google::errorprone::JavacErrorDescriptionListener
      uses variable endPositions defined in com::google::errorprone::JavacErrorDescriptionListener
      uses variable sourceFile defined in com::google::errorprone::JavacErrorDescriptionListener
   variable endPositions in line 44
   variable fixToAppliedFix in line 48
   variable log in line 43
   variable MESSAGE_BUNDLE_KEY in line 56
   variable sourceFile in line 45
   variable sourceFileContent in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/AbstractTypeMatcher.java
module com::google::errorprone::matchers::AbstractTypeMatcher
   inherits from Matcher< T >
   abstract class
   function matches(T,VisitorState) in line 53
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function AbstractTypeMatcher(Supplier< Type >) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractTypeMatcher(Type) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractTypeMatcher(Tree) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractTypeMatcher(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable typeToCompareSupplier in line 34
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Annotation.java
module com::google::errorprone::matchers::Annotation
   inherits from ChildMultiMatcher< T, AnnotationTree >
   function getChildNodes(T,VisitorState) in line 42
      16 lines of code
      2 parameters
      6 conditional paths
   function Annotation(MatchType,Matcher< AnnotationTree >) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable nodeMatcher defined in ChildMultiMatcher< T, AnnotationTree >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgument.java
module com::google::errorprone::matchers::AnnotationDoesNotHaveArgument
   inherits from Matcher< AnnotationTree >
   function matches(AnnotationTree,VisitorState) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in com::google::errorprone::matchers::AnnotationDoesNotHaveArgument
   function AnnotationDoesNotHaveArgument(String) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in com::google::errorprone::matchers::AnnotationDoesNotHaveArgument
   variable name in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValue.java
module com::google::errorprone::matchers::AnnotationHasArgumentWithValue
   inherits from Matcher< AnnotationTree >
   function matches(AnnotationTree,VisitorState) in line 41
      protection public
      22 lines of code
      2 parameters
      6 conditional paths
      uses variable element defined in com::google::errorprone::matchers::AnnotationHasArgumentWithValue
      uses variable valueMatcher defined in com::google::errorprone::matchers::AnnotationHasArgumentWithValue
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function AnnotationHasArgumentWithValue(String,Matcher< ExpressionTree >) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable element defined in com::google::errorprone::matchers::AnnotationHasArgumentWithValue
      uses variable valueMatcher defined in com::google::errorprone::matchers::AnnotationHasArgumentWithValue
   variable element in line 32
   variable valueMatcher in line 33
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/AnnotationMatcherUtils.java
module com::google::errorprone::matchers::AnnotationMatcherUtils
   function getArgument(AnnotationTree,String) in line 38
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function AnnotationMatcherUtils() in line 54
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/AnnotationType.java
module com::google::errorprone::matchers::AnnotationType
   inherits from Matcher< AnnotationTree >
   function matches(AnnotationTree,VisitorState) in line 37
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable annotationClassName defined in com::google::errorprone::matchers::AnnotationType
   function AnnotationType(String) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationClassName defined in com::google::errorprone::matchers::AnnotationType
   variable annotationClassName in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Asserts.java
module com::google::errorprone::matchers::Asserts
   inherits from Matcher< StatementTree >
   function matches(StatementTree,VisitorState) in line 37
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable expressionMatcher defined in com::google::errorprone::matchers::Asserts
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function Asserts(Matcher< ExpressionTree >) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable expressionMatcher defined in com::google::errorprone::matchers::Asserts
   variable expressionMatcher in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/ChildMultiMatcher.java
module com::google::errorprone::matchers::ChildMultiMatcher
   inherits from MultiMatcher< T, N >
   abstract class
   function getChildNodes(T,VisitorState) in line 181
      1 lines of code
      2 parameters
      1 conditional paths
   function getMatchingNode() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matches(T,VisitorState) in line 161
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function ChildMultiMatcher(MatchType,Matcher< N >) in line 155
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable listMatcher in line 152
   variable matchResult in line 153
   variable nodeMatcher in line 150
module com::google::errorprone::matchers::ChildMultiMatcher::MatchType
   variable ALL in line 43
      protection public
   variable AT_LEAST_ONE in line 44
      protection public
   variable LAST in line 46
      protection public
module com::google::errorprone::matchers::ChildMultiMatcher::Matchable
   abstract class
   function create(T,VisitorState) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function state() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tree() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::matchers::ChildMultiMatcher::MatchResult
   abstract class
   function create(Optional< T >,boolean) in line 75
      4 lines of code
      2 parameters
      1 conditional paths
   function match() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(T) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function matches() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function matchingNode() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function none() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::matchers::ChildMultiMatcher::ListMatcher
   abstract class
   function create(MatchType) in line 88
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::ChildMultiMatcher::AllMatcher
   inherits from ListMatcher< N >
   function matches(List< Matchable< N >>,Matcher< N >) in line 106
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable nodeMatcher defined in com::google::errorprone::matchers::ChildMultiMatcher
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
module com::google::errorprone::matchers::ChildMultiMatcher::AtLeastOneMatcher
   inherits from ListMatcher< N >
   function matches(List< Matchable< N >>,Matcher< N >) in line 121
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable nodeMatcher defined in com::google::errorprone::matchers::ChildMultiMatcher
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
module com::google::errorprone::matchers::ChildMultiMatcher::LastMatcher
   inherits from ListMatcher< N >
   function matches(List< Matchable< N >>,Matcher< N >) in line 136
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable nodeMatcher defined in com::google::errorprone::matchers::ChildMultiMatcher
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcher.java
module com::google::errorprone::matchers::CompileTimeConstantExpressionMatcher
   inherits from Matcher< ExpressionTree >
   function hasAttribute(Symbol,String,VisitorState) in line 112
      6 lines of code
      3 parameters
      1 conditional paths
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
   function hasCompileTimeConstantAnnotation(VisitorState,Symbol) in line 120
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function hasAttribute(Symbol,String,VisitorState) defined in com::google::errorprone::matchers::CompileTimeConstantExpressionMatcher
      uses variable COMPILE_TIME_CONSTANT_ANNOTATION defined in com::google::errorprone::matchers::CompileTimeConstantExpressionMatcher
      uses variable GUAVA_COMPILE_TIME_CONSTANT_ANNOTATION defined in com::google::errorprone::matchers::CompileTimeConstantExpressionMatcher
   function matches(ExpressionTree,VisitorState) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable matcher defined in com::google::errorprone::matchers::CompileTimeConstantExpressionMatcher
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable COMPILE_TIME_CONSTANT_ANNOTATION in line 45
   variable GUAVA_COMPILE_TIME_CONSTANT_ANNOTATION in line 49
   variable matcher in line 53
module com::google::errorprone::matchers::CompileTimeConstantExpressionMatcher::ExpressionWithConstValueMatcher
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 76
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::matchers::CompileTimeConstantExpressionMatcher::FinalCompileTimeConstantParameterMatcher
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 89
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses function hasCompileTimeConstantAnnotation(VisitorState,Symbol) defined in com::google::errorprone::matchers::CompileTimeConstantExpressionMatcher
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/CompoundAssignment.java
module com::google::errorprone::matchers::CompoundAssignment
   inherits from Matcher< CompoundAssignmentTree >
   function matches(CompoundAssignmentTree,VisitorState) in line 77
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable operators defined in com::google::errorprone::matchers::CompoundAssignment
      uses variable receiverMatcher defined in com::google::errorprone::matchers::CompoundAssignment
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable expressionMatcher defined in com::google::errorprone::matchers::CompoundAssignment
   function validateOperators(Set< Kind >) in line 90
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable COMPOUND_ASSIGNMENT_OPERATORS defined in com::google::errorprone::matchers::CompoundAssignment
   function CompoundAssignment(Set< Kind >,Matcher< ExpressionTree >,Matcher< ExpressionTree >) in line 63
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses function validateOperators(Set< Kind >) defined in com::google::errorprone::matchers::CompoundAssignment
      uses variable operators defined in com::google::errorprone::matchers::CompoundAssignment
      uses variable receiverMatcher defined in com::google::errorprone::matchers::CompoundAssignment
      uses variable expressionMatcher defined in com::google::errorprone::matchers::CompoundAssignment
   variable COMPOUND_ASSIGNMENT_OPERATORS in line 33
   variable expressionMatcher in line 50
   variable operators in line 48
   variable receiverMatcher in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Constructor.java
module com::google::errorprone::matchers::Constructor
   inherits from Matcher< NewClassTree >
   function matches(NewClassTree,VisitorState) in line 44
      protection public
      18 lines of code
      2 parameters
      3 conditional paths
      uses variable className defined in com::google::errorprone::matchers::Constructor
      uses variable parameterTypes defined in com::google::errorprone::matchers::Constructor
   function Constructor(String,List< String >) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in com::google::errorprone::matchers::Constructor
      uses variable parameterTypes defined in com::google::errorprone::matchers::Constructor
   variable className in line 35
   variable parameterTypes in line 36
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/ConstructorOfClass.java
module com::google::errorprone::matchers::ConstructorOfClass
   inherits from ChildMultiMatcher< ClassTree, MethodTree >
   function getChildNodes(ClassTree,VisitorState) in line 39
      11 lines of code
      2 parameters
      3 conditional paths
   function ConstructorOfClass(MatchType,Matcher< MethodTree >) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable nodeMatcher defined in ChildMultiMatcher< ClassTree, MethodTree >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Contains.java
module com::google::errorprone::matchers::Contains
   inherits from Matcher< Tree >
   function matches(Tree,VisitorState) in line 41
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function Contains(Matcher< Tree >) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable matcher defined in com::google::errorprone::matchers::Contains
   variable matcher in line 34
module com::google::errorprone::matchers::Contains::FirstMatchingScanner
   inherits from com::sun::source::util::TreeScanner
   function reduce(Boolean,Boolean) in line 67
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function scan(Tree,Boolean) in line 56
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable matcher defined in com::google::errorprone::matchers::Contains
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable state defined in com::google::errorprone::matchers::Contains::FirstMatchingScanner
   function FirstMatchingScanner(VisitorState) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in com::google::errorprone::matchers::Contains::FirstMatchingScanner
   variable state in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/DatastoreMatchers.java
module com::google::errorprone::matchers::DatastoreMatchers
   variable anyInstanceMethodOnEntity in line 60
   variable baseMatcher in line 157
      protection public
   variable ENTITY in line 48
      protection public
   variable entityArg in line 98
   variable entityExpr in line 55
   variable entityVar in line 69
   variable hasArgOfTypeIterableEntity in line 139
   variable hasEntityMethodsThatNeedMoreThanKeys in line 118
      protection public
   variable hasEntityTypeArgument in line 121
   variable hasInstanceMethodCallOnEntity in line 62
   variable hasMethodCallOtherThanPrepareThatTakesQueryType in line 92
   variable hasMethodCallThatTakesEntityType in line 100
   variable hasMethodCallWithArgOfTypeIterableEntity in line 143
   variable hasParamOfTypeQueryEntityOrIterable in line 72
   variable hasPrepareMethodCallOnDatastoreService in line 82
   variable hasSetKeysOnlyMethodCall in line 50
      protection public
   variable iterableVar in line 71
   variable onlyNeedKey in line 102
   variable prepareQuery in line 78
   variable QUERY in line 47
      protection public
   variable queryArg in line 88
   variable queryArgButNotPrepare in line 90
   variable queryExpr in line 54
   variable queryVar in line 68
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/DescendantOf.java
module com::google::errorprone::matchers::DescendantOf
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 43
      protection public
      24 lines of code
      2 parameters
      6 conditional paths
      uses variable methodName defined in com::google::errorprone::matchers::DescendantOf
      uses function getTypeFromString(String) defined in com::google::errorprone::VisitorState
      uses variable fullClassName defined in com::google::errorprone::matchers::DescendantOf
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function DescendantOf(String,String) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fullClassName defined in com::google::errorprone::matchers::DescendantOf
      uses variable methodName defined in com::google::errorprone::matchers::DescendantOf
   variable fullClassName in line 34
   variable methodName in line 35
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/predicates/type/DescendantOf.java
module com::google::errorprone::predicates::type::DescendantOf
   inherits from com::google::errorprone::predicates::TypePredicate
   function apply(Type,VisitorState) in line 36
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable expected defined in com::google::errorprone::predicates::type::DescendantOf
      uses function get(VisitorState) defined in com::google::errorprone::suppliers::Supplier
   function DescendantOf(Supplier< Type >) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable expected in line 29
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Description.java
module com::google::errorprone::matchers::Description
   function applySeverityOverride(SeverityLevel) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Description(Tree,String,Fix,BugPattern.SeverityLevel) defined in com::google::errorprone::matchers::Description
      uses variable node defined in com::google::errorprone::matchers::Description
      uses variable checkName defined in com::google::errorprone::matchers::Description
      uses variable rawMessage defined in com::google::errorprone::matchers::Description
      uses variable link defined in com::google::errorprone::matchers::Description
      uses variable fixes defined in com::google::errorprone::matchers::Description
      uses variable severity defined in com::google::errorprone::matchers::Description
   function builder(Tree,String,@Nullable String,SeverityLevel,String) in line 153
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses variable node defined in com::google::errorprone::matchers::Description
      uses variable link defined in com::google::errorprone::matchers::Description
      uses variable severity defined in com::google::errorprone::matchers::Description
   function filterFixes(Predicate<?super Fix >) in line 133
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function Description(Tree,String,Fix,BugPattern.SeverityLevel) defined in com::google::errorprone::matchers::Description
      uses variable node defined in com::google::errorprone::matchers::Description
      uses variable checkName defined in com::google::errorprone::matchers::Description
      uses variable rawMessage defined in com::google::errorprone::matchers::Description
      uses variable link defined in com::google::errorprone::matchers::Description
      uses variable fixes defined in com::google::errorprone::matchers::Description
      uses variable severity defined in com::google::errorprone::matchers::Description
   function getLink() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable link defined in com::google::errorprone::matchers::Description
   function getMessage() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checkName defined in com::google::errorprone::matchers::Description
      uses function getMessageWithoutCheckName() defined in com::google::errorprone::matchers::Description
   function getMessageWithoutCheckName() in line 102
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable link defined in com::google::errorprone::matchers::Description
      uses variable rawMessage defined in com::google::errorprone::matchers::Description
   function getRawMessage() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rawMessage defined in com::google::errorprone::matchers::Description
   function linkTextForDiagnostic(String) in line 146
      3 lines of code
      1 parameters
      1 conditional paths
   function Description(Tree,String,Fix,BugPattern.SeverityLevel) in line 109
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses variable node defined in com::google::errorprone::matchers::Description
      uses variable UNDEFINED_CHECK_NAME defined in com::google::errorprone::matchers::Description
      uses variable severity defined in com::google::errorprone::matchers::Description
   function Description(Tree,String,String,String,ImmutableList< Fix >,BugPattern.SeverityLevel) in line 117
      9 lines of code
      6 parameters
      1 conditional paths
      uses variable node defined in com::google::errorprone::matchers::Description
      uses variable checkName defined in com::google::errorprone::matchers::Description
      uses variable rawMessage defined in com::google::errorprone::matchers::Description
      uses variable link defined in com::google::errorprone::matchers::Description
      uses variable fixes defined in com::google::errorprone::matchers::Description
      uses variable severity defined in com::google::errorprone::matchers::Description
   variable checkName in line 54
      protection public
   variable fixes in line 71
      protection public
   variable link in line 65
   variable NO_MATCH in line 41
      protection public
   variable node in line 49
      protection public
   variable rawMessage in line 59
   variable severity in line 76
      protection public
   variable UNDEFINED_CHECK_NAME in line 44
module com::google::errorprone::matchers::Description::Builder
   function addFix(Fix) in line 188
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable fixListBuilder defined in com::google::errorprone::matchers::Description::Builder
   function build() in line 210
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function Description(Tree,String,Fix,BugPattern.SeverityLevel) defined in com::google::errorprone::matchers::Description
      uses variable node defined in com::google::errorprone::matchers::Description::Builder
      uses variable name defined in com::google::errorprone::matchers::Description::Builder
      uses variable rawMessage defined in com::google::errorprone::matchers::Description::Builder
      uses function linkTextForDiagnostic(String) defined in com::google::errorprone::matchers::Description
      uses variable linkUrl defined in com::google::errorprone::matchers::Description::Builder
      uses variable fixListBuilder defined in com::google::errorprone::matchers::Description::Builder
      uses variable severity defined in com::google::errorprone::matchers::Description::Builder
   function setMessage(String) in line 202
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function Builder(Tree,String,@Nullable String,SeverityLevel,String) in line 169
      12 lines of code
      5 parameters
      1 conditional paths
      uses variable node defined in com::google::errorprone::matchers::Description::Builder
      uses variable name defined in com::google::errorprone::matchers::Description::Builder
      uses variable linkUrl defined in com::google::errorprone::matchers::Description::Builder
      uses variable severity defined in com::google::errorprone::matchers::Description::Builder
      uses variable rawMessage defined in com::google::errorprone::matchers::Description::Builder
   variable fixListBuilder in line 166
   variable linkUrl in line 164
   variable name in line 163
   variable node in line 162
   variable rawMessage in line 167
   variable severity in line 165
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Enclosing.java
module com::google::errorprone::matchers::Enclosing
   function Enclosing() in line 34
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::matchers::Enclosing::EnclosingMatcher
   inherits from Matcher< U >
   abstract class
   function matches(U,VisitorState) in line 47
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function EnclosingMatcher(Matcher< T >,java.lang.Class< T >) in line 41
      4 lines of code
      2 parameters
      1 conditional paths
   variable clazz in line 39
   variable matcher in line 38
module com::google::errorprone::matchers::Enclosing::Block
   inherits from EnclosingMatcher< BlockTree, T >
   function Block(Matcher< BlockTree >) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable matcher defined in com::google::errorprone::matchers::Enclosing::EnclosingMatcher
module com::google::errorprone::matchers::Enclosing::Class
   inherits from EnclosingMatcher< ClassTree, T >
   function Class(Matcher< ClassTree >) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::Enclosing::Method
   inherits from EnclosingMatcher< MethodTree, T >
   function Method(Matcher< MethodTree >) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable matcher defined in com::google::errorprone::matchers::Enclosing::EnclosingMatcher
module com::google::errorprone::matchers::Enclosing::BlockOrCase
   inherits from Matcher< T >
   function matches(T,VisitorState) in line 86
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses function findPathToEnclosing(Class<?extends Tree >...) defined in com::google::errorprone::VisitorState
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function BlockOrCase(Matcher< BlockTree >,Matcher< CaseTree >) in line 80
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable blockTreeMatcher in line 77
   variable caseTreeMatcher in line 78
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/ExpressionMethodSelect.java
module com::google::errorprone::matchers::ExpressionMethodSelect
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 37
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable methodSelectMatcher defined in com::google::errorprone::matchers::ExpressionMethodSelect
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function ExpressionMethodSelect(Matcher< ExpressionTree >) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodSelectMatcher defined in com::google::errorprone::matchers::ExpressionMethodSelect
   variable methodSelectMatcher in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/HasArguments.java
module com::google::errorprone::matchers::HasArguments
   inherits from ChildMultiMatcher< MethodInvocationTree, ExpressionTree >
   function getChildNodes(MethodInvocationTree,VisitorState) in line 36
      4 lines of code
      2 parameters
      1 conditional paths
   function HasArguments(MatchType,Matcher< ExpressionTree >) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable nodeMatcher defined in ChildMultiMatcher< MethodInvocationTree, ExpressionTree >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/HasIdentifier.java
module com::google::errorprone::matchers::HasIdentifier
   inherits from MultiMatcher< Tree, IdentifierTree >
   function getMatchingNode() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matches(Tree,VisitorState) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable nodeMatcher defined in com::google::errorprone::matchers::HasIdentifier
      uses function getPath() defined in com::google::errorprone::VisitorState
   function HasIdentifier(Matcher< IdentifierTree >) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeMatcher defined in com::google::errorprone::matchers::HasIdentifier
   variable nodeMatcher in line 35
module com::google::errorprone::matchers::HasIdentifier::HasIdentifierScanner
   inherits from com::sun::source::util::TreePathScanner
   function reduce(Boolean,Boolean) in line 66
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitClass(ClassTree,Void) in line 71
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitIdentifier(IdentifierTree,Void) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable idMatcher defined in com::google::errorprone::matchers::HasIdentifier::HasIdentifierScanner
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable ancestorState defined in com::google::errorprone::matchers::HasIdentifier::HasIdentifierScanner
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
   function HasIdentifierScanner(VisitorState,Matcher< IdentifierTree >) in line 55
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable ancestorState defined in com::google::errorprone::matchers::HasIdentifier::HasIdentifierScanner
      uses variable idMatcher defined in com::google::errorprone::matchers::HasIdentifier::HasIdentifierScanner
   variable ancestorState in line 53
   variable idMatcher in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/InstanceMethod.java
module com::google::errorprone::matchers::InstanceMethod
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 58
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses variable isWildCard defined in com::google::errorprone::matchers::InstanceMethod
      uses function getName(String) defined in com::google::errorprone::VisitorState
      uses variable methodName defined in com::google::errorprone::matchers::InstanceMethod
      uses variable receiverMatcher defined in com::google::errorprone::matchers::InstanceMethod
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function methodReceiverMatcher(Matcher<?super ExpressionTree >) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function InstanceMethod(Matcher<?super ExpressionTree >,String) defined in com::google::errorprone::matchers::InstanceMethod
      uses variable receiverMatcher defined in com::google::errorprone::matchers::InstanceMethod
   function InstanceMethod(Matcher<?super ExpressionTree >,String) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable receiverMatcher defined in com::google::errorprone::matchers::InstanceMethod
      uses variable methodName defined in com::google::errorprone::matchers::InstanceMethod
   function InstanceMethod(Matcher<?super ExpressionTree >,String,boolean) in line 42
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable receiverMatcher defined in com::google::errorprone::matchers::InstanceMethod
      uses variable methodName defined in com::google::errorprone::matchers::InstanceMethod
      uses variable isWildCard defined in com::google::errorprone::matchers::InstanceMethod
   variable isWildCard in line 36
   variable methodName in line 35
   variable receiverMatcher in line 34
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/IsCastableTo.java
module com::google::errorprone::matchers::IsCastableTo
   inherits from AbstractTypeMatcher< T >
   function matches(T,VisitorState) in line 49
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses variable typeToCompareSupplier defined in AbstractTypeMatcher< T >
      uses function get(VisitorState) defined in com::google::errorprone::suppliers::Supplier
   function IsCastableTo(Supplier< Type >) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeToCompareSupplier defined in AbstractTypeMatcher< T >
   function IsCastableTo(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function IsCastableTo(Tree) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function IsCastableTo(Type) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/IsSameType.java
module com::google::errorprone::matchers::IsSameType
   inherits from AbstractTypeMatcher< T >
   function matches(T,VisitorState) in line 49
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses variable typeToCompareSupplier defined in AbstractTypeMatcher< T >
      uses function get(VisitorState) defined in com::google::errorprone::suppliers::Supplier
   function IsSameType(Supplier< Type >) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeToCompareSupplier defined in AbstractTypeMatcher< T >
   function IsSameType(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function IsSameType(Tree) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function IsSameType(Type) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/IsSubtypeOf.java
module com::google::errorprone::matchers::IsSubtypeOf
   inherits from AbstractTypeMatcher< T >
   function matches(T,VisitorState) in line 49
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses variable typeToCompareSupplier defined in AbstractTypeMatcher< T >
      uses function get(VisitorState) defined in com::google::errorprone::suppliers::Supplier
   function IsSubtypeOf(Supplier< Type >) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeToCompareSupplier defined in AbstractTypeMatcher< T >
   function IsSubtypeOf(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function IsSubtypeOf(Tree) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function IsSubtypeOf(Type) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/IsSymbol.java
module com::google::errorprone::matchers::IsSymbol
   inherits from Matcher< Tree >
   function matches(Tree,VisitorState) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function IsSymbol(Class<?extends Symbol >) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable symbolClass in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/JUnitMatchers.java
module com::google::errorprone::matchers::JUnitMatchers
   variable hasJUnit4AfterAnnotations in line 83
      protection public
   variable hasJUnit4BeforeAnnotations in line 79
      protection public
   variable hasJUnit4TestCases in line 109
      protection public
   variable hasJUnitAnnotation in line 69
      protection public
   variable isConcreteClassWithoutRunWith in line 101
      protection public
   variable isJunit3TestCase in line 134
      protection public
   variable isJUnit3TestClass in line 121
      protection public
   variable isTestCaseDescendant in line 90
      protection public
   variable JUNIT3_TEST_CASE_CLASS in line 65
   variable JUNIT4_IGNORE_ANNOTATION in line 66
   variable JUNIT4_RUN_WITH_ANNOTATION in line 64
      protection public
   variable JUNIT4_TEST_ANNOTATION in line 59
      protection public
   variable JUNIT_AFTER_ANNOTATION in line 61
      protection public
   variable JUNIT_AFTER_CLASS_ANNOTATION in line 63
      protection public
   variable JUNIT_BEFORE_ANNOTATION in line 60
      protection public
   variable JUNIT_BEFORE_CLASS_ANNOTATION in line 62
      protection public
   variable looksLikeJUnit3SetUp in line 150
      protection public
   variable looksLikeJUnit3TearDown in line 171
      protection public
   variable wouldRunInJUnit4 in line 186
      protection public
module com::google::errorprone::matchers::JUnitMatchers::JUnit4TestClassMatcher
   inherits from Matcher< ClassTree >
   function matches(ClassTree,VisitorState) in line 240
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable isJUnit4TestClass defined in com::google::errorprone::matchers::JUnitMatchers::JUnit4TestClassMatcher
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable isJUnit4TestClass in line 235
   variable isJUnit4TestRunner in line 207
   variable TEST_RUNNERS in line 196
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Matcher.java
module com::google::errorprone::matchers::Matcher
   inherits from java::io::Serializable
   function matches(T,VisitorState) in line 31
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Matchers.java
module com::google::errorprone::matchers::Matchers
   function allOf(final Matcher<?super T >...) in line 127
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function annotations(MatchType,Matcher< AnnotationTree >) in line 348
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function anyMethod() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function anyOf(final Iterable<?extends Matcher<?super T >>) in line 143
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
   function anyOf(final Matcher<?super T >...) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function anyOf(final Iterable<?extends Matcher<?super T >>) defined in com::google::errorprone::matchers::Matchers
   function anything() in line 90
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function argument(final int,final Matcher< ExpressionTree >) in line 379
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function argumentCount(final int) in line 423
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function assertionWithCondition(final Matcher< ExpressionTree >) in line 1346
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function assertStatement(Matcher< ExpressionTree >) in line 1162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function assignment(final Matcher< ExpressionTree >,final Matcher<?super ExpressionTree >) in line 1312
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function binaryTree(final Matcher< ExpressionTree >,final Matcher< ExpressionTree >) in line 1065
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function booleanConstant(final boolean) in line 663
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function booleanLiteral(final boolean) in line 646
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
   function classLiteral(final Matcher<?super ExpressionTree >) in line 708
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function compoundAssignment(Kind,Matcher< ExpressionTree >,Matcher< ExpressionTree >) in line 285
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function compoundAssignment(Set< Kind >,Matcher< ExpressionTree >,Matcher< ExpressionTree >) in line 303
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
   function constructor() in line 212
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function constructor(String,List< String >) in line 357
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function constructor(MatchType,Matcher< MethodTree >) in line 364
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function constructorOfClass(final String) in line 952
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function contains(Matcher< Tree >) in line 1362
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function continueStatement() in line 1169
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function doesNotHaveArgument(String) in line 737
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function enclosingBlock(Matcher< BlockTree >) in line 561
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function enclosingClass(Matcher< ClassTree >) in line 568
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function enclosingMethod(Matcher< MethodTree >) in line 575
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function enclosingNode(final Matcher< T >) in line 584
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function enhancedForLoop(final Matcher< VariableTree >,final Matcher< ExpressionTree >,final Matcher< StatementTree >) in line 1263
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function expressionMethodSelect(Matcher< ExpressionTree >) in line 375
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function expressionStatement(final Matcher< ExpressionTree >) in line 1179
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function hasAnnotation(final String) in line 765
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hasAnnotationOnAnyOverriddenMethod(final String) in line 780
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function hasArguments(MatchType,Matcher< ExpressionTree >) in line 387
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function hasArgumentWithValue(String,Matcher< ExpressionTree >) in line 729
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function hasIdentifier(Matcher< IdentifierTree >) in line 1081
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function hasMethod(final Matcher< MethodTree >) in line 969
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function hasModifier(final Modifier) in line 1111
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function ignoreParens(final Matcher< ExpressionTree >) in line 685
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function inLoop() in line 1279
      protection public
      26 lines of code
      0 parameters
      8 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function instanceMethod() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instanceMethod(Matcher<?super ExpressionTree >,String) in line 234
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function inSynchronized() in line 1210
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function intLiteral(final int) in line 696
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function isArrayType() in line 527
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function isCastableTo(String) in line 475
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isCastableTo(Supplier< Type >) in line 484
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isDescendantOfMethod(String,String) in line 1054
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isField() in line 1019
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function isInstance(final java.lang.Class<?>) in line 165
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function isInstanceField() in line 250
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function isNonNull(NullnessAnalysis) in line 1244
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable NONNULL defined in com::google::errorprone::dataflow::nullnesspropagation::Nullness
   function isNull(NullnessAnalysis) in line 1251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable NULL defined in com::google::errorprone::dataflow::nullnesspropagation::Nullness
   function isPrimitiveArrayType() in line 538
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function isPrimitiveType() in line 550
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function isSame(final Tree) in line 188
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function isSameType(Type) in line 493
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isSameType(Supplier< Type >) in line 502
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isSameType(String) in line 511
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isSameType(Tree) in line 520
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isStatic() in line 1131
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function isSubtypeOf(String) in line 448
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isSubtypeOf(Type) in line 457
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isSubtypeOf(Supplier< Type >) in line 466
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isType(final String) in line 741
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isVariable() in line 263
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
   function kindIs(final Kind) in line 177
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function methodHasArity(final int) in line 1371
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function methodHasParameters(final Matcher< VariableTree >...) in line 907
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
   function methodHasParameters(MatchType,Matcher< VariableTree >) in line 928
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function methodHasVisibility(final Visibility) in line 933
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function methodInvocation(Matcher< ExpressionTree >,MatchType,Matcher< ExpressionTree >) in line 399
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function methodInvocation(final Matcher< ExpressionTree >) in line 409
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function methodIsConstructor() in line 937
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function methodIsNamed(final String) in line 852
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function methodNameStartsWith(final String) in line 866
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function methodReceiver(Matcher<?super ExpressionTree >) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function methodReturns(final Matcher<?super Tree >) in line 817
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function methodReturns(final Type) in line 831
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function methodReturns(final Matcher<?super Tree >) defined in com::google::errorprone::matchers::Matchers
      uses function isSameType(Type) defined in com::google::errorprone::matchers::Matchers
   function methodReturns(final Supplier< Type >) in line 835
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function methodReturns(final Matcher<?super Tree >) defined in com::google::errorprone::matchers::Matchers
      uses function isSameType(Type) defined in com::google::errorprone::matchers::Matchers
   function methodReturnsNonNull() in line 808
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function anyOf(final Iterable<?extends Matcher<?super T >>) defined in com::google::errorprone::matchers::Matchers
      uses function instanceMethod() defined in com::google::errorprone::matchers::Matchers
      uses function staticMethod() defined in com::google::errorprone::matchers::Matchers
   function methodReturnsNonPrimitiveType() in line 842
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function methodReturns(final Matcher<?super Tree >) defined in com::google::errorprone::matchers::Matchers
      uses function not(final Matcher< T >) defined in com::google::errorprone::matchers::Matchers
      uses function isPrimitiveType() defined in com::google::errorprone::matchers::Matchers
   function methodSelect(Matcher< ExpressionTree >) in line 370
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function methodWithClassAndName(final String,final String) in line 882
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function nestingKind(final NestingKind) in line 1034
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function nextStatement(Matcher< StatementTree >) in line 607
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function nonNullLiteral() in line 615
      protection public
      22 lines of code
      0 parameters
      9 conditional paths
   function not(final Matcher< T >) in line 114
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function nothing() in line 102
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function parentNode(Matcher<?extends Tree >) in line 437
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function receiverSameAsArgument(final int) in line 316
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function methodSelect(Matcher< ExpressionTree >) defined in com::google::errorprone::matchers::Matchers
   function returnStatement(Matcher<?super ExpressionTree >) in line 1153
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function sameArgument(final int,final int) in line 748
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function sameVariable(final ExpressionTree) in line 1232
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function selectedIsInstance() in line 1090
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
   function staticFieldAccess() in line 1124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function allOf(final Matcher<?super T >...) defined in com::google::errorprone::matchers::Matchers
      uses function isStatic() defined in com::google::errorprone::matchers::Matchers
   function staticMethod() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function staticMethod(String,String) in line 224
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function stringLiteral(String) in line 642
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function throwStatement(Matcher<?super ExpressionTree >) in line 1144
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function toType(final Class< T >,final Matcher<?super T >) in line 1197
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function typeCast(final Matcher< Tree >,final Matcher< ExpressionTree >) in line 1329
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function variableInitializer(final Matcher< ExpressionTree >) in line 1005
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function variableType(final Matcher< Tree >) in line 990
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function Matchers() in line 85
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/AbstractChainedMatcher.java
module com::google::errorprone::matchers::method::AbstractChainedMatcher
   inherits from com::google::errorprone::matchers::method::AbstractSimpleMatcher
   abstract class
   function matchResult(ExpressionTree,A,VisitorState) in line 34
      1 lines of code
      3 parameters
      1 conditional paths
   function matchResult(ExpressionTree,VisitorState) in line 37
      6 lines of code
      2 parameters
      1 conditional paths
   variable baseMatcher in line 27
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/AbstractSimpleMatcher.java
module com::google::errorprone::matchers::method::AbstractSimpleMatcher
   inherits from com::google::errorprone::matchers::Matcher
   abstract class
   function matches(ExpressionTree,VisitorState) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function matchResult(ExpressionTree,VisitorState) in line 27
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/AnyMethodMatcherImpl.java
module com::google::errorprone::matchers::method::AnyMethodMatcherImpl
   inherits from com::google::errorprone::matchers::method::MethodMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::AnyMethodMatcher
   function anyClass() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 32
      4 lines of code
      3 parameters
      1 conditional paths
   function onClass(TypePredicate) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/ConstructorClassMatcherImpl.java
module com::google::errorprone::matchers::method::ConstructorClassMatcherImpl
   inherits from com::google::errorprone::matchers::method::AbstractChainedMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::ConstructorClassMatcher
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 36
      7 lines of code
      3 parameters
      1 conditional paths
   function withParameters(String...) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function withParameters(Iterable< String >) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ConstructorClassMatcherImpl(ConstructorMatcherImpl,TypePredicate) in line 44
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable predicate in line 33
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/ConstructorMatcherImpl.java
module com::google::errorprone::matchers::method::ConstructorMatcherImpl
   inherits from com::google::errorprone::matchers::method::AbstractSimpleMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::ConstructorMatcher
   function forClass(String) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function forClass(Supplier< Type >) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function matchResult(ExpressionTree,VisitorState) in line 36
      18 lines of code
      2 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/InstanceMethodMatcherImpl.java
module com::google::errorprone::matchers::method::InstanceMethodMatcherImpl
   inherits from com::google::errorprone::matchers::method::MethodMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::InstanceMethodMatcher
   function anyClass() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 35
      7 lines of code
      3 parameters
      1 conditional paths
   function onClass(TypePredicate) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onDescendantOf(String) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onDescendantOf(Supplier< Type >) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onDescendantOfAny(Iterable< String >) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onDescendantOfAny(String...) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onExactClass(String) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onExactClass(Supplier< Type >) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/MatchState.java
module com::google::errorprone::matchers::method::MatchState
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/MethodClassMatcherImpl.java
module com::google::errorprone::matchers::method::MethodClassMatcherImpl
   inherits from com::google::errorprone::matchers::method::AbstractChainedMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::MethodClassMatcher
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 43
      6 lines of code
      3 parameters
      1 conditional paths
   function named(String) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function withAnyName() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function withNameMatching(Pattern) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function withSignature(String) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable predicate in line 35
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/MethodMatcher.java
module com::google::errorprone::matchers::method::MethodMatcher
   inherits from com::google::errorprone::matchers::method::AbstractChainedMatcher
   abstract class
   variable BASE_METHOD_MATCHER in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/MethodMatchers.java
module com::google::errorprone::matchers::method::MethodMatchers
   function anyMethod() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function constructor() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instanceMethod() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function staticMethod() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodMatchers::InstanceMethodMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function anyClass() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function onClass(TypePredicate) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onDescendantOf(String) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onDescendantOf(Supplier< Type >) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onDescendantOfAny(String...) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onDescendantOfAny(Iterable< String >) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onExactClass(String) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onExactClass(Supplier< Type >) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodMatchers::StaticMethodMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function onClass(String) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onClass(Supplier< Type >) in line 63
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onClassAny(Iterable< String >) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onClassAny(String...) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodMatchers::AnyMethodMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function anyClass() in line 77
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function onClass(TypePredicate) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodMatchers::MethodClassMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function named(String) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function withAnyName() in line 85
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function withNameMatching(Pattern) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function withSignature(String) in line 97
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodMatchers::MethodSignatureMatcher
   inherits from com::google::errorprone::matchers::Matcher
module com::google::errorprone::matchers::method::MethodMatchers::MethodNameMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function withParameters(String...) in line 105
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function withParameters(Iterable< String >) in line 108
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodMatchers::ConstructorMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function forClass(String) in line 113
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function forClass(Supplier< Type >) in line 116
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodMatchers::ConstructorClassMatcher
   inherits from com::google::errorprone::matchers::Matcher
   function withParameters(String...) in line 121
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function withParameters(Iterable< String >) in line 124
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodMatchers::ParameterMatcher
   inherits from com::google::errorprone::matchers::Matcher
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/MethodNameMatcherImpl.java
module com::google::errorprone::matchers::method::MethodNameMatcherImpl
   inherits from com::google::errorprone::matchers::method::AbstractChainedMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::MethodNameMatcher
   abstract class
   function withParameters(String...) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function withParameters(Iterable< String >) in line 43
      protection public
      3 lines of code
      1 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
module com::google::errorprone::matchers::method::MethodNameMatcherImpl::Exact
   inherits from com::google::errorprone::matchers::method::MethodNameMatcherImpl
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 57
      7 lines of code
      3 parameters
      1 conditional paths
   variable name in line 49
module com::google::errorprone::matchers::method::MethodNameMatcherImpl::Any
   inherits from com::google::errorprone::matchers::method::MethodNameMatcherImpl
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 73
      4 lines of code
      3 parameters
      1 conditional paths
module com::google::errorprone::matchers::method::MethodNameMatcherImpl::Regex
   inherits from com::google::errorprone::matchers::method::MethodNameMatcherImpl
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 91
      7 lines of code
      3 parameters
      1 conditional paths
   variable regex in line 82
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/MethodSignatureMatcherImpl.java
module com::google::errorprone::matchers::method::MethodSignatureMatcherImpl
   inherits from com::google::errorprone::matchers::method::AbstractChainedMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::MethodSignatureMatcher
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 36
      9 lines of code
      3 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable methodName defined in com::google::errorprone::matchers::method::MethodSignatureMatcherImpl
   variable methodName in line 28
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/ParameterMatcherImpl.java
module com::google::errorprone::matchers::method::ParameterMatcherImpl
   inherits from com::google::errorprone::matchers::method::AbstractChainedMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::ParameterMatcher
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 57
      18 lines of code
      3 parameters
      6 conditional paths
      uses variable expected defined in com::google::errorprone::matchers::method::ParameterMatcherImpl
      uses function getTypes() defined in com::google::errorprone::VisitorState
   variable expected in line 35
   variable GET_SUPPLIER in line 38
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/method/StaticMethodMatcherImpl.java
module com::google::errorprone::matchers::method::StaticMethodMatcherImpl
   inherits from com::google::errorprone::matchers::method::MethodMatcher
   inherits from com::google::errorprone::matchers::method::MethodMatchers::StaticMethodMatcher
   function matchResult(ExpressionTree,MatchState,VisitorState) in line 32
      7 lines of code
      3 parameters
      1 conditional paths
   function onClass(String) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onClass(Supplier< Type >) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onClassAny(Iterable< String >) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onClassAny(String...) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/MethodHasParameters.java
module com::google::errorprone::matchers::MethodHasParameters
   inherits from ChildMultiMatcher< MethodTree, VariableTree >
   function getChildNodes(MethodTree,VisitorState) in line 36
      4 lines of code
      2 parameters
      1 conditional paths
   function MethodHasParameters(MatchType,Matcher< VariableTree >) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable nodeMatcher defined in ChildMultiMatcher< MethodTree, VariableTree >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/MethodInvocation.java
module com::google::errorprone::matchers::MethodInvocation
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 48
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable methodSelectMatcher defined in com::google::errorprone::matchers::MethodInvocation
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable methodArgumentMatcher defined in com::google::errorprone::matchers::MethodInvocation
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::ChildMultiMatcher
   function MethodInvocation(Matcher< ExpressionTree >,MatchType,Matcher< ExpressionTree >) in line 41
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable methodSelectMatcher defined in com::google::errorprone::matchers::MethodInvocation
      uses variable methodArgumentMatcher defined in com::google::errorprone::matchers::MethodInvocation
   variable methodArgumentMatcher in line 34
   variable methodSelectMatcher in line 33
module com::google::errorprone::matchers::MethodInvocation::MethodArgumentMatcher
   inherits from ChildMultiMatcher< MethodInvocationTree, ExpressionTree >
   function getChildNodes(MethodInvocationTree,VisitorState) in line 67
      4 lines of code
      2 parameters
      1 conditional paths
   function MethodArgumentMatcher(MatchType,Matcher< ExpressionTree >) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable nodeMatcher defined in ChildMultiMatcher< MethodInvocationTree, ExpressionTree >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/MethodInvocationArgument.java
module com::google::errorprone::matchers::MethodInvocationArgument
   inherits from Matcher< MethodInvocationTree >
   function matches(MethodInvocationTree,VisitorState) in line 37
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable position defined in com::google::errorprone::matchers::MethodInvocationArgument
      uses variable argumentMatcher defined in com::google::errorprone::matchers::MethodInvocationArgument
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function MethodInvocationArgument(int,Matcher< ExpressionTree >) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable position defined in com::google::errorprone::matchers::MethodInvocationArgument
      uses variable argumentMatcher defined in com::google::errorprone::matchers::MethodInvocationArgument
   variable argumentMatcher in line 29
   variable position in line 28
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/MethodInvocationMethodSelect.java
module com::google::errorprone::matchers::MethodInvocationMethodSelect
   inherits from Matcher< MethodInvocationTree >
   function matches(MethodInvocationTree,VisitorState) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable methodSelectMatcher defined in com::google::errorprone::matchers::MethodInvocationMethodSelect
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function MethodInvocationMethodSelect(Matcher< ExpressionTree >) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodSelectMatcher defined in com::google::errorprone::matchers::MethodInvocationMethodSelect
   variable methodSelectMatcher in line 28
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/MethodVisibility.java
module com::google::errorprone::matchers::MethodVisibility
   inherits from Matcher< MethodTree >
   function matches(MethodTree,VisitorState) in line 41
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable visibility defined in com::google::errorprone::matchers::MethodVisibility
      uses variable DEFAULT defined in com::google::errorprone::matchers::MethodVisibility::Visibility
      uses variable PUBLIC defined in com::google::errorprone::matchers::MethodVisibility::Visibility
      uses variable PROTECTED defined in com::google::errorprone::matchers::MethodVisibility::Visibility
      uses variable PRIVATE defined in com::google::errorprone::matchers::MethodVisibility::Visibility
      uses function toModifier() defined in com::google::errorprone::matchers::MethodVisibility::Visibility
   function MethodVisibility(Visibility) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable visibility defined in com::google::errorprone::matchers::MethodVisibility
   variable visibility in line 34
module com::google::errorprone::matchers::MethodVisibility::Visibility
   function toModifier() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Visibility(Modifier) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable correspondingModifier in line 58
   variable DEFAULT in line 55
      protection public
   variable PRIVATE in line 56
      protection public
   variable PROTECTED in line 54
      protection public
   variable PUBLIC in line 53
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/MultiMatcher.java
module com::google::errorprone::matchers::MultiMatcher
   inherits from Matcher< T >
   function getMatchingNode() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/NewInstanceAnonymousInnerClass.java
module com::google::errorprone::matchers::NewInstanceAnonymousInnerClass
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 42
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable superClass defined in com::google::errorprone::matchers::NewInstanceAnonymousInnerClass
   function NewInstanceAnonymousInnerClass(String) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable superClass defined in com::google::errorprone::matchers::NewInstanceAnonymousInnerClass
   variable superClass in line 35
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/NextStatement.java
module com::google::errorprone::matchers::NextStatement
   inherits from Matcher< T >
   function matches(T,VisitorState) in line 41
      protection public
      29 lines of code
      2 parameters
      1 conditional paths
   function NextStatement(Matcher< StatementTree >) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable matcher in line 34
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/NullnessMatcher.java
module com::google::errorprone::matchers::NullnessMatcher
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable nullnessAnalysis defined in com::google::errorprone::matchers::NullnessMatcher
      uses function getNullness(TreePath,Context) defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis
      uses variable context defined in com::google::errorprone::VisitorState
      uses variable expectedNullnessValue defined in com::google::errorprone::matchers::NullnessMatcher
   function NullnessMatcher(NullnessAnalysis,Nullness) in line 33
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable nullnessAnalysis defined in com::google::errorprone::matchers::NullnessMatcher
      uses variable expectedNullnessValue defined in com::google::errorprone::matchers::NullnessMatcher
   variable expectedNullnessValue in line 31
   variable nullnessAnalysis in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/ParentNode.java
module com::google::errorprone::matchers::ParentNode
   inherits from Matcher< Tree >
   function matches(Tree,VisitorState) in line 34
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable treeMatcher defined in com::google::errorprone::matchers::ParentNode
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
   function ParentNode(Matcher< Tree >) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable treeMatcher defined in com::google::errorprone::matchers::ParentNode
   variable treeMatcher in line 27
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Returns.java
module com::google::errorprone::matchers::Returns
   inherits from Matcher< StatementTree >
   function matches(StatementTree,VisitorState) in line 43
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable returnedMatcher defined in com::google::errorprone::matchers::Returns
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function Returns(Matcher<?super ExpressionTree >) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable returnedMatcher defined in com::google::errorprone::matchers::Returns
   variable returnedMatcher in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/StaticMethod.java
module com::google::errorprone::matchers::StaticMethod
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 41
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable methodName defined in com::google::errorprone::matchers::StaticMethod
      uses variable fullClass defined in com::google::errorprone::matchers::StaticMethod
   function StaticMethod(String,String) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fullClass defined in com::google::errorprone::matchers::StaticMethod
      uses variable methodName defined in com::google::errorprone::matchers::StaticMethod
   variable fullClass in line 32
   variable methodName in line 33
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/StringLiteral.java
module com::google::errorprone::matchers::StringLiteral
   inherits from Matcher< ExpressionTree >
   function matches(ExpressionTree,VisitorState) in line 36
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable value defined in com::google::errorprone::matchers::StringLiteral
   function StringLiteral(String) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in com::google::errorprone::matchers::StringLiteral
   variable value in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Suppressible.java
module com::google::errorprone::matchers::Suppressible
   function allNames() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function canonicalName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function customSuppressionAnnotations() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressibility() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/Throws.java
module com::google::errorprone::matchers::Throws
   inherits from Matcher< StatementTree >
   function matches(StatementTree,VisitorState) in line 43
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable thrownMatcher defined in com::google::errorprone::matchers::Throws
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function Throws(Matcher<?super ExpressionTree >) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable thrownMatcher defined in com::google::errorprone::matchers::Throws
   variable thrownMatcher in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/matchers/WaitMatchers.java
module com::google::errorprone::matchers::WaitMatchers
   variable CONDITION_FQN in line 32
   variable OBJECT_FQN in line 31
   variable waitMethod in line 37
      protection public
   variable waitMethodWithTimeout in line 44
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/predicates/type/Any.java
module com::google::errorprone::predicates::type::Any
   inherits from com::google::errorprone::predicates::TypePredicate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/predicates/type/Array.java
module com::google::errorprone::predicates::type::Array
   inherits from com::google::errorprone::predicates::TypePredicate
   variable apply in line 31
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/predicates/type/DescendantOfAny.java
module com::google::errorprone::predicates::type::DescendantOfAny
   inherits from com::google::errorprone::predicates::TypePredicate
   function apply(Type,VisitorState) in line 36
      protection public
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable types defined in com::google::errorprone::predicates::type::DescendantOfAny
   function DescendantOfAny(Iterable< Supplier< Type >>) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable types defined in com::google::errorprone::predicates::type::DescendantOfAny
   variable types in line 29
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/predicates/type/Exact.java
module com::google::errorprone::predicates::type::Exact
   inherits from com::google::errorprone::predicates::TypePredicate
   function apply(Type,VisitorState) in line 36
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable supplier defined in com::google::errorprone::predicates::type::Exact
      uses function get(VisitorState) defined in com::google::errorprone::suppliers::Supplier
   function Exact(Supplier< Type >) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable supplier in line 29
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/predicates/type/ExactAny.java
module com::google::errorprone::predicates::type::ExactAny
   inherits from com::google::errorprone::predicates::TypePredicate
   function apply(Type,VisitorState) in line 36
      protection public
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable types defined in com::google::errorprone::predicates::type::ExactAny
   function ExactAny(Iterable< Supplier< Type >>) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable types defined in com::google::errorprone::predicates::type::ExactAny
   variable types in line 29
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/predicates/TypePredicate.java
module com::google::errorprone::predicates::TypePredicate
   inherits from java::io::Serializable
   function apply(Type,VisitorState) in line 27
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/predicates/TypePredicates.java
module com::google::errorprone::predicates::TypePredicates
   function anyType() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isArray() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDescendantOf(Supplier< Type >) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isDescendantOf(String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isDescendantOf(Supplier< Type >) defined in com::google::errorprone::predicates::TypePredicates
   function isDescendantOfAny(Iterable< String >) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable GET_TYPE defined in com::google::errorprone::predicates::TypePredicates
   function isExactType(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isExactType(Supplier< Type >) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isExactTypeAny(Iterable< String >) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable GET_TYPE defined in com::google::errorprone::predicates::TypePredicates
   variable GET_TYPE in line 57
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/AfterTemplate.java
module com::google::errorprone::refaster::annotation::AfterTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/AllowCodeBetweenLines.java
module com::google::errorprone::refaster::annotation::AllowCodeBetweenLines
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/AlsoNegation.java
module com::google::errorprone::refaster::annotation::AlsoNegation
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/BeforeTemplate.java
module com::google::errorprone::refaster::annotation::BeforeTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/Matches.java
module com::google::errorprone::refaster::annotation::Matches
   function value() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/MayOptionallyUse.java
module com::google::errorprone::refaster::annotation::MayOptionallyUse
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/NoAutoboxing.java
module com::google::errorprone::refaster::annotation::NoAutoboxing
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/NotMatches.java
module com::google::errorprone::refaster::annotation::NotMatches
   function value() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/OfKind.java
module com::google::errorprone::refaster::annotation::OfKind
   function value() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/Placeholder.java
module com::google::errorprone::refaster::annotation::Placeholder
   function allowsIdentity() in line 92
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/Repeated.java
module com::google::errorprone::refaster::annotation::Repeated
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/RequiredAnnotation.java
module com::google::errorprone::refaster::annotation::RequiredAnnotation
   function value() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/RequiredAnnotationProcessor.java
module com::google::errorprone::refaster::annotation::RequiredAnnotationProcessor
   inherits from javax::annotation::processing::AbstractProcessor
   function getAnnotationMirror(Element,TypeMirror) in line 52
      8 lines of code
      2 parameters
      3 conditional paths
   function getAnnotationValue(AnnotationMirror,String) in line 61
      9 lines of code
      2 parameters
      3 conditional paths
   function getSupportedSourceVersion() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function printError(Element,AnnotationMirror,String,Object...) in line 117
      5 lines of code
      4 parameters
      1 conditional paths
   function process(Set<?extends TypeElement >,RoundEnvironment) in line 44
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function validateElement(final Element) in line 77
      39 lines of code
      1 parameters
      6 conditional paths
   function validateElements(Iterable<?extends Element >) in line 71
      5 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/annotation/UseImportPolicy.java
module com::google::errorprone::refaster::annotation::UseImportPolicy
   function value() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/Bindings.java
module com::google::errorprone::refaster::Bindings
   inherits from com::google::common::collect::ForwardingMap
   function create() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function Bindings() defined in com::google::errorprone::refaster::Bindings
   function create(Key< V >,V) in line 85
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function create() defined in com::google::errorprone::refaster::Bindings
   function create(Key< V1 >,V1,Key< V2 >,V2) in line 91
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function create() defined in com::google::errorprone::refaster::Bindings
   function create(Bindings) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Bindings() defined in com::google::errorprone::refaster::Bindings
   function delegate() in line 115
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in com::google::errorprone::refaster::Bindings
   function put(Key<?>,Object) in line 132
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function putAll(Map<?extends Key<?>,?extends Object >) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function unmodifiable() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function Bindings() defined in com::google::errorprone::refaster::Bindings
      uses variable contents defined in com::google::errorprone::refaster::Bindings
   function Bindings() in line 102
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in com::google::errorprone::refaster::Bindings
   function Bindings(Map< Key<?>, Object >) in line 110
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable contents defined in com::google::errorprone::refaster::Bindings
   variable contents in line 79
module com::google::errorprone::refaster::Bindings::Key
   abstract class
   function equals(@Nullable Object) in line 65
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getIdentifier() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Key(String) in line 47
      3 lines of code
      1 parameters
      1 conditional paths
   variable identifier in line 45
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/BlockTemplate.java
module com::google::errorprone::refaster::BlockTemplate
   inherits from Template< BlockTemplateMatch >
   abstract class
   function create(UStatement...) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function create(Map< String,?extends UType >,UStatement...) in line 59
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function create(UStatement...) defined in com::google::errorprone::refaster::BlockTemplate
      uses function expressionArgumentTypes() defined in Template< BlockTemplateMatch >
   function create(Iterable< UTypeVar >,Map< String,?extends UType >,UStatement...) in line 64
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function create(UStatement...) defined in com::google::errorprone::refaster::BlockTemplate
      uses function expressionArgumentTypes() defined in Template< BlockTemplateMatch >
   function create(ImmutableClassToInstanceMap< Annotation >,Iterable< UTypeVar >,Map< String,?extends UType >,Iterable<?extends UStatement >) in line 70
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function annotations() defined in Template< BlockTemplateMatch >
      uses function expressionArgumentTypes() defined in Template< BlockTemplateMatch >
   function match(JCTree,Context) in line 89
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function matchesStartingAnywhere(JCBlock,int,final ImmutableList<?extends StatementTree >,final Context) defined in com::google::errorprone::refaster::BlockTemplate
   function matchesStartingAnywhere(JCBlock,int,final ImmutableList<?extends StatementTree >,final Context) in line 148
      12 lines of code
      4 parameters
      2 conditional paths
      uses function or(final Choice< T >) defined in com::google::errorprone::refaster::Choice
      uses function matchesStartingAtBeginning(final JCBlock,final int,final ImmutableList<?extends StatementTree >,final Context) defined in com::google::errorprone::refaster::BlockTemplate
   function matchesStartingAtBeginning(final JCBlock,final int,final ImmutableList<?extends StatementTree >,final Context) in line 100
      38 lines of code
      4 parameters
      5 conditional paths
      uses function unifier() defined in com::google::errorprone::refaster::UStatement::UnifierWithUnconsumedStatements
      uses function createInliner() defined in com::google::errorprone::refaster::Unifier
      uses function typecheck(Unifier,Inliner,Warner,List< Type >,List< Type >) defined in Template< BlockTemplateMatch >
      uses function expectedTypes(Inliner) defined in Template< BlockTemplateMatch >
      uses function actualTypes(Inliner) defined in Template< BlockTemplateMatch >
      uses function unconsumedStatements() defined in com::google::errorprone::refaster::UStatement::UnifierWithUnconsumedStatements
      uses function match(JCTree,Context) defined in com::google::errorprone::refaster::BlockTemplate
      uses function matchesStartingAnywhere(JCBlock,int,final ImmutableList<?extends StatementTree >,final Context) defined in com::google::errorprone::refaster::BlockTemplate
      uses function prepend(final T) defined in com::google::errorprone::refaster::BlockTemplate
   function prepend(final T) in line 139
      8 lines of code
      1 parameters
      1 conditional paths
   function printStatement(Context,JCStatement) in line 164
      9 lines of code
      2 parameters
      2 conditional paths
      uses function pretty(Context,final Writer) defined in Template< BlockTemplateMatch >
   function printStatements(Context,Iterable< JCStatement >) in line 178
      10 lines of code
      2 parameters
      2 conditional paths
      uses function pretty(Context,final Writer) defined in Template< BlockTemplateMatch >
   function replace(BlockTemplateMatch) in line 190
      protection public
      43 lines of code
      1 parameters
      8 conditional paths
      uses function match(JCTree,Context) defined in com::google::errorprone::refaster::BlockTemplate
      uses function getContext() defined in com::google::errorprone::refaster::Inliner
      uses function annotations() defined in Template< BlockTemplateMatch >
      uses function printStatement(Context,JCStatement) defined in com::google::errorprone::refaster::BlockTemplate
      uses function printStatements(Context,Iterable< JCStatement >) defined in com::google::errorprone::refaster::BlockTemplate
      uses variable logger defined in com::google::errorprone::refaster::BlockTemplate
      uses function addImports(Inliner,SuggestedFix.Builder) defined in Template< BlockTemplateMatch >
   function withStatements(Iterable<?extends UStatement >) in line 77
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function create(UStatement...) defined in com::google::errorprone::refaster::BlockTemplate
      uses function annotations() defined in Template< BlockTemplateMatch >
      uses function templateTypeVariables() defined in Template< BlockTemplateMatch >
      uses function expressionArgumentTypes() defined in Template< BlockTemplateMatch >
   variable logger in line 53
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/BlockTemplateMatch.java
module com::google::errorprone::refaster::BlockTemplateMatch
   inherits from com::google::errorprone::refaster::TemplateMatch
   function getRange(JCCompilationUnit) in line 49
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function getStatements() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BlockTemplateMatch(JCBlock,Unifier,int,int) in line 39
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   variable statements in line 37
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/Choice.java
module com::google::errorprone::refaster::Choice
   abstract class
   function any(final Collection< Choice< T >>) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function condition(boolean,T) in line 138
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function condition(boolean) in line 280
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function condition(final Predicate<?super T >) in line 287
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function first() in line 191
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function from(final Collection< T >) in line 149
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function fromOptional(Optional< T >) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function iterator() in line 186
      1 lines of code
      0 parameters
      1 conditional paths
   function none() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function of(final T) in line 99
      protection public
      34 lines of code
      1 parameters
      1 conditional paths
   function or(final Choice< T >) in line 262
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function Choice() in line 172
      1 lines of code
      0 parameters
      1 conditional paths
   variable NONE in line 51
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/ControlFlowVisitor.java
module com::google::errorprone::refaster::ControlFlowVisitor
   inherits from com::sun::source::util::SimpleTreeVisitor
   function defaultAction(Tree,BreakContext) in line 171
      3 lines of code
      2 parameters
      1 conditional paths
   function visitBlock(BlockTree,BreakContext) in line 176
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitBreak(BreakTree,BreakContext) in line 298
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function visitCase(CaseTree,BreakContext) in line 247
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitCatch(CatchTree,BreakContext) in line 269
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitContinue(ContinueTree,BreakContext) in line 308
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function visitDoWhileLoop(DoWhileLoopTree,BreakContext) in line 181
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function visitEnhancedForLoop(EnhancedForLoopTree,BreakContext) in line 211
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function visitExpressionStatement(ExpressionStatementTree,BreakContext) in line 283
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitForLoop(ForLoopTree,BreakContext) in line 201
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function visitIf(IfTree,BreakContext) in line 274
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function visitLabeledStatement(LabeledStatementTree,BreakContext) in line 288
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function visitReturn(ReturnTree,BreakContext) in line 318
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitStatement(StatementTree) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitStatements(Iterable<?extends StatementTree >) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitStatements(Iterable<?extends StatementTree >,BreakContext) in line 162
      7 lines of code
      2 parameters
      1 conditional paths
   function visitSwitch(SwitchTree,BreakContext) in line 221
      protection public
      24 lines of code
      2 parameters
      1 conditional paths
   function visitSynchronized(SynchronizedTree,BreakContext) in line 252
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitThrow(ThrowTree,BreakContext) in line 323
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitTry(TryTree,BreakContext) in line 257
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function visitWhileLoop(WhileLoopTree,BreakContext) in line 191
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function ControlFlowVisitor() in line 152
      1 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 58
      protection public
module com::google::errorprone::refaster::ControlFlowVisitor::Result
   function or(Result) in line 129
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function then(Result) in line 131
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable or in line 127
      protection public
module com::google::errorprone::refaster::ControlFlowVisitor::BreakContext
   function BreakContext() in line 138
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/CouldNotResolveImportException.java
module com::google::errorprone::refaster::CouldNotResolveImportException
   inherits from Exception
   function CouldNotResolveImportException(CharSequence) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/ExpressionTemplate.java
module com::google::errorprone::refaster::ExpressionTemplate
   inherits from Template< ExpressionTemplateMatch >
   inherits from Unifiable< JCExpression >
   abstract class
   function create(UExpression,UType) in line 69
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function create(Map< String,?extends UType >,UExpression,UType) in line 74
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
      uses function create(UExpression,UType) defined in com::google::errorprone::refaster::ExpressionTemplate
      uses function expressionArgumentTypes() defined in Template< ExpressionTemplateMatch >
   function create(ImmutableClassToInstanceMap< Annotation >,Iterable< UTypeVar >,Map< String,?extends UType >,UExpression,UType) in line 85
      protection public
      12 lines of code
      5 parameters
      1 conditional paths
      uses function annotations() defined in Template< ExpressionTemplateMatch >
      uses function expressionArgumentTypes() defined in Template< ExpressionTemplateMatch >
   function generateNegation() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function annotations() defined in Template< ExpressionTemplateMatch >
   function getPrecedence(JCTree,Context) in line 192
      47 lines of code
      2 parameters
      10 conditional paths
   function match(JCTree,Context) in line 116
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function unify(final JCExpression,Unifier) defined in com::google::errorprone::refaster::ExpressionTemplate
   function negation() in line 105
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function create(UExpression,UType) defined in com::google::errorprone::refaster::ExpressionTemplate
      uses function annotations() defined in Template< ExpressionTemplateMatch >
      uses function templateTypeVariables() defined in Template< ExpressionTemplateMatch >
      uses function expressionArgumentTypes() defined in Template< ExpressionTemplateMatch >
   function replace(ExpressionTemplateMatch) in line 166
      protection public
      21 lines of code
      1 parameters
      3 conditional paths
      uses function match(JCTree,Context) defined in com::google::errorprone::refaster::ExpressionTemplate
      uses function getContext() defined in com::google::errorprone::refaster::Inliner
      uses function annotations() defined in Template< ExpressionTemplateMatch >
      uses function getPrecedence(JCTree,Context) defined in com::google::errorprone::refaster::ExpressionTemplate
      uses function pretty(Context,final Writer) defined in Template< ExpressionTemplateMatch >
      uses variable logger defined in com::google::errorprone::refaster::ExpressionTemplate
      uses function addImports(Inliner,SuggestedFix.Builder) defined in Template< ExpressionTemplateMatch >
   function unify(final JCExpression,Unifier) in line 128
      protection public
      32 lines of code
      2 parameters
      3 conditional paths
      uses function createInliner() defined in com::google::errorprone::refaster::Unifier
      uses function expectedTypes(Inliner) defined in Template< ExpressionTemplateMatch >
      uses function actualTypes(Inliner) defined in Template< ExpressionTemplateMatch >
      uses function typecheck(Unifier,Inliner,Warner,List< Type >,List< Type >) defined in Template< ExpressionTemplateMatch >
      uses variable logger defined in com::google::errorprone::refaster::ExpressionTemplate
   variable logger in line 67
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/ExpressionTemplateMatch.java
module com::google::errorprone::refaster::ExpressionTemplateMatch
   inherits from com::google::errorprone::refaster::TemplateMatch
   function getLocation() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ExpressionTemplateMatch(JCExpression,Unifier) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/ImportPolicy.java
module com::google::errorprone::refaster::ImportPolicy
   function bind(Context,ImportPolicy) in line 180
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function classReference(Inliner,CharSequence,CharSequence) in line 190
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function instance(Context) in line 184
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function staticReference(Inliner,CharSequence,CharSequence,CharSequence) in line 193
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   variable classReference in line 178
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/Inlineable.java
module com::google::errorprone::refaster::Inlineable
   function inline(Inliner) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/Inliner.java
module com::google::errorprone::refaster::Inliner
   function addImport(String) in line 74
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable importsToAdd defined in com::google::errorprone::refaster::Inliner
   function addStaticImport(String) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable staticImportsToAdd defined in com::google::errorprone::refaster::Inliner
   function asName(CharSequence) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function names() defined in com::google::errorprone::refaster::Inliner
   function enter() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
   function getContext() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
   function getImportsToAdd() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable importsToAdd defined in com::google::errorprone::refaster::Inliner
   function getStaticImportsToAdd() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable staticImportsToAdd defined in com::google::errorprone::refaster::Inliner
   function importPolicy() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
   function infer() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
   function inlineAsTree(Type) in line 173
      protection public
      3 lines of code
      1 parameters
      5 conditional paths
      uses variable INLINE_AS_TREE defined in com::google::errorprone::refaster::Inliner
      uses variable bindings defined in com::google::errorprone::refaster::Inliner
   function inlineAsVar(UTypeVar) in line 219
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable typeVarCache defined in com::google::errorprone::refaster::Inliner
      uses function asName(CharSequence) defined in com::google::errorprone::refaster::Inliner
      uses function symtab() defined in com::google::errorprone::refaster::Inliner
      uses function key() defined in com::google::errorprone::refaster::UTypeVar
   function maker() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
   function names() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
   function resolveClass(CharSequence) in line 84
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
      uses function symtab() defined in com::google::errorprone::refaster::Inliner
   function symtab() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
   function types() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
   function Inliner(Context,Bindings) in line 66
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Inliner
      uses variable bindings defined in com::google::errorprone::refaster::Inliner
      uses function unmodifiable() defined in com::google::errorprone::refaster::Bindings
   variable bindings in line 62
      protection public
   variable context in line 59
   variable importsToAdd in line 60
   variable INLINE_AS_TREE in line 134
   variable staticImportsToAdd in line 61
   variable typeVarCache in line 64
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/LocalVarBinding.java
module com::google::errorprone::refaster::LocalVarBinding
   abstract class
   function create(VarSymbol,ModifiersTree) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getSymbol() defined in com::google::errorprone::refaster::LocalVarBinding
      uses function getModifiers() defined in com::google::errorprone::refaster::LocalVarBinding
   function getModifiers() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSymbol() defined in com::google::errorprone::refaster::LocalVarBinding
   function getSymbol() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSymbol() defined in com::google::errorprone::refaster::LocalVarBinding
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/PlaceholderMethod.java
module com::google::errorprone::refaster::PlaceholderMethod
   inherits from java::io::Serializable
   abstract class
module com::google::errorprone::refaster::PlaceholderMethod::PlaceholderExpressionKey
   inherits from Key< JCExpression >
   inherits from Comparable
   function compareTo(PlaceholderExpressionKey) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PlaceholderExpressionKey(String,PlaceholderMethod) in line 132
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::refaster::PlaceholderMethod::PlaceholderBlockKey
   inherits from Key< List< JCStatement > >
   function PlaceholderBlockKey(String,PlaceholderMethod) in line 146
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/PlaceholderUnificationVisitor.java
module com::google::errorprone::refaster::PlaceholderUnificationVisitor
   inherits from com::sun::source::util::SimpleTreeVisitor
   abstract class
   function create(TreeMaker,Map< UVariableDecl, UExpression >) in line 154
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function defaultAction(Tree,State<?>) in line 333
      4 lines of code
      2 parameters
      1 conditional paths
   function unify(@Nullable Tree,State<?>) in line 197
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function unify(@Nullable Iterable<?extends Tree >,State<?>) in line 207
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
   function unifyExpression(@Nullable ExpressionTree,State<?>) in line 286
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function unifyExpressions(@Nullable Iterable<?extends ExpressionTree >,State<?>) in line 304
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function unifyParam(final UVariableDecl,UExpression,ExpressionTree,final State<?>) in line 182
      14 lines of code
      4 parameters
      1 conditional paths
   function unifyStatement(@Nullable StatementTree,State<?>) in line 316
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function unifyStatements(@Nullable Iterable<?extends StatementTree >,State<?>) in line 321
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function visitArrayAccess(final ArrayAccessTree,State<?>) in line 349
      protection public
      21 lines of code
      2 parameters
      1 conditional paths
   function visitAssignment(final AssignmentTree,State<?>) in line 586
      protection public
      26 lines of code
      2 parameters
      1 conditional paths
   function visitBinary(final BinaryTree,State<?>) in line 372
      protection public
      22 lines of code
      2 parameters
      1 conditional paths
   function visitBlock(BlockTree,State<?>) in line 651
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   function visitCase(final CaseTree,State<?>) in line 936
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function visitCatch(final CatchTree,State<?>) in line 905
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function visitCompoundAssignment(final CompoundAssignmentTree,State<?>) in line 614
      protection public
      21 lines of code
      2 parameters
      1 conditional paths
   function visitConditionalExpression(final ConditionalExpressionTree,State<?>) in line 552
      protection public
      32 lines of code
      2 parameters
      1 conditional paths
   function visitDoWhileLoop(final DoWhileLoopTree,State<?>) in line 732
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
   function visitEnhancedForLoop(final EnhancedForLoopTree,State<?>) in line 680
      protection public
      26 lines of code
      2 parameters
      1 conditional paths
   function visitExpressionStatement(ExpressionStatementTree,State<?>) in line 637
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   function visitForLoop(final ForLoopTree,State<?>) in line 754
      protection public
      37 lines of code
      2 parameters
      1 conditional paths
   function visitIf(final IfTree,State<?>) in line 708
      protection public
      22 lines of code
      2 parameters
      1 conditional paths
   function visitInstanceOf(final InstanceOfTree,State<?>) in line 486
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function visitLabeledStatement(final LabeledStatementTree,State<?>) in line 793
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function visitLambdaExpression(final LambdaExpressionTree,State<?>) in line 948
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function visitMemberReference(final MemberReferenceTree,State<?>) in line 963
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function visitMemberSelect(final MemberSelectTree,State<?>) in line 419
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function visitMethodInvocation(final MethodInvocationTree,State<?>) in line 396
      protection public
      21 lines of code
      2 parameters
      1 conditional paths
   function visitNewArray(final NewArrayTree,State<?>) in line 529
      protection public
      21 lines of code
      2 parameters
      1 conditional paths
   function visitNewClass(final NewClassTree,State<?>) in line 501
      protection public
      26 lines of code
      2 parameters
      1 conditional paths
   function visitParenthesized(ParenthesizedTree,State<?>) in line 434
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   function visitReturn(ReturnTree,State<?>) in line 859
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function visitSwitch(final SwitchTree,State<?>) in line 918
      protection public
      16 lines of code
      2 parameters
      1 conditional paths
   function visitSynchronized(final SynchronizedTree,State<?>) in line 837
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
   function visitThrow(ThrowTree,State<?>) in line 665
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function visitTry(final TryTree,State<?>) in line 870
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
   function visitTypeCast(final TypeCastTree,State<?>) in line 471
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function visitUnary(UnaryTree,State<?>) in line 451
      protection public
      18 lines of code
      2 parameters
      1 conditional paths
   function visitVariable(final VariableTree,State<?>) in line 806
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function visitWhileLoop(final WhileLoopTree,State<?>) in line 819
      protection public
      16 lines of code
      2 parameters
      1 conditional paths
   variable MUTATING_UNARY_TAGS in line 447
module com::google::errorprone::refaster::PlaceholderUnificationVisitor::State
   abstract class
   function fork() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function result() in line 143
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function seenParameters() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function unifier() in line 140
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/PlaceholderVerificationVisitor.java
module com::google::errorprone::refaster::PlaceholderVerificationVisitor
   inherits from com::sun::source::util::TreeScanner
   function allRequiredMatched() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function couldUnify(UExpression,Tree,Unifier) in line 61
      3 lines of code
      3 parameters
      1 conditional paths
   function reduce(Boolean,Boolean) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function scan(Tree,Unifier) in line 66
      protection public
      25 lines of code
      2 parameters
      1 conditional paths
   function visitIdentifier(IdentifierTree,Unifier) in line 93
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   variable allowed in line 42
   variable unmatched in line 41
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/Refaster.java
module com::google::errorprone::refaster::Refaster
   function anyOf(T...) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function clazz() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function enumValueOf(String) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isInstance(Object) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function newArray(int) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function Refaster() in line 25
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/RefasterRule.java
module com::google::errorprone::refaster::RefasterRule
   inherits from com::google::errorprone::CodeTransformer
   inherits from java::io::Serializable
   abstract class
   function annotations() in line 103
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function apply(TreePath,Context,DescriptionListener) in line 106
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function prepareContext(Context,JCCompilationUnit) defined in com::google::errorprone::refaster::RefasterRule
   function create(String,Collection<?extends Template<?>>,Collection<?extends Template<?>>) in line 58
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
   function create(String,Iterable< UTypeVar >,Collection<?extends Template<?>>,Collection<?extends Template<?>>,ImmutableClassToInstanceMap< Annotation >) in line 65
      protection public
      29 lines of code
      5 parameters
      3 conditional paths
      uses function annotations() defined in com::google::errorprone::refaster::RefasterRule
   function prepareContext(Context,JCCompilationUnit) in line 118
      10 lines of code
      2 parameters
      4 conditional paths
   function toString() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/RefasterRuleBuilderScanner.java
module com::google::errorprone::refaster::RefasterRuleBuilderScanner
   inherits from com::sun::source::util::SimpleTreeVisitor
   function createMatchers(Iterable< UTypeVar >,String,ImmutableClassToInstanceMap< Annotation >) in line 147
      50 lines of code
      3 parameters
      11 conditional paths
      uses variable beforeTemplates defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses variable afterTemplates defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses function withStatements(Iterable<?extends UStatement >) defined in com::google::errorprone::refaster::BlockTemplate
   function extractRules(ClassTree,Context) in line 86
      protection public
      22 lines of code
      2 parameters
      1 conditional paths
      uses function RefasterRuleBuilderScanner(Context) defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses variable context defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses function createMatchers(Iterable< UTypeVar >,String,ImmutableClassToInstanceMap< Annotation >) defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
   function visitMethod(MethodTree,Void) in line 110
      protection public
      36 lines of code
      2 parameters
      8 conditional paths
      uses variable context defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses variable logger defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses variable placeholderMethods defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses variable afterTemplates defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses variable beforeTemplates defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses variable REQUIRE_BLOCK_KEY defined in com::google::errorprone::refaster::UTemplater
   function RefasterRuleBuilderScanner(Context) in line 73
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable context defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
      uses variable placeholderMethods defined in com::google::errorprone::refaster::RefasterRuleBuilderScanner
   variable afterTemplates in line 71
   variable beforeTemplates in line 70
   variable context in line 68
   variable logger in line 62
   variable placeholderMethods in line 69
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/RefasterScanner.java
module com::google::errorprone::refaster::RefasterScanner
   inherits from com::sun::source::util::TreeScanner
   abstract class
   function scan(Tree,Context) in line 84
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
   function visitClass(ClassTree,Context) in line 67
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
   function visitDoWhileLoop(DoWhileLoopTree,Context) in line 137
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitIf(IfTree,Context) in line 158
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitSynchronized(SynchronizedTree,Context) in line 151
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitWhileLoop(WhileLoopTree,Context) in line 144
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable SKIP_PARENS in line 118
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/StringName.java
module com::google::errorprone::refaster::StringName
   inherits from javax::lang::model::element::Name
   inherits from Unifiable< Name >
   inherits from com::google::errorprone::refaster::Inlineable
   abstract class
   function charAt(int) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function contentEquals(@Nullable CharSequence) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function inline(Inliner) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function length() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function of(CharSequence) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function subSequence(int,int) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unify(@Nullable Name,Unifier) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function contentEquals(@Nullable CharSequence) defined in com::google::errorprone::refaster::StringName
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/Template.java
module com::google::errorprone::refaster::Template
   inherits from java::io::Serializable
   abstract class
   function actualTypes(Inliner) in line 146
      31 lines of code
      1 parameters
      1 conditional paths
   function addImports(Inliner,SuggestedFix.Builder) in line 471
      9 lines of code
      2 parameters
      1 conditional paths
   function annotations() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function callCheckMethod(Warner,Inliner,Object,List< Type >,MethodSymbol,Type,Env< AttrContext >) in line 419
      37 lines of code
      7 parameters
      1 conditional paths
   function checkBounds(Unifier,Inliner,Warner) in line 214
      22 lines of code
      3 parameters
      1 conditional paths
   function expectedTypes(Inliner) in line 114
      25 lines of code
      1 parameters
      1 conditional paths
   function expressionArgumentTypes() in line 91
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function freeTypeVars(Unifier) in line 461
      9 lines of code
      1 parameters
      1 conditional paths
   function infer(Warner,Inliner,List< Type >,List< Type >,Type,List< Type >) in line 337
      60 lines of code
      6 parameters
      1 conditional paths
   function match(JCTree,Context) in line 93
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function newMethodResolutionPhase(boolean) in line 401
      13 lines of code
      1 parameters
      1 conditional paths
   function pretty(Context,final Writer) in line 237
      80 lines of code
      2 parameters
      1 conditional paths
   function replace(M) in line 94
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function templateTypeVariables() in line 90
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function typecheck(Unifier,Inliner,Warner,List< Type >,List< Type >) in line 179
      34 lines of code
      5 parameters
      1 conditional paths
   variable AUTOBOXING_DEFAULT in line 87
      protection public
   variable logger in line 85
module com::google::errorprone::refaster::Template::InferException
   inherits from Exception
   function getMessage() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InferException(Collection< JCDiagnostic >) in line 321
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/TemplateMatch.java
module com::google::errorprone::refaster::TemplateMatch
   abstract class
   function createInliner() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable unifier defined in com::google::errorprone::refaster::TemplateMatch
      uses function createInliner() defined in com::google::errorprone::refaster::Unifier
   function getLocation() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in com::google::errorprone::refaster::TemplateMatch
   function getRange(JCCompilationUnit) in line 52
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable location defined in com::google::errorprone::refaster::TemplateMatch
   function getUnifier() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable unifier defined in com::google::errorprone::refaster::TemplateMatch
   function TemplateMatch(JCTree,Unifier) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in com::google::errorprone::refaster::TemplateMatch
      uses variable unifier defined in com::google::errorprone::refaster::TemplateMatch
   variable location in line 32
   variable unifier in line 33
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UAnnotatedType.java
module com::google::errorprone::refaster::UAnnotatedType
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::AnnotatedTypeTree
   abstract class
   function create(Iterable< UAnnotation >,UExpression) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getAnnotations() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnderlyingType() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 59
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitAnnotatedType(AnnotatedTypeTree,Unifier) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UAnnotation.java
module com::google::errorprone::refaster::UAnnotation
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::AnnotationTree
   abstract class
   function create(UTree<?>,List< UExpression >) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function create(UTree<?>,UExpression...) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getAnnotationType() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getArguments() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 72
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitAnnotation(AnnotationTree,Unifier) in line 56
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UAnyOf.java
module com::google::errorprone::refaster::UAnyOf
   inherits from com::google::errorprone::refaster::UExpression
   abstract class
   function create(UExpression...) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function create(Iterable<?extends UExpression >) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultAction(final Tree,final Unifier) in line 54
      8 lines of code
      2 parameters
      1 conditional paths
      uses function unify(@Nullable Tree,Unifier) defined in com::google::errorprone::refaster::UTree
      uses function fork() defined in com::google::errorprone::refaster::Unifier
   function getKind() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function negate() in line 45
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function create(UExpression...) defined in com::google::errorprone::refaster::UAnyOf
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UArrayAccess.java
module com::google::errorprone::refaster::UArrayAccess
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::ArrayAccessTree
   abstract class
   function create(UExpression,UExpression) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getExpression() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getIndex() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitArrayAccess(ArrayAccessTree,Unifier) in line 45
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UArrayType.java
module com::google::errorprone::refaster::UArrayType
   inherits from com::google::errorprone::refaster::UType
   abstract class
   function create(UType) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function inline(Inliner) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitArrayType(ArrayType,@Nullable Unifier) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UArrayTypeTree.java
module com::google::errorprone::refaster::UArrayTypeTree
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::ArrayTypeTree
   abstract class
   function create(UExpression) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getKind() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitArrayType(ArrayTypeTree,@Nullable Unifier) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UAssert.java
module com::google::errorprone::refaster::UAssert
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::AssertTree
   abstract class
   function getCondition() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDetail() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 65
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitAssert(AssertTree,Unifier) in line 59
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UAssign.java
module com::google::errorprone::refaster::UAssign
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::AssignmentTree
   abstract class
   function create(UExpression,UExpression) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getExpression() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVariable() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitAssignment(AssignmentTree,Unifier) in line 60
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UAssignOp.java
module com::google::errorprone::refaster::UAssignOp
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::CompoundAssignmentTree
   abstract class
   function create(UExpression,Kind,UExpression) in line 53
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function getExpression() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 63
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getVariable() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 69
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitCompoundAssignment(CompoundAssignmentTree,Unifier) in line 82
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   variable TAG in line 38
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UBinary.java
module com::google::errorprone::refaster::UBinary
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::BinaryTree
   abstract class
   function create(Kind,UExpression,UExpression) in line 78
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function getKind() in line 85
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLeftOperand() in line 88
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRightOperand() in line 91
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 106
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function negate() in line 114
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function visitBinary(BinaryTree,Unifier) in line 94
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UBlank.java
module com::google::errorprone::refaster::UBlank
   inherits from com::google::errorprone::refaster::UStatement
   abstract class
   function apply(final UnifierWithUnconsumedStatements) in line 88
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
   function getKind() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inlineStatements(Inliner) in line 115
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   variable FORBIDDEN_REFERENCE_SCANNER in line 61
module com::google::errorprone::refaster::UBlank::Key
   inherits from Key< List<?extends StatementTree > >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UBlock.java
module com::google::errorprone::refaster::UBlock
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::BlockTree
   abstract class
   function create(List< UStatement >) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function create(UStatement...) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getKind() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatements() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isStatic() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitBlock(BlockTree,Unifier) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UBreak.java
module com::google::errorprone::refaster::UBreak
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::BreakTree
   abstract class
   function getKind() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabel() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function key() in line 52
      3 lines of code
      0 parameters
      1 conditional paths
   function visitBreak(BreakTree,Unifier) in line 62
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UCatch.java
module com::google::errorprone::refaster::UCatch
   inherits from UTree< JCCatch >
   inherits from com::sun::source::tree::CatchTree
   abstract class
   function getBlock() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameter() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCatch(CatchTree,@Nullable Unifier) in line 63
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UClassDecl.java
module com::google::errorprone::refaster::UClassDecl
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::ClassTree
   abstract class
   function create(UMethodDecl...) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function create(Iterable< UMethodDecl >) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExtendsClause() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getImplementsClause() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMembers() in line 170
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getModifiers() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSimpleName() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeParameters() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 143
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function match(final Tree) in line 77
      42 lines of code
      1 parameters
      1 conditional paths
   function visitClass(ClassTree,Unifier) in line 121
      protection public
      20 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::refaster::UClassDecl::UnifierWithRemainingMembers
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UClassIdent.java
module com::google::errorprone::refaster::UClassIdent
   inherits from com::google::errorprone::refaster::UIdent
   abstract class
   function create(String) in line 43
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function create(ClassSymbol) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function create(CharSequence,CharSequence) in line 58
      3 lines of code
      2 parameters
      1 conditional paths
   function defaultAction(Tree,@Nullable Unifier) in line 78
      3 lines of code
      2 parameters
      1 conditional paths
   function getName() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTopLevelClass() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function resolve(Inliner) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function unify(@Nullable Symbol,Unifier) in line 83
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UClassType.java
module com::google::errorprone::refaster::UClassType
   inherits from com::google::errorprone::refaster::UType
   abstract class
   function create(CharSequence,List< UType >) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function create(String,UType...) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function create(CharSequence,List< UType >) defined in com::google::errorprone::refaster::UClassType
   function inline(Inliner) in line 56
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitClassType(ClassType,Unifier) in line 50
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UConditional.java
module com::google::errorprone::refaster::UConditional
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::ConditionalExpressionTree
   abstract class
   function create(UExpression,UExpression,UExpression) in line 36
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function getCondition() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFalseExpression() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTrueExpression() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 73
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visitConditionalExpression(ConditionalExpressionTree,Unifier) in line 52
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UContinue.java
module com::google::errorprone::refaster::UContinue
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::ContinueTree
   abstract class
   function getKind() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabel() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function key() in line 52
      3 lines of code
      0 parameters
      1 conditional paths
   function visitContinue(ContinueTree,Unifier) in line 62
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UDoWhileLoop.java
module com::google::errorprone::refaster::UDoWhileLoop
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::DoWhileLoopTree
   abstract class
   function create(UStatement,UExpression) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCondition() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatement() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDoWhileLoop(DoWhileLoopTree,@Nullable Unifier) in line 48
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UEnhancedForLoop.java
module com::google::errorprone::refaster::UEnhancedForLoop
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::EnhancedForLoopTree
   abstract class
   function create(UVariableDecl,UExpression,UStatement) in line 34
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function getExpression() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatement() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getVariable() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 59
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visitEnhancedForLoop(EnhancedForLoopTree,Unifier) in line 67
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UExpression.java
module com::google::errorprone::refaster::UExpression
   inherits from UTree< JCExpression >
   inherits from com::sun::source::tree::ExpressionTree
   abstract class
   function negate() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UExpressionStatement.java
module com::google::errorprone::refaster::UExpressionStatement
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::ExpressionStatementTree
   abstract class
   function create(UExpression) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExpression() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitExpressionStatement(ExpressionStatementTree,@Nullable Unifier) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UForAll.java
module com::google::errorprone::refaster::UForAll
   inherits from com::google::errorprone::refaster::UType
   abstract class
   function create(List< UTypeVar >,UType) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getTypeVars() defined in com::google::errorprone::refaster::UForAll
      uses function getQuantifiedType() defined in com::google::errorprone::refaster::UForAll
   function getQuantifiedType() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTypeVars() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 57
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getTypeVars() defined in com::google::errorprone::refaster::UForAll
      uses function getQuantifiedType() defined in com::google::errorprone::refaster::UForAll
   function visitForAll(ForAll,Unifier) in line 44
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function types() defined in com::google::errorprone::refaster::Unifier
      uses function getContext() defined in com::google::errorprone::refaster::Unifier
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UForLoop.java
module com::google::errorprone::refaster::UForLoop
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::ForLoopTree
   abstract class
   function create(Iterable<?extends UStatement >,@Nullable UExpression,Iterable<?extends UExpressionStatement >,UStatement) in line 42
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
   function getCondition() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInitializer() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatement() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUpdate() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 83
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitForLoop(ForLoopTree,@Nullable Unifier) in line 65
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UFreeIdent.java
module com::google::errorprone::refaster::UFreeIdent
   inherits from com::google::errorprone::refaster::UIdent
   abstract class
   function create(CharSequence) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in com::google::errorprone::refaster::UFreeIdent
   function defaultAction(Tree,final Unifier) in line 74
      39 lines of code
      2 parameters
      7 conditional paths
      uses function key() defined in com::google::errorprone::refaster::UFreeIdent
      uses function trueOrNull(@Nullable Boolean) defined in com::google::errorprone::refaster::UFreeIdent
      uses function visitIdentifier(IdentifierTree,Unifier) defined in com::google::errorprone::refaster::UFreeIdent
      uses function getBindings() defined in com::google::errorprone::refaster::Unifier
   function getName() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function key() defined in com::google::errorprone::refaster::UFreeIdent
   function key() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in com::google::errorprone::refaster::UFreeIdent
   function trueOrNull(@Nullable Boolean) in line 61
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIdentifier(IdentifierTree,Unifier) in line 66
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getContext() defined in com::google::errorprone::refaster::Unifier
      uses function defaultAction(Tree,final Unifier) defined in com::google::errorprone::refaster::UFreeIdent
module com::google::errorprone::refaster::UFreeIdent::Key
   inherits from Key< JCExpression >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UIdent.java
module com::google::errorprone::refaster::UIdent
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::IdentifierTree
   abstract class
   function getKind() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UIf.java
module com::google::errorprone::refaster::UIf
   inherits from com::google::errorprone::refaster::UStatement
   inherits from com::sun::source::tree::IfTree
   abstract class
   function apply(UnifierWithUnconsumedStatements) in line 91
      protection public
      124 lines of code
      1 parameters
      1 conditional paths
   function create(UExpression,UStatement,UStatement) in line 40
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function getCondition() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getElseStatement() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getThenStatement() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inlineStatements(Inliner) in line 217
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function unifyUStatementWithSingleStatement(@Nullable final UStatement,@Nullable final StatementTree) in line 65
      23 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UInstanceOf.java
module com::google::errorprone::refaster::UInstanceOf
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::InstanceOfTree
   abstract class
   function create(UExpression,UTree<?>) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getExpression() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitInstanceOf(InstanceOfTree,@Nullable Unifier) in line 63
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UIntersectionClassType.java
module com::google::errorprone::refaster::UIntersectionClassType
   inherits from com::google::errorprone::refaster::UType
   abstract class
   function inline(Inliner) in line 43
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitClassType(ClassType,Unifier) in line 50
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UIntersectionType.java
module com::google::errorprone::refaster::UIntersectionType
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::IntersectionTypeTree
   abstract class
   function getBounds() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIntersectionType(IntersectionTypeTree,Unifier) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/ULabeledStatement.java
module com::google::errorprone::refaster::ULabeledStatement
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::LabeledStatementTree
   abstract class
   function getKind() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLabel() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getStatement() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 77
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function key() in line 72
      3 lines of code
      0 parameters
      1 conditional paths
   function visitLabeledStatement(LabeledStatementTree,Unifier) in line 84
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::refaster::ULabeledStatement::Key
   inherits from Key< CharSequence >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/ULambda.java
module com::google::errorprone::refaster::ULambda
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::LambdaExpressionTree
   abstract class
   function create(Iterable< UVariableDecl >,UTree<?>) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getBody() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBodyKind() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameters() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 59
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitLambdaExpression(LambdaExpressionTree,Unifier) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/ULiteral.java
module com::google::errorprone::refaster::ULiteral
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::LiteralTree
   abstract class
   function booleanLit(boolean) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(Kind,Object) defined in com::google::errorprone::refaster::ULiteral
   function charLit(char) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(Kind,Object) defined in com::google::errorprone::refaster::ULiteral
   function create(Kind,Object) in line 86
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LIT_KIND_TAG defined in com::google::errorprone::refaster::ULiteral
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
      uses function getValue() defined in com::google::errorprone::refaster::ULiteral
   function doubleLit(double) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(Kind,Object) defined in com::google::errorprone::refaster::ULiteral
   function floatLit(float) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(Kind,Object) defined in com::google::errorprone::refaster::ULiteral
   function getKind() in line 92
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 96
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 123
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getValue() defined in com::google::errorprone::refaster::ULiteral
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
      uses variable LIT_KIND_TAG defined in com::google::errorprone::refaster::ULiteral
   function integral(@Nullable Object) in line 98
      3 lines of code
      1 parameters
      1 conditional paths
   function intLit(int) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(Kind,Object) defined in com::google::errorprone::refaster::ULiteral
   function longLit(long) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(Kind,Object) defined in com::google::errorprone::refaster::ULiteral
   function match(@Nullable Object,@Nullable Object) in line 102
      9 lines of code
      2 parameters
      2 conditional paths
      uses function integral(@Nullable Object) defined in com::google::errorprone::refaster::ULiteral
   function negate() in line 140
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
      uses function booleanLit(boolean) defined in com::google::errorprone::refaster::ULiteral
      uses function getValue() defined in com::google::errorprone::refaster::ULiteral
   function nullLit() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function create(Kind,Object) defined in com::google::errorprone::refaster::ULiteral
   function stringLit(String) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(Kind,Object) defined in com::google::errorprone::refaster::ULiteral
   function visitLiteral(LiteralTree,Unifier) in line 113
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function match(@Nullable Object,@Nullable Object) defined in com::google::errorprone::refaster::ULiteral
      uses function getValue() defined in com::google::errorprone::refaster::ULiteral
   variable LIT_KIND_TAG in line 74
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/ULocalVarIdent.java
module com::google::errorprone::refaster::ULocalVarIdent
   inherits from com::google::errorprone::refaster::UIdent
   abstract class
   function create(CharSequence) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getName() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 62
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function key() in line 49
      3 lines of code
      0 parameters
      1 conditional paths
   function visitIdentifier(IdentifierTree,Unifier) in line 54
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::refaster::ULocalVarIdent::Key
   inherits from Key< LocalVarBinding >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UMatches.java
module com::google::errorprone::refaster::UMatches
   inherits from com::google::errorprone::refaster::UExpression
   abstract class
   function create(Class<?extends Matcher<?super ExpressionTree >>,boolean,UExpression) in line 40
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   function defaultAction(Tree,@Nullable Unifier) in line 56
      9 lines of code
      2 parameters
      1 conditional paths
   function getKind() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function matches(Tree,Unifier) in line 83
      7 lines of code
      2 parameters
      1 conditional paths
   variable matcher in line 81
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UMemberReference.java
module com::google::errorprone::refaster::UMemberReference
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::MemberReferenceTree
   abstract class
   function create(ReferenceMode,UExpression,CharSequence,@Nullable Iterable<?extends UExpression >) in line 37
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
   function getKind() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMode() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getQualifierExpression() in line 77
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTypeArguments() in line 84
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 65
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function visitMemberReference(MemberReferenceTree,Unifier) in line 57
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UMemberSelect.java
module com::google::errorprone::refaster::UMemberSelect
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::MemberSelectTree
   abstract class
   function create(UExpression,CharSequence,UType) in line 43
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getExpression() defined in com::google::errorprone::refaster::UMemberSelect
      uses function getIdentifier() defined in com::google::errorprone::refaster::UMemberSelect
   function getExpression() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getIdentifier() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 88
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getExpression() defined in com::google::errorprone::refaster::UMemberSelect
      uses variable CONVERT_TO_IDENT defined in com::google::errorprone::refaster::UMemberSelect
      uses function getIdentifier() defined in com::google::errorprone::refaster::UMemberSelect
   function visitIdentifier(final IdentifierTree,Unifier) in line 66
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function thisExpression(Type) defined in com::google::errorprone::refaster::Unifier
      uses function getIdentifier() defined in com::google::errorprone::refaster::UMemberSelect
      uses function unify(@Nullable Name,Unifier) defined in com::google::errorprone::refaster::StringName
      uses function getExpression() defined in com::google::errorprone::refaster::UMemberSelect
   function visitMemberSelect(MemberSelectTree,Unifier) in line 56
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getIdentifier() defined in com::google::errorprone::refaster::UMemberSelect
      uses function unify(@Nullable Name,Unifier) defined in com::google::errorprone::refaster::StringName
      uses function getExpression() defined in com::google::errorprone::refaster::UMemberSelect
   variable CONVERT_TO_IDENT in line 41
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UMethodDecl.java
module com::google::errorprone::refaster::UMethodDecl
   inherits from UTree< JCMethodDecl >
   inherits from com::sun::source::tree::MethodTree
   abstract class
   function create(UModifiers,CharSequence,UExpression,Iterable< UVariableDecl >,Iterable< UExpression >,UBlock) in line 43
      protection public
      5 lines of code
      6 parameters
      1 conditional paths
   function getBody() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDefaultValue() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getModifiers() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 86
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParameters() in line 92
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReceiverParameter() in line 111
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getReturnType() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getThrows() in line 95
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTypeParameters() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 70
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function visitMethod(MethodTree,@Nullable Unifier) in line 61
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UMethodInvocation.java
module com::google::errorprone::refaster::UMethodInvocation
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::MethodInvocationTree
   abstract class
   function create(UExpression,List< UExpression >) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function create(UExpression,UExpression...) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function create(UExpression,List< UExpression >) defined in com::google::errorprone::refaster::UMethodInvocation
      uses function getMethodSelect() defined in com::google::errorprone::refaster::UMethodInvocation
      uses function getArguments() defined in com::google::errorprone::refaster::UMethodInvocation
   function getArguments() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethodSelect() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTypeArguments() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 78
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodSelect() defined in com::google::errorprone::refaster::UMethodInvocation
      uses function getArguments() defined in com::google::errorprone::refaster::UMethodInvocation
   function visitMethodInvocation(MethodInvocationTree,@Nullable Unifier) in line 56
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getMethodSelect() defined in com::google::errorprone::refaster::UMethodInvocation
      uses function unify(@Nullable Tree,Unifier) defined in com::google::errorprone::refaster::UTree
      uses function getArguments() defined in com::google::errorprone::refaster::UMethodInvocation
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UMethodType.java
module com::google::errorprone::refaster::UMethodType
   inherits from com::google::errorprone::refaster::UType
   abstract class
   function create(UType,UType...) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function create(UType,List< UType >) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getReturnType() defined in com::google::errorprone::refaster::UMethodType
      uses function getParameterTypes() defined in com::google::errorprone::refaster::UMethodType
   function getParameterTypes() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReturnType() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 60
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getParameterTypes() defined in com::google::errorprone::refaster::UMethodType
      uses function getReturnType() defined in com::google::errorprone::refaster::UMethodType
   function visitMethodType(MethodType,@Nullable Unifier) in line 54
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getParameterTypes() defined in com::google::errorprone::refaster::UMethodType
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UModifiers.java
module com::google::errorprone::refaster::UModifiers
   inherits from UTree< JCModifiers >
   inherits from com::sun::source::tree::ModifiersTree
   abstract class
   function create(long,UAnnotation...) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function create(long,Iterable<?extends UAnnotation >) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getAnnotations() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFlags() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 55
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitModifiers(ModifiersTree,Unifier) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UNewArray.java
module com::google::errorprone::refaster::UNewArray
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::NewArrayTree
   abstract class
   function create(UExpression,List<?extends UExpression >,List<?extends UExpression >) in line 43
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function getAnnotations() in line 97
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getDimAnnotations() in line 103
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getDimensions() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInitializers() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 85
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function visitNewArray(NewArrayTree,@Nullable Unifier) in line 66
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UNewClass.java
module com::google::errorprone::refaster::UNewClass
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::NewClassTree
   abstract class
   function create(UExpression,List<?extends UExpression >,UExpression,List< UExpression >,@Nullable UClassDecl) in line 42
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
   function create(List<?extends UExpression >,UExpression,UExpression...) in line 50
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function create(UExpression,UExpression...) in line 56
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getArguments() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassBody() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEnclosingExpression() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getIdentifier() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeArguments() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 103
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function visitNewClass(NewClassTree,@Nullable Unifier) in line 84
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/Unifiable.java
module com::google::errorprone::refaster::Unifiable
   inherits from java::io::Serializable
   function unify(T,Unifier) in line 32
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/Unifier.java
module com::google::errorprone::refaster::Unifier
   function clearBinding(Key<?>) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bindings defined in com::google::errorprone::refaster::Unifier
   function createInliner() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Unifier
      uses variable bindings defined in com::google::errorprone::refaster::Unifier
   function fork() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function Unifier(Context) defined in com::google::errorprone::refaster::Unifier
      uses variable context defined in com::google::errorprone::refaster::Unifier
      uses variable bindings defined in com::google::errorprone::refaster::Unifier
   function getBindings() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bindings defined in com::google::errorprone::refaster::Unifier
      uses function unmodifiable() defined in com::google::errorprone::refaster::Bindings
   function getContext() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Unifier
   function thisExpression(Type) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Unifier
   function toString() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bindings defined in com::google::errorprone::refaster::Unifier
   function types() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Unifier
   function unifications(@Nullable final U,@Nullable final T) in line 110
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function unifyNullable(Unifier,@Nullable final U,@Nullable final T) defined in com::google::errorprone::refaster::Unifier
   function unifications(@Nullable final List< U >,@Nullable final List<?extends T >) in line 130
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function unifications(@Nullable final U,@Nullable final T) defined in com::google::errorprone::refaster::Unifier
   function unifications(@Nullable final List< U >,@Nullable final List<?extends T >,final boolean) in line 135
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
      uses function unifyList(Unifier,@Nullable List< U >,@Nullable final List<?extends T >) defined in com::google::errorprone::refaster::Unifier
   function unifyList(Unifier,@Nullable List< U >,@Nullable final List<?extends T >) in line 150
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function unifyList(Unifier,@Nullable List< U >,@Nullable final List<?extends T >,boolean) in line 159
      protection public
      49 lines of code
      4 parameters
      10 conditional paths
      uses function fork() defined in com::google::errorprone::refaster::Unifier
      uses function unifications(@Nullable final U,@Nullable final T) defined in com::google::errorprone::refaster::Unifier
   function unifyNullable(Unifier,@Nullable final U,@Nullable final T) in line 119
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
   function Unifier(Context) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Unifier
   function Unifier(Context,Bindings) in line 53
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::Unifier
      uses variable bindings defined in com::google::errorprone::refaster::Unifier
   variable bindings in line 44
   variable context in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UOfKind.java
module com::google::errorprone::refaster::UOfKind
   inherits from com::google::errorprone::refaster::UExpression
   abstract class
   function create(UExpression,Set< Kind >) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function defaultAction(Tree,@Nullable Unifier) in line 62
      4 lines of code
      2 parameters
      1 conditional paths
   function getKind() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UParens.java
module com::google::errorprone::refaster::UParens
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::ParenthesizedTree
   abstract class
   function create(UExpression) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultAction(Tree,Unifier) in line 58
      3 lines of code
      2 parameters
      1 conditional paths
   function getExpression() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function negate() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable SKIP_PARENS in line 41
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UPlaceholderExpression.java
module com::google::errorprone::refaster::UPlaceholderExpression
   inherits from com::google::errorprone::refaster::UExpression
   abstract class
   function defaultAction(Tree,Unifier) in line 141
      54 lines of code
      2 parameters
      3 conditional paths
      uses function getContext() defined in com::google::errorprone::refaster::Unifier
   function getKind() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 117
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
module com::google::errorprone::refaster::UPlaceholderExpression::PlaceholderParamIdent
   inherits from com::sun::tools::javac::tree::JCTree::JCIdent
module com::google::errorprone::refaster::UPlaceholderExpression::UncheckedCouldNotResolveImportException
   inherits from RuntimeException
   function getCause() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UPlaceholderStatement.java
module com::google::errorprone::refaster::UPlaceholderStatement
   inherits from com::google::errorprone::refaster::UStatement
   abstract class
   function apply(final UnifierWithUnconsumedStatements) in line 89
      protection public
      75 lines of code
      1 parameters
      1 conditional paths
   function getKind() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inlineStatements(final Inliner) in line 166
      protection public
      26 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::refaster::UPlaceholderStatement::ConsumptionState
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UPrimitiveType.java
module com::google::errorprone::refaster::UPrimitiveType
   inherits from com::google::errorprone::refaster::UType
   abstract class
   function create(TypeKind) in line 38
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getKind() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 70
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
   function isDeFactoPrimitive(TypeKind) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitType(Type,Unifier) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable BOOLEAN in line 55
      protection public
   variable BYTE in line 49
      protection public
   variable CHAR in line 56
      protection public
   variable DOUBLE in line 54
      protection public
   variable FLOAT in line 53
      protection public
   variable HONORARY_PRIMITIVES in line 46
   variable INT in line 51
      protection public
   variable LONG in line 52
      protection public
   variable NULL in line 57
      protection public
   variable SHORT in line 50
      protection public
   variable VOID in line 58
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UPrimitiveTypeTree.java
module com::google::errorprone::refaster::UPrimitiveTypeTree
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::PrimitiveTypeTree
   abstract class
   function create(TypeTag) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getKind() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPrimitiveTypeKind() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPrimitiveType(PrimitiveTypeTree,Unifier) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable BOOLEAN in line 48
      protection public
   variable BYTE in line 42
      protection public
   variable CHAR in line 49
      protection public
   variable DOUBLE in line 47
      protection public
   variable FLOAT in line 46
      protection public
   variable INT in line 44
      protection public
   variable LONG in line 45
      protection public
   variable NULL in line 50
      protection public
   variable SHORT in line 43
      protection public
   variable VOID in line 51
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/URepeated.java
module com::google::errorprone::refaster::URepeated
   inherits from com::google::errorprone::refaster::UExpression
   abstract class
   function create(CharSequence,UExpression) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function defaultAction(Tree,@Nullable Unifier) in line 43
      3 lines of code
      2 parameters
      1 conditional paths
   function getKind() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnderlyingBinding(Unifier) in line 64
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function inline(Inliner) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function key() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::refaster::URepeated::Key
   inherits from Key< List< JCExpression > >
   function Key(String) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UReturn.java
module com::google::errorprone::refaster::UReturn
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::ReturnTree
   abstract class
   function create(UExpression) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getExpression() defined in com::google::errorprone::refaster::UReturn
   function getExpression() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getExpression() defined in com::google::errorprone::refaster::UReturn
   function visitReturn(ReturnTree,@Nullable Unifier) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getExpression() defined in com::google::errorprone::refaster::UReturn
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/USimpleStatement.java
module com::google::errorprone::refaster::USimpleStatement
   inherits from UTree< JCStatement >
   inherits from com::google::errorprone::refaster::UStatement
   abstract class
   function apply(UnifierWithUnconsumedStatements) in line 48
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function inlineStatements(Inliner) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function withUnconsumed(final java.util.List<?extends StatementTree >) in line 37
      9 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/USkip.java
module com::google::errorprone::refaster::USkip
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::EmptyStatementTree
   function getKind() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitEmptyStatement(EmptyStatementTree,Unifier) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function USkip() in line 31
      1 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 29
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UStatement.java
module com::google::errorprone::refaster::UStatement
   inherits from java::io::Serializable
   inherits from com::sun::source::tree::StatementTree
   inherits from com::google::common::base::Function
   function inlineStatements(Inliner) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::refaster::UStatement::UnifierWithUnconsumedStatements
   abstract class
   function create(Unifier,List<?extends StatementTree >) in line 39
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function unifier() defined in com::google::errorprone::refaster::UStatement::UnifierWithUnconsumedStatements
      uses function unconsumedStatements() defined in com::google::errorprone::refaster::UStatement::UnifierWithUnconsumedStatements
      uses function inlineStatements(Inliner) defined in com::google::errorprone::refaster::UStatement
   function unconsumedStatements() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function unifier() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UStaticIdent.java
module com::google::errorprone::refaster::UStaticIdent
   inherits from com::google::errorprone::refaster::UIdent
   abstract class
   function create(UClassIdent,CharSequence,UType) in line 36
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function create(String,CharSequence,UType) in line 41
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function create(UClassIdent,CharSequence,UType) defined in com::google::errorprone::refaster::UStaticIdent
   function create(ClassSymbol,CharSequence,UType) in line 45
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function create(UClassIdent,CharSequence,UType) defined in com::google::errorprone::refaster::UStaticIdent
      uses function getName() defined in com::google::errorprone::refaster::UStaticIdent
   function defaultAction(Tree,Unifier) in line 65
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getName() defined in com::google::errorprone::refaster::UStaticIdent
   function getName() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 57
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in com::google::errorprone::refaster::UStaticIdent
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/USynchronized.java
module com::google::errorprone::refaster::USynchronized
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::SynchronizedTree
   abstract class
   function create(UExpression,UBlock) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getBlock() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getExpression() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 55
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitSynchronized(SynchronizedTree,Unifier) in line 61
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UTemplater.java
module com::google::errorprone::refaster::UTemplater
   inherits from com::sun::source::util::SimpleTreeVisitor
   function annotationMap(Symbol) in line 875
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function asSubclass(Class<?>,TypeToken< T >) defined in com::google::errorprone::refaster::UTemplater
   function asSubclass(Class<?>,TypeToken< T >) in line 628
      7 lines of code
      2 parameters
      2 conditional paths
   function cast(Iterable<?>,Class< T >) in line 228
      7 lines of code
      2 parameters
      2 conditional paths
   function createTemplate(Context,MethodTree) in line 143
      protection public
      47 lines of code
      2 parameters
      1 conditional paths
      uses function annotationMap(Symbol) defined in com::google::errorprone::refaster::UTemplater
      uses function freeExpressionVariables(MethodTree) defined in com::google::errorprone::refaster::UTemplater
      uses variable context defined in com::google::errorprone::refaster::UTemplater
      uses function UTemplater(Map< String, VarSymbol >,Context) defined in com::google::errorprone::refaster::UTemplater
   function defaultAction(Tree,Void) in line 794
      4 lines of code
      2 parameters
      1 conditional paths
   function freeExpressionVariables(MethodTree) in line 191
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getSingleExplicitTypeArgument(MethodInvocationTree) in line 384
      7 lines of code
      1 parameters
      2 conditional paths
   function placeholder(@Nullable ExpressionTree) in line 675
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::UTemplater
   function staticMember(Symbol) in line 347
      4 lines of code
      1 parameters
      1 conditional paths
   function template(Tree) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function template(ExpressionTree) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function template(StatementTree) in line 636
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function template(Type) in line 799
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable typeTemplater defined in com::google::errorprone::refaster::UTemplater
   function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) in line 258
      11 lines of code
      1 parameters
      3 conditional paths
   function templateStatements(@Nullable List<?extends StatementTree >) in line 641
      10 lines of code
      1 parameters
      3 conditional paths
   function templateTrees(@Nullable Iterable<?extends Tree >) in line 217
      10 lines of code
      1 parameters
      3 conditional paths
   function templateType(Tree) in line 270
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function templateTypeExpressions(@Nullable Iterable<?extends Tree >) in line 277
      10 lines of code
      1 parameters
      3 conditional paths
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
   function visitAnnotatedType(AnnotatedTypeTree,Void) in line 326
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function cast(Iterable<?>,Class< T >) defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitAnnotation(AnnotationTree,Void) in line 320
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitArrayAccess(ArrayAccessTree,Void) in line 315
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitArrayType(ArrayTypeTree,Void) in line 483
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
   function visitAssert(AssertTree,Void) in line 787
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitAssignment(AssignmentTree,Void) in line 310
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitBinary(BinaryTree,Void) in line 432
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitBlock(BlockTree,Void) in line 749
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function templateStatements(@Nullable List<?extends StatementTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitBreak(BreakTree,Void) in line 739
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitCatch(CatchTree,Void) in line 668
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function visitVariable(VariableTree,Void) defined in com::google::errorprone::refaster::UTemplater
      uses function visitBlock(BlockTree,Void) defined in com::google::errorprone::refaster::UTemplater
   function visitClass(ClassTree,Void) in line 472
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function visitMethod(MethodTree,Void) defined in com::google::errorprone::refaster::UTemplater
   function visitCompoundAssignment(CompoundAssignmentTree,Void) in line 438
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitConditionalExpression(ConditionalExpressionTree,Void) in line 449
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitContinue(ContinueTree,Void) in line 744
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitDoWhileLoop(DoWhileLoopTree,Void) in line 759
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitEmptyStatement(EmptyStatementTree,Void) in line 720
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitEnhancedForLoop(EnhancedForLoopTree,Void) in line 764
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function visitVariable(VariableTree,Void) defined in com::google::errorprone::refaster::UTemplater
   function visitExpressionStatement(ExpressionStatementTree,Void) in line 683
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function placeholder(@Nullable ExpressionTree) defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitForLoop(ForLoopTree,Void) in line 725
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function templateStatements(@Nullable List<?extends StatementTree >) defined in com::google::errorprone::refaster::UTemplater
      uses function cast(Iterable<?>,Class< T >) defined in com::google::errorprone::refaster::UTemplater
   function visitIdentifier(IdentifierTree,Void) in line 540
      protection public
      40 lines of code
      2 parameters
      14 conditional paths
      uses function staticMember(Symbol) defined in com::google::errorprone::refaster::UTemplater
      uses variable freeVariables defined in com::google::errorprone::refaster::UTemplater
      uses function value() defined in com::google::errorprone::refaster::annotation::OfKind
      uses function value() defined in com::google::errorprone::refaster::annotation::Matches
      uses function asSubclass(Class<?>,TypeToken< T >) defined in com::google::errorprone::refaster::UTemplater
      uses function value() defined in com::google::errorprone::refaster::annotation::NotMatches
   function visitIf(IfTree,Void) in line 779
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function visitInstanceOf(InstanceOfTree,Void) in line 289
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
   function visitIntersectionType(IntersectionTypeTree,Void) in line 506
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function templateTypeExpressions(@Nullable Iterable<?extends Tree >) defined in com::google::errorprone::refaster::UTemplater
   function visitLabeledStatement(LabeledStatementTree,Void) in line 734
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitLambdaExpression(LambdaExpressionTree,Void) in line 524
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function cast(Iterable<?>,Class< T >) defined in com::google::errorprone::refaster::UTemplater
      uses function templateStatements(@Nullable List<?extends StatementTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitLiteral(LiteralTree,Void) in line 300
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitMemberReference(MemberReferenceTree,Void) in line 531
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitMemberSelect(MemberSelectTree,Void) in line 333
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function staticMember(Symbol) defined in com::google::errorprone::refaster::UTemplater
   function visitMethod(MethodTree,Void) in line 237
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function visitModifiers(ModifiersTree,Void) defined in com::google::errorprone::refaster::UTemplater
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
      uses function cast(Iterable<?>,Class< T >) defined in com::google::errorprone::refaster::UTemplater
      uses function templateStatements(@Nullable List<?extends StatementTree >) defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitMethodInvocation(MethodInvocationTree,Void) in line 398
      protection public
      32 lines of code
      2 parameters
      7 conditional paths
      uses variable ANY_OF defined in com::google::errorprone::refaster::UTemplater
      uses variable context defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
      uses variable IS_INSTANCE defined in com::google::errorprone::refaster::UTemplater
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
      uses function getSingleExplicitTypeArgument(MethodInvocationTree) defined in com::google::errorprone::refaster::UTemplater
      uses variable CLAZZ defined in com::google::errorprone::refaster::UTemplater
      uses variable NEW_ARRAY defined in com::google::errorprone::refaster::UTemplater
      uses variable ENUM_VALUE_OF defined in com::google::errorprone::refaster::UTemplater
   function visitModifiers(ModifiersTree,Void) in line 248
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function cast(Iterable<?>,Class< T >) defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitNewArray(NewArrayTree,Void) in line 455
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitNewClass(NewClassTree,Void) in line 462
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function templateTypeExpressions(@Nullable Iterable<?extends Tree >) defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
      uses function visitClass(ClassTree,Void) defined in com::google::errorprone::refaster::UTemplater
   function visitParameterizedType(ParameterizedTypeTree,Void) in line 488
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
      uses function templateTypeExpressions(@Nullable Iterable<?extends Tree >) defined in com::google::errorprone::refaster::UTemplater
   function visitParenthesized(ParenthesizedTree,Void) in line 305
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitPrimitiveType(PrimitiveTypeTree,Void) in line 295
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitReturn(ReturnTree,Void) in line 694
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function placeholder(@Nullable ExpressionTree) defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitSynchronized(SynchronizedTree,Void) in line 772
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function visitBlock(BlockTree,Void) defined in com::google::errorprone::refaster::UTemplater
   function visitThrow(ThrowTree,Void) in line 754
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitTry(TryTree,Void) in line 653
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function cast(Iterable<?>,Class< T >) defined in com::google::errorprone::refaster::UTemplater
      uses function templateTrees(@Nullable Iterable<?extends Tree >) defined in com::google::errorprone::refaster::UTemplater
      uses function visitBlock(BlockTree,Void) defined in com::google::errorprone::refaster::UTemplater
      uses function visitCatch(CatchTree,Void) defined in com::google::errorprone::refaster::UTemplater
   function visitTypeCast(TypeCastTree,Void) in line 519
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
   function visitTypeParameter(TypeParameterTree,Void) in line 511
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function templateTypeExpressions(@Nullable Iterable<?extends Tree >) defined in com::google::errorprone::refaster::UTemplater
      uses function cast(Iterable<?>,Class< T >) defined in com::google::errorprone::refaster::UTemplater
      uses function templateExpressions(@Nullable Iterable<?extends ExpressionTree >) defined in com::google::errorprone::refaster::UTemplater
   function visitUnary(UnaryTree,Void) in line 444
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitUnionType(UnionTypeTree,Void) in line 495
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function templateTypeExpressions(@Nullable Iterable<?extends Tree >) defined in com::google::errorprone::refaster::UTemplater
   function visitVariable(VariableTree,Void) in line 712
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
   function visitWhileLoop(WhileLoopTree,Void) in line 707
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitWildcard(WildcardTree,Void) in line 500
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function templateType(Tree) defined in com::google::errorprone::refaster::UTemplater
   function UTemplater(Map< String, VarSymbol >,Context) in line 203
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable freeVariables defined in com::google::errorprone::refaster::UTemplater
      uses variable context defined in com::google::errorprone::refaster::UTemplater
   variable ANY_OF in line 352
   variable CLAZZ in line 354
   variable context in line 201
   variable ENUM_VALUE_OF in line 356
   variable freeVariables in line 200
   variable IS_INSTANCE in line 353
   variable NEW_ARRAY in line 355
   variable REQUIRE_BLOCK_KEY in line 136
      protection public
   variable typeTemplater in line 811
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UThrow.java
module com::google::errorprone::refaster::UThrow
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::ThrowTree
   abstract class
   function create(UExpression) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExpression() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitThrow(ThrowTree,@Nullable Unifier) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UTree.java
module com::google::errorprone::refaster::UTree
   inherits from com::sun::source::util::SimpleTreeVisitor
   inherits from Unifiable< Tree >
   inherits from com::google::errorprone::refaster::Inlineable
   inherits from com::sun::source::tree::Tree
   abstract class
   function defaultAction(Tree,Unifier) in line 40
      3 lines of code
      2 parameters
      1 conditional paths
   function unify(@Nullable Tree,Unifier) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UTry.java
module com::google::errorprone::refaster::UTry
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::TryTree
   abstract class
   function getBlock() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCatches() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFinallyBlock() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResources() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 70
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function inlineFinallyBlock(Inliner) in line 82
      9 lines of code
      1 parameters
      1 conditional paths
   function visitTry(TryTree,@Nullable Unifier) in line 94
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UType.java
module com::google::errorprone::refaster::UType
   inherits from Types::SimpleVisitor
   inherits from Unifiable< Type >
   inherits from com::google::errorprone::refaster::Inlineable
   abstract class
   function unify(Type,Unifier) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitType(Type,@Nullable Unifier) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UTypeApply.java
module com::google::errorprone::refaster::UTypeApply
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::ParameterizedTypeTree
   abstract class
   function create(UExpression,List< UExpression >) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function create(UExpression,UExpression...) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function create(String,UExpression...) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getKind() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTypeArguments() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 83
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitParameterizedType(ParameterizedTypeTree,@Nullable Unifier) in line 61
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UTypeCast.java
module com::google::errorprone::refaster::UTypeCast
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::TypeCastTree
   abstract class
   function create(UTree<?>,UExpression) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getExpression() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitTypeCast(TypeCastTree,Unifier) in line 45
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UTypeParameter.java
module com::google::errorprone::refaster::UTypeParameter
   inherits from UTree< JCTypeParameter >
   inherits from com::sun::source::tree::TypeParameterTree
   abstract class
   function getAnnotations() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBounds() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 71
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visitTypeParameter(TypeParameterTree,@Nullable Unifier) in line 78
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UTypeVar.java
module com::google::errorprone::refaster::UTypeVar
   inherits from com::google::errorprone::refaster::UType
   function create(String,UType,UType) in line 77
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function UTypeVar(String,UType,UType) defined in com::google::errorprone::refaster::UTypeVar
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
      uses variable lowerBound defined in com::google::errorprone::refaster::UTypeVar
      uses variable upperBound defined in com::google::errorprone::refaster::UTypeVar
   function create(String,UType) in line 81
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function create(String,UType,UType) defined in com::google::errorprone::refaster::UTypeVar
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
      uses variable upperBound defined in com::google::errorprone::refaster::UTypeVar
   function create(String) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function create(String,UType,UType) defined in com::google::errorprone::refaster::UTypeVar
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
   function equals(@Nullable Object) in line 147
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function UTypeVar(String,UType,UType) defined in com::google::errorprone::refaster::UTypeVar
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
      uses variable lowerBound defined in com::google::errorprone::refaster::UTypeVar
      uses variable upperBound defined in com::google::errorprone::refaster::UTypeVar
   function getLowerBound() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lowerBound defined in com::google::errorprone::refaster::UTypeVar
   function getName() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
   function getUpperBound() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable upperBound defined in com::google::errorprone::refaster::UTypeVar
   function hashCode() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
   function inline(Inliner) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function key() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function Key(CharSequence) defined in com::google::errorprone::refaster::UTypeVar::Key
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
   function setLowerBound(UType) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lowerBound defined in com::google::errorprone::refaster::UTypeVar
   function setUpperBound(UType) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable upperBound defined in com::google::errorprone::refaster::UTypeVar
   function toString() in line 160
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
   function visitType(Type,Unifier) in line 100
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function UTypeVar(String,UType,UType) in line 93
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
      uses variable lowerBound defined in com::google::errorprone::refaster::UTypeVar
      uses variable upperBound defined in com::google::errorprone::refaster::UTypeVar
   variable lowerBound in line 90
   variable name in line 89
   variable upperBound in line 91
module com::google::errorprone::refaster::UTypeVar::Key
   inherits from Key< TypeWithExpression >
   function Key(CharSequence) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in com::google::errorprone::refaster::UTypeVar
module com::google::errorprone::refaster::UTypeVar::TypeWithExpression
   inherits from com::google::errorprone::refaster::Inlineable
   abstract class
   function create(Type,JCExpression) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function create(Type) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function inline(Inliner) in line 65
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function type() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UTypeVarIdent.java
module com::google::errorprone::refaster::UTypeVarIdent
   inherits from com::google::errorprone::refaster::UIdent
   abstract class
   function create(CharSequence) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultAction(Tree,Unifier) in line 53
      13 lines of code
      2 parameters
      1 conditional paths
   function getName() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UUnary.java
module com::google::errorprone::refaster::UUnary
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::UnaryTree
   abstract class
   function create(Kind,UExpression) in line 58
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function getExpression() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 83
      protection public
      56 lines of code
      1 parameters
      1 conditional paths
   function negate() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitUnary(UnaryTree,@Nullable Unifier) in line 72
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable UNARY_OP_CODES in line 46
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UUnionType.java
module com::google::errorprone::refaster::UUnionType
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::UnionTypeTree
   abstract class
   function getKind() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTypeAlternatives() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitUnionType(UnionTypeTree,Unifier) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UVariableDecl.java
module com::google::errorprone::refaster::UVariableDecl
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::VariableTree
   abstract class
   function create(CharSequence,UExpression,@Nullable UExpression) in line 54
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function create(CharSequence,UExpression) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function create(CharSequence,UExpression,@Nullable UExpression) defined in com::google::errorprone::refaster::UVariableDecl
      uses function getName() defined in com::google::errorprone::refaster::UVariableDecl
      uses function getType() defined in com::google::errorprone::refaster::UVariableDecl
      uses function getInitializer() defined in com::google::errorprone::refaster::UVariableDecl
      uses function Key(String) defined in com::google::errorprone::refaster::Bindings::Key
   function getInitializer() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getModifiers() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNameExpression() in line 125
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 93
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function getName() defined in com::google::errorprone::refaster::UVariableDecl
      uses function inline(Inliner) defined in com::google::errorprone::refaster::StringName
      uses function getType() defined in com::google::errorprone::refaster::UVariableDecl
      uses function getInitializer() defined in com::google::errorprone::refaster::UVariableDecl
   function visitVariable(final VariableTree,Unifier) in line 78
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses function getType() defined in com::google::errorprone::refaster::UVariableDecl
      uses function getInitializer() defined in com::google::errorprone::refaster::UVariableDecl
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UWhileLoop.java
module com::google::errorprone::refaster::UWhileLoop
   inherits from com::google::errorprone::refaster::USimpleStatement
   inherits from com::sun::source::tree::WhileLoopTree
   abstract class
   function create(UExpression,UStatement) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCondition() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatement() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 45
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitWhileLoop(WhileLoopTree,Unifier) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UWildcard.java
module com::google::errorprone::refaster::UWildcard
   inherits from com::google::errorprone::refaster::UExpression
   inherits from com::sun::source::tree::WildcardTree
   abstract class
   function getBound() in line 63
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getKind() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 66
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitWildcard(WildcardTree,Unifier) in line 78
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable BOUND_KINDS in line 41
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/refaster/UWildcardType.java
module com::google::errorprone::refaster::UWildcardType
   inherits from com::google::errorprone::refaster::UType
   abstract class
   function create(BoundKind,UType) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function create() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inline(Inliner) in line 56
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visitWildcardType(WildcardType,Unifier) in line 50
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/scanner/BuiltInCheckerSuppliers.java
module com::google::errorprone::scanner::BuiltInCheckerSuppliers
   function allChecks() in line 170
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function defaultChecks() in line 178
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function allChecks() defined in com::google::errorprone::scanner::BuiltInCheckerSuppliers
      uses function filter(Predicate<?super BugCheckerInfo >) defined in com::google::errorprone::scanner::ScannerSupplier
   function errorChecks() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function allChecks() defined in com::google::errorprone::scanner::BuiltInCheckerSuppliers
      uses function filter(Predicate<?super BugCheckerInfo >) defined in com::google::errorprone::scanner::ScannerSupplier
      uses function getSuppliers(Class<?extends BugChecker >...) defined in com::google::errorprone::scanner::BuiltInCheckerSuppliers
   function getSuppliers(Class<?extends BugChecker >...) in line 159
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function BuiltInCheckerSuppliers() in line 342
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/scanner/ErrorProneScanner.java
module com::google::errorprone::scanner::ErrorProneScanner
   inherits from com::google::errorprone::scanner::Scanner
   function defaultSeverities(Iterable< BugChecker >) in line 162
      8 lines of code
      1 parameters
      2 conditional paths
   function getCustomSuppressionAnnotations() in line 194
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable customSuppressionAnnotations defined in com::google::errorprone::scanner::ErrorProneScanner
   function registerNodeTypes(BugChecker) in line 301
      159 lines of code
      1 parameters
      53 conditional paths
      uses function suppressibility() defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable CUSTOM_ANNOTATION defined in com::google::errorprone::BugPattern::Suppressibility
      uses variable customSuppressionAnnotations defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function customSuppressionAnnotations() defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable annotationMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable annotatedTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable arrayAccessMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable arrayTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable assertMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable assignmentMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable binaryMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable blockMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable breakMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable caseMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable catchMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable classMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable compilationUnitMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable compoundAssignmentMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable conditionalExpressionMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable continueMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable doWhileLoopMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable emptyStatementMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable enhancedForLoopMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable expressionStatementMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable forLoopMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable identifierMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable ifMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable importMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable instanceOfMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable intersectionTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable labeledStatementMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable lambdaExpressionMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable literalMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable memberReferenceMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable memberSelectMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable methodMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable methodInvocationMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable modifiersMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable newArrayMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable newClassMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable parameterizedTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable parenthesizedMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable primitiveTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable returnMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable switchMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable synchronizedMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable throwMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable tryMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable typeCastMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable typeParameterMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable unaryMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable unionTypeTreeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable variableMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable whileLoopMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses variable wildcardMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
   function scan(TreePath,VisitorState) in line 1034
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function scan(Tree,VisitorState) in line 1048
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
   function severityMap() in line 1060
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable severities defined in com::google::errorprone::scanner::ErrorProneScanner
   function visitAnnotatedType(AnnotatedTypeTree,VisitorState) in line 473
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable annotatedTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitAnnotation(AnnotationTree,VisitorState) in line 462
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable annotationMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitArrayAccess(ArrayAccessTree,VisitorState) in line 484
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable arrayAccessMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitArrayType(ArrayTypeTree,VisitorState) in line 495
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable arrayTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitAssert(AssertTree,VisitorState) in line 506
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable assertMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitAssignment(AssignmentTree,VisitorState) in line 517
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable assignmentMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitBinary(BinaryTree,VisitorState) in line 528
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable binaryMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitBlock(BlockTree,VisitorState) in line 539
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable blockMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitBreak(BreakTree,VisitorState) in line 550
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable breakMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitCase(CaseTree,VisitorState) in line 561
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable caseMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitCatch(CatchTree,VisitorState) in line 572
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable catchMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitClass(ClassTree,VisitorState) in line 583
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable classMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitCompilationUnit(CompilationUnitTree,VisitorState) in line 594
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable compilationUnitMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitCompoundAssignment(CompoundAssignmentTree,VisitorState) in line 605
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable compoundAssignmentMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitConditionalExpression(ConditionalExpressionTree,VisitorState) in line 616
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable conditionalExpressionMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitContinue(ContinueTree,VisitorState) in line 628
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable continueMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitDoWhileLoop(DoWhileLoopTree,VisitorState) in line 639
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable doWhileLoopMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitEmptyStatement(EmptyStatementTree,VisitorState) in line 650
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable emptyStatementMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitEnhancedForLoop(EnhancedForLoopTree,VisitorState) in line 661
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable enhancedForLoopMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitExpressionStatement(ExpressionStatementTree,VisitorState) in line 674
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable expressionStatementMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitForLoop(ForLoopTree,VisitorState) in line 685
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable forLoopMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitIdentifier(IdentifierTree,VisitorState) in line 696
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable identifierMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitIf(IfTree,VisitorState) in line 707
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable ifMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitImport(ImportTree,VisitorState) in line 718
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable importMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitInstanceOf(InstanceOfTree,VisitorState) in line 729
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable instanceOfMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitIntersectionType(IntersectionTypeTree,VisitorState) in line 740
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable intersectionTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitLabeledStatement(LabeledStatementTree,VisitorState) in line 751
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable labeledStatementMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitLambdaExpression(LambdaExpressionTree,VisitorState) in line 762
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable lambdaExpressionMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitLiteral(LiteralTree,VisitorState) in line 773
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable literalMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitMemberReference(MemberReferenceTree,VisitorState) in line 795
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable memberReferenceMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitMemberSelect(MemberSelectTree,VisitorState) in line 784
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable memberSelectMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitMethod(MethodTree,VisitorState) in line 806
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable methodMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitMethodInvocation(MethodInvocationTree,VisitorState) in line 822
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable methodInvocationMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitModifiers(ModifiersTree,VisitorState) in line 833
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable modifiersMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitNewArray(NewArrayTree,VisitorState) in line 844
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable newArrayMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitNewClass(NewClassTree,VisitorState) in line 855
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable newClassMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitParameterizedType(ParameterizedTypeTree,VisitorState) in line 869
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable parameterizedTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitParenthesized(ParenthesizedTree,VisitorState) in line 880
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable parenthesizedMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitPrimitiveType(PrimitiveTypeTree,VisitorState) in line 891
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable primitiveTypeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitReturn(ReturnTree,VisitorState) in line 902
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable returnMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitSwitch(SwitchTree,VisitorState) in line 913
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable switchMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitSynchronized(SynchronizedTree,VisitorState) in line 924
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable synchronizedMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitThrow(ThrowTree,VisitorState) in line 935
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable throwMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitTry(TryTree,VisitorState) in line 946
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable tryMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitTypeCast(TypeCastTree,VisitorState) in line 957
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable typeCastMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitTypeParameter(TypeParameterTree,VisitorState) in line 968
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable typeParameterMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitUnary(UnaryTree,VisitorState) in line 979
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable unaryMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitUnionType(UnionTypeTree,VisitorState) in line 990
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable unionTypeTreeMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitVariable(VariableTree,VisitorState) in line 1001
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable variableMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitWhileLoop(WhileLoopTree,VisitorState) in line 1012
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable whileLoopMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function visitWildcard(WildcardTree,VisitorState) in line 1023
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses variable wildcardMatchers defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function isSuppressed(Suppressible,VisitorState) defined in com::google::errorprone::scanner::Scanner
   function ErrorProneScanner(BugChecker...) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ErrorProneScanner(Iterable< BugChecker >) in line 176
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function defaultSeverities(Iterable< BugChecker >) defined in com::google::errorprone::scanner::ErrorProneScanner
   function ErrorProneScanner(Iterable< BugChecker >,Map< String, SeverityLevel >) in line 186
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable severities defined in com::google::errorprone::scanner::ErrorProneScanner
      uses function registerNodeTypes(BugChecker) defined in com::google::errorprone::scanner::ErrorProneScanner
   variable annotatedTypeMatchers in line 200
   variable annotationMatchers in line 198
   variable arrayAccessMatchers in line 202
   variable arrayTypeMatchers in line 204
   variable assertMatchers in line 206
   variable assignmentMatchers in line 208
   variable binaryMatchers in line 210
   variable blockMatchers in line 212
   variable breakMatchers in line 214
   variable caseMatchers in line 216
   variable catchMatchers in line 218
   variable classMatchers in line 220
   variable compilationUnitMatchers in line 222
   variable compoundAssignmentMatchers in line 224
   variable conditionalExpressionMatchers in line 226
   variable continueMatchers in line 228
   variable customSuppressionAnnotations in line 148
   variable doWhileLoopMatchers in line 230
   variable emptyStatementMatchers in line 232
   variable enhancedForLoopMatchers in line 234
   variable expressionStatementMatchers in line 236
   variable forLoopMatchers in line 238
   variable identifierMatchers in line 240
   variable ifMatchers in line 242
   variable importMatchers in line 244
   variable instanceOfMatchers in line 246
   variable intersectionTypeMatchers in line 248
   variable labeledStatementMatchers in line 250
   variable lambdaExpressionMatchers in line 252
   variable literalMatchers in line 254
   variable memberReferenceMatchers in line 256
   variable memberSelectMatchers in line 258
   variable methodInvocationMatchers in line 262
   variable methodMatchers in line 260
   variable modifiersMatchers in line 264
   variable newArrayMatchers in line 266
   variable newClassMatchers in line 268
   variable parameterizedTypeMatchers in line 270
   variable parenthesizedMatchers in line 272
   variable primitiveTypeMatchers in line 274
   variable returnMatchers in line 276
   variable severities in line 151
   variable switchMatchers in line 278
   variable synchronizedMatchers in line 280
   variable throwMatchers in line 282
   variable tryMatchers in line 284
   variable typeCastMatchers in line 286
   variable typeParameterMatchers in line 288
   variable unaryMatchers in line 290
   variable unionTypeTreeMatchers in line 292
   variable variableMatchers in line 294
   variable whileLoopMatchers in line 296
   variable wildcardMatchers in line 298
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/scanner/ErrorProneScannerTransformer.java
module com::google::errorprone::scanner::ErrorProneScannerTransformer
   inherits from com::google::errorprone::CodeTransformer
   abstract class
   function annotations() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function apply(TreePath,Context,DescriptionListener) in line 44
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function scan(TreePath,VisitorState) defined in com::google::errorprone::scanner::Scanner
      uses function createVisitorState(Context,DescriptionListener) defined in com::google::errorprone::scanner::ErrorProneScannerTransformer
   function create(Scanner) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createVisitorState(Context,DescriptionListener) in line 56
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/scanner/InstanceReturningScannerSupplierImpl.java
module com::google::errorprone::scanner::InstanceReturningScannerSupplierImpl
   inherits from com::google::errorprone::scanner::ScannerSupplier
   function get() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllChecks() in line 44
      3 lines of code
      0 parameters
      1 conditional paths
   function getEnabledChecks() in line 54
      3 lines of code
      0 parameters
      1 conditional paths
   function severities() in line 49
      3 lines of code
      0 parameters
      1 conditional paths
   variable scanner in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/scanner/Scanner.java
module com::google::errorprone::scanner::Scanner
   inherits from com::sun::source::util::TreePathScanner
   function getCustomSuppressionAnnotations() in line 153
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function reportMatch(Description) defined in com::google::errorprone::VisitorState
   function initSuppressionHelper(VisitorState) in line 55
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable suppressionHelper defined in com::google::errorprone::scanner::Scanner
      uses function getCustomSuppressionAnnotations() defined in com::google::errorprone::scanner::Scanner
   function isSuppressed(Suppressible,VisitorState) in line 137
      11 lines of code
      2 parameters
      1 conditional paths
      uses function initSuppressionHelper(VisitorState) defined in com::google::errorprone::scanner::Scanner
      uses variable suppressions defined in com::google::errorprone::scanner::Scanner
      uses variable customSuppressions defined in com::google::errorprone::scanner::Scanner
      uses function severityMap() defined in com::google::errorprone::scanner::Scanner
      uses function canonicalName() defined in com::google::errorprone::matchers::Suppressible
      uses variable inGeneratedCode defined in com::google::errorprone::scanner::Scanner
      uses variable errorProneOptions defined in com::google::errorprone::VisitorState
      uses variable disableWarningsInGeneratedCode defined in com::google::errorprone::ErrorProneOptions
   function scan(TreePath,VisitorState) in line 65
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function updateSuppressions(Tree,VisitorState) defined in com::google::errorprone::scanner::Scanner
      uses variable suppressions defined in com::google::errorprone::scanner::Scanner
      uses variable customSuppressions defined in com::google::errorprone::scanner::Scanner
      uses variable inGeneratedCode defined in com::google::errorprone::scanner::Scanner
   function scan(Tree,VisitorState) in line 84
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses function updateSuppressions(Tree,VisitorState) defined in com::google::errorprone::scanner::Scanner
      uses variable suppressions defined in com::google::errorprone::scanner::Scanner
      uses variable customSuppressions defined in com::google::errorprone::scanner::Scanner
      uses variable inGeneratedCode defined in com::google::errorprone::scanner::Scanner
   function severityMap() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function updateSuppressions(Tree,VisitorState) in line 104
      27 lines of code
      2 parameters
      4 conditional paths
      uses variable suppressions defined in com::google::errorprone::scanner::Scanner
      uses variable customSuppressions defined in com::google::errorprone::scanner::Scanner
      uses variable inGeneratedCode defined in com::google::errorprone::scanner::Scanner
      uses function initSuppressionHelper(VisitorState) defined in com::google::errorprone::scanner::Scanner
      uses variable suppressionHelper defined in com::google::errorprone::scanner::Scanner
      uses function extendSuppressionSets(Symbol,Type,Set< String >,Set< Class<?extends Annotation >>,boolean,VisitorState) defined in com::google::errorprone::SuppressionHelper
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   variable customSuppressions in line 48
   variable inGeneratedCode in line 50
   variable suppressionHelper in line 53
   variable suppressions in line 47
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/scanner/ScannerSupplier.java
module com::google::errorprone::scanner::ScannerSupplier
   inherits from com::google::common::base::Supplier
   abstract class
   function applyOverrides(ErrorProneOptions) in line 135
      protection public
      64 lines of code
      1 parameters
      14 conditional paths
      uses function getAllChecks() defined in com::google::errorprone::scanner::ScannerSupplier
      uses function severities() defined in com::google::errorprone::scanner::ScannerSupplier
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable WARNING defined in com::google::errorprone::BugPattern::SeverityLevel
   function defaultSeverities(Iterable< BugCheckerInfo >) in line 61
      8 lines of code
      1 parameters
      2 conditional paths
      uses function severities() defined in com::google::errorprone::scanner::ScannerSupplier
   function filter(Predicate<?super BugCheckerInfo >) in line 222
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function severities() defined in com::google::errorprone::scanner::ScannerSupplier
      uses function getAllChecks() defined in com::google::errorprone::scanner::ScannerSupplier
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
   function fromBugCheckerClasses(Class<?extends BugChecker >...) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function fromBugCheckerClasses(Iterable< Class<?extends BugChecker >>) in line 73
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function fromBugCheckerInfos(Iterable< BugCheckerInfo >) defined in com::google::errorprone::scanner::ScannerSupplier
   function fromBugCheckerInfos(Iterable< BugCheckerInfo >) in line 85
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function defaultSeverities(Iterable< BugCheckerInfo >) defined in com::google::errorprone::scanner::ScannerSupplier
   function fromScanner(Scanner) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAllChecks() defined in com::google::errorprone::scanner::ScannerSupplier
      uses function getEnabledChecks() defined in com::google::errorprone::scanner::ScannerSupplier
      uses function severities() defined in com::google::errorprone::scanner::ScannerSupplier
   function getAllChecks() in line 109
      1 lines of code
      0 parameters
      1 conditional paths
   function getEnabledChecks() in line 114
      1 lines of code
      0 parameters
      1 conditional paths
   function plus(ScannerSupplier) in line 206
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function getAllChecks() defined in com::google::errorprone::scanner::ScannerSupplier
      uses function severities() defined in com::google::errorprone::scanner::ScannerSupplier
   function severities() in line 116
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/scanner/ScannerSupplierImpl.java
module com::google::errorprone::scanner::ScannerSupplierImpl
   inherits from com::google::errorprone::scanner::ScannerSupplier
   function get() in line 66
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllChecks() in line 72
      3 lines of code
      0 parameters
      1 conditional paths
   function getEnabledChecks() in line 82
      3 lines of code
      0 parameters
      1 conditional paths
   function severities() in line 77
      3 lines of code
      0 parameters
      1 conditional paths
   variable checks in line 39
   variable INSTANTIATE_CHECKER in line 53
   variable isCheckEnabled in line 86
   variable severities in line 40
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/SubContext.java
module com::google::errorprone::SubContext
   inherits from com::sun::tools::javac::util::Context
   function SubContext(Context) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable base defined in com::google::errorprone::SubContext
   variable base in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/suppliers/Supplier.java
module com::google::errorprone::suppliers::Supplier
   inherits from java::io::Serializable
   function get(VisitorState) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/suppliers/Suppliers.java
module com::google::errorprone::suppliers::Suppliers
   function genericTypeOf(final Supplier< ExpressionTree >,final int) in line 43
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function get(VisitorState) defined in com::google::errorprone::suppliers::Supplier
   function genericTypeOfType(final Supplier< Type >,final int) in line 64
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function get(VisitorState) defined in com::google::errorprone::suppliers::Supplier
   function identitySupplier(final T) in line 187
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function receiverInstance() in line 101
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function receiverType() in line 84
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function typeFromString(final String) in line 116
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   variable ANNOTATION_TYPE in line 174
      protection public
   variable BOOLEAN_TYPE in line 146
      protection public
   variable ENCLOSING_CLASS in line 196
      protection public
   variable EXCEPTION_TYPE in line 167
      protection public
   variable INT_TYPE in line 153
      protection public
   variable JAVA_LANG_BOOLEAN_TYPE in line 139
      protection public
   variable JAVA_LANG_VOID_TYPE in line 125
      protection public
   variable OBJECT_TYPE in line 160
      protection public
   variable VOID_TYPE in line 132
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/SuppressionHelper.java
module com::google::errorprone::SuppressionHelper
   function extendSuppressionSets(Symbol,Type,Set< String >,Set< Class<?extends Annotation >>,boolean,VisitorState) in line 102
      protection public
      53 lines of code
      6 parameters
      11 conditional paths
      uses variable inGeneratedCode defined in com::google::errorprone::SuppressionHelper::SuppressionInfo
      uses variable customSuppressionAnnotations defined in com::google::errorprone::SuppressionHelper
      uses function SuppressionInfo(Set< String >,Set< Class<?extends Annotation >>,boolean) defined in com::google::errorprone::SuppressionHelper::SuppressionInfo
   function isSuppressed(Suppressible,Set< String >,Set< Class<?extends Annotation >>,SeverityLevel,boolean,boolean) in line 168
      protection public
      23 lines of code
      6 parameters
      5 conditional paths
      uses function suppressibility() defined in com::google::errorprone::matchers::Suppressible
      uses variable UNSUPPRESSIBLE defined in com::google::errorprone::BugPattern::Suppressibility
      uses variable inGeneratedCode defined in com::google::errorprone::SuppressionHelper::SuppressionInfo
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function customSuppressionAnnotations() defined in com::google::errorprone::matchers::Suppressible
      uses function allNames() defined in com::google::errorprone::matchers::Suppressible
   function SuppressionHelper(Set< Class<?extends Annotation >>,VisitorState) in line 58
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable customSuppressionAnnotations defined in com::google::errorprone::SuppressionHelper
   variable customSuppressionAnnotations in line 50
module com::google::errorprone::SuppressionHelper::SuppressionInfo
   function SuppressionInfo(Set< String >,Set< Class<?extends Annotation >>,boolean) in line 75
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable suppressWarningsStrings defined in com::google::errorprone::SuppressionHelper::SuppressionInfo
      uses variable customSuppressions defined in com::google::errorprone::SuppressionHelper::SuppressionInfo
      uses variable inGeneratedCode defined in com::google::errorprone::SuppressionHelper::SuppressionInfo
   variable customSuppressions in line 72
      protection public
   variable inGeneratedCode in line 73
      protection public
   variable suppressWarningsStrings in line 71
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/util/ASTHelpers.java
module com::google::errorprone::util::ASTHelpers
   function constValue(JCTree) in line 639
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function enclosingClass(Symbol) in line 617
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function enclosingSymbol(Symbol,Class< T >) defined in com::google::errorprone::util::ASTHelpers
   function enclosingPackage(Symbol) in line 622
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function enclosingSymbol(Symbol,Class< T >) defined in com::google::errorprone::util::ASTHelpers
   function enclosingSymbol(Symbol,Class< T >) in line 606
      9 lines of code
      2 parameters
      3 conditional paths
   function enumValues(TypeSymbol) in line 529
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
   function findEnclosingNode(TreePath,Class< T >) in line 209
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findPathFromEnclosingNodeToTopLevel(TreePath,Class< T >) defined in com::google::errorprone::util::ASTHelpers
   function findMatchingMethods(Name,final Predicate< MethodSymbol >,Type,Types) in line 416
      protection public
      24 lines of code
      4 parameters
      4 conditional paths
   function findPathFromEnclosingNodeToTopLevel(TreePath,Class< T >) in line 197
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function findSuperMethod(MethodSymbol,Types) in line 446
      protection public
      12 lines of code
      2 parameters
      4 conditional paths
   function findSuperMethods(MethodSymbol,Types) in line 383
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
   function getActualStartPosition(JCLiteral,CharSequence) in line 368
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable WHITESPACE_CHARS defined in com::google::errorprone::util::ASTHelpers
   function getAnnotation(Tree,Class< T >) in line 511
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getSymbol(Tree) defined in com::google::errorprone::util::ASTHelpers
   function getAnnotation(Symbol,Class< T >) in line 524
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getAnnotationName(AnnotationTree) in line 601
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSymbol(Tree) defined in com::google::errorprone::util::ASTHelpers
   function getConstructors(ClassTree,VisitorState) in line 560
      protection public
      12 lines of code
      2 parameters
      4 conditional paths
      uses function getSymbol(Tree) defined in com::google::errorprone::util::ASTHelpers
   function getModifiers(Tree) in line 687
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
   function getNullnessValue(ExpressionTree,VisitorState,NullnessAnalysis) in line 630
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function getNullness(TreePath,Context) defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessAnalysis
      uses variable context defined in com::google::errorprone::VisitorState
   function getReceiver(ExpressionTree) in line 318
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function getReceiverType(ExpressionTree) in line 290
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
   function getReturnType(ExpressionTree) in line 264
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
   function getRootAssignable(MethodInvocationTree) in line 231
      protection public
      27 lines of code
      1 parameters
      6 conditional paths
      uses function getSymbol(Tree) defined in com::google::errorprone::util::ASTHelpers
   function getSymbol(Tree) in line 131
      protection public
      30 lines of code
      1 parameters
      10 conditional paths
      uses function getSymbol(Tree) defined in com::google::errorprone::util::ASTHelpers
   function getSymbol(ClassTree) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSymbol(PackageTree) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSymbol(MethodTree) in line 173
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSymbol(VariableTree) in line 178
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSymbol(MethodInvocationTree) in line 183
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getSymbol(Tree) defined in com::google::errorprone::util::ASTHelpers
   function getType(Tree) in line 578
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getType(ClassTree) in line 590
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function getUpperBound(Type,Types) in line 703
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function hasAnnotation(Symbol,String,VisitorState) in line 465
      protection public
      19 lines of code
      3 parameters
      5 conditional paths
      uses function getSymbolFromString(String) defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function hasAnnotation(Symbol,Class<?extends Annotation >,VisitorState) in line 490
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function hasAnnotation(Symbol,String,VisitorState) defined in com::google::errorprone::util::ASTHelpers
   function hasAnnotation(Tree,Class<?extends Annotation >,VisitorState) in line 500
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function getSymbol(Tree) defined in com::google::errorprone::util::ASTHelpers
      uses function hasAnnotation(Symbol,String,VisitorState) defined in com::google::errorprone::util::ASTHelpers
   function isCastable(Type,Type,VisitorState) in line 668
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function isGeneratedConstructor(MethodTree) in line 552
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function isSameType(Type,Type,VisitorState) in line 677
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function isSubtype(Type,Type,VisitorState) in line 657
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function isVoidType(Type,VisitorState) in line 646
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
      uses variable JAVA_LANG_VOID_TYPE defined in com::google::errorprone::suppliers::Suppliers
      uses function get(VisitorState) defined in com::google::errorprone::suppliers::Supplier
   function matchBinaryTree(BinaryTree,List< Matcher< ExpressionTree >>,VisitorState) in line 340
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
   function sameVariable(ExpressionTree,ExpressionTree) in line 91
      protection public
      34 lines of code
      2 parameters
      7 conditional paths
      uses function getSymbol(Tree) defined in com::google::errorprone::util::ASTHelpers
   variable WHITESPACE_CHARS in line 357
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/util/EditDistance.java
module com::google::errorprone::util::EditDistance
   function getEditDistance(String,String) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getEditDistance(String,String,boolean) in line 53
      protection public
      49 lines of code
      3 parameters
      9 conditional paths
      uses function isEmptyOrWhitespace(String) defined in com::google::errorprone::util::EditDistance
   function isEmptyOrWhitespace(String) in line 110
      3 lines of code
      1 parameters
      1 conditional paths
   function EditDistance() in line 28
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/util/ErrorProneToken.java
module com::google::errorprone::util::ErrorProneToken
   function comments() in line 50
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in com::google::errorprone::util::ErrorProneToken
   function endPos() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in com::google::errorprone::util::ErrorProneToken
   function kind() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in com::google::errorprone::util::ErrorProneToken
   function name() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in com::google::errorprone::util::ErrorProneToken
   function pos() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in com::google::errorprone::util::ErrorProneToken
   function radix() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in com::google::errorprone::util::ErrorProneToken
   function stringVal() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in com::google::errorprone::util::ErrorProneToken
   function toString() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in com::google::errorprone::util::ErrorProneToken
   variable token in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/util/ErrorProneTokens.java
module com::google::errorprone::util::ErrorProneTokens
   function getTokens(String,Context) in line 36
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
module com::google::errorprone::util::ErrorProneTokens::CommentSavingTokenizer
   inherits from com::sun::tools::javac::parser::JavaTokenizer
   function processComment(int,int,CommentStyle) in line 59
      5 lines of code
      3 parameters
      1 conditional paths
module com::google::errorprone::util::ErrorProneTokens::CommentWithTextAndPosition
   inherits from com::sun::tools::javac::parser::Tokens::Comment
   function getSourcePos(int) in line 92
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getStyle() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getText() in line 107
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function CommentWithTextAndPosition(int,int,AccessibleReader,CommentStyle) in line 76
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
   variable endPos in line 70
   variable pos in line 69
   variable reader in line 71
   variable style in line 72
   variable text in line 74
module com::google::errorprone::util::ErrorProneTokens::AccessibleScanner
   inherits from com::google::errorprone::scanner::Scanner
   function AccessibleScanner(ScannerFactory,JavaTokenizer) in line 133
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::util::ErrorProneTokens::AccessibleReader
   inherits from com::sun::tools::javac::parser::UnicodeReader
   function AccessibleReader(ScannerFactory,char[],int) in line 140
      3 lines of code
      3 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/util/OperatorPrecedence.java
module com::google::errorprone::util::OperatorPrecedence
   function from(Tree.Kind) in line 52
      protection public
      55 lines of code
      1 parameters
      37 conditional paths
      uses variable POSTFIX defined in com::google::errorprone::util::OperatorPrecedence
      uses variable UNARY defined in com::google::errorprone::util::OperatorPrecedence
      uses variable MULTIPLICATIVE defined in com::google::errorprone::util::OperatorPrecedence
      uses variable ADDITIVE defined in com::google::errorprone::util::OperatorPrecedence
      uses variable SHIFT defined in com::google::errorprone::util::OperatorPrecedence
      uses variable RELATIONAL defined in com::google::errorprone::util::OperatorPrecedence
      uses variable EQUALITY defined in com::google::errorprone::util::OperatorPrecedence
      uses variable AND defined in com::google::errorprone::util::OperatorPrecedence
      uses variable XOR defined in com::google::errorprone::util::OperatorPrecedence
      uses variable OR defined in com::google::errorprone::util::OperatorPrecedence
      uses variable CONDITIONAL_AND defined in com::google::errorprone::util::OperatorPrecedence
      uses variable CONDITIONAL_OR defined in com::google::errorprone::util::OperatorPrecedence
      uses variable ASSIGNMENT defined in com::google::errorprone::util::OperatorPrecedence
   function isHigher(OperatorPrecedence) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable precedence defined in com::google::errorprone::util::OperatorPrecedence
   function OperatorPrecedence(int) in line 44
      3 lines of code
      1 parameters
      1 conditional paths
   variable ADDITIVE in line 30
      protection public
   variable AND in line 34
      protection public
   variable ASSIGNMENT in line 40
      protection public
   variable CONDITIONAL_AND in line 37
      protection public
   variable CONDITIONAL_OR in line 38
      protection public
   variable EQUALITY in line 33
      protection public
   variable MULTIPLICATIVE in line 29
      protection public
   variable OR in line 36
      protection public
   variable POSTFIX in line 27
      protection public
   variable precedence in line 42
   variable RELATIONAL in line 32
      protection public
   variable SHIFT in line 31
      protection public
   variable TERNARY in line 39
      protection public
   variable UNARY in line 28
      protection public
   variable XOR in line 35
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/main/java/com/google/errorprone/VisitorState.java
module com::google::errorprone::VisitorState
   function errorProneOptions() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function findEnclosing(Class<?extends T >...) in line 273
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findPathToEnclosing(Class<?extends Tree >...) defined in com::google::errorprone::VisitorState
   function findPathToEnclosing(Class<?extends Tree >...) in line 253
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function getEndPosition(JCTree) in line 325
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function getName(String) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
   function getPath() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable path defined in com::google::errorprone::VisitorState
   function getPrimitiveType(String) in line 350
      21 lines of code
      1 parameters
      9 conditional paths
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function getSourceCode() in line 283
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
   function getSourceForNode(Tree) in line 300
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getEndPosition(JCTree) defined in com::google::errorprone::VisitorState
      uses function getSourceCode() defined in com::google::errorprone::VisitorState
   function getSymbolFromString(String) in line 192
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getName(String) defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function getSymtab() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
   function getTokensForNode(Tree) in line 316
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceForNode(Tree) defined in com::google::errorprone::VisitorState
      uses variable context defined in com::google::errorprone::VisitorState
   function getTreeMaker() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
   function getType(Type,boolean,List< Type >) in line 209
      protection public
      15 lines of code
      3 parameters
      4 conditional paths
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function getType(Type,boolean,java.util.List< Type >) in line 228
      protection public
      17 lines of code
      3 parameters
      4 conditional paths
      uses function getSymtab() defined in com::google::errorprone::VisitorState
   function getTypeFromString(String) in line 159
      protection public
      28 lines of code
      1 parameters
      6 conditional paths
      uses function validateTypeStr(String) defined in com::google::errorprone::VisitorState
      uses function isPrimitiveType(String) defined in com::google::errorprone::VisitorState
      uses function getPrimitiveType(String) defined in com::google::errorprone::VisitorState
      uses function getName(String) defined in com::google::errorprone::VisitorState
      uses function getSymtab() defined in com::google::errorprone::VisitorState
      uses variable context defined in com::google::errorprone::VisitorState
   function getTypes() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
   function isPrimitiveType(String) in line 372
      5 lines of code
      1 parameters
      1 conditional paths
   function reportMatch(Description) in line 130
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable severityMap defined in com::google::errorprone::VisitorState
      uses variable checkName defined in com::google::errorprone::matchers::Description
      uses function applySeverityOverride(SeverityLevel) defined in com::google::errorprone::matchers::Description
      uses variable descriptionListener defined in com::google::errorprone::VisitorState
      uses function onDescribed(Description) defined in com::google::errorprone::DescriptionListener
   function validateTypeStr(String) in line 336
      10 lines of code
      1 parameters
      3 conditional paths
   function withPath(TreePath) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function VisitorState(Context) defined in com::google::errorprone::VisitorState
      uses variable context defined in com::google::errorprone::VisitorState
      uses variable path defined in com::google::errorprone::VisitorState
      uses variable descriptionListener defined in com::google::errorprone::VisitorState
      uses variable severityMap defined in com::google::errorprone::VisitorState
      uses function errorProneOptions() defined in com::google::errorprone::VisitorState
   function VisitorState(Context) in line 67
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
      uses variable NULL_LISTENER defined in com::google::errorprone::VisitorState
   function VisitorState(Context,DescriptionListener) in line 76
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
   function VisitorState(Context,DescriptionListener,Map< String, SeverityLevel >,ErrorProneOptions) in line 85
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
      uses variable severityMap defined in com::google::errorprone::VisitorState
      uses function errorProneOptions() defined in com::google::errorprone::VisitorState
   function VisitorState(Context,TreePath,DescriptionListener,Map< String, SeverityLevel >,ErrorProneOptions) in line 93
      12 lines of code
      5 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::VisitorState
      uses variable path defined in com::google::errorprone::VisitorState
      uses variable descriptionListener defined in com::google::errorprone::VisitorState
      uses variable severityMap defined in com::google::errorprone::VisitorState
      uses function errorProneOptions() defined in com::google::errorprone::VisitorState
   variable context in line 56
      protection public
   variable descriptionListener in line 55
   variable errorProneOptions in line 59
   variable NULL_LISTENER in line 63
   variable path in line 57
   variable severityMap in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/apply/ImportStatementsTest.java
module com::google::errorprone::apply::ImportStatementsTest
   function addingToEmptyImportListOutputShouldStartAndEndWithNewlines() in line 466
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function add(String) defined in com::google::errorprone::apply::ImportStatements
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function emptyImportListShouldGivePositionOfPackageStmt() in line 453
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getStartPos() defined in com::google::errorprone::apply::ImportStatements
      uses function getEndPos() defined in com::google::errorprone::apply::ImportStatements
   function removingNonExistingImportShouldntChangeImports() in line 416
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
      uses function remove(String) defined in com::google::errorprone::apply::ImportStatements
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function shouldAddImportInCorrectPosition() in line 231
      protection public
      32 lines of code
      0 parameters
      1 conditional paths
      uses function add(String) defined in com::google::errorprone::apply::ImportStatements
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function shouldAddMultipleImportsInCorrectPositions() in line 269
      protection public
      35 lines of code
      0 parameters
      1 conditional paths
      uses function addAll(Collection< String >) defined in com::google::errorprone::apply::ImportStatements
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function shouldGetTopLevelFromImport() in line 137
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function shouldGetTopLevelFromImportWithWhitespace() in line 176
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function shouldGetTopLevelFromImportWithWildcard() in line 147
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function shouldGetTopLevelFromStaticImport() in line 156
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function shouldGetTopLevelFromStaticImportWithWildcard() in line 166
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function shouldNotAddExistingImport() in line 309
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
      uses function add(String) defined in com::google::errorprone::apply::ImportStatements
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function shouldRemoveImportAndSort() in line 346
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function remove(String) defined in com::google::errorprone::apply::ImportStatements
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function shouldRemoveMultipleImportsAndSort() in line 382
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
      uses function removeAll(Collection< String >) defined in com::google::errorprone::apply::ImportStatements
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function shouldSortImports() in line 196
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function toString() defined in com::google::errorprone::apply::ImportStatements
   function shouldThrowExceptionForImproperlyFormattedImport() in line 187
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function startAndEndPositionsShouldComeFromImportStatements() in line 481
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getStartPos() defined in com::google::errorprone::apply::ImportStatements
      uses function getEndPos() defined in com::google::errorprone::apply::ImportStatements
   function stubImport(String,boolean,int,int) in line 115
      16 lines of code
      4 parameters
      2 conditional paths
   function stubPackage(int) in line 100
      5 lines of code
      1 parameters
      1 conditional paths
   variable baseImportList in line 73
   variable basePackage in line 68
   variable FAKE_END_POS_MAP in line 49
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/apply/SourceFileTest.java
module com::google::errorprone::apply::SourceFileTest
   function getFragmentByChars() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFragmentByChars(int,int) defined in com::google::errorprone::apply::SourceFile
   function getFragmentByLines() in line 111
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function getFragmentByLines(int,int) defined in com::google::errorprone::apply::SourceFile
   function getLines() in line 66
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getLines() defined in com::google::errorprone::apply::SourceFile
   function getPath() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPath() defined in com::google::errorprone::apply::SourceFile
   function getSourceText() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceText() defined in com::google::errorprone::apply::SourceFile
   function replaceChars() in line 76
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function replaceChars(int,int,String) defined in com::google::errorprone::apply::SourceFile
      uses function getSourceText() defined in com::google::errorprone::apply::SourceFile
      uses function getLines() defined in com::google::errorprone::apply::SourceFile
   function replaceLines() in line 87
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function replaceLines(List< String >) defined in com::google::errorprone::apply::SourceFile
      uses function getSourceText() defined in com::google::errorprone::apply::SourceFile
   function replaceLines_numbered() in line 93
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function replaceLines(List< String >) defined in com::google::errorprone::apply::SourceFile
      uses function getSourceText() defined in com::google::errorprone::apply::SourceFile
   function setUp() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DUMMY_PATH in line 37
   variable SOURCE_TEXT in line 38
   variable sourceFile in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelper.java
module com::google::errorprone::BugCheckerRefactoringTestHelper
   function addInput(String) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function forResource(Class<?>,String) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function addInputAndOutput(JavaFileObject,JavaFileObject) in line 114
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable sources defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function addInputLines(String,String...) in line 100
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function applyDiff(JavaFileObject,JavacTaskImpl,JCCompilationUnit) in line 129
      14 lines of code
      3 parameters
      1 conditional paths
      uses function transformer(BugChecker) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses variable refactoringBugChecker defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function apply(TreePath,Context,DescriptionListener) defined in com::google::errorprone::scanner::ErrorProneScannerTransformer
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function getSourceText() defined in com::google::errorprone::apply::SourceFile
   function createJavacTask() in line 158
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses variable sources defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function doTest() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function doTest(TestMode) in line 108
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable sources defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function runTestOnPair(JavaFileObject,JavaFileObject,TestMode) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function newInstance(BugChecker,Class<?>) in line 91
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function BugCheckerRefactoringTestHelper(BugChecker,Class<?>) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses variable refactoringBugChecker defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function parseAndAnalyze(JavacTaskImpl,final JavaFileObject) in line 144
      13 lines of code
      2 parameters
      1 conditional paths
   function runTestOnPair(JavaFileObject,JavaFileObject,TestMode) in line 120
      8 lines of code
      3 parameters
      1 conditional paths
      uses function createJavacTask() defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function parseAndAnalyze(JavacTaskImpl,final JavaFileObject) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function applyDiff(JavaFileObject,JavacTaskImpl,JCCompilationUnit) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function transformer(BugChecker) in line 179
      4 lines of code
      1 parameters
      1 conditional paths
   function BugCheckerRefactoringTestHelper(BugChecker,Class<?>) in line 85
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable refactoringBugChecker defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   variable fileManager in line 83
   variable refactoringBugChecker in line 82
   variable sources in line 81
module com::google::errorprone::BugCheckerRefactoringTestHelper::TestMode
   function verifyMatch(JavaFileObject,JavaFileObject) in line 77
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   variable verifyMatch in line 75
      protection public
module com::google::errorprone::BugCheckerRefactoringTestHelper::ExpectOutput
   function addOutput(String) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addInputAndOutput(JavaFileObject,JavaFileObject) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses variable input defined in com::google::errorprone::BugCheckerRefactoringTestHelper::ExpectOutput
      uses variable fileManager defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function forResource(Class<?>,String) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function addOutputLines(String,String...) in line 194
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addInputAndOutput(JavaFileObject,JavaFileObject) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses variable input defined in com::google::errorprone::BugCheckerRefactoringTestHelper::ExpectOutput
      uses variable fileManager defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function expectUnchanged() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addInputAndOutput(JavaFileObject,JavaFileObject) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses variable input defined in com::google::errorprone::BugCheckerRefactoringTestHelper::ExpectOutput
   function ExpectOutput(JavaFileObject) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable input defined in com::google::errorprone::BugCheckerRefactoringTestHelper::ExpectOutput
   variable input in line 188
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/BugCheckerRefactoringTestHelperTest.java
module com::google::errorprone::BugCheckerRefactoringTestHelperTest
   function compilationErrorFail() in line 152
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function setUp() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAnnotationFullName() in line 160
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addInputLines(String,String...) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function doTest() defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function testNoMatch() in line 56
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addInputLines(String,String...) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function doTest() defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function testReplace() in line 64
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addInputLines(String,String...) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function doTest() defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function testReplaceFail() in line 86
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addInputLines(String,String...) defined in com::google::errorprone::BugCheckerRefactoringTestHelper
      uses function doTest() defined in com::google::errorprone::BugCheckerRefactoringTestHelper
   function testReplaceTextMatch() in line 110
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function testReplaceTextMatchFail() in line 132
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
   variable helper in line 48
module com::google::errorprone::BugCheckerRefactoringTestHelperTest::ReturnNullRefactoring
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 180
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::BugCheckerRefactoringTestHelperTest::RemoveAnnotationRefactoring
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::AnnotationTreeMatcher
   function matchAnnotation(AnnotationTree,VisitorState) in line 199
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/android/FragmentNotInstantiableTest.java
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/android/MislabeledAndroidStringTest.java
module com::google::errorprone::bugpatterns::android::MislabeledAndroidStringTest
   function createCompilationTestHelper() in line 106
      3 lines of code
      0 parameters
      1 conditional paths
   function testAssumedMeanings() in line 99
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function testMatchFullyQualified() in line 36
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function testMatchWithImport() in line 51
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 81
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function testUseInField() in line 68
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/android/RectIntersectReturnValueIgnoredTest.java
module com::google::errorprone::bugpatterns::android::RectIntersectReturnValueIgnoredTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/FragmentNotInstantiableNegativeCases.java
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::NotAFragment1
   function NotAFragment1(int) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::NotAFragment2
   function NotAFragment2() in line 30
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::NotAFragment3
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::NotAFragment4
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::AbstractFragment
   inherits from android::app::Fragment
   abstract class
   function AbstractFragment(int) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::AbstractV4Fragment
   inherits from android::support::v4::app::Fragment
   abstract class
   function value() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable a in line 42
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::MyFragment
   inherits from android::app::Fragment
   function value() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable a in line 50
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::DerivedFragment
   inherits from com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::MyFragment
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::MyV4Fragment
   inherits from android::support::v4::app::Fragment
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::DerivedV4Fragment
   inherits from com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::MyV4Fragment
   function value() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable a in line 62
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::MyFragment2
   inherits from android::app::Fragment
   function MyFragment2() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function MyFragment2(int) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::DerivedFragment2
   inherits from com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::MyFragment2
   function DerivedFragment2() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function DerivedFragment2(boolean) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::EnclosingClass
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::EnclosingClass::InnerFragment
   inherits from android::app::Fragment
   function InnerFragment() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::AnInterface
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::AnInterface::ImplicitlyStaticInnerFragment
   inherits from android::app::Fragment
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiableNegativeCases::AnInterface::ImplicitlyStaticAndPublicInnerFragment
   inherits from android::app::Fragment
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/FragmentNotInstantiablePositiveCases.java
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::PrivateFragment
   inherits from android::app::Fragment
   function PrivateFragment() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::PrivateV4Fragment
   inherits from android::support::v4::app::Fragment
   function PrivateV4Fragment() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::PrivateConstructor
   inherits from android::app::Fragment
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::NoConstructor
   inherits from android::app::Fragment
   function NoConstructor(int) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::NoConstructorV4
   inherits from android::support::v4::app::Fragment
   function NoConstructorV4(int) in line 47
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::ParentFragment
   inherits from android::app::Fragment
   function ParentFragment() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::ParentFragmentV4
   inherits from android::support::v4::app::Fragment
   function ParentFragmentV4() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::DerivedFragmentNoConstructor
   inherits from com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::ParentFragment
   function DerivedFragmentNoConstructor(int) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::DerivedFragmentNoConstructorV4
   inherits from com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::ParentFragmentV4
   function DerivedFragmentNoConstructorV4(boolean) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::EnclosingClass
   function create1() in line 74
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function create2() in line 79
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::android::FragmentNotInstantiablePositiveCases::EnclosingClass::InnerFragment
   inherits from android::app::Fragment
   function InnerFragment() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/RectIntersectReturnValueIgnoredNegativeCases.java
module com::google::errorprone::bugpatterns::android::RectIntersectReturnValueIgnoredNegativeCases
module com::google::errorprone::bugpatterns::android::RectIntersectReturnValueIgnoredNegativeCases::InternalScope
module com::google::errorprone::bugpatterns::android::RectIntersectReturnValueIgnoredNegativeCases::InternalScope::Rect
module com::google::errorprone::bugpatterns::android::RectIntersectReturnValueIgnoredNegativeCases::RectContainer
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/android/testdata/RectIntersectReturnValueIgnoredPositiveCases.java
module com::google::errorprone::bugpatterns::android::RectIntersectReturnValueIgnoredPositiveCases
module com::google::errorprone::bugpatterns::android::RectIntersectReturnValueIgnoredPositiveCases::RectContainer
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ArrayEqualsTest.java
module com::google::errorprone::bugpatterns::ArrayEqualsTest
   function setUp() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testJava7NegativeCase() in line 60
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testJava7PositiveCase() in line 48
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 35
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ArrayHashCodeTest.java
module com::google::errorprone::bugpatterns::ArrayHashCodeTest
   function setUp() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testJava7NegativeCase() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testJava7PositiveCase() in line 51
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 35
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringCompoundAssignmentTest.java
module com::google::errorprone::bugpatterns::ArrayToStringCompoundAssignmentTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringConcatenationTest.java
module com::google::errorprone::bugpatterns::ArrayToStringConcatenationTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ArrayToStringTest.java
module com::google::errorprone::bugpatterns::ArrayToStringTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/AssertFalseTest.java
module com::google::errorprone::bugpatterns::AssertFalseTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/AsyncFunctionReturnsNullTest.java
module com::google::errorprone::bugpatterns::AsyncFunctionReturnsNullTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/BadAnnotationImplementationTest.java
module com::google::errorprone::bugpatterns::BadAnnotationImplementationTest
   function anonymousClassImplementsAnnotation() in line 56
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function anonymousClassImplementsUserDefinedAnnotation() in line 75
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function declaredClassImplementsAnnotation() in line 41
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function declareEnumThatImplementsAnnotation() in line 205
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function declareInterfaceThatExtendsAnnotation() in line 195
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function extendsClassThatImplementsEqualsAndHashCode() in line 222
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function overridesEqualsAndHashCode() in line 175
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function overridesEqualsButNotHashCode() in line 97
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function overridesHashCodeButNotEquals() in line 115
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function wrongEquals() in line 133
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function wrongHashCode() in line 154
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/BadComparableTest.java
module com::google::errorprone::bugpatterns::BadComparableTest
   function setUp() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/BadShiftAmountTest.java
module com::google::errorprone::bugpatterns::BadShiftAmountTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/CannotMockFinalClassTest.java
module com::google::errorprone::bugpatterns::CannotMockFinalClassTest
   function ExpectedException::none() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function mockingFinalClassWithAnnotationFails() in line 58
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function mockingFinalClassWithMockMethodFails() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setUp() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase2() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 42
module com::google::errorprone::bugpatterns::CannotMockFinalClassTest::FinalClass
module com::google::errorprone::bugpatterns::CannotMockFinalClassTest::MocksFinalClassWithAnnotation
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ChainingConstructorIgnoresParameterTest.java
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/CheckReturnValueTest.java
module com::google::errorprone::bugpatterns::CheckReturnValueTest
   function badCanIgnoreReturnValueOnProcedure() in line 237
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function badCRVOnProcedure() in line 130
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function badCRVOnPseudoProcedure() in line 145
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function errorBothClass() in line 323
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function errorBothMethod() in line 336
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function ignoreInOrderVerification() in line 496
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function ignoreInTests() in line 377
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function ignoreInTestsWithFailureMessage() in line 409
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function ignoreTruthFailure() in line 441
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function noCRVonClasspath() in line 536
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function setArgs(List< String >) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function onlyIgnoreWithEnclosingTryCatch() in line 466
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testClassAnnotation() in line 85
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testClassAnnotationButCanIgnoreReturnValue() in line 216
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testIgnoreCRVOnMockito() in line 163
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testJavaLangVoidReturningMethodInAnnotatedPackage() in line 352
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNestedClassAnnotation() in line 252
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNestedClassWithCanIgnoreAnnotation() in line 277
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPackageAnnotation() in line 61
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPackageAnnotationButCanIgnoreReturnValue() in line 192
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPackageWithCanIgnoreAnnotation() in line 301
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testVoidReturningMethodInAnnotatedPackage() in line 107
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 43
   variable tempFolder in line 517
      protection public
module com::google::errorprone::bugpatterns::CheckReturnValueTest::CRVTest
   function f() in line 522
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ClassCanBeStaticTest.java
module com::google::errorprone::bugpatterns::ClassCanBeStaticTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase1() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase2() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase3() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ClassNameTest.java
module com::google::errorprone::bugpatterns::ClassNameTest
   function negative() in line 66
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeAnnotation() in line 131
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeEnum() in line 119
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeInnerClass() in line 95
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeInterface() in line 107
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeIsPublic() in line 142
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function ignoreJavacErrors() defined in com::google::errorprone::CompilationTestHelper
      uses function matchAllDiagnostics() defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeMultipleTopLevel() in line 80
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function packageInfo() in line 50
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function twoClasses() in line 38
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/CollectionIncompatibleTypeTest.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeTest
   function setUp() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testBoundedTypeParameters() in line 89
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testCastFixes() in line 65
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable CAST defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleType::FixType
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testClassCast() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCases() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testOutOfBounds() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 36
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeClassCast.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeClassCast
   inherits from java::util::HashMap
   function test(K) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeNegativeCases.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function argTypeExtendsContainedType() in line 135
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function bothInterfaces(Collection< Interface1 >,Interface2) in line 212
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function boundedTypeParameters(MyHashMap<?,?>) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function boundedWildcard() in line 146
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function collection(Collection< String >,Collection< String >) in line 45
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function collectionSubtype(ArrayList< String >,ArrayList< String >) in line 53
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function containedTypeExtendsArgType() in line 140
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function containsParameterizedType(Collection< Class<?extends String >>,Class<?>) in line 180
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function containsWildcard(Collection< String >,Optional<?>) in line 185
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
      uses function map() defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function declaredTypeVsExpressionType(Pair< Integer, String >,List< Integer >) in line 176
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function list() defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
      uses variable first defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::Pair
   function deque(Deque< String >) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function dequeSubtype(LinkedList< String >) in line 66
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function dictionary(Dictionary< String, Integer >) in line 71
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function dictionarySubtype(Hashtable< String, Integer >) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function doesntExtendCollection() in line 166
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function hashtableContains() in line 196
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function list() in line 81
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function listSubtype() in line 87
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function map() in line 93
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function mapSubtype() in line 102
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function methodArgCastToCollectionWildcard(Collection< Integer >,Collection< String >) in line 241
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function methodArgHasSubtypeTypeArgument(Collection< Number >,Collection< Integer >) in line 226
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function methodArgHasSuperTypeArgument(Collection< Integer >,Collection< Number >) in line 231
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function methodArgHasWildcardTypeArgument(Collection<?extends Number >,Collection<?extends Integer >) in line 236
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function oneInterfaceAndOneNonFinalClass(Collection< Interface1 >,NonFinalClass) in line 216
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function oneNonFinalClassAndOneInterface(Collection< NonFinalClass >,Interface1) in line 221
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function rawType() in line 156
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function stack(Stack< String >) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function stackSubtype(MyStack< String >) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function unboundedWildcard() in line 151
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function collection(Collection< String >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
   function vector(Vector< String >) in line 121
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function vectorSubtype(Stack< String >) in line 126
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function stack(Stack< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::MyStack
   inherits from java::util::Stack
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::B
   inherits from java::util::Date
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::DoesntExtendCollection
   function contains(Object) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::Pair
   variable first in line 172
      protection public
   variable second in line 173
      protection public
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::MyHashMap
   inherits from java::util::HashMap
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::Interface1
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::Interface2
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeNegativeCases::NonFinalClass
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypeOutOfBounds.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypeOutOfBounds
   function test() in line 25
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/collectionincompatibletype/testdata/CollectionIncompatibleTypePositiveCases.java
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function bothFinalClasses(Collection< FinalClass1 >,FinalClass2) in line 244
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function bothNonFinalClasses(Collection< NonFinalClass1 >,NonFinalClass2) in line 238
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function boundedWildcard() in line 186
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function collection(Collection< Integer >,Collection< String >) in line 43
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function collectionSubtype(ArrayList< Integer >,ArrayList< String >) in line 58
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function declaredTypeVsExpressionType(Pair< Integer, String >,List< Integer >) in line 197
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function list() defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
      uses variable second defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::Pair
   function deque(Deque< Integer >) in line 73
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function dequeSubtype(LinkedList< Integer >) in line 80
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function dictionary(Dictionary< Integer, String >) in line 87
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function dictionarySubtype(Hashtable< Integer, String >) in line 94
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function errorMessageUsesFullyQualifedNamesWhenSimpleNamesAreTheSame(Collection< java.util.Date >,Collection< Date >) in line 179
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function errorMessageUsesSimpleNames(Collection< Integer >) in line 171
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function list() in line 101
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function listSubtype() in line 109
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function map() in line 117
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function mapSubtype() in line 130
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function methodArgumentIsSubclassWithDifferentTypeParameters(Collection< String >,MyArrayList) in line 208
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function oneFinalClassAndOneInterface(Collection< FinalClass1 >,Interface) in line 233
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function oneFinalClassAndOneNonFinalClass(Collection< FinalClass1 >,NonFinalClass1) in line 255
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function oneInterfaceAndOneFinalClass(Collection< Interface >,FinalClass1) in line 227
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function oneNonFinalClassAndOneFinalClass(Collection< NonFinalClass1 >,FinalClass1) in line 249
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function collection(Collection< Integer >,Collection< String >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function stack(Stack< Integer >) in line 143
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function stackSubtype(MyStack< Integer >) in line 150
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function subclassHasDifferentTypeParameters(ClassToInstanceMap< String >,String) in line 202
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function map() defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
   function vector(Vector< Integer >) in line 155
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function vectorSubtype(Stack< Integer >) in line 162
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function stack(Stack< Integer >) defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::MyStack
   inherits from java::util::Stack
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::Date
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::Pair
   variable first in line 193
      protection public
   variable second in line 194
      protection public
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::MyArrayList
   inherits from java::util::ArrayList
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::IncompatibleBounds
   function function(Map< K, V >,K) in line 215
      4 lines of code
      2 parameters
      1 conditional paths
      uses function map() defined in com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::Interface
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::FinalClass1
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::FinalClass2
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::NonFinalClass1
module com::google::errorprone::bugpatterns::collectionincompatibletype::CollectionIncompatibleTypePositiveCases::NonFinalClass2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ComparisonOutOfRangeTest.java
module com::google::errorprone::bugpatterns::ComparisonOutOfRangeTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/CompileTimeConstantCheckerTest.java
module com::google::errorprone::bugpatterns::CompileTimeConstantCheckerTest
   function setUp() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testMatches_ctorFailsWithNonConstant() in line 226
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_ctorSucceedsWithLiteral() in line 209
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_fieldAccessFailsWithNonConstant() in line 43
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_fieldAccessFailsWithNonConstantExpression() in line 58
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_fieldAccessSucceedsWithConstantConcatenation() in line 102
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_fieldAccessSucceedsWithLiteral() in line 73
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_fieldAccessSucceedsWithStaticFinal() in line 87
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_identCallFailsWithNonConstant() in line 117
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_identCallSucceedsWithinCtorWithLiteral() in line 244
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_identCallSucceedsWithLiteral() in line 132
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_nonFinalCompileTimeConstantParam() in line 296
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_qualifiedStaticCallFailsWithNonConstant() in line 176
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_qualifiedStaticCallSucceedsWithLiteral() in line 193
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_staticCallFailsWithNonConstant() in line 147
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_staticCallSucceedsWithLiteral() in line 162
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_varargsFail() in line 262
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMatches_varargsSuccess() in line 277
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 34
   variable ERROR_MESSAGE in line 30
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/DaggerProvidesNullTest.java
module com::google::errorprone::bugpatterns::DaggerProvidesNullTest
   function guiceProvides() in line 94
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function hasJavaxAnnotationNullable() in line 56
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function hasOtherNullable() in line 73
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inCatch() in line 109
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inTry() in line 129
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function returnWithNoExpression() in line 148
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function simple() in line 41
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/DeadExceptionTest.java
module com::google::errorprone::bugpatterns::DeadExceptionTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCaseWhenExceptionsUnthrownInTests() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/DepAnnTest.java
module com::google::errorprone::bugpatterns::DepAnnTest
   function setUp() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testDisableable() in line 55
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase1() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase2() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/DivZeroTest.java
module com::google::errorprone::bugpatterns::DivZeroTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ElementsCountedInLoopTest.java
module com::google::errorprone::bugpatterns::ElementsCountedInLoopTest
   function setUp() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 33
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/EmptyIfStatementTest.java
module com::google::errorprone::bugpatterns::EmptyIfStatementTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/EmptyTopLevelDeclarationTest.java
module com::google::errorprone::bugpatterns::EmptyTopLevelDeclarationTest
   function negative() in line 39
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 49
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/EqualsHashCodeTest.java
module com::google::errorprone::bugpatterns::EqualsHashCodeTest
   function abstractHashCode() in line 91
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function abstractNoHashCode() in line 103
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inherited() in line 62
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function interfaceEquals() in line 80
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function superClassWithoutHashCode() in line 47
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/EqualsIncompatibleTypeTest.java
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeTest
   function setUp() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/EqualsNaNTest.java
module com::google::errorprone::bugpatterns::EqualsNaNTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/FinallyTest.java
module com::google::errorprone::bugpatterns::FinallyTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase1() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase2() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase1() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase2() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ForOverrideCheckerTest.java
module com::google::errorprone::bugpatterns::ForOverrideCheckerTest
   function setUp() in line 35
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
   function testCanApplyForOverrideToPackagePrivateMethod() in line 67
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testCanApplyForOverrideToProtectedMethod() in line 54
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testCannotApplyForOverrideToInterfaceMethod() in line 108
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testCannotApplyForOverrideToPrivateMethod() in line 94
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testCannotApplyForOverrideToPublicMethod() in line 80
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testDefinerCanCallFromAnonymousInnerClass() in line 222
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testDefinerCanCallFromInnerClass() in line 201
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUserCanCallAppropriateMethod() in line 122
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUserCannotCallDefault() in line 152
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUserCannotCallOverridden() in line 167
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUserCannotMakeMethodPublic() in line 186
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUserInSamePackageCannotCallMethod() in line 136
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/GetClassOnClassTest.java
module com::google::errorprone::bugpatterns::GetClassOnClassTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedInjectScopingTest.java
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/GuiceAssistedParametersTest.java
module com::google::errorprone::bugpatterns::GuiceAssistedParametersTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/GuiceInjectOnFinalFieldTest.java
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalFieldTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesGuiceInjectableMethodTest.java
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/GuiceOverridesJavaxInjectableMethodTest.java
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/HashtableContainsTest.java
module com::google::errorprone::bugpatterns::HashtableContainsTest
   function negative_containsAmbiguous() in line 153
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_CHM() in line 37
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_containsKey() in line 118
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_extendsHashtable() in line 136
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_Hashtable() in line 53
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_wildcard() in line 101
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_wildcardLowerBound() in line 85
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_wildcardUpperBound() in line 69
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/IncompatibleModifiersCheckerTest.java
module com::google::errorprone::bugpatterns::IncompatibleModifiersCheckerTest
   function negativeNestedAnnotations() in line 202
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativePackageAnnotation() in line 219
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 37
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithCompatibleModifiersSucceeds() in line 128
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithIncompatibleModifierOnClassFails() in line 69
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithIncompatibleModifierOnFieldFails() in line 83
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithIncompatibleModifierOnMethodFails() in line 98
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithTwoIncompatibleModifiersFails() in line 113
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testGuavaAnnotation() in line 139
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testGuavaAnnotationOK() in line 171
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 34
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnConstructorsTest.java
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsTest
   function setUp() in line 35
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectAssistedInjectAndInjectOnSameConstructorTest.java
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorTest
   function setUp() in line 35
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectedConstructorAnnotationsTest.java
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsTest
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectInvalidTargetingOnScopingAnnotationTest.java
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationTest
   function setUp() in line 35
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnAbstractMethodTest.java
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectJavaxInjectOnFinalFieldTest.java
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalFieldTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneInjectableConstructorTest.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneQualifierTest.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectMoreThanOneScopeAnnotationOnClassTest.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassTest
   function setUp() in line 34
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectOverlappingQualifierAndScopeAnnotationTest.java
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationTest
   function setUp() in line 35
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeAnnotationOnInterfaceOrAbstractClassTest.java
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassTest
   function setUp() in line 35
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InjectScopeOrQualifierAnnotationRetentionTest.java
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionTest
   function setUp() in line 34
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 48
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InsecureCipherModeTest.java
module com::google::errorprone::bugpatterns::InsecureCipherModeTest
   function setUp() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/InvalidPatternSyntaxTest.java
module com::google::errorprone::bugpatterns::InvalidPatternSyntaxTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/IsInstanceOfClassTest.java
module com::google::errorprone::bugpatterns::IsInstanceOfClassTest
   function positive_clazz_clazz() in line 149
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_clazz_enclosingClass() in line 37
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_clazz_getClass() in line 121
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_enclosingClass_clazz() in line 51
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_getClass_clazz() in line 135
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_getClass_getClass() in line 65
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_getClass_literal() in line 79
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_literal_getClass() in line 93
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_literal_literal() in line 107
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/IterableAndIteratorTest.java
module com::google::errorprone::bugpatterns::IterableAndIteratorTest
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/JMockTestWithoutRunWithOrRuleAnnotationTest.java
module com::google::errorprone::bugpatterns::JMockTestWithoutRunWithOrRuleAnnotationTest
   function setup() in line 31
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testShouldFlagJUnitRuleMockery() in line 64
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testShouldFlagNoRuleAndNoRunWith() in line 37
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testShouldFlagWrongRunWith() in line 49
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testShouldNotFlagRunWithJMock() in line 111
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testShouldNotFlagSingleFieldWithRuleAnnotation() in line 146
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testShouldNotFlagWithRuleAnnotation() in line 76
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testShouldNotFlagWithRuleAnnotationAndRunWithJMock() in line 127
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testShouldNotFlagWithRuleAnnotationAndWrongRunWith() in line 92
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationTestHelper in line 28
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/JUnit3TestNotRunTest.java
module com::google::errorprone::bugpatterns::JUnit3TestNotRunTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase1() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase2() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase3() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase4() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase5() in line 65
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/JUnit4SetUpNotRunTest.java
module com::google::errorprone::bugpatterns::JUnit4SetUpNotRunTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase_customBefore() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TearDownNotRunTest.java
module com::google::errorprone::bugpatterns::JUnit4TearDownNotRunTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase_customAnnotation() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/JUnit4TestNotRunTest.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunTest
   function setUp() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase1() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase2() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase3() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase4() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase5() in line 73
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase1() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase2() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSerialization() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 35
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/LongLiteralLowerCaseSuffixTest.java
module com::google::errorprone::bugpatterns::LongLiteralLowerCaseSuffixTest
   function setUp() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testDisableable() in line 67
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setArgs(List< String >) defined in com::google::errorprone::CompilationTestHelper
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testJava7PositiveCase() in line 55
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 38
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/MalformedFormatStringTest.java
module com::google::errorprone::bugpatterns::MalformedFormatStringTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/MissingCasesInEnumSwitchTest.java
module com::google::errorprone::bugpatterns::MissingCasesInEnumSwitchTest
   function empty() in line 139
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testExhaustive() in line 38
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNonExhaustive() in line 81
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNonExhaustive_manyCases() in line 101
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNonExhaustive_nonEnum() in line 121
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNonExhaustive_withDefault() in line 59
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/MissingFailTest.java
module com::google::errorprone::bugpatterns::MissingFailTest
   function getOnlyFix(TestScanner) in line 147
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable fixes defined in com::google::errorprone::matchers::Description
   function setUp() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFailImport() in line 78
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFailMessageMultiCatch() in line 106
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCases() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCases2() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases2() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases3() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testToleratedException() in line 131
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 45
module com::google::errorprone::bugpatterns::MissingFailTest::TestScanner
   inherits from com::google::errorprone::scanner::Scanner
   function visitTry(TryTree,VisitorState) in line 157
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
module com::google::errorprone::bugpatterns::MissingFailTest::NoopEndPosTable
   inherits from com::sun::tools::javac::tree::EndPosTable
   function getEndPos(JCTree) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function replaceTree(JCTree,JCTree) in line 175
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function storeEnd(JCTree,int) in line 172
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/MissingOverrideTest.java
module com::google::errorprone::bugpatterns::MissingOverrideTest
   function abstractMethod() in line 55
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function bothStatic() in line 89
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function deprecatedMethod() in line 105
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function interfaceMethod() in line 72
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function simple() in line 38
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/MisusedWeekYearTest.java
module com::google::errorprone::bugpatterns::MisusedWeekYearTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases2() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/MockitoCastTest.java
module com::google::errorprone::bugpatterns::MockitoCastTest
   function chainedCallOnUnsupportedMock() in line 120
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function concreteSubclassOfGenericType() in line 141
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function constructorInitialization() in line 100
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function defaultAnswerOk() in line 38
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function erasureIsNotObject() in line 181
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function imported() in line 263
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mockAnnotationWithUnsupportedAnswer() in line 60
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mockedFieldInstantiationOfGenericType() in line 161
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function qualifiedTypeNameHandling() in line 232
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function uiField() in line 204
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function varInitializedWithUnsupportedAnswer() in line 83
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/MockitoUsageTest.java
module com::google::errorprone::bugpatterns::MockitoUsageTest
   function negative_thenReturn() in line 46
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negative_verify() in line 63
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_thenReturn() in line 122
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_verify_methodInside() in line 142
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_verify_never_method() in line 101
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_verify_never_noMethod() in line 80
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_verify_noMethod() in line 162
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_verify_times() in line 182
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 29
   variable FOO_SOURCE in line 36
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ModifyingCollectionWithItselfTest.java
module com::google::errorprone::bugpatterns::ModifyingCollectionWithItselfTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases1() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/MultipleTopLevelClassesTest.java
module com::google::errorprone::bugpatterns::MultipleTopLevelClassesTest
   function defaultPackage() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function emptyDeclaration() in line 74
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function packageInfo() in line 51
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function semiInImportList() in line 84
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function suppression() in line 63
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function twoClasses() in line 39
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NarrowingCompoundAssignmentTest.java
module com::google::errorprone::bugpatterns::NarrowingCompoundAssignmentTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testAllOps() in line 68
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFloatFloat() in line 114
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 96
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPrecedence(String,String,boolean) in line 193
      21 lines of code
      3 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPreservePrecedence() in line 131
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPreservePrecedence2() in line 146
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPreservePrecedenceExhaustive() in line 161
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NoAllocationCheckerTest.java
module com::google::errorprone::bugpatterns::NoAllocationCheckerTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NonAtomicVolatileUpdateTest.java
module com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateTest
   function setUp() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 33
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticImportTest.java
module com::google::errorprone::bugpatterns::NonCanonicalStaticImportTest
   function negative() in line 110
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeGenericTypeStaticMethod() in line 86
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeOnDemand() in line 132
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeStaticMethod() in line 62
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 39
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NonCanonicalStaticMemberImportTest.java
module com::google::errorprone::bugpatterns::NonCanonicalStaticMemberImportTest
   function negativeClassAndField() in line 132
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeField() in line 118
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeMethod() in line 104
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveClassAndField() in line 79
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveField() in line 58
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveMethod() in line 39
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NonFinalCompileTimeConstantTest.java
module com::google::errorprone::bugpatterns::NonFinalCompileTimeConstantTest
   function negative() in line 81
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 39
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveOneOfTwoParams() in line 66
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveTwoParams() in line 52
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NonOverridingEqualsTest.java
module com::google::errorprone::bugpatterns::NonOverridingEqualsTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testDontFlagEqualsMethodWithMoreThanOneParameter() in line 234
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testDontFlagIfWrongReturnType() in line 247
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testDontFlagMethodThatOverridesEquals() in line 221
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsAbstractCovariantEqualsMethod() in line 93
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsAnotherComplicatedCovariantEqualsMethod() in line 76
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsBoxedBooleanReturnType() in line 131
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsComplicatedCovariantEqualsMethod() in line 58
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsCovariantEqualsMethodInEnum() in line 145
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsEvenIfAnotherMethodOverridesEquals() in line 183
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsIfMethodTakesUnrelatedType() in line 117
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsNativeCovariantEqualsMethod() in line 105
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsPrivateEqualsMethod() in line 169
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsSimpleCovariantEqualsMethod() in line 42
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testFlagsStaticEqualsMethod() in line 205
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NonRuntimeAnnotationTest.java
module com::google::errorprone::bugpatterns::NonRuntimeAnnotationTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NullableConstructorTest.java
module com::google::errorprone::bugpatterns::NullableConstructorTest
   function negativeNotAnnotated() in line 51
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeNotConstructor() in line 58
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 38
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NullablePrimitiveTest.java
module com::google::errorprone::bugpatterns::NullablePrimitiveTest
   function negativeConstructor() in line 49
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeVoid() in line 61
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NullableVoidTest.java
module com::google::errorprone::bugpatterns::NullableVoidTest
   function negativeBoxedVoid() in line 59
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeNotAnnotated() in line 52
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 38
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/NumericEqualityTest.java
module com::google::errorprone::bugpatterns::NumericEqualityTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/OptionalEqualityTest.java
module com::google::errorprone::bugpatterns::OptionalEqualityTest
   function definitelyNull() in line 99
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function maybeNull() in line 82
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 68
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase_equal() in line 38
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase_notEqual() in line 53
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/OverridesTest.java
module com::google::errorprone::bugpatterns::OverridesTest
   function setUp() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase1() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase2() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase3() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase1() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase2() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase3() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase4() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase5() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/PackageLocationTest.java
module com::google::errorprone::bugpatterns::PackageLocationTest
   function negative() in line 71
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negative2() in line 81
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeSuffix() in line 91
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveCustomRoot() in line 38
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveTooLong() in line 49
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveTooShort() in line 60
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suppression() in line 101
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullPrimitiveTest.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function setUp() in line 51
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testGetVariableUses() in line 69
      protection public
      39 lines of code
      0 parameters
      1 conditional paths
      uses function add(String,String...) defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveTest::TestScanner::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function assertFoundAll() defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveTest::TestScanner
   function testNegativeCase1() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 57
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 48
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveTest::TestScanner
   inherits from com::google::errorprone::scanner::Scanner
   function assertFoundAll() in line 161
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function assertMatch(ExpressionTree,List< String >) in line 150
      10 lines of code
      2 parameters
      1 conditional paths
   function visitExpressionStatement(ExpressionStatementTree,VisitorState) in line 140
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable expected defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveTest::TestScanner::Match
      uses variable found defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveTest::TestScanner::Match
   function TestScanner(ImmutableMap< String, Match >) in line 135
      3 lines of code
      1 parameters
      1 conditional paths
   variable matches in line 133
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveTest::TestScanner::Match
   function Match(String...) in line 115
      3 lines of code
      1 parameters
      1 conditional paths
   variable expected in line 112
   variable found in line 113
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveTest::TestScanner::Builder
   function add(String,String...) in line 123
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function build() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable builder in line 121
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsCheckNotNullTest.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase1() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase2() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase1() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase2() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase3() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/PreconditionsInvalidPlaceholderTest.java
module com::google::errorprone::bugpatterns::PreconditionsInvalidPlaceholderTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase1() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase1() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/PrimitiveArrayPassedToVarargsMethodTest.java
module com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethodTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldNullComparisonTest.java
module com::google::errorprone::bugpatterns::ProtoFieldNullComparisonTest
   function setUp() in line 33
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ProtoFieldPreconditionsCheckNotNullTest.java
module com::google::errorprone::bugpatterns::ProtoFieldPreconditionsCheckNotNullTest
   function setUp() in line 33
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/RequiredModifiersCheckerTest.java
module com::google::errorprone::bugpatterns::RequiredModifiersCheckerTest
   function negativeNestedAnnotations() in line 243
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativePackageAnnotation() in line 260
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 42
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithRequiredModifiersMissingOnClassFails() in line 65
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithRequiredModifiersMissingOnFieldFails1() in line 79
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithRequiredModifiersMissingOnFieldFails2() in line 94
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithRequiredModifiersMissingOnFieldFails3() in line 109
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithRequiredModifiersMissingOnMethodFails1() in line 124
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithRequiredModifiersMissingOnMethodFails2() in line 139
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnnotationWithRequiredModifiersMissingOnMethodFails3() in line 154
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testGuavaAnnotation() in line 180
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testGuavaAnnotationOK() in line 212
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testHasRequiredModifiersSucceeds() in line 169
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 36
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/ReturnValueIgnoredTest.java
module com::google::errorprone::bugpatterns::ReturnValueIgnoredTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/SelfAssignmentTest.java
module com::google::errorprone::bugpatterns::SelfAssignmentTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases1() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases2() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualityTest.java
module com::google::errorprone::bugpatterns::SelfEqualityTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/SelfEqualsTest.java
module com::google::errorprone::bugpatterns::SelfEqualsTest
   function setUp() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFlags() in line 96
      protection public
      36 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
      uses variable expectNoDiagnostics defined in com::google::errorprone::CompilationTestHelper
   function testNegativeCase() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testPositiveCase1() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testPositiveCase2() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::SelfEqualsTest::SelfEqualsTestChecker
   inherits from com::google::errorprone::bugpatterns::SelfEquals
   function SelfEqualsTestChecker() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::SelfEqualsTest::SelfEquals_Guava_Equals
   inherits from com::google::errorprone::bugpatterns::SelfEquals
   function SelfEquals_Guava_Equals() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::SelfEqualsTest::SelfEquals_Guava
   inherits from com::google::errorprone::bugpatterns::SelfEquals
   function SelfEquals_Guava() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::SelfEqualsTest::SelfEquals_Equals
   inherits from com::google::errorprone::bugpatterns::SelfEquals
   function SelfEquals_Equals() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/SizeGreaterThanOrEqualsZeroTest.java
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroTest
   function setUp() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testCollectionSizeNegativeCases() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testCollectionSizePositiveCases() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/StaticAccessedFromInstanceTest.java
module com::google::errorprone::bugpatterns::StaticAccessedFromInstanceTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase1() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase2() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/StringBuilderInitWithCharTest.java
module com::google::errorprone::bugpatterns::StringBuilderInitWithCharTest
   function setUp() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/StringEqualityTest.java
module com::google::errorprone::bugpatterns::StringEqualityTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/SuppressWarningsDeprecatedTest.java
module com::google::errorprone::bugpatterns::SuppressWarningsDeprecatedTest
   function setUp() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 34
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsNegativeCases.java
module com::google::errorprone::bugpatterns::ArrayEqualsNegativeCases
   function firstArray() in line 42
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
   function neitherArray() in line 25
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
   function secondArray() in line 59
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsNegativeCases2.java
module com::google::errorprone::bugpatterns::ArrayEqualsNegativeCases2
   function firstArray() in line 38
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
   function neitherArray() in line 27
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
   function secondArray() in line 49
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsPositiveCases.java
module com::google::errorprone::bugpatterns::ArrayEqualsPositiveCases
   function bothMethodCalls() in line 88
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
   function firstMethodCall() in line 64
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
   function intArray() in line 26
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
   function objectArray() in line 45
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
   function secondMethodCall() in line 76
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayEqualsPositiveCases2.java
module com::google::errorprone::bugpatterns::ArrayEqualsPositiveCases2
   function intArray() in line 28
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
   function objectArray() in line 40
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodeNegativeCases.java
module com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases
   function objectHashCodeOnNonArrayType() in line 33
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable obj defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases
      uses variable str defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases
   function varagsHashCodeOnNonArrayType() in line 39
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable obj defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases
      uses variable str defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases
   function varagsHashCodeOnObjectOrStringArray() in line 45
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable objArray defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases
      uses variable stringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases
   variable byteArray in line 29
   variable intArray in line 28
   variable obj in line 30
   variable objArray in line 26
   variable str in line 31
   variable stringArray in line 27
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodeNegativeCases2.java
module com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases2
   function nonVaragsHashCodeOnNonArrayType() in line 35
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable obj defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases2
      uses variable str defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases2
   function varagsHashCodeOnNonArrayType() in line 41
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable obj defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases2
      uses variable str defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases2
   function varagsHashCodeOnObjectOrStringArray() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable objArray defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases2
      uses variable stringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodeNegativeCases2
   variable byteArray in line 31
   variable intArray in line 30
   variable obj in line 32
   variable objArray in line 28
   variable str in line 33
   variable stringArray in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodePositiveCases.java
module com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
   function guavaObjectsHashCode() in line 48
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable intArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable byteArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable multidimensionalIntArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable multidimensionalStringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
   function objectHashCode() in line 32
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable objArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable stringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable intArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable multidimensionalIntArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable multidimensionalStringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
   function varargsHashCodeOnMoreThanOneArg() in line 61
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable objArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable intArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable stringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable byteArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable multidimensionalIntArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
      uses variable multidimensionalStringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases
   variable byteArray in line 28
   variable intArray in line 27
   variable multidimensionalIntArray in line 29
   variable multidimensionalStringArray in line 30
   variable objArray in line 25
   variable stringArray in line 26
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayHashCodePositiveCases2.java
module com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
   function javaUtilObjectsHash() in line 49
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable intArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable byteArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable multidimensionalIntArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable multidimensionalStringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
   function javaUtilObjectsHashCode() in line 34
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable objArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable stringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable intArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable multidimensionalIntArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable multidimensionalStringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
   function varargsHashCodeOnMoreThanOneArg() in line 62
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable objArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable intArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable stringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable byteArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable multidimensionalIntArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
      uses variable multidimensionalStringArray defined in com::google::errorprone::bugpatterns::ArrayHashCodePositiveCases2
   variable byteArray in line 30
   variable intArray in line 29
   variable multidimensionalIntArray in line 31
   variable multidimensionalStringArray in line 32
   variable objArray in line 27
   variable stringArray in line 28
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayStringConcatenationNegativeCases.java
module com::google::errorprone::bugpatterns::ArrayStringConcatenationNegativeCases
   function notArray() in line 23
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function notArray_refactored() in line 28
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayStringConcatenationPositiveCases.java
module com::google::errorprone::bugpatterns::ArrayStringConcatenationPositiveCases
   function stringLiteralLeftOperandIsArray() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::ArrayStringConcatenationPositiveCases
   function stringLiteralRightOperandIsArray() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::ArrayStringConcatenationPositiveCases
   variable a in line 26
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringCompoundAssignmentNegativeCases.java
module com::google::errorprone::bugpatterns::ArrayToStringCompoundAssignmentNegativeCases
   function concatenateCompoundAssign_int() in line 29
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function concatenateCompoundAssign_object() in line 23
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringCompoundAssignmentPositiveCases.java
module com::google::errorprone::bugpatterns::ArrayToStringCompoundAssignmentPositiveCases
   function stringVariableAddsArrayAndAssigns() in line 28
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::ArrayToStringCompoundAssignmentPositiveCases
   variable a in line 26
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringNegativeCases.java
module com::google::errorprone::bugpatterns::ArrayToStringNegativeCases
   function objectEquals() in line 25
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ArrayToStringPositiveCases.java
module com::google::errorprone::bugpatterns::ArrayToStringPositiveCases
   function firstMethodCall() in line 48
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
   function intArray() in line 26
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
   function objectArray() in line 37
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
   function secondMethodCall() in line 59
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
   function throwable() in line 70
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/AssertFalseNegativeCases.java
module com::google::errorprone::bugpatterns::AssertFalseNegativeCases
   function assertFalseFromCondition() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function assertTrue() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/AssertFalsePositiveCases.java
module com::google::errorprone::bugpatterns::AssertFalsePositiveCases
   function assertFalse() in line 23
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullNegativeCases.java
module com::google::errorprone::bugpatterns::AsyncFunctionReturnsNullNegativeCases
module com::google::errorprone::bugpatterns::AsyncFunctionReturnsNullNegativeCases::MyNonAsyncFunction
   function apply(@Nullable I) in line 64
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/AsyncFunctionReturnsNullPositiveCases.java
module com::google::errorprone::bugpatterns::AsyncFunctionReturnsNullPositiveCases
module com::google::errorprone::bugpatterns::AsyncFunctionReturnsNullPositiveCases::MyAsyncFunction
   inherits from com::google::common::util::concurrent::AsyncFunction
   function apply(Object) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadComparableNegativeCases.java
module com::google::errorprone::bugpatterns::BadComparableNegativeCases
module com::google::errorprone::bugpatterns::BadComparableNegativeCases::ComparableTest
   inherits from Comparable
   function compareTo(ComparableTest) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable value in line 27
module com::google::errorprone::bugpatterns::BadComparableNegativeCases::BoxedComparableTest
   inherits from Comparable
   function compareTo(BoxedComparableTest) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable value in line 35
module com::google::errorprone::bugpatterns::BadComparableNegativeCases::NonComparableTest
   function compareTo(ComparableTest) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable value in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadComparablePositiveCases.java
module com::google::errorprone::bugpatterns::BadComparablePositiveCases
module com::google::errorprone::bugpatterns::BadComparablePositiveCases::ComparableTest
   inherits from Comparable
   function compareTo(ComparableTest) in line 28
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable value in line 26
module com::google::errorprone::bugpatterns::BadComparablePositiveCases::BoxedComparableTest
   inherits from Comparable
   function compareTo(BoxedComparableTest) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable value in line 35
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadShiftAmountNegativeCases.java
module com::google::errorprone::bugpatterns::BadShiftAmountNegativeCases
   function foo() in line 24
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/BadShiftAmountPositiveCases.java
module com::google::errorprone::bugpatterns::BadShiftAmountPositiveCases
   function foo() in line 24
      protection public
      35 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassNegativeCases.java
module CannotMockFinalClassNegativeCases
   function method() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module CannotMockFinalClassNegativeCases::NonFinalClass
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassNegativeCases2.java
module CannotMockFinalClassNegativeCases2
   function method() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module CannotMockFinalClassNegativeCases2::FinalClass
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/CannotMockFinalClassPositiveCases.java
module CannotMockFinalClassPositiveCases
   function method() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
module CannotMockFinalClassPositiveCases::FinalClass
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ChainingConstructorIgnoresParameterNegativeCases.java
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::ImplicitThisCall
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::ExplicitNoArgThisCall
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::ParameterNotAvailable
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::ParameterDifferentType
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::ParameterUsedInExpression
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::HasNestedClass
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::HasNestedClass::NestedClass
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::HasNestedClassesWithSameName
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::HasNestedClassesWithSameName::Outer1
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::HasNestedClassesWithSameName::Outer1::Inner
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::HasNestedClassesWithSameName::Outer2
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::HasNestedClassesWithSameName::Outer2::Inner
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::NonStaticClass
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::Varargs1
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterNegativeCases::Varargs2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ChainingConstructorIgnoresParameterPositiveCases.java
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::MissileLauncher
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::ClassRatherThanPrimitive
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::CallerBeforeCallee
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::AssignableButNotEqual
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::HasNestedClassCallerFirst
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::HasNestedClassCallerFirst::NestedClass
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::HasNestedClassCalleeFirst
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::HasNestedClassCalleeFirst::NestedClass
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::MultipleQueuedErrors
module com::google::errorprone::bugpatterns::ChainingConstructorIgnoresParameterPositiveCases::Location
   variable TEST_TARGET in line 103
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValueNegativeCases.java
module com::google::errorprone::bugpatterns::CheckReturnValueNegativeCases
   function test1() in line 24
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function test2() defined in com::google::errorprone::bugpatterns::CheckReturnValueNegativeCases
   function test2() in line 31
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/CheckReturnValuePositiveCases.java
module com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases
   function bar() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function increment() defined in com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases::IntValue
   function constructor() in line 51
      protection public
      36 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 33
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function increment(int) defined in com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases
   function increment(int) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
      uses function bar() defined in com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases
   function testIntValue() in line 45
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function increment() defined in com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases::IntValue
module com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases::IntValue
   function increment() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function increment2() in line 100
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function increment(int) defined in com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases
   function increment3() in line 105
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function increment(int) defined in com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases
   function IntValue(int) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases::MyObject
module com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases::LB1
   abstract class
module com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases::LB2
   inherits from com::google::errorprone::bugpatterns::CheckReturnValuePositiveCases::LB1
   function lb1() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lb2() in line 124
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticNegativeCases.java
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases
   function outerMethod() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::Inner1
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::Inner2
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::Inner3
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::Inner4
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::NonStaticOuter
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::NonStaticOuter::Inner5
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::Inner7
   variable BLUE in line 70
      protection public
   variable RED in line 69
      protection public
   variable VIOLET in line 71
      protection public
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::OuterInter
   function outerInterMethod() in line 85
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::AbstractOuter
   inherits from com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::OuterInter
   abstract class
module com::google::errorprone::bugpatterns::ClassCanBeStaticNegativeCases::AbstractOuter::Inner8
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase1.java
module com::google::errorprone::bugpatterns::ClassCanBeStaticPositiveCase1
module com::google::errorprone::bugpatterns::ClassCanBeStaticPositiveCase1::Inner1
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase2.java
module com::google::errorprone::bugpatterns::ClassCanBeStaticPositiveCase2
module com::google::errorprone::bugpatterns::ClassCanBeStaticPositiveCase2::Inner2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ClassCanBeStaticPositiveCase3.java
module com::google::errorprone::bugpatterns::ClassCanBeStaticPositiveCase3
module com::google::errorprone::bugpatterns::ClassCanBeStaticPositiveCase3::NonStaticOuter
module com::google::errorprone::bugpatterns::ClassCanBeStaticPositiveCase3::NonStaticOuter::Inner3
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonOutOfRangeNegativeCases.java
module com::google::errorprone::bugpatterns::ComparisonOutOfRangeNegativeCases
   function testByteEquality() in line 27
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function testCharEquality() in line 49
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ComparisonOutOfRangePositiveCases.java
module com::google::errorprone::bugpatterns::ComparisonOutOfRangePositiveCases
   function testByteEquality() in line 27
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function testCharEquality() in line 51
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionNegativeCases.java
module com::google::errorprone::bugpatterns::DeadExceptionNegativeCases
   function noError() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function returnsException() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionPositiveCases.java
module com::google::errorprone::bugpatterns::DeadExceptionPositiveCases
   function error() in line 20
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function firstStatementWithNoSurroundingBlock() in line 45
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
   function fixIsToDeleteTheFirstStatement() in line 25
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
   function testLooksLikeAJunitTestMethod() in line 66
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/DeadExceptionTestingNegativeCases.java
module com::google::errorprone::bugpatterns::DeadExceptionTestingNegativeCases
   inherits from junit::framework::TestCase
   function shouldAllowTestingOfExceptionConstructorSideEffects() in line 37
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function testShouldAllowTestingOfExceptionConstructorSideEffects() in line 27
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnNegativeCase1.java
module com::google::errorprone::bugpatterns::DepAnnNegativeCase1
   function deprecatedMethodWithMalformedComment() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function deprecatedMethood() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function deprecatedMethoodWithoutComment() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function newMethod() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressed() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function DepAnnNegativeCase1() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::DepAnnNegativeCase1::Enum
   variable VALUE in line 42
      protection public
module com::google::errorprone::bugpatterns::DepAnnNegativeCase1::Interface
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnNegativeCase2.java
module com::google::errorprone::bugpatterns::DepAnnNegativeCase2
module com::google::errorprone::bugpatterns::DepAnnNegativeCase2::Builder2
   abstract class
   function m1() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function m2() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function withSummaryRowKeys(int) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::DepAnnNegativeCase2::Builder2::SummaryRowKey
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/DepAnnPositiveCases.java
module com::google::errorprone::bugpatterns::DepAnnPositiveCases
   function deprecatedMethood() in line 57
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function DepAnnPositiveCases() in line 29
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::DepAnnPositiveCases::Enum
   variable VALUE in line 43
      protection public
module com::google::errorprone::bugpatterns::DepAnnPositiveCases::Interface
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroNegativeCases.java
module com::google::errorprone::bugpatterns::DivZeroNegativeCases
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/DivZeroPositiveCases.java
module com::google::errorprone::bugpatterns::DivZeroPositiveCases
   function main(String[]) in line 24
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ElementsCountedInLoopNegativeCases.java
module com::google::errorprone::bugpatterns::ElementsCountedInLoopNegativeCases
   function hasNext() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testEnhancedFor(List< Object >) in line 26
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   function testEnhancedForFloats(List< Object >) in line 65
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   function testEnhancedWhileLoop(List< Object >) in line 42
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function hasNext() defined in com::google::errorprone::bugpatterns::ElementsCountedInLoopNegativeCases
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ElementsCountedInLoopPositiveCases.java
module com::google::errorprone::bugpatterns::ElementsCountedInLoopPositiveCases
   function testEnhancedFor(Iterable< Object >,HashSet< Object >,Object...) in line 27
      protection public
      36 lines of code
      3 parameters
      9 conditional paths
   function testWhileLoop(List< Object >) in line 64
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/EmptyIfStatementNegativeCases.java
module com::google::errorprone::bugpatterns::EmptyIfStatementNegativeCases
   function negativeCase1() in line 25
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function negativeCase2() in line 34
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function negativeCase3() in line 43
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/EmptyIfStatementPositiveCases.java
module com::google::errorprone::bugpatterns::EmptyIfStatementPositiveCases
   function positiveCase1() in line 25
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function positiveCase2() in line 33
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function positiveCase3() in line 41
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function positiveCase4() in line 50
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function positiveCase5() in line 56
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsHashCodeTestNegativeCases.java
module EqualsHashCodeTestNegativeCases
module EqualsHashCodeTestNegativeCases::EqualsAndHashCode
   function equals(Object) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module EqualsHashCodeTestNegativeCases::HashCodeOnly
   function hashCode() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module EqualsHashCodeTestNegativeCases::Neither
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsHashCodeTestPositiveCases.java
module EqualsHashCodeTestPositiveCases
module EqualsHashCodeTestPositiveCases::EqualsOnly
   function equals(Object) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypeNegativeCases.java
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::A
   function equals(Object) in line 24
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::B1
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::A
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::B2
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::A
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::B3
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::B2
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::C
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::C1
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::C
   abstract class
   function equals(Object) in line 92
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::C2
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::C1
   abstract class
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::C3
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::C1
   abstract class
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::I
   function equals(Object) in line 116
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::E1
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::I
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::E2
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::I
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::E3
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::E2
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::J
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::F1
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::J
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypeNegativeCases::F2
   abstract class
   function equals(J) in line 155
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsIncompatibleTypePositiveCases.java
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::A
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::B
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::C
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::C1
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::C
   abstract class
   function equals(Object) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::C2
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::C1
   abstract class
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::C3
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::C
   abstract class
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::I
   function equals(Object) in line 76
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::D
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::D1
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::D
module com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::D2
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::D
   inherits from com::google::errorprone::bugpatterns::EqualsIncompatibleTypePositiveCases::I
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsNaNNegativeCases.java
module com::google::errorprone::bugpatterns::EqualsNaNNegativeCases
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/EqualsNaNPositiveCases.java
module com::google::errorprone::bugpatterns::EqualsNaNPositiveCases
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionNegativeCases.java
module com::google::errorprone::bugpatterns::FallthroughSuppressionNegativeCases
   inherits from com::google::errorprone::bugpatterns::FallthroughSuppressionToBeExtended
   function overriddenMethod() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressedMethod1a() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressedMethod1b() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressedMethod2() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionPositiveCases.java
module com::google::errorprone::bugpatterns::FallthroughSuppressionPositiveCases
   function suppressedMethod1a() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressedMethod1b() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressedMethod1c() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressedMethod1d() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressedMethod2() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressedMethod3() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/FallthroughSuppressionToBeExtended.java
module com::google::errorprone::bugpatterns::FallthroughSuppressionToBeExtended
   function overriddenMethod() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyNegativeCase1.java
module com::google::errorprone::bugpatterns::FinallyNegativeCase1
   function test1() in line 24
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
   function test2() in line 33
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
   function test3() in line 42
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function test4() in line 49
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function test5() in line 60
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
   function test6() in line 75
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
   function test7() in line 90
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyNegativeCase2.java
module com::google::errorprone::bugpatterns::FinallyNegativeCase2
   function nestedTryInFinally2() in line 62
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
   function returnInAnonymousClass(boolean) in line 40
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function test1(boolean) in line 25
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function test2() in line 32
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function throwFromNestedTryInFinally() in line 51
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyPositiveCase1.java
module com::google::errorprone::bugpatterns::FinallyPositiveCase1
   function test1() in line 42
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
   function test2() in line 52
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
   function test3() in line 62
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function test4() in line 70
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function test5() in line 81
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
   function test6() in line 97
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
   function test7() in line 113
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
   function test8() in line 127
      protection public
      7 lines of code
      0 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/FinallyPositiveCase2.java
module com::google::errorprone::bugpatterns::FinallyPositiveCase2
   function completeWithReturn(boolean) in line 25
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function completeWithThrow(boolean) in line 34
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function nestedBlocks(int,boolean) in line 54
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
   function nestedFinally() in line 75
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function returnFromCatchNestedInFinally() in line 98
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function returnFromTryNestedInFinally() in line 87
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
   function throwFromNestedCatchInFinally() in line 121
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function throwUncaughtFromNestedTryInFinally() in line 110
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
   function unreachableThrow(boolean) in line 43
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GetClassOnClassNegativeCases.java
module com::google::errorprone::bugpatterns::testdata::GetClassOnClassNegativeCases
   function getClassOnClass(Object) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClassOnClass2() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getClass(Object) defined in com::google::errorprone::bugpatterns::testdata::GetClassOnClassNegativeCases::DummyObject
module com::google::errorprone::bugpatterns::testdata::GetClassOnClassNegativeCases::DummyObject
   function getClass(Object) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GetClassOnClassPositiveCases.java
module com::google::errorprone::bugpatterns::testdata::GetClassOnClassPositiveCases
   function getClassOnClass(Class) in line 25
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getClassOnClass2() in line 30
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getClassOnClass3() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedInjectScopingNegativeCases.java
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass1
   function TestClass1(String,String) in line 33
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass2
   function TestClass2(String,@Assisted String) in line 42
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass3
   function TestClass3(String,String) in line 51
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass4
   function TestClass4(@Assisted String) in line 60
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass5
   function TestClass5(String) in line 69
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass6
   function TestClass6(@Assisted String) in line 78
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass7
   function TestClass7(String,String) in line 87
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass7(String,int) in line 90
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass7(int,String) in line 93
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass8
   function TestClass8(String,String) in line 103
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass8(String,int) in line 107
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass8(int,String) in line 111
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass9
   function TestClass9(String,String) in line 121
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass9(String,int) in line 125
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass9(int,String) in line 129
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingNegativeCases::TestClass10
   function TestClass10(@Assisted String,String) in line 135
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass10(@Assisted String,int) in line 138
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass10(int,@Assisted String) in line 141
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedInjectScopingPositiveCases.java
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingPositiveCases
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingPositiveCases::TestClass
   function TestClass(String,@Assisted String) in line 33
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingPositiveCases::TestClass2
   function TestClass2(String,@Assisted String) in line 41
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingPositiveCases::TestClass3
   function TestClass3(String) in line 49
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingPositiveCases::TestClass4
   function TestClass4(String,@Assisted String) in line 60
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass4(String,int) in line 63
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass4(int,String) in line 66
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingPositiveCases::TestClass5
   function TestClass5(String,String) in line 76
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass5(String,int) in line 79
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function TestClass5(int,String) in line 83
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedInjectScopingPositiveCases::TestClass6
   function TestClass6(String,@Assisted String) in line 94
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedParametersNegativeCases.java
module com::google::errorprone::bugpatterns::GuiceAssistedParametersNegativeCases
module com::google::errorprone::bugpatterns::GuiceAssistedParametersNegativeCases::TestClass1
   function TestClass1(@Assisted int,@Assisted String,long) in line 33
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedParametersNegativeCases::TestClass2
   function TestClass2(@Assisted("foo") int,@Assisted("bar") int,String) in line 42
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedParametersNegativeCases::TestClass3
   function TestClass3(@Assisted int,int,String) in line 51
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedParametersNegativeCases::TestClass4
   function TestClass4(@Assisted("foo") int,int,String) in line 60
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedParametersNegativeCases::TestClass5
   function TestClass5(@Assisted("foo") List< String >,@Assisted("foo") List< Integer >,String) in line 69
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceAssistedParametersPositiveCases.java
module com::google::errorprone::bugpatterns::GuiceAssistedParametersPositiveCases
module com::google::errorprone::bugpatterns::GuiceAssistedParametersPositiveCases::TestClass1
   function TestClass1(int,@Assisted String,@Assisted String,int) in line 35
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedParametersPositiveCases::TestClass2
   function TestClass2(int,@Assisted("foo") int,@Assisted("foo") int,String) in line 49
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceAssistedParametersPositiveCases::TestClass3
   function TestClass3(int,@Assisted("foo") List< String >,@Assisted("foo") List< String >,String) in line 63
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceInjectOnFinalFieldNegativeCases.java
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalFieldNegativeCases
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalFieldNegativeCases::TestClass1
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalFieldNegativeCases::TestClass2
   variable n in line 35
      protection public
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalFieldNegativeCases::TestClass3
   variable n in line 42
      protection public
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalFieldNegativeCases::TestClass4
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceInjectOnFinalFieldPositiveCases.java
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalFieldPositiveCases
module com::google::errorprone::bugpatterns::GuiceInjectOnFinalFieldPositiveCases::TestClass1
   variable b in line 39
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesGuiceInjectableMethodNegativeCases.java
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass1
   function foo() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass2
   function foo() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass3
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass1
   function foo() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass4
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass2
   function foo() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass5
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass1
   function foo() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass6
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass1
   function foo() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass7
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodNegativeCases::TestClass1
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesGuiceInjectableMethodPositiveCases.java
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass1
   function foo() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass2
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass1
   function foo() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass3
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass2
   function foo() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass4
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass1
   function foo() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass5
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass4
   function foo() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass6
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass1
module com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass7
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesGuiceInjectableMethodPositiveCases::TestClass1
   function foo() in line 84
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesJavaxInjectableMethodNegativeCases.java
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass1
   function foo() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass2
   function foo() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass3
   function foo() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass4
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass2
   function foo() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass5
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass3
   function foo() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass6
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass2
   function foo() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass7
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass6
   function foo() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass8
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass5
   function foo() in line 88
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass9
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodNegativeCases::TestClass3
   function foo() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/GuiceOverridesJavaxInjectableMethodPositiveCases.java
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodPositiveCases
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodPositiveCases::TestClass1
   function foo() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodPositiveCases::TestClass2
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodPositiveCases::TestClass1
   function foo() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodPositiveCases::TestClass3
   inherits from com::google::errorprone::bugpatterns::GuiceOverridesJavaxInjectableMethodPositiveCases::TestClass2
   function foo() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnConstructorsNegativeCases.java
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsNegativeCases
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsNegativeCases::TestClass1
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsNegativeCases::TestClass2
   function TestClass2() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsNegativeCases::TestClass3
   function TestClass3() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsNegativeCases::TestClass4
   function TestClass4() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsNegativeCases::TestClass5
   function TestClass5() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable n in line 61
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsNegativeCases::TestClass6
   function TestClass6() in line 74
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass6(int) in line 77
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnConstructorsPositiveCases.java
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsPositiveCases
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsPositiveCases::TestClass1
   function TestClass1() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass1(int) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsPositiveCases::TestClass2
   function TestClass2() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass2(int) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnConstructorsPositiveCases::TestClass3
   function TestClass3() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass3(int) in line 64
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function TestClass3(String) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnSameConstructorNegativeCases.java
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases::TestClass1
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases::TestClass2
   function TestClass2() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases::TestClass3
   function TestClass3() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases::TestClass4
   function TestClass4() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases::TestClass5
   function TestClass5(int) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function TestClass5() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases::TestClass6
   function TestClass6(int) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function TestClass6() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases::TestClass7
   function TestClass7() in line 86
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorNegativeCases::TestClass8
   function TestClass8() in line 97
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectAssistedInjectAndInjectOnSameConstructorPositiveCases.java
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorPositiveCases
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorPositiveCases::TestClass1
   function TestClass1() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectAssistedInjectAndInjectOnSameConstructorPositiveCases::TestClass2
   function TestClass2() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectedConstructorAnnotationsNegativeCases.java
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsNegativeCases
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsNegativeCases::TestAnnotation
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsNegativeCases::TestBindingAnnotation
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsNegativeCases::TestClass1
   function TestClass1() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsNegativeCases::TestClass2
   function TestClass2() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsNegativeCases::TestClass3
   function TestClass3() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsNegativeCases::TestClass4
   function TestClass4() in line 53
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectedConstructorAnnotationsPositiveCases.java
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsPositiveCases
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsPositiveCases::TestBindingAnnotation
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsPositiveCases::TestClass1
   function TestClass1() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsPositiveCases::TestClass2
   function TestClass2() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectedConstructorAnnotationsPositiveCases::TestClass3
   function TestClass3() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectInvalidTargetingOnScopingAnnotationNegativeCases.java
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationNegativeCases
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationNegativeCases::TestAnnotation1
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationNegativeCases::TestAnnotation2
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationNegativeCases::TestAnnotation3
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationNegativeCases::TestAnnotation4
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectInvalidTargetingOnScopingAnnotationPositiveCases.java
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationPositiveCases
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationPositiveCases::TestAnnotation1
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationPositiveCases::TestAnnotation2
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationPositiveCases::TestAnnotation3
module com::google::errorprone::bugpatterns::InjectInvalidTargetingOnScopingAnnotationPositiveCases::TestAnnotation4
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnAbstractMethodNegativeCases.java
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodNegativeCases
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodNegativeCases::TestClass1
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodNegativeCases::TestClass2
   abstract class
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodNegativeCases::TestClass3
   function foo() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodNegativeCases::TestClass4
   abstract class
   function concreteMethod() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodNegativeCases::TestClass5
   abstract class
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodNegativeCases::TestClass6
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnAbstractMethodPositiveCases.java
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodPositiveCases
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodPositiveCases::TestClass1
   abstract class
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodPositiveCases::TestClass2
   abstract class
   function foo() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnAbstractMethodPositiveCases::TestClass3
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnFinalFieldNegativeCases.java
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalFieldNegativeCases
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalFieldNegativeCases::TestClass1
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalFieldNegativeCases::TestClass2
   variable n in line 36
      protection public
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalFieldNegativeCases::TestClass3
   variable n in line 44
      protection public
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalFieldNegativeCases::TestClass4
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectJavaxInjectOnFinalFieldPositiveCases.java
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalFieldPositiveCases
module com::google::errorprone::bugpatterns::InjectJavaxInjectOnFinalFieldPositiveCases::TestClass1
   variable n in line 32
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneInjectableConstructorNegativeCases.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorNegativeCases
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorNegativeCases::TestClass1
   function TestClass1() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorNegativeCases::TestClass2
   function TestClass2() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorNegativeCases::TestClass3
   function TestClass3() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass3(int) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorNegativeCases::TestClass4
   function TestClass4() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass4(int) in line 63
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorNegativeCases::TestClass5
   function TestClass5() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass5(int) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneInjectableConstructorPositiveCases.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorPositiveCases
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorPositiveCases::TestClass1
   function TestClass1() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass1(int) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorPositiveCases::TestClass2
   function TestClass2() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass2(int) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function TestClass2(String) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorPositiveCases::TestClass3
   function TestClass3() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass3(int,int) in line 67
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::InjectMoreThanOneInjectableConstructorPositiveCases::TestClass4
   function TestClass4() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestClass4(int,int) in line 83
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneQualifierNegativeCases.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierNegativeCases
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierNegativeCases::TestClass1
   function setN(int) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function TestClass1() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable n in line 33
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierNegativeCases::TestClass2
   function setN(@Foo int) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function TestClass2() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable n in line 47
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierNegativeCases::TestClass3
   function setN(@Bar int) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function TestClass3() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable n in line 63
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierNegativeCases::Foo
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierNegativeCases::Bar
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneQualifierPositiveCases.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierPositiveCases
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierPositiveCases::TestClass1
   function setN(@Foo1 @Foo2 int) in line 56
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function TestClass1() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable n in line 44
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierPositiveCases::TestClass2
   function setN(@Bar1 @Bar2 int) in line 90
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function TestClass2() in line 84
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable n in line 78
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierPositiveCases::TestClass3
   function setN(@Foo1 @Bar1 int) in line 124
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function TestClass3() in line 118
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable n in line 112
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierPositiveCases::Foo1
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierPositiveCases::Foo2
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierPositiveCases::Bar1
module com::google::errorprone::bugpatterns::InjectMoreThanOneQualifierPositiveCases::Bar2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneScopeAnnotationOnClassNegativeCases.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassNegativeCases
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassNegativeCases::TestClass1
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassNegativeCases::TestClass2
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassNegativeCases::TestClass3
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassNegativeCases::TestClass4
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassNegativeCases::TestClass5
   function foo() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectMoreThanOneScopeAnnotationOnClassPositiveCases.java
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassPositiveCases
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassPositiveCases::TestClass1
module com::google::errorprone::bugpatterns::InjectMoreThanOneScopeAnnotationOnClassPositiveCases::TestClass2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectOverlappingQualifierAndScopeAnnotationNegativeCases.java
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases::MyJavaxScope
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases::MyGuiceScope
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases::MyJavaxQualifier
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases::MyGuiceBindingAnnotation
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases::JavaxScopeAndJavaxQualifier
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases::GuiceScopeAndJavaxQualifier
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases::GuiceScopeAndGuiceBindingAnnotation
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationNegativeCases::JavaxScopeAndGuiceBindingAnnotation
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectOverlappingQualifierAndScopeAnnotationPositiveCases.java
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationPositiveCases
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationPositiveCases::JavaxScopeAndJavaxQualifier
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationPositiveCases::GuiceScopeAndJavaxQualifier
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationPositiveCases::GuiceScopeAndGuiceBindingAnnotation
module com::google::errorprone::bugpatterns::InjectOverlappingQualifierAndScopeAnnotationPositiveCases::JavaxScopeAndGuiceBindingAnnotation
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases.java
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases::TestClass1
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases::TestClass2
   abstract class
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases::TestClass3
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassNegativeCases::TestClass4
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases.java
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases::TestClass1
   abstract class
module com::google::errorprone::bugpatterns::InjectScopeAnnotationOnInterfaceOrAbstractClassPositiveCases::TestClass2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeOrQualifierAnnotationRetentionNegativeCases.java
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionNegativeCases
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionNegativeCases::TestAnnotation1
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionNegativeCases::TestAnnotation2
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionNegativeCases::TestAnnotation3
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionNegativeCases::TestAnnotation4
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionNegativeCases::TestAnnotation5
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InjectScopeOrQualifierAnnotationRetentionPositiveCases.java
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionPositiveCases
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionPositiveCases::TestAnnotation1
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionPositiveCases::TestAnnotation2
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionPositiveCases::TestAnnotation3
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionPositiveCases::TestAnnotation4
module com::google::errorprone::bugpatterns::InjectScopeOrQualifierAnnotationRetentionPositiveCases::TestAnnotation5
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModeNegativeCases.java
module com::google::errorprone::bugpatterns::InsecureCipherModeNegativeCases
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InsecureCipherModePositiveCases.java
module com::google::errorprone::bugpatterns::InsecureCipherModePositiveCases
module com::google::errorprone::bugpatterns::InsecureCipherModePositiveCases::CipherWrapper
   function CipherWrapper() in line 132
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InvalidPatternSyntaxNegativeCases.java
module com::google::errorprone::bugpatterns::InvalidPatternSyntaxNegativeCases
   function foo(String) in line 25
      protection public
      19 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/InvalidPatternSyntaxPositiveCases.java
module com::google::errorprone::bugpatterns::InvalidPatternSyntaxPositiveCases
   variable DOT in line 28
      protection public
   variable INVALID in line 27
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/IterableAndIteratorNegativeCases.java
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorNegativeCases
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorNegativeCases::MyNode
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorNegativeCases::MyBadList
   inherits from java::util::Iterator
   inherits from Iterable
   function add(MyNode) in line 65
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function hasNext() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 51
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function remove() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MyBadList() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable head in line 39
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorNegativeCases::MyBadListInherited
   inherits from com::google::errorprone::bugpatterns::testdata::IterableAndIteratorNegativeCases::MyBadList
   function MyBadListInherited() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorNegativeCases::MyGoodList
   inherits from java::util::Iterator
   function add(MyNode) in line 116
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function hasNext() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 102
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function remove() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MyGoodList() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable head in line 90
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorNegativeCases::MyImplicitlyBadList
   inherits from com::google::errorprone::bugpatterns::testdata::IterableAndIteratorNegativeCases::MyGoodList
   inherits from Iterable
   function iterator() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MyImplicitlyBadList() in line 130
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/IterableAndIteratorPositiveCases.java
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorPositiveCases
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorPositiveCases::MyNode
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorPositiveCases::MyList1
   inherits from java::util::Iterator
   function add(MyNode) in line 64
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function hasNext() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 50
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function remove() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MyList1() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable head in line 38
module com::google::errorprone::bugpatterns::testdata::IterableAndIteratorPositiveCases::MyList2
   inherits from Iterable
   function iterator() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase1.java
module com::google::errorprone::bugpatterns::JUnit3TestNotRunNegativeCase1
   inherits from junit::framework::TestCase
   function bestNameEver() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function destroy() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function establish() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function estimate() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function ignoredTest() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function ignoredTest2() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function restore() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function teslaInventedLightbulb() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesPrivateHelper() in line 40
      1 lines of code
      0 parameters
      1 conditional paths
   function tesselate(float) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function test() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testCorrectlySpelled() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testILikeAnnotations() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::JUnit3TestNotRunNegativeCase1::TestCase
   function destroy() in line 47
      1 lines of code
      0 parameters
      1 conditional paths
   function tesHelper() in line 46
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase2.java
module com::google::errorprone::bugpatterns::JUnit3TestNotRunNegativeCase2
   function nameDoesNotStartWithTest() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesName() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestName() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tstName() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase3.java
module com::google::errorprone::bugpatterns::JUnit3TestNotRunNegativeCase3
   inherits from junit::framework::TestCase
   function name() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesBothIssuesAtOnce() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesMisspelled() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase4.java
module com::google::errorprone::bugpatterns::JUnit3TestNotRunNegativeCase4
   inherits from junit::framework::TestCase
   abstract class
   function name() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesBothIssuesAtOnce() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesMisspelled() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunNegativeCase5.java
module com::google::errorprone::bugpatterns::JUnit3TestNotRunNegativeCase5
   inherits from com::google::errorprone::bugpatterns::JUnit3TestNotRunNegativeCase3
   function name() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesBothIssuesAtOnce() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesMisspelled() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testEasyCase() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit3TestNotRunPositiveCases.java
module com::google::errorprone::bugpatterns::JUnit3TestNotRunPositiveCases
   inherits from junit::framework::TestCase
   function etstName() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function name() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function teatName() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function teestName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesBasic() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesetName() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesgName() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesMoreSpaces() in line 86
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesMultiline() in line 90
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesName() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesNameStatic() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tesstName() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TEST_NAME() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function TestName() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tetName() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tetsName() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function textName() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tsetName() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tstName() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function ttestName() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunNegativeCases.java
module com::google::errorprone::bugpatterns::JUnit4SetUpNotRunNegativeCases
   function setUp() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4SetUpWrongRunnerType
   function setUp() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4SetUpCorrectlyDone
   function setUp() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4SetUpJUnit3Class
   inherits from junit::framework::TestCase
   function setUp() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4PrivateSetUp
   function setUp() in line 59
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4PackageLocalSetUp
module com::google::errorprone::bugpatterns::J4SetUpNonVoidReturnType
module com::google::errorprone::bugpatterns::J4SetUpWithParameters
   function setUp(int) in line 81
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUp(boolean) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUp(String) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4StaticSetUp
   function setUp() in line 91
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::SetUpAnnotatedBaseClass
   abstract class
   function setUp() in line 96
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4SetUpExtendsAnnotatedMethod
   inherits from com::google::errorprone::bugpatterns::SetUpAnnotatedBaseClass
   function setUp() in line 104
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunPositiveCaseCustomBefore.java
module com::google::errorprone::bugpatterns::JUnit4SetUpNotRunPositiveCaseCustomBefore
   function setUp() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::Before
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4SetUpNotRunPositiveCases.java
module com::google::errorprone::bugpatterns::JUnit4SetUpNotRunPositiveCases
   function setUp() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4PositiveCase2
   function setUp() in line 34
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4AfterToBefore
   function setUp() in line 44
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4AfterClassToBeforeClass
   function setUp() in line 54
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::BaseTestClass
module com::google::errorprone::bugpatterns::J4Inherit
   inherits from com::google::errorprone::bugpatterns::BaseTestClass
   function setUp() in line 68
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4OverriddenSetUp
   inherits from com::google::errorprone::bugpatterns::BaseTestClass
   function setUp() in line 78
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4OverriddenSetUpPublic
   inherits from com::google::errorprone::bugpatterns::BaseTestClass
   function setUp() in line 84
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunNegativeCases.java
module com::google::errorprone::bugpatterns::JUnit4TearDownNotRunNegativeCases
   function tearDown() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownDifferentRunner
   function tearDown() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownHasAfter
   function tearDown() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownExtendsTestCase
   inherits from junit::framework::TestCase
   function tearDown() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownPrivateTearDown
   function tearDown() in line 51
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownPackageLocal
module com::google::errorprone::bugpatterns::J4TearDownNonVoidReturnType
module com::google::errorprone::bugpatterns::J4TearDownTearDownHasParameters
   function tearDown(int) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function tearDown(boolean) in line 67
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function tearDown(String) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownStaticTearDown
   function tearDown() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::TearDownAnnotatedBaseClass
   abstract class
   function tearDown() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownInheritsFromAnnotatedMethod
   inherits from com::google::errorprone::bugpatterns::TearDownAnnotatedBaseClass
   function tearDown() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownInheritsFromAnnotatedMethod2
   inherits from com::google::errorprone::bugpatterns::TearDownAnnotatedBaseClass
   function tearDown() in line 89
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunPositiveCaseCustomAfter.java
module com::google::errorprone::bugpatterns::JUnit4TearDownNotRunPositiveCaseCustomAfter
   function tearDown() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::After
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TearDownNotRunPositiveCases.java
module com::google::errorprone::bugpatterns::JUnit4TearDownNotRunPositiveCases
   function tearDown() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::JUnit4TearDownNotRunPositiveCase2
   function tearDown() in line 36
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4BeforeToAfter
   function tearDown() in line 42
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4BeforeClassToAfterClass
   function tearDown() in line 48
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::TearDownUnannotatedBaseClass
module com::google::errorprone::bugpatterns::JUnit4TearDownNotRunPositiveCase3
   inherits from com::google::errorprone::bugpatterns::TearDownUnannotatedBaseClass
   function tearDown() in line 58
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownHasOverride
   inherits from com::google::errorprone::bugpatterns::TearDownUnannotatedBaseClass
   function tearDown() in line 64
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::J4TearDownHasPublicOverride
   inherits from com::google::errorprone::bugpatterns::TearDownUnannotatedBaseClass
   function tearDown() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunBaseClass.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunBaseClass
   function testOverrideThis() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testSetUp() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testTearDown() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase1.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunNegativeCase1
   function testThisIsATest() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase2.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunNegativeCase2
   function testThisIsATest() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase3.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunNegativeCase3
   function testAfter() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testAfterClass() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testBefore() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testBeforeClass() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testSomething() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testTest2() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testTest3(int) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function thisIsATest() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase4.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunNegativeCase4
   inherits from junit::framework::TestCase
   function testThisIsATest() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunNegativeCase5.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunNegativeCase5
   inherits from com::google::errorprone::bugpatterns::JUnit4TestNotRunBaseClass
   function testOverrideThis() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testSetUp() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testTearDown() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunPositiveCase1.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunPositiveCase1
   function testThisIsAStaticTest() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testThisIsATest() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/JUnit4TestNotRunPositiveCase2.java
module com::google::errorprone::bugpatterns::JUnit4TestNotRunPositiveCase2
   function testThisIsAStaticTest() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function testThisIsATest() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixNegativeCases.java
module com::google::errorprone::bugpatterns::LongLiteralLowerCaseSuffixNegativeCases
   function negativeHexUpperCase() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function negativeNoSuffix() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function negativeUpperCase() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function notLong() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function positiveHexUpperCase() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function positiveNoSuffix() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function positiveUpperCase() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function variableEndingInEllIsNotALongLiteral() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function zeroHexUpperCase() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function zeroUpperCase() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixPositiveCase1.java
module com::google::errorprone::bugpatterns::LongLiteralLowerCaseSuffixPositiveCase1
   function negativeExtraSpacesLowerCase() in line 44
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function negativeHexExtraSpacesLowerCase() in line 70
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function negativeHexLowerCase() in line 63
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function negativeLowerCase() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function negativeOctalExtraSpacesLowerCase() in line 90
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function negativeOctalLowerCase() in line 85
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function positiveHexLowerCase() in line 49
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function positiveLowerCase() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function positiveOctalLowerCase() in line 75
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function zeroHexLowerCase() in line 56
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function zeroLowerCase() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function zeroOctalLowerCase() in line 80
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable TEST_STRING in line 27
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/LongLiteralLowerCaseSuffixPositiveCase2.java
module com::google::errorprone::bugpatterns::LongLiteralLowerCaseSuffixPositiveCase2
   function underscoredLowerCase() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable TEST_STRING in line 27
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MalformedFormatStringNegativeCases.java
module com::google::errorprone::bugpatterns::MalformedFormatStringNegativeCases
   function dynamicallyConstructedFormat() in line 73
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function finalVariableFormat() in line 65
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable FORMAT_STRING defined in com::google::errorprone::bugpatterns::MalformedFormatStringNegativeCases
   function literalArguments() in line 33
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable formatter defined in com::google::errorprone::bugpatterns::MalformedFormatStringNegativeCases
      uses variable locale defined in com::google::errorprone::bugpatterns::MalformedFormatStringNegativeCases
   function specialCases() in line 57
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function variableArguments() in line 45
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable formatter defined in com::google::errorprone::bugpatterns::MalformedFormatStringNegativeCases
   variable FORMAT_STRING in line 31
   variable formatter in line 29
   variable locale in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MalformedFormatStringPositiveCases.java
module com::google::errorprone::bugpatterns::MalformedFormatStringPositiveCases
   function extraArgs() in line 29
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable formatter defined in com::google::errorprone::bugpatterns::MalformedFormatStringPositiveCases
      uses variable locale defined in com::google::errorprone::bugpatterns::MalformedFormatStringPositiveCases
   function nonliteralFormats() in line 44
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable FORMAT defined in com::google::errorprone::bugpatterns::MalformedFormatStringPositiveCases
   variable FORMAT in line 27
   variable formatter in line 25
   variable locale in line 26
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailNegativeCases.java
module com::google::errorprone::bugpatterns::MissingFailNegativeCases
   inherits from junit::framework::TestCase
   function assertDummy() in line 437
      1 lines of code
      0 parameters
      1 conditional paths
   function assertInCatch_assertLastCallInTry() in line 360
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function assertInCatch_assertOnFieldInCatch() in line 378
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses variable foo defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function assertInCatch_assertOnVariableInCatch() in line 386
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function assertInCatch_assertTrueFalseWithMessage() in line 152
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function assertInCatch_fieldAssignmentInCatch() in line 369
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses variable foo defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function assertInCatch_loopInHelperMethod(String...) in line 276
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function assertInCatch_noopAssertInCatch() in line 404
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function assertInCatch_testCaseThrowSynonymInCatch() in line 110
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function assertInCatch_verifyBeforeCatch() in line 395
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function dummyMethod() in line 435
      1 lines of code
      0 parameters
      1 conditional paths
   function expectedException_afterAnnotation() in line 200
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_assertBoxedTrueFalse() in line 160
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_assertFalse() in line 184
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_assertionError() in line 242
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_assertionFailedError() in line 248
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_assertTrueFalse() in line 128
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_assertTrueFalseWithMessage() in line 136
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_assertUnequal() in line 168
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_beforeAnnotation() in line 193
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_customFail() in line 428
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses function specialFail() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_failInCatch() in line 412
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_finally() in line 329
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_interruptedException() in line 236
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_logCallInCatch() in line 352
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses variable log defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_loggerCallInCatch() in line 344
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses variable logger defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_logInCatch() in line 336
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses variable thingThatLogs defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_loopInHelperMethod() in line 268
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_returnAfterCatch() in line 77
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_returnInCatch() in line 69
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_returnInTry() in line 62
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_testCaseAssertTrueFalseWithMessage() in line 144
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_testCaseAssertUnequal() in line 176
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_throwable() in line 254
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_throwInCatch() in line 84
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_throwInTry() in line 92
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable foo defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_throwSynonymInCatch() in line 102
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_throwSynonymInTry() in line 118
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable foo defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_whileTrue() in line 420
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_withFail() in line 40
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_withFrameworkFail() in line 48
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function expectedException_withStaticFail() in line 55
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function main(String[]) in line 221
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function setUp() in line 207
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function specialFail() in line 439
      1 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 228
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function tearDown() in line 214
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function testExpectedException_continueInCatch() in line 308
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function testExpectedException_continueInTry() in line 319
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function testExpectedException_loopInPrivateTestHelperMethod() in line 289
      7 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function testExpectedException_loopInReturningTestHelperMethod() in line 298
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   function testExpectedException_loopInTestMethod() in line 260
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases
   variable foo in line 38
   variable log in line 35
   variable logger in line 34
   variable thingThatLogs in line 36
module com::google::errorprone::bugpatterns::MissingFailNegativeCases::Logger
module com::google::errorprone::bugpatterns::MissingFailNegativeCases::Dummy
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailNegativeCases2.java
module com::google::errorprone::bugpatterns::MissingFailNegativeCases2
   function assertDummy() in line 38
      1 lines of code
      0 parameters
      1 conditional paths
   function catchAssert() in line 28
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases2
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases2
   function dummyMethod() in line 36
      1 lines of code
      0 parameters
      1 conditional paths
   function expectedException_emptyCatch() in line 22
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailNegativeCases2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases.java
module com::google::errorprone::bugpatterns::MissingFailPositiveCases
   inherits from junit::framework::TestCase
   function assertDummy() in line 135
      1 lines of code
      0 parameters
      1 conditional paths
   function assertInCatch_verifyInCatch() in line 91
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   function assertInCatch_verifyNotLastStatement() in line 81
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   function catchAssert() in line 36
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   function catchAssert_noopAssertLastCall() in line 71
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   function dummyMethod() in line 133
      1 lines of code
      0 parameters
      1 conditional paths
   function expectedException_assertLastCall() in line 53
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   function expectedException_emptyCatch() in line 29
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   function expectedException_fieldAssignmentInCatch() in line 62
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
      uses variable foo defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   function expectedException_logInTry() in line 101
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
      uses variable foo defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   function expectedException_throwOutsideTryTree() in line 45
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
   variable foo in line 27
module com::google::errorprone::bugpatterns::MissingFailPositiveCases::Inner
   function expectedException_emptyCatch() in line 113
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases
module com::google::errorprone::bugpatterns::MissingFailPositiveCases::Dummy
module com::google::errorprone::bugpatterns::MissingFailPositiveCases::Logger
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases2.java
module com::google::errorprone::bugpatterns::MissingFailPositiveCases2
   function dummyMethod() in line 45
      1 lines of code
      0 parameters
      1 conditional paths
   function expectedException() in line 31
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function expectedException_helperMethod() in line 38
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MissingFailPositiveCases3.java
module com::google::errorprone::bugpatterns::MissingFailPositiveCases3
   function assertDummy() in line 46
      1 lines of code
      0 parameters
      1 conditional paths
   function dummyMethod() in line 44
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::MissingFailPositiveCases3::Inner
   inherits from junit::framework::TestCase
   function catchAssert() in line 34
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases3
      uses function assertDummy() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases3
   function expectedException_emptyCatch() in line 27
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::MissingFailPositiveCases3
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearNegativeCases.java
module com::google::errorprone::bugpatterns::MisusedWeekYearNegativeCases
   variable WEEK_YEAR_PATTERN in line 38
module com::google::errorprone::bugpatterns::MisusedWeekYearNegativeCases::MySimpleDateFormat
   inherits from java::text::SimpleDateFormat
   function MySimpleDateFormat(String) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearPositiveCases.java
module com::google::errorprone::bugpatterns::MisusedWeekYearPositiveCases
   variable WEEK_YEAR_PATTERN in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/MisusedWeekYearPositiveCases2.java
module com::google::errorprone::bugpatterns::MisusedWeekYearPositiveCases2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfNegativeCases.java
module com::google::errorprone::bugpatterns::ModifyingCollectionWithItselfNegativeCases
   function addAll(List< Integer >) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function containsAll(List< Integer >) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeAll(List< Integer >) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function retainAll(List< Integer >) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ModifyingCollectionWithItselfPositiveCases.java
module com::google::errorprone::bugpatterns::ModifyingCollectionWithItselfPositiveCases
   function addAll(List< Integer >) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsAll() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function removeAll(List< Integer >) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function retainAll(List< Integer >) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerNegativeCases.java
module com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function addOne(int) in line 54
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function allocateString() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function andAssignmentBox(Integer,Integer) in line 426
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function annotatedWithArray() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function arrayBox(Integer[],int) in line 369
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function arrayComparison(int[]) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function arrayCompoundBox(Integer[],int) in line 422
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function arrayInitializer(int,int) in line 204
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function arrayPostDecrementBox(Integer[]) in line 413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function arrayPostIncrementBox(Integer[]) in line 405
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function arrayPreDecrementBox(Integer[]) in line 409
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function arrayPreIncrementBox(Integer[]) in line 401
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function assignBox(int) in line 284
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function binaryUnbox(Integer,int) in line 97
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function callBox(int) in line 313
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function unBox(Integer) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callBox2(int,int) in line 321
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function unBox2(int,Integer) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callBox3(int,int) in line 329
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function unBox3(Integer,int) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callNoAllocationMethod() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function comparison(int) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callVarArgs() in line 341
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function varArgsMethod(int,int...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callVarArgs0() in line 337
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function varArgsMethod(int,int...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callVarArgs2() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function varArgsMethod(int,int...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callVarArgsNoAllocation(int[]) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function varArgsMethod2(int,int...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callVarArgsObject(Object,Object[]) in line 353
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function varArgsMethodObject(Object,Object...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callVarArgsObject2(Object,Object[]) in line 86
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function varArgsMethodObject2(Object,Object...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function callVarArgsObjectWithPrimitiveArray(Object,int[]) in line 357
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function varArgsMethodObject(Object,Object...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function castBox(int) in line 300
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function comparison(int) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function compoundBox(Integer,int) in line 417
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function divideAssignmentBox(Integer,Integer) in line 430
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function doClone() in line 470
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function doubleString(String) in line 267
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function doubleStringCompound(String) in line 271
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function forBox(int[]) in line 361
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function forEachArray(int[]) in line 61
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function forEachBox(int[]) in line 393
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getInt() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getString() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function allocateString() defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function initializeBox(int) in line 290
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function initializeBoxLiteral() in line 295
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function iteration(Iterable< Object >) in line 276
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function leftShiftAssignmentBox(Integer,Integer) in line 434
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function minusAssignmentBox(Integer,Integer) in line 438
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function multiplyAssignmentBox(Integer,Integer) in line 442
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function newArray(int) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function newString(String) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function orAssignmentBox(Integer,Integer) in line 446
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function plusAssignmentBox(Integer,Integer) in line 450
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function postDecrementBox(Integer) in line 388
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function postIncrementBox(Integer) in line 378
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function preDecrementBox(Integer) in line 383
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function preIncrementBox(Integer) in line 373
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function remainderAssignmentBox(Integer,Integer) in line 454
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function returnArrayInitializer(int,int) in line 209
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function returnBox(int) in line 305
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function rightShiftAssignmentBox(Integer,Integer) in line 458
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function stringConvAssign(int) in line 233
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function stringConvAssign2(int) in line 238
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function stringConvAssign3(int) in line 244
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function stringConvCompoundAssign(int) in line 255
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function stringConvCompoundReturnMethod() in line 261
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getInt() defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function stringConvReturn(int) in line 229
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function stringConvReturnMethod() in line 250
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getInt() defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function sumInts(int,int) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function throwBoxingAssign(Integer,int) in line 162
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function throwBoxingCast(int) in line 174
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function throwBoxingCompoundAssign(Integer,int) in line 157
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function throwBoxingInitialization(final int) in line 167
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function throwBoxingInvocation(int) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function throwBoxingUnary(Integer) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function throwBoxingVarArgs(int) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function throwForeach(final Iterable< Object >) in line 475
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function throwMethod() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function throwNew() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function throwNewArray() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function throwStringConcatenation() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function throwStringConcatenation2() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function throwStringConcatenation3() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInt() defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function throwStringConvCompoundAssign(int) in line 145
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function trusting() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function trustMe() defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function trustMe() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unBox(Integer) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function unBox2(int,Integer) in line 317
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function unBox3(Integer,int) in line 325
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function unboxByCalling(Integer) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function comparison(int) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases
   function unsignedRightShiftAssignmentBox(Integer,Integer) in line 462
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function varArgsMethod(int,int...) in line 333
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function varArgsMethod2(int,int...) in line 71
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function varArgsMethodObject(Object,Object...) in line 349
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function varArgsMethodObject2(Object,Object...) in line 81
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function xorAssignmentBox(Integer,Integer) in line 466
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases::IntegerException
   inherits from RuntimeException
   function IntegerException(Integer) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::NoAllocationCheckerNegativeCases::VarArgsException
   inherits from RuntimeException
   function VarArgsException(int...) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NoAllocationCheckerPositiveCases.java
module com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function allocateString() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function andAssignmentBox(Integer,Integer) in line 388
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function arrayBox(Integer[],int) in line 295
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function arrayCompoundBox(Integer[],int) in line 381
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function arrayInitializer(int,int) in line 34
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function arrayPostDecrementBox(Integer[]) in line 366
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function arrayPostIncrementBox(Integer[]) in line 352
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function arrayPreDecrementBox(Integer[]) in line 359
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function arrayPreIncrementBox(Integer[]) in line 345
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function assignBox(int) in line 163
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function callBox(int) in line 208
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function unBox(Integer) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function callBox2(int,int) in line 220
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function unBox2(int,Integer) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function callBox3(int,int) in line 232
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function unBox3(Integer,int) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function callVarArgs() in line 251
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function varArgsMethod(int,int...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function callVarArgs0() in line 244
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function varArgsMethod(int,int...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function callVarArgs2() in line 258
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function varArgsMethod(int,int...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function callVarArgsObject(Object,Object[]) in line 270
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function varArgsMethodObject(Object,Object...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function callVarArgsObjectWithPrimitiveArray(Object,int[]) in line 277
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function varArgsMethodObject(Object,Object...) defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function castBox(int) in line 188
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function compoundBox(Integer,int) in line 373
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function divideAssignmentBox(Integer,Integer) in line 395
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function doClone() in line 466
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function doubleString(String) in line 135
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function doubleStringCompound(String) in line 142
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function forBox(int[]) in line 284
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function forEachBox(int[]) in line 334
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function getInt() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getString() in line 62
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function allocateString() defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function initializeBox(int) in line 172
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function initializeBoxLiteral() in line 180
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function iteration(Iterable< Object >) in line 151
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function leftShiftAssignmentBox(Integer,Integer) in line 402
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function minusAssignmentBox(Integer,Integer) in line 409
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function multiplyAssignmentBox(Integer,Integer) in line 416
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function newArray(int) in line 27
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function newString(String) in line 50
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function orAssignmentBox(Integer,Integer) in line 423
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function plusAssignmentBox(Integer,Integer) in line 430
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function postDecrementBox(Integer) in line 326
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function postIncrementBox(Integer) in line 310
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function preDecrementBox(Integer) in line 318
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function preIncrementBox(Integer) in line 302
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function remainderAssignmentBox(Integer,Integer) in line 437
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function returnArrayInitializer(int,int) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function returnBox(int) in line 196
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function rightShiftAssignmentBox(Integer,Integer) in line 444
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function stringConvAssign(int) in line 82
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function stringConvAssign2(int) in line 90
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function stringConvAssign3(int) in line 99
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function stringConvCompoundAssign(int) in line 116
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function stringConvCompoundReturnMethod() in line 125
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getInt() defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function stringConvReturn(int) in line 75
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function stringConvReturnMethod() in line 108
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getInt() defined in com::google::errorprone::bugpatterns::NoAllocationCheckerPositiveCases
   function throwForeach(final Iterable< Object >) in line 474
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
   function unBox(Integer) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function unBox2(int,Integer) in line 215
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function unBox3(Integer,int) in line 227
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function unsignedRightShiftAssignmentBox(Integer,Integer) in line 451
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function varArgsMethod(int,int...) in line 239
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function varArgsMethodObject(Object,Object...) in line 265
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function xorAssignmentBox(Integer,Integer) in line 458
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonAtomicVolatileUpdateNegativeCases.java
module com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
   function decrementNonVolatile() in line 43
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable myInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
   function incrementNonVolatile() in line 29
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable myInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
      uses variable myVolatileInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
      uses variable myString defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
   function synchronizedBlock() in line 61
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable myVolatileInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
      uses variable myVolatileString defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
   function synchronizedIncrement() in line 50
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable myVolatileInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
      uses variable myVolatileString defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdateNegativeCases
   variable myInt in line 25
   variable myString in line 27
   variable myVolatileInt in line 24
   variable myVolatileString in line 26
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonAtomicVolatileUpdatePositiveCases.java
module com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases
   function decrement() in line 61
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses variable myVolatileInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases
      uses variable container defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases
      uses variable volatileInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases::VolatileContainer
   function increment() in line 31
      protection public
      29 lines of code
      0 parameters
      2 conditional paths
      uses variable myVolatileInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases
      uses variable container defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases
      uses variable volatileInt defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases::VolatileContainer
   function stringUpdate() in line 83
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable myVolatileString defined in com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases
   variable container in line 29
   variable myVolatileInt in line 28
   variable myVolatileString in line 81
module com::google::errorprone::bugpatterns::NonAtomicVolatileUpdatePositiveCases::VolatileContainer
   variable volatileInt in line 25
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationNegativeCases.java
module com::google::errorprone::bugpatterns::NonRuntimeAnnotationNegativeCases
   function testAnnotation() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::NonRuntimeAnnotationNegativeCases::Runtime
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NonRuntimeAnnotationPositiveCases.java
module com::google::errorprone::bugpatterns::NonRuntimeAnnotationPositiveCases
   function testAnnotation() in line 30
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::NonRuntimeAnnotationPositiveCases::NonRuntime
module com::google::errorprone::bugpatterns::NonRuntimeAnnotationPositiveCases::NotSpecified
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NullablePrimitiveNegativeCases.java
module com::google::errorprone::bugpatterns::NullablePrimitiveNegativeCases
   function method(@Nullable Integer) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function method() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NullablePrimitivePositiveCases.java
module com::google::errorprone::bugpatterns::NullablePrimitivePositiveCases
   function method(@Nullable int) in line 30
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function method() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityNegativeCases.java
module com::google::errorprone::bugpatterns::NumericEqualityNegativeCases
   function testComparisons(Integer,Integer) in line 52
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function testEquality(Integer,Integer) in line 26
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
      uses variable NULLINT defined in com::google::errorprone::bugpatterns::NumericEqualityNegativeCases
   function testSuppressWarnings(Integer,Integer) in line 43
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function testUnboxing(Integer,int) in line 63
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
   variable NULLINT in line 24
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/NumericEqualityPositiveCases.java
module com::google::errorprone::bugpatterns::NumericEqualityPositiveCases
   function testIntegers(Integer,Integer) in line 24
      protection public
      18 lines of code
      2 parameters
      1 conditional paths
   function testLongs(Long,Long) in line 43
      protection public
      18 lines of code
      2 parameters
      1 conditional paths
   function testMixed(Integer,Number) in line 62
      protection public
      18 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OrderingFromPositiveCases.java
module com::google::errorprone::bugpatterns::OrderingFromPositiveCases
   function positiveCase1() in line 30
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase1.java
module com::google::errorprone::bugpatterns::OverridesNegativeCase1
module com::google::errorprone::bugpatterns::OverridesNegativeCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase1::Child1
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase1::Child2
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase1::StaticClass
module com::google::errorprone::bugpatterns::OverridesNegativeCase1::Interface
   function arrayMethod(Object[]) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function varargsMethod(Object...) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::OverridesNegativeCase1::ImplementsInterface
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase1::Interface
   abstract class
   function arrayMethod(Object[]) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function varargsMethod(Object...) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::One
   abstract class
module com::google::errorprone::bugpatterns::One::Builder
module com::google::errorprone::bugpatterns::Two
   inherits from com::google::errorprone::bugpatterns::One
module com::google::errorprone::bugpatterns::Two::Builder
   inherits from com::google::errorprone::bugpatterns::One::Builder
   function varargsMethod(String...) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::Three
   inherits from com::google::errorprone::bugpatterns::Two
module com::google::errorprone::bugpatterns::Three::Builder
   inherits from com::google::errorprone::bugpatterns::Two::Builder
   function varargsMethod(String...) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase2.java
module com::google::errorprone::bugpatterns::OverridesNegativeCase2
module com::google::errorprone::bugpatterns::OverridesNegativeCase2::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase2::SubOne
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase2::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase2::SubTwo
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase2::SubOne
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase2::SubThree
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase2::SubTwo
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesNegativeCase3.java
module com::google::errorprone::bugpatterns::OverridesNegativeCase3
module com::google::errorprone::bugpatterns::OverridesNegativeCase3::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase3::SubOne
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase3::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase3::SubTwo
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase3::SubOne
   abstract class
module com::google::errorprone::bugpatterns::OverridesNegativeCase3::SubThree
   inherits from com::google::errorprone::bugpatterns::OverridesNegativeCase3::SubTwo
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase1.java
module com::google::errorprone::bugpatterns::OverridesPositiveCase1
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::Child1
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::Child2
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::Child3
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::Child4
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::Child5
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::Interface
   function arrayMethod(Object[]) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function varargsMethod(Object...) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::ImplementsInterface
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::Interface
   abstract class
   function arrayMethod(Object...) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function varargsMethod(Object[]) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::MyBase
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::MyInterface
   function f(Object[]) in line 84
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function g(Object...) in line 85
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::ImplementsAndExtends
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::MyBase
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::MyInterface
   abstract class
   function f(Object...) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function g(Object[]) in line 92
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::OverridesPositiveCase1::ImplementsAndExtends2
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::MyBase
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase1::MyInterface
   abstract class
   function f(Object[]) in line 97
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function g(Object...) in line 99
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase2.java
module com::google::errorprone::bugpatterns::OverridesPositiveCase2
module com::google::errorprone::bugpatterns::OverridesPositiveCase2::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase2::SubOne
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase2::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase2::SubTwo
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase2::SubOne
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase2::SubThree
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase2::SubTwo
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase3.java
module com::google::errorprone::bugpatterns::OverridesPositiveCase3
module com::google::errorprone::bugpatterns::OverridesPositiveCase3::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase3::SubOne
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase3::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase3::SubTwo
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase3::SubOne
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase3::SubThree
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase3::SubTwo
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase4.java
module com::google::errorprone::bugpatterns::OverridesPositiveCase4
module com::google::errorprone::bugpatterns::OverridesPositiveCase4::Note
module com::google::errorprone::bugpatterns::OverridesPositiveCase4::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase4::Child1
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase4::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase4::Child2
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase4::Base
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/OverridesPositiveCase5.java
module com::google::errorprone::bugpatterns::OverridesPositiveCase5
module com::google::errorprone::bugpatterns::OverridesPositiveCase5::Base
   abstract class
module com::google::errorprone::bugpatterns::OverridesPositiveCase5::Child1
   inherits from com::google::errorprone::bugpatterns::OverridesPositiveCase5::Base
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullNegativeCase1.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullNegativeCase1
   function go() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullNegativeCase1::Preconditions
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullNegativeCase2.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullNegativeCase2
   function go() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase1.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPositiveCase1
   function error() in line 24
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase2.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPositiveCase2
   function error() in line 24
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPositiveCase3.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPositiveCase3
   function error() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPrimitiveNegativeCases.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitiveNegativeCases
   function test() in line 24
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsCheckNotNullPrimitivePositiveCases.java
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases
   function getTrue() in line 129
      3 lines of code
      0 parameters
      1 conditional paths
   function test() in line 27
      protection public
      65 lines of code
      0 parameters
      1 conditional paths
      uses function hasId() defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases::Tester
   function test2(Tester) in line 93
      protection public
      35 lines of code
      1 parameters
      1 conditional paths
      uses function hasId() defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases::Tester
      uses variable field defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases
      uses function getTrue() defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases
      uses function getId() defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases::Tester
      uses function getTester() defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases::Tester
      uses variable tester defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases::Tester
   variable field in line 25
module com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases::Tester
   function getId() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTester() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tester defined in com::google::errorprone::bugpatterns::PreconditionsCheckNotNullPrimitivePositiveCases::Tester
   function hasId() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable tester in line 134
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringNegativeCase1.java
module com::google::errorprone::bugpatterns::PreconditionsExpensiveStringNegativeCase1
   function error() in line 27
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringNegativeCase2.java
module com::google::errorprone::bugpatterns::PreconditionsExpensiveStringNegativeCase2
   function error() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsExpensiveStringPositiveCase1.java
module com::google::errorprone::bugpatterns::PreconditionsExpensiveStringPositiveCase1
   function error() in line 27
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsInvalidPlaceholderNegativeCase1.java
module com::google::errorprone::bugpatterns::PreconditionsInvalidPlaceholderNegativeCase1
   function checkFoo() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function checkNotNull(Object,String,Object) in line 38
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function checkPositive(int) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function checkSelf() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkNotNull(Object,String,Object) defined in com::google::errorprone::bugpatterns::PreconditionsInvalidPlaceholderNegativeCase1
   function checkTooFewArgs(int) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PreconditionsInvalidPlaceholderPositiveCase1.java
module com::google::errorprone::bugpatterns::PreconditionsInvalidPlaceholderPositiveCase1
   function checkFoo() in line 31
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function checkPositive(int) in line 26
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PrimitiveArrayPassedToVarargsMethodNegativeCases.java
module com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethodNegativeCases
   function doIt() in line 32
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function intVarargsMethod(int...) defined in com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethodNegativeCases
      uses function intArrayVarargsMethod(int...[]) defined in com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethodNegativeCases
      uses function objectVarargsMethodWithMultipleParams(Object,Object...) defined in com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethodNegativeCases
   function intArrayVarargsMethod(int...[]) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function intVarargsMethod(int...) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function objectVarargsMethodWithMultipleParams(Object,Object...) in line 30
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/PrimitiveArrayPassedToVarargsMethodPositiveCases.java
module com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethodPositiveCases
   function doIt() in line 34
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function objectVarargsMethod(Object...) defined in com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethodPositiveCases
      uses function objectVarargsMethodWithMultipleParams(Object,Object...) defined in com::google::errorprone::bugpatterns::PrimitiveArrayPassedToVarargsMethodPositiveCases
   function objectVarargsMethod(Object...) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function objectVarargsMethodWithMultipleParams(Object,Object...) in line 32
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/proto/ProtoTest.java
module com::google::errorprone::bugpatterns::proto::ProtoTest
   function getDescriptor() in line 1160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function registerAllExtensions(com.google.protobuf.ExtensionRegistry) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ProtoTest() in line 23
      1 lines of code
      0 parameters
      1 conditional paths
   variable descriptor in line 1164
   variable internal_static_com_google_errorprone_bugpatterns_TestFieldProtoMessage_descriptor in line 1149
   variable internal_static_com_google_errorprone_bugpatterns_TestFieldProtoMessage_fieldAccessorTable in line 1152
   variable internal_static_com_google_errorprone_bugpatterns_TestProtoMessage_descriptor in line 1154
   variable internal_static_com_google_errorprone_bugpatterns_TestProtoMessage_fieldAccessorTable in line 1157
module com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessageOrBuilder
   inherits from com::google::protobuf::MessageOrBuilder
   function getField() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFieldOrBuilder() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasField() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   inherits from com::google::protobuf::GeneratedMessage
   inherits from com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessageOrBuilder
   function getDefaultInstance() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefaultInstanceForType() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDescriptor() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable internal_static_com_google_errorprone_bugpatterns_TestFieldProtoMessage_descriptor defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function getField() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFieldOrBuilder() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSerializedSize() in line 99
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
   function hasField() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initFields() in line 77
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function internalGetFieldAccessorTable() in line 59
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable internal_static_com_google_errorprone_bugpatterns_TestFieldProtoMessage_fieldAccessorTable defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function isInitialized() in line 81
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function newBuilder() in line 187
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function create() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function newBuilder(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function mergeFrom(com.google.protobuf.Message) defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function newBuilderForType() in line 188
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent) in line 195
      5 lines of code
      1 parameters
      1 conditional paths
   function parseDelimitedFrom(java.io.InputStream) in line 154
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function buildParsed() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function parseDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) in line 163
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function buildParsed() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function parseFrom(com.google.protobuf.ByteString) in line 120
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) in line 125
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function parseFrom(byte[]) in line 132
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite) in line 136
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function parseFrom(java.io.InputStream) in line 143
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function parseFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) in line 147
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function parseFrom(com.google.protobuf.CodedInputStream) in line 174
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function parseFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) in line 179
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function toBuilder() in line 192
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function writeReplace() in line 115
      4 lines of code
      0 parameters
      1 conditional paths
   function writeTo(com.google.protobuf.CodedOutputStream) in line 89
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function TestFieldProtoMessage(Builder) in line 39
      3 lines of code
      1 parameters
      1 conditional paths
   function TestFieldProtoMessage(boolean) in line 42
      1 lines of code
      1 parameters
      1 conditional paths
   variable bitField0_ in line 63
   variable defaultInstance in line 44
   variable field_ in line 66
   variable FIELD_FIELD_NUMBER in line 65
      protection public
   variable memoizedIsInitialized in line 80
   variable memoizedSerializedSize in line 98
   variable serialVersionUID in line 113
module com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   inherits from com::google::protobuf::GeneratedMessage::Builder
   inherits from com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessageOrBuilder
   function build() in line 255
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function buildParsed() in line 263
      9 lines of code
      0 parameters
      2 conditional paths
   function buildPartial() in line 273
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable field_ defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function clear() in line 231
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function clear() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function clearField() in line 404
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function clone() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function mergeFrom(com.google.protobuf.Message) defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function create() in line 227
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefaultInstanceForType() in line 251
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function getDescriptor() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable internal_static_com_google_errorprone_bugpatterns_TestFieldProtoMessage_descriptor defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function getDescriptorForType() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDescriptor() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function getField() in line 357
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getFieldBuilder() in line 414
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getFieldFieldBuilder() in line 428
      11 lines of code
      0 parameters
      2 conditional paths
      uses function initFields() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function getFieldOrBuilder() in line 419
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function hasField() in line 354
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function internalGetFieldAccessorTable() in line 209
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable internal_static_com_google_errorprone_bugpatterns_TestFieldProtoMessage_fieldAccessorTable defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function isInitialized() in line 308
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function maybeForceBuilderInitialization() in line 222
      5 lines of code
      0 parameters
      2 conditional paths
   function mergeField(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 388
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
      uses function newBuilder() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
      uses function mergeFrom(com.google.protobuf.Message) defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
      uses function buildPartial() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function mergeFrom(com.google.protobuf.Message) in line 290
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function mergeFrom(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 299
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) in line 312
      protection public
      35 lines of code
      2 parameters
      6 conditional paths
      uses function newBuilder() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
      uses function hasField() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessageOrBuilder
      uses function mergeFrom(com.google.protobuf.Message) defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
      uses function getField() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessageOrBuilder
   function setField(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 364
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
   function setField(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage.Builder) in line 377
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function build() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function Builder() in line 214
      3 lines of code
      0 parameters
      1 conditional paths
   function Builder(BuilderParent) in line 218
      4 lines of code
      1 parameters
      1 conditional paths
   variable bitField0_ in line 348
   variable field_ in line 351
   variable fieldBuilder_ in line 353
module com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessageOrBuilder
   inherits from com::google::protobuf::MessageOrBuilder
   function getMessage() in line 456
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMessageOrBuilder() in line 457
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMultiField(int) in line 462
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMultiFieldCount() in line 463
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMultiFieldList() in line 461
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMultiFieldOrBuilder(int) in line 466
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getMultiFieldOrBuilderList() in line 465
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasMessage() in line 455
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
   inherits from com::google::protobuf::GeneratedMessage
   inherits from com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessageOrBuilder
   function getDefaultInstance() in line 479
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefaultInstanceForType() in line 483
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDescriptor() in line 488
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable internal_static_com_google_errorprone_bugpatterns_TestProtoMessage_descriptor defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function getMessage() in line 504
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMessageOrBuilder() in line 507
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMultiField(int) in line 524
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMultiFieldCount() in line 521
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMultiFieldList() in line 514
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMultiFieldOrBuilder(int) in line 527
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getMultiFieldOrBuilderList() in line 518
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSerializedSize() in line 558
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
   function hasMessage() in line 501
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initFields() in line 532
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function internalGetFieldAccessorTable() in line 493
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable internal_static_com_google_errorprone_bugpatterns_TestProtoMessage_fieldAccessorTable defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function isInitialized() in line 537
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function newBuilder() in line 650
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function create() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
   function newBuilder(com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage) in line 652
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function mergeFrom(com.google.protobuf.Message) defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
   function newBuilderForType() in line 651
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent) in line 658
      5 lines of code
      1 parameters
      1 conditional paths
   function parseDelimitedFrom(java.io.InputStream) in line 617
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function buildParsed() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
   function parseDelimitedFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) in line 626
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function buildParsed() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
   function parseFrom(com.google.protobuf.ByteString) in line 583
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function parseFrom(com.google.protobuf.ByteString,com.google.protobuf.ExtensionRegistryLite) in line 588
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function parseFrom(byte[]) in line 595
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function parseFrom(byte[],com.google.protobuf.ExtensionRegistryLite) in line 599
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function parseFrom(java.io.InputStream) in line 606
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function parseFrom(java.io.InputStream,com.google.protobuf.ExtensionRegistryLite) in line 610
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function parseFrom(com.google.protobuf.CodedInputStream) in line 637
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function parseFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) in line 642
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function toBuilder() in line 655
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function writeReplace() in line 578
      4 lines of code
      0 parameters
      1 conditional paths
   function writeTo(com.google.protobuf.CodedOutputStream) in line 545
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function TestProtoMessage(Builder) in line 473
      3 lines of code
      1 parameters
      1 conditional paths
   function TestProtoMessage(boolean) in line 476
      1 lines of code
      1 parameters
      1 conditional paths
   variable bitField0_ in line 497
   variable defaultInstance in line 478
   variable memoizedIsInitialized in line 536
   variable memoizedSerializedSize in line 557
   variable message_ in line 500
   variable MESSAGE_FIELD_NUMBER in line 499
      protection public
   variable MULTI_FIELD_FIELD_NUMBER in line 512
      protection public
   variable multiField_ in line 513
   variable serialVersionUID in line 576
module com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
   inherits from com::google::protobuf::GeneratedMessage::Builder
   inherits from com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessageOrBuilder
   function addAllMultiField(java.lang.Iterable<?extends com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage >) in line 1059
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function addMultiField(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 1010
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
   function addMultiField(int,com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 1023
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
   function addMultiField(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage.Builder) in line 1037
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function addMultiField(int,com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage.Builder) in line 1048
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
   function addMultiFieldBuilder() in line 1109
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function addMultiFieldBuilder(int) in line 1113
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function build() in line 725
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function buildParsed() in line 733
      9 lines of code
      0 parameters
      2 conditional paths
   function buildPartial() in line 743
      protection public
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable message_ defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
   function clear() in line 695
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses function clear() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function clearMessage() in line 915
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
   function clearMultiField() in line 1070
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
   function clone() in line 712
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function mergeFrom(com.google.protobuf.Message) defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
   function create() in line 691
      3 lines of code
      0 parameters
      1 conditional paths
   function ensureMultiFieldIsMutable() in line 954
      6 lines of code
      0 parameters
      2 conditional paths
   function getDefaultInstanceForType() in line 721
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
   function getDescriptor() in line 667
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable internal_static_com_google_errorprone_bugpatterns_TestProtoMessage_descriptor defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function getDescriptorForType() in line 717
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDescriptor() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
   function getMessage() in line 868
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getMessageBuilder() in line 925
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getMessageFieldBuilder() in line 939
      11 lines of code
      0 parameters
      2 conditional paths
   function getMessageOrBuilder() in line 930
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getMultiField(int) in line 978
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getMultiFieldBuilder(int) in line 1090
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getMultiFieldBuilderList() in line 1119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMultiFieldCount() in line 971
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getMultiFieldFieldBuilder() in line 1124
      12 lines of code
      0 parameters
      2 conditional paths
      uses function initFields() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
   function getMultiFieldList() in line 964
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getMultiFieldOrBuilder(int) in line 1094
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getMultiFieldOrBuilderList() in line 1102
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function hasMessage() in line 865
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function internalGetFieldAccessorTable() in line 672
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable internal_static_com_google_errorprone_bugpatterns_TestProtoMessage_fieldAccessorTable defined in com::google::errorprone::bugpatterns::proto::ProtoTest
   function isInitialized() in line 813
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function maybeForceBuilderInitialization() in line 685
      6 lines of code
      0 parameters
      2 conditional paths
   function mergeFrom(com.google.protobuf.Message) in line 769
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function mergeFrom(com.google.errorprone.bugpatterns.proto.ProtoTest.TestProtoMessage) in line 778
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
      uses variable multiField_ defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
   function mergeFrom(com.google.protobuf.CodedInputStream,com.google.protobuf.ExtensionRegistryLite) in line 817
      protection public
      41 lines of code
      2 parameters
      7 conditional paths
      uses function newBuilder() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
      uses function mergeFrom(com.google.protobuf.Message) defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function mergeMessage(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 899
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function getDefaultInstance() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
      uses function newBuilder() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage
      uses function mergeFrom(com.google.protobuf.Message) defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
      uses function buildPartial() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestFieldProtoMessage::Builder
   function removeMultiField(int) in line 1080
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function setMessage(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 875
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
   function setMessage(com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage.Builder) in line 888
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function build() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
   function setMultiField(int,com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage) in line 985
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
   function setMultiField(int,com.google.errorprone.bugpatterns.proto.ProtoTest.TestFieldProtoMessage.Builder) in line 999
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
   function Builder() in line 677
      3 lines of code
      0 parameters
      1 conditional paths
   function Builder(BuilderParent) in line 681
      4 lines of code
      1 parameters
      1 conditional paths
   variable bitField0_ in line 859
   variable message_ in line 862
   variable messageBuilder_ in line 864
   variable multiField_ in line 952
   variable multiFieldBuilder_ in line 962
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldNullComparisonNegativeCases.java
module com::google::errorprone::bugpatterns::ProtoFieldNullComparisonNegativeCases
   function main(String[]) in line 26
      protection public
      10 lines of code
      1 parameters
      6 conditional paths
      uses function build() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
      uses function getMessage() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
      uses function getMultiFieldList() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldNullComparisonPositiveCases.java
module com::google::errorprone::bugpatterns::ProtoFieldNullComparisonPositiveCases
   function main(String[]) in line 26
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses function build() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
      uses function getMessage() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
      uses function getMultiFieldList() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldPreconditionsCheckNotNullNegativeCases.java
module com::google::errorprone::bugpatterns::ProtoFieldPreconditionsCheckNotNullNegativeCases
   function main(String[]) in line 25
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function build() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
      uses function getMessage() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
      uses function getMultiFieldList() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
module com::google::errorprone::bugpatterns::ProtoFieldPreconditionsCheckNotNullNegativeCases::Preconditions
   function Preconditions() in line 44
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ProtoFieldPreconditionsCheckNotNullPositiveCases.java
module com::google::errorprone::bugpatterns::ProtoFieldPreconditionsCheckNotNullPositiveCases
   function main(String[]) in line 28
      protection public
      35 lines of code
      1 parameters
      1 conditional paths
      uses function build() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage::Builder
      uses function getMessage() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
      uses function getMultiFieldList() defined in com::google::errorprone::bugpatterns::proto::ProtoTest::TestProtoMessage
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredNegativeCases.java
module com::google::errorprone::bugpatterns::ReturnValueIgnoredNegativeCases
   function methodDoesntMatch() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function methodDoesntMatch2() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::ReturnValueIgnoredNegativeCases
   variable a in line 28
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/ReturnValueIgnoredPositiveCases.java
module com::google::errorprone::bugpatterns::ReturnValueIgnoredPositiveCases
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentNegativeCases.java
module com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases
   function test1(int) in line 34
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable b defined in com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases
   function test2() in line 40
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases
      uses variable b defined in com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases
   function test3() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases
   function test4() in line 50
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function test5(SelfAssignmentNegativeCases) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases
   function test6() in line 59
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function test7() in line 66
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function test8(SelfAssignmentNegativeCases) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases
   variable a in line 27
   variable b in line 29
   variable C in line 30
   variable D in line 31
   variable E in line 32
module com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases::Foo
module com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases::Bar
module com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases::Foobar
module com::google::errorprone::bugpatterns::SelfAssignmentNegativeCases::StaticClass
   function getIntArr() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentPositiveCases1.java
module com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases1
   function foldableString() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function test1(int) in line 27
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases1
   function test2(int) in line 32
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases1
   function test3() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases1
   function test4() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases1
   function test5() in line 48
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable a defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases1
   variable a in line 25
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfAssignmentPositiveCases2.java
module com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases2
   function test10(Foo) in line 69
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable foo defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases2
   function test6() in line 35
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable foo defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases2
   function test7() in line 44
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function test8() in line 54
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable foo defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases2
   function test9(Foo,Foo) in line 62
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable foo defined in com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases2
   variable a in line 27
   variable foo in line 28
   variable obj in line 31
   variable obj2 in line 33
module com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases2::Foo
module com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases2::Bar
module com::google::errorprone::bugpatterns::SelfAssignmentPositiveCases2::Foobar
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualityNegativeCases.java
module com::google::errorprone::bugpatterns::SelfEqualityNegativeCases
   function testEquality(int,int) in line 24
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function testSuppressWarnings(int) in line 37
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualityPositiveCases.java
module com::google::errorprone::bugpatterns::SelfEqualityPositiveCases
   function equals(Object) in line 53
      protection public
      22 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in com::google::errorprone::bugpatterns::SelfEqualityPositiveCases
   function testEquality(double,float,int) in line 28
      protection public
      23 lines of code
      3 parameters
      1 conditional paths
   variable othervalue in line 26
   variable value in line 23
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsNegativeCases.java
module com::google::errorprone::bugpatterns::SelfEqualsNegativeCases
   function equals(Object) in line 28
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable field defined in com::google::errorprone::bugpatterns::SelfEqualsNegativeCases
   function equals2(Object) in line 45
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable field defined in com::google::errorprone::bugpatterns::SelfEqualsNegativeCases
   function hashCode() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::google::errorprone::bugpatterns::SelfEqualsNegativeCases
   function test() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable field in line 25
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase1.java
module com::google::errorprone::bugpatterns::SelfEqualsPositiveCase1
   function equals(Object) in line 28
      protection public
      20 lines of code
      1 parameters
      3 conditional paths
      uses variable field defined in com::google::errorprone::bugpatterns::SelfEqualsPositiveCase1
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in com::google::errorprone::bugpatterns::SelfEqualsPositiveCase1
   function test() in line 54
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable testing defined in com::google::errorprone::bugpatterns::SelfEqualsPositiveCase1::ForTesting
   variable field in line 25
module com::google::errorprone::bugpatterns::SelfEqualsPositiveCase1::ForTesting
   variable string in line 62
      protection public
   variable testing in line 61
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SelfEqualsPositiveCase2.java
module com::google::errorprone::bugpatterns::SelfEqualsPositiveCase2
   function test1() in line 24
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable obj defined in com::google::errorprone::bugpatterns::SelfEqualsPositiveCase2
   function test2() in line 31
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable obj defined in com::google::errorprone::bugpatterns::SelfEqualsPositiveCase2
   function test3() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable obj in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SizeGreaterThanOrEqualsZeroNegativeCases.java
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases
   function arrayLength() in line 58
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable intArray defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases
      uses variable twoDarray defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases
      uses variable staticIntArray defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases
   function testEquality() in line 33
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable intList defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases
      uses variable intSet defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases
      uses variable intCollection defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases
      uses variable length defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases::HasASizeMethod
   variable intArray in line 55
   variable intCollection in line 31
   variable intList in line 29
   variable intSet in line 30
   variable staticIntArray in line 54
   variable twoDarray in line 56
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases::CollectionContainer
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroNegativeCases::HasASizeMethod
   function size() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable length in line 79
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SizeGreaterThanOrEqualsZeroPositiveCases.java
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases
   function arrayLength() in line 106
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses variable intArray defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases
      uses variable twoDarray defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases
      uses variable staticIntArray defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases
   function collectionSize() in line 38
      protection public
      34 lines of code
      0 parameters
      4 conditional paths
      uses variable intList defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases
      uses variable intSet defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases
      uses variable intMap defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases
      uses variable intCollection defined in com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases
   function stringLength() in line 73
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
   variable intArray in line 103
   variable intCollection in line 36
   variable intList in line 33
   variable intMap in line 35
   variable intSet in line 34
   variable staticIntArray in line 102
   variable twoDarray in line 104
module com::google::errorprone::bugpatterns::SizeGreaterThanOrEqualsZeroPositiveCases::CollectionContainer
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstanceNegativeCases.java
module com::google::errorprone::bugpatterns::StaticAccessedFromInstanceNegativeCases
   function staticTestMethod() in line 28
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function test1() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function test2() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable staticVar1 defined in com::google::errorprone::bugpatterns::StaticAccessedFromInstanceNegativeCases
   function test3() in line 42
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function test1() defined in com::google::errorprone::bugpatterns::StaticAccessedFromInstanceNegativeCases
      uses function staticTestMethod() defined in com::google::errorprone::bugpatterns::StaticAccessedFromInstanceNegativeCases
   function test4() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable staticVar1 in line 26
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstancePositiveCase1.java
module com::google::errorprone::bugpatterns::MyClass
module com::google::errorprone::bugpatterns::MyClass::StaticInnerClass
module com::google::errorprone::bugpatterns::MyStaticClass
module com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase1
   function staticTestMethod() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function staticTestMethod2() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function staticTestMethod3(Object) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function test1() in line 59
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable staticVar1 defined in com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase1
      uses variable next defined in com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase1
   function test2() in line 74
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function test3() in line 82
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable next defined in com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase1
      uses function staticTestMethod() defined in com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase1
   function test4() in line 101
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function test5(MyClass) in line 110
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
   function test7() in line 163
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable hiding in line 108
      protection public
   variable next in line 45
   variable staticVar1 in line 44
      protection public
module com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase1::Bar
module com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase1::Foo
module com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase1::C
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/StaticAccessedFromInstancePositiveCase2.java
module com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase2
   function test1() in line 33
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function staticTestMethod() defined in com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase2::TestClass
module com::google::errorprone::bugpatterns::StaticAccessedFromInstancePositiveCase2::TestClass
   function staticTestMethod() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringBuilderInitWithCharNegativeCases.java
module com::google::errorprone::bugpatterns::StringBuilderInitWithCharNegativeCases
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringBuilderInitWithCharPositiveCases.java
module com::google::errorprone::bugpatterns::StringBuilderInitWithCharPositiveCases
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityNegativeCases.java
module com::google::errorprone::bugpatterns::StringEqualityNegativeCases
   function testEquality(String,String) in line 24
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
   function testSuppressWarnings(String,String) in line 37
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/StringEqualityPositiveCases.java
module com::google::errorprone::bugpatterns::StringEqualityPositiveCases
   function testEquality(String,String) in line 24
      protection public
      60 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SuppressWarningsDeprecatedNegativeCases.java
module com::google::errorprone::bugpatterns::SuppressWarningsDeprecatedNegativeCases
   function negativeCase1() in line 26
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function negativeCase2() in line 30
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function negativeCase3() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function negativeCase4() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function negativeCase5() in line 43
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function negativeCase6() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/SuppressWarningsDeprecatedPositiveCases.java
module com::google::errorprone::bugpatterns::SuppressWarningsDeprecatedPositiveCases
   function positiveCase1() in line 27
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function positiveCase2() in line 32
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function positiveCase3() in line 37
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function positiveCase4() in line 40
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function positiveCase5() in line 46
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function positiveCase6() in line 52
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function positiveCase7() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function positiveCase8() in line 66
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function positiveCase9() in line 71
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowableNegativeCases.java
module com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function catchException() in line 81
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function catchException_failWithMessage() in line 90
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function codeCatch_assert() in line 156
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function codeCatch_failNoMessage() in line 99
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function codeCatch_failWithMessage() in line 108
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function codeCatch_FQFail() in line 146
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function codeCatch_oldAssertFail() in line 127
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function codeCatch_oldAssertFailWithMessage() in line 137
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function codeCatch_staticImportedFail() in line 117
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function commentCatch_assertNotLast() in line 165
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function codeCatch_oldAssertFailWithMessage() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function dummyMethod() in line 188
      1 lines of code
      0 parameters
      1 conditional paths
   function dummyRecover() in line 186
      1 lines of code
      0 parameters
      1 conditional paths
   function failNotLast() in line 71
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function failOutsideTry() in line 39
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function multipleCatches() in line 60
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function withoutCatch() in line 48
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
   function withoutFail() in line 31
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases
module com::google::errorprone::bugpatterns::TryFailThrowableNegativeCases::SomeTest
   inherits from junit::framework::TestCase
   function testInTestCase() in line 176
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/TryFailThrowablePositiveCases.java
module com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function catchesAssertionError() in line 141
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function catchesError_lastStatement() in line 159
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function catchesError_nested() in line 179
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function catchesError_nestedNoBlock() in line 190
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function catchesError_notLastStatement() in line 168
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function commentCatch_assert() in line 76
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function commentCatch_assertNotLast() in line 86
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
      uses function dummyRecover() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function commentCatch_failNoMessage() in line 43
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function commentCatch_failNotLast() in line 65
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function commentCatch_failWithMessage() in line 55
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function customMoreAsserts() in line 97
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function customMoreAsserts_fail() in line 108
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function dummyMethod() in line 139
      1 lines of code
      0 parameters
      1 conditional paths
   function dummyRecover() in line 137
      1 lines of code
      0 parameters
      1 conditional paths
   function emptyCatch_failNoMessage() in line 34
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
   function hasMessage() in line 150
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function dummyMethod() defined in com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases
module com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases::SomeTest
   inherits from junit::framework::TestCase
   function testInTestCase() in line 120
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::TryFailThrowablePositiveCases::CustomMoreAsserts
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopNegativeCases.java
module com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function test1() in line 28
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function wait(Object) defined in com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function test2() in line 39
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function wait(Object) defined in com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function test3() in line 50
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function wait(Object) defined in com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function testDoLoop() in line 73
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function wait(Object) defined in com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function testEnhancedForLoop() in line 95
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function wait(Object) defined in com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function testForLoop() in line 84
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function wait(Object) defined in com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function testLoopNotInSynchronized() in line 62
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function wait(Object) defined in com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function testNotObjectWait() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function wait(Object) defined in com::google::errorprone::bugpatterns::testdata::WaitNotInLoopNegativeCases
   function wait(Object) in line 107
      2 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/WaitNotInLoopPositiveCases.java
module com::google::errorprone::bugpatterns::testdata::WaitNotInLoopPositiveCases
   function testAwait(Condition) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function testAwaitLongTimeUnit(Condition) in line 71
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function testAwaitNanos(Condition) in line 77
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function testAwaitUninterruptibly(Condition) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function testAwaitUntil(Condition) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function testAwaitWithFix(Condition) in line 58
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function testIfInsteadOfLoop() in line 30
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
   function testWaitLong() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testWaitLongInt() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/WrongParameterPackageNegativeCases.java
module com::google::errorprone::bugpatterns::WrongParameterPackageNegativeCases
   function testParameter(Integer) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function testParameter(Integer,Integer) in line 26
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function testParameter2(Integer,Integer) in line 28
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::WrongParameterPackageNegativeCases::Subclass
   inherits from com::google::errorprone::bugpatterns::WrongParameterPackageNegativeCases
   function testParameter(Integer) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function testParameter(Integer,Integer) in line 39
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function testParameter(Boolean,Integer) in line 41
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function testParameter(Boolean) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function testParameter(java.lang.Integer) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function testParameter2(WrongParameterPackageNegativeCases.Integer,Integer) in line 46
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::WrongParameterPackageNegativeCases::Integer
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/testdata/WrongParameterPackagePositiveCases.java
module com::google::errorprone::bugpatterns::WrongParameterPackagePositiveCases
   function testParameter(WrongParameterPackageNegativeCases.Integer) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function testParameter(Integer,Integer) in line 26
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function testParameter2(java.lang.Integer,Integer) in line 28
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function testParameter3(Integer,Integer) in line 30
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::WrongParameterPackagePositiveCases::Subclass
   inherits from com::google::errorprone::bugpatterns::WrongParameterPackagePositiveCases
   function testParameter(Integer) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function testParameter(WrongParameterPackageNegativeCases.Integer,Integer) in line 41
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function testParameter2(WrongParameterPackageNegativeCases.Integer,java.lang.Integer) in line 44
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function testParameter3(java.lang.Integer,java.lang.Integer) in line 47
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::bugpatterns::WrongParameterPackagePositiveCases::Subclass::Integer
module com::google::errorprone::bugpatterns::WrongParameterPackagePositiveCases::Integer
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/DoubleCheckedLockingTest.java
module com::google::errorprone::bugpatterns::threadsafety::DoubleCheckedLockingTest
   function immutable_Integer() in line 121
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutable_String() in line 142
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negative() in line 100
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 32
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveNoFix() in line 54
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveTmpVar() in line 76
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 28
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByBinderTest.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByBinderTest
   function bind(String,String,JavaFileObject) in line 480
      27 lines of code
      3 parameters
      5 conditional paths
      uses variable decls defined in com::google::errorprone::bugpatterns::threadsafety::GuardedByBinderTest::FindClass
   function bindFail(String,String,JavaFileObject) in line 472
      7 lines of code
      3 parameters
      2 conditional paths
   function enclosingBlockScope() in line 416
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function explicitThisOuterClass() in line 348
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function explicitThisSameClass() in line 402
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function implicitThisOuterClass() in line 365
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function implicitThisOuterClassMethod() in line 382
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function instanceMethodOnStatic() in line 336
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function instanceOnStatic() in line 324
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function namedClass_none() in line 157
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function namedClass_nonLiteral() in line 144
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function namedClass_super() in line 131
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function namedClass_this() in line 118
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function namedThis_none() in line 167
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function nonFinal() in line 461
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function nonFinalStatic() in line 444
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function otherClass() in line 208
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function outer_lock() in line 177
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function outer_lock_simpleName() in line 192
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function simpleFieldName() in line 262
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function simpleName() in line 225
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function simpleNameClass() in line 243
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function staticFieldGuard() in line 280
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function staticMethodGuard() in line 295
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function staticOnStatic() in line 310
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function testBadSuperAccess() in line 105
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function testFinal() in line 70
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function testInherited() in line 53
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function testMethod() in line 84
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   variable fileManager in line 50
module com::google::errorprone::bugpatterns::threadsafety::GuardedByBinderTest::FindClass
   inherits from com::sun::source::util::TreeScanner
   function visitClassDef(JCTree.JCClassDecl) in line 513
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable decls in line 510
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByCheckerTest.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByCheckerTest
   function classInitializersAreUnchecked() in line 1280
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function complexLockExpression() in line 899
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function enclosingBlockScope() in line 1177
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function innerClassMethod() in line 1333
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function innerClassMethod_classBoundary() in line 1362
      protection public
      38 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function innerClassTypeQualifier() in line 1229
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function instanceAccess_instanceGuard() in line 679
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function instanceAccess_lexicalGuard() in line 707
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function instanceAccess_namedThisGuard() in line 816
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function instanceAccess_thisGuard() in line 790
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function instanceFieldInitializersAreUnchecked() in line 1318
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function instanceInitializersAreUnchecked() in line 1257
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function lexicalAccess_instanceGuard() in line 734
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function lexicalAccess_lexicalGuard() in line 761
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function lexicalAccess_namedThisGuard() in line 868
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function lexicalAccess_thisGuard() in line 842
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function qualfiedType() in line 1201
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function qualifiedMethod() in line 1430
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function regression_b27686620() in line 1402
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function staticFieldInitializersAreUnchecked() in line 1303
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function suppressLocalVariable() in line 1156
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function synchronizedOnLockMethod_negative() in line 1134
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAliasing() in line 1058
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testAnonymousClass() in line 463
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testBadGuard() in line 245
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testBadGuardMethodAccess() in line 296
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testBadStaticFieldAccess() in line 225
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testCtor() in line 280
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testEnclosingSuperAccess() in line 507
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testGuardedStaticFieldAccess_1() in line 148
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testGuardedStaticFieldAccess_2() in line 168
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testGuardedStaticFieldAccess_3() in line 188
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testGuardedStaticFieldAccess_EnclosingClass() in line 208
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testInheritedLock() in line 486
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testInnerClass_enclosingClassLock() in line 417
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testInnerClass_thisLock() in line 443
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLexicalScopingExampleOne() in line 999
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLexicalScopingExampleTwo() in line 1029
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLocked() in line 38
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMonitor() in line 91
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testMonitorGuard() in line 1081
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testOtherClass_bad_staticLock() in line 598
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testOtherClass_bad_staticLock_alsoSub() in line 628
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testOtherClass_staticLock() in line 658
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testReadWriteLock() in line 364
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testReadWriteLockCopy() in line 330
      protection public
      32 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testReadWriteLockIsIgnored() in line 396
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSemaphore() in line 1104
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testStaticLocked() in line 73
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSuperAccess_lock() in line 550
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSuperAccess_staticLock() in line 574
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSuperAccess_this() in line 531
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransitiveGuardMethodAccess() in line 313
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUnheldInstanceGuard() in line 259
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testWrongLock() in line 121
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function tryWithResources() in line 944
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function tryWithResourcesAreUnsupported() in line 978
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function wrongInnerClassInstance() in line 917
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByLockMethodTest.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByLockMethodTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSimple() in line 40
      protection public
      32 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/GuardedByValidatorTest.java
module com::google::errorprone::bugpatterns::threadsafety::GuardedByValidatorTest
   function anonymousClassPrivateAccess() in line 153
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function anonymousClassTypo() in line 123
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBadInstanceAccess() in line 92
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testClassName() in line 108
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testItself() in line 79
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNegative() in line 55
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNonExistantMethod() in line 229
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositive() in line 37
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testStaticGuardedByInstance() in line 184
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testStaticGuardedByInstanceMethod() in line 199
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testStaticGuardedByStatic() in line 216
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/HeldLockAnalyzerTest.java
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzerTest
   function setUp() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testInstance() in line 51
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLocked() in line 185
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLockMethodEnclosingAccess() in line 216
      protection public
      39 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSynchronizedClass() in line 163
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSynchronizedField() in line 140
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSynchronizedMethod() in line 100
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testSynchronizedThis() in line 119
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTwoInstances() in line 75
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 42
module com::google::errorprone::bugpatterns::threadsafety::HeldLockAnalyzerTest::GuardedByLockSetAnalyzer
   inherits from com::google::errorprone::bugpatterns::threadsafety::GuardedByChecker
   function checkGuardedAccess(Tree,GuardedByExpression,HeldLockSet,VisitorState) in line 266
      9 lines of code
      4 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/ImmutableCheckerTest.java
module com::google::errorprone::bugpatterns::threadsafety::ImmutableCheckerTest
   function annotatedImmutableInterfaces() in line 201
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function annotationsAreImmutable() in line 70
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function annotationsDefaultToImmutable() in line 146
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function basicFields() in line 37
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function containerOf_mutableInstantiation() in line 450
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function containerOf_noSuchType() in line 645
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function customAnnotationsMightBeMutable() in line 80
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function customAnnotationsSubtype() in line 125
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function customImplementionsOfImplicitlyImmutableAnnotationsMustBeImmutable() in line 102
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function deeplyImmutableArguments() in line 227
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function deeplyMutableTypeArguments() in line 279
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function enumsDefaultToImmutable() in line 159
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function enumsMayBeImmutable() in line 172
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function extendsImmutable() in line 308
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function extendsImmutableAnnotated_substBounds() in line 338
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function extendsMutable() in line 325
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function ignoreStaticFields() in line 253
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableAnonymousTypeScope() in line 961
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableClassSuperTypeScope() in line 981
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableClassTypeScope() in line 1004
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableInstantiation() in line 510
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableInstantiation_extendsBound() in line 583
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableInstantiation_inferredImmutableType() in line 658
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableInstantiation_superBound() in line 547
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableInterfaceField() in line 211
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableNull() in line 1119
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function immutableTypeArgumentInstantiation() in line 370
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function implementsInterface_containerOf() in line 859
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function instantiationWithMutableType() in line 407
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function interface_containerOf_immutable() in line 822
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function interface_containerOf_mutable() in line 840
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function interfacesMutableByDefault() in line 56
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function missingContainerOf() in line 471
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableArray() in line 188
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableEnum() in line 1202
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableEnumMember() in line 1217
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableExtendsAnnotation() in line 1233
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableField() in line 265
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableInstantiation() in line 530
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableInstantiation_extendsBound() in line 624
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableInstantiation_inferredImmutableType() in line 682
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableInstantiation_superBound() in line 565
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableInstantiation_wildcard() in line 603
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableNonFinalField() in line 240
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableRawType() in line 717
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableTypeArgumentInstantiation() in line 388
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function mutableWildInstantiation() in line 697
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negative() in line 899
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeAnonymous() in line 1044
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeAnonymousBound() in line 1024
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeAnonymousMutableBound() in line 941
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeEnumConstant() in line 1089
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeParametricAnonymous() in line 800
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 880
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveAnonymous() in line 750
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveAnonymousInterface() in line 775
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveEnumConstant() in line 1063
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function protosNotOnClasspath() in line 1174
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function setArgs(List< String >) defined in com::google::errorprone::CompilationTestHelper
   function rawImpliesImmutable() in line 294
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function suppressOnField() in line 1131
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function suppressOnOneField() in line 1144
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testImmutableListImplementation() in line 737
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function transitive() in line 919
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function transitiveSuperSubstitutionImmutable() in line 426
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function transitiveSuperSubstitutionMutable() in line 485
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function twoFieldsInSource() in line 1159
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function typeParameterWithImmutableBound() in line 357
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 33
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/LockMethodCheckerTest.java
module com::google::errorprone::bugpatterns::threadsafety::LockMethodCheckerTest
   function setUp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBadLockExpression() in line 171
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLocked() in line 37
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLockedAndUnlocked() in line 58
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLockedMonitor() in line 103
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testLockedRWLock() in line 81
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNotLocked() in line 121
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNotLockedMonitor() in line 155
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNotLockedRWLock() in line 139
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/StaticGuardedByInstanceTest.java
module com::google::errorprone::bugpatterns::threadsafety::StaticGuardedByInstanceTest
   function negative_instanceVar() in line 97
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negative_method() in line 114
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negative_nested() in line 130
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negative_staticLock() in line 80
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 39
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive_twoWrites() in line 58
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/SynchronizeOnNonFinalFieldTest.java
module com::google::errorprone::bugpatterns::threadsafety::SynchronizeOnNonFinalFieldTest
   function setUp() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNegative() in line 87
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositive1() in line 38
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositive2() in line 54
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositive3() in line 71
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/threadsafety/UnlockMethodCheckerTest.java
module com::google::errorprone::bugpatterns::threadsafety::UnlockMethodCheckerTest
   function setUp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBadLockExpression() in line 170
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNotUnlocked() in line 120
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNotUnlockedMonitor() in line 154
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNotUnlockedRWLock() in line 138
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUnlocked() in line 37
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUnlockedAndLocked() in line 57
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUnlockedMonitor() in line 102
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testUnlockedRWLock() in line 80
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/TryFailThrowableTest.java
module com::google::errorprone::bugpatterns::TryFailThrowableTest
   function setUp() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCases() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCases() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 31
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterQualifierTest.java
module com::google::errorprone::bugpatterns::TypeParameterQualifierTest
   function negative() in line 73
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 39
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveMethod() in line 59
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/TypeParameterUnusedInFormalsTest.java
module com::google::errorprone::bugpatterns::TypeParameterUnusedInFormalsTest
   function abstractMethod() in line 172
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function evilCastImpl() in line 38
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function issue343() in line 196
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function leadingAndTrailingParam() in line 80
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function leadingParam() in line 52
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function objectCast() in line 184
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function okFBound() in line 108
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function okGenericFactory() in line 136
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function okNotMyParam() in line 160
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function okWithParam() in line 148
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function superBound() in line 94
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function trailingParam() in line 66
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function wildbound() in line 121
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryStaticImportTest.java
module com::google::errorprone::bugpatterns::UnnecessaryStaticImportTest
   function negative() in line 127
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeGenericTypeStaticMethod() in line 103
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeStaticMethod() in line 79
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 39
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveRename() in line 56
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/UnnecessaryTypeArgumentTest.java
module com::google::errorprone::bugpatterns::UnnecessaryTypeArgumentTest
   function negative() in line 113
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeGenericSuper() in line 128
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveCall() in line 39
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveInstantiation() in line 95
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveSuper() in line 74
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveThis() in line 55
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function whitespaceFix() in line 152
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/UnsynchronizedOverridesSynchronizedTest.java
module com::google::errorprone::bugpatterns::UnsynchronizedOverridesSynchronizedTest
   function ignoreInputStream() in line 77
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negative() in line 59
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 39
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 33
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 30
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/UnusedAnonymousClassTest.java
module com::google::errorprone::bugpatterns::UnusedAnonymousClassTest
   function deadCallable() in line 83
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function deadCallableWithField() in line 144
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function deadObject() in line 37
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function deadThread() in line 52
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function liveCallable() in line 103
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function liveCallableViaCinit() in line 122
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function liveCallableViaField() in line 166
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function liveObject() in line 69
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 29
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/VarCheckerTest.java
module com::google::errorprone::bugpatterns::VarCheckerTest
   function abstractMethod() in line 202
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function enhancedFor() in line 164
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function finalField() in line 52
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function finalLocal7() in line 120
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function setArgs(List< String >) defined in com::google::errorprone::CompilationTestHelper
   function finalLocal8() in line 135
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function setArgs(List< String >) defined in com::google::errorprone::CompilationTestHelper
   function forLoop() in line 150
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function interfaceMethod() in line 214
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function nativeMethod() in line 190
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeLocal() in line 106
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeParam() in line 78
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function nonFinalField() in line 41
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveLocal() in line 91
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveParam() in line 64
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unnecessaryFinalNativeMethod() in line 178
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function varField() in line 226
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function varLocal() in line 252
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function varParam() in line 238
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/WaitNotInLoopTest.java
module com::google::errorprone::bugpatterns::WaitNotInLoopTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/WildcardImportTest.java
module com::google::errorprone::bugpatterns::WildcardImportTest
   function chainOffStatic() in line 53
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function classLiteral() in line 78
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function dontImportRuntime() in line 199
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function dontImportSelf() in line 213
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function dontImportSelfNested() in line 245
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function dontImportSelfPrivate() in line 227
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function doublePrefix() in line 151
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function enumTest() in line 119
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function importSamePackage() in line 261
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function negativeNoWildcard() in line 281
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function nonCanonical() in line 319
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positive() in line 135
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveClassSelect() in line 167
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function positiveInnerClass() in line 183
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function sameUnitWithSpuriousWildImport() in line 299
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function staticMethod() in line 97
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 35
module com::google::errorprone::bugpatterns::WildcardImportTest::WildcardImportTestChecker
   inherits from com::google::errorprone::bugpatterns::WildcardImport
   function WildcardImportTestChecker() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/bugpatterns/WrongParameterPackageTest.java
module com::google::errorprone::bugpatterns::WrongParameterPackageTest
   function setUp() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNegativeCase() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testNPE() in line 54
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testPositiveCase() in line 40
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 32
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/CommandLineFlagTest.java
module com::google::errorprone::CommandLineFlagTest
   function canDemoteToWarning() in line 184
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses function clearDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function canDisable() in line 200
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses function clearDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function canEnableWithDefaultSeverity() in line 136
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function canEnableWithOverriddenSeverity() in line 151
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function clearDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function canOverrideByAltname() in line 245
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
   function canPromoteToError() in line 169
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function cantDisableNondisableableCheck() in line 216
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
   function cantOverrideNonexistentCheck() in line 228
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
   function ignoreUnknownChecksFlagAllowsOverridingUnknownCheck() in line 257
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
   function malformedFlag() in line 116
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
   function setUp() in line 104
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function listenToDiagnostics(DiagnosticListener<?super JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses function redirectOutputTo(PrintWriter) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
   variable builder in line 99
   variable diagnosticHelper in line 100
   variable output in line 101
module com::google::errorprone::CommandLineFlagTest::DisableableChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::CommandLineFlagTest::NondisableableChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 72
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::CommandLineFlagTest::WarningChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 83
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::CommandLineFlagTest::ErrorChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 94
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/CompilationTestHelper.java
module com::google::errorprone::CompilationTestHelper
   function addSourceFile(String) in line 160
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::CompilationTestHelper
      uses function forResource(Class<?>,String) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function addSourceLines(String,String...) in line 148
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::CompilationTestHelper
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function buildArguments(List< String >) in line 125
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_ARGS defined in com::google::errorprone::CompilationTestHelper
   function checkWellFormed(Iterable< JavaFileObject >,String[]) in line 282
      23 lines of code
      2 parameters
      2 conditional paths
      uses variable compiler defined in com::google::errorprone::CompilationTestHelper
      uses variable outputStream defined in com::google::errorprone::CompilationTestHelper
      uses variable args defined in com::google::errorprone::CompilationTestHelper
      uses function getRemainingArgs() defined in com::google::errorprone::ErrorProneOptions
      uses variable fileManager defined in com::google::errorprone::CompilationTestHelper
      uses function buildArguments(List< String >) defined in com::google::errorprone::CompilationTestHelper
      uses variable sources defined in com::google::errorprone::CompilationTestHelper
   function compile(Iterable< JavaFileObject >,String[]) in line 274
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable checkWellFormed defined in com::google::errorprone::CompilationTestHelper
      uses variable sources defined in com::google::errorprone::CompilationTestHelper
      uses variable args defined in com::google::errorprone::CompilationTestHelper
      uses variable compiler defined in com::google::errorprone::CompilationTestHelper
      uses function run(String[]) defined in com::google::errorprone::ErrorProneCompiler
      uses variable fileManager defined in com::google::errorprone::CompilationTestHelper
   function doTest() in line 237
      protection public
      36 lines of code
      0 parameters
      7 conditional paths
      uses variable sources defined in com::google::errorprone::CompilationTestHelper
      uses function buildArguments(List< String >) defined in com::google::errorprone::CompilationTestHelper
      uses variable args defined in com::google::errorprone::CompilationTestHelper
      uses function compile(Iterable< JavaFileObject >,String[]) defined in com::google::errorprone::CompilationTestHelper
      uses variable diagnosticHelper defined in com::google::errorprone::CompilationTestHelper
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function expectNoDiagnostics() defined in com::google::errorprone::CompilationTestHelper
      uses function assertHasDiagnosticOnAllMatchingLines(JavaFileObject,LookForCheckNameInDiagnostic) defined in com::google::errorprone::DiagnosticTestHelper
      uses variable lookForCheckNameInDiagnostic defined in com::google::errorprone::CompilationTestHelper
      uses function getUnusedLookupKeys() defined in com::google::errorprone::DiagnosticTestHelper
      uses variable expectedResult defined in com::google::errorprone::CompilationTestHelper
   function expectErrorMessage(String,Predicate<?super String >) in line 228
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable diagnosticHelper defined in com::google::errorprone::CompilationTestHelper
      uses function expectErrorMessage(String,Predicate<?super String >) defined in com::google::errorprone::DiagnosticTestHelper
   function expectNoDiagnostics() in line 179
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function expectResult(Result) in line 211
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable expectedResult defined in com::google::errorprone::CompilationTestHelper
   function ignoreJavacErrors() in line 190
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function matchAllDiagnostics() in line 201
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function newInstance(ScannerSupplier,Class<?>) in line 90
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function CompilationTestHelper(ScannerSupplier,String,Class<?>) defined in com::google::errorprone::CompilationTestHelper
   function newInstance(Class<?extends BugChecker >,Class<?>) in line 100
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function CompilationTestHelper(ScannerSupplier,String,Class<?>) defined in com::google::errorprone::CompilationTestHelper
      uses variable args defined in com::google::errorprone::CompilationTestHelper
   function setArgs(List< String >) in line 169
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable args defined in com::google::errorprone::CompilationTestHelper
   function CompilationTestHelper(ScannerSupplier,String,Class<?>) in line 73
      10 lines of code
      3 parameters
      1 conditional paths
      uses function report(ScannerSupplier) defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses function redirectOutputTo(PrintWriter) defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses variable outputStream defined in com::google::errorprone::CompilationTestHelper
      uses function listenToDiagnostics(DiagnosticListener<?super JavaFileObject >) defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses variable diagnosticHelper defined in com::google::errorprone::CompilationTestHelper
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses function build() defined in com::google::errorprone::ErrorProneCompiler::Builder
   variable args in line 66
   variable checkWellFormed in line 69
   variable compiler in line 62
   variable DEFAULT_ARGS in line 54
   variable diagnosticHelper in line 61
   variable expectedResult in line 68
   variable expectNoDiagnostics in line 67
   variable fileManager in line 64
   variable lookForCheckNameInDiagnostic in line 70
   variable outputStream in line 63
   variable sources in line 65
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/CompilationTestHelperTest.java
module com::google::errorprone::CompilationTestHelperTest
   function commandLineArgToDisableCheckWorks() in line 351
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function setArgs(List< String >) defined in com::google::errorprone::CompilationTestHelper
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function expectedResultDiffersFromActualResultFails() in line 272
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function expectResult(Result) defined in com::google::errorprone::CompilationTestHelper
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function expectedResultMatchesActualResultSucceeds() in line 262
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function expectResult(Result) defined in com::google::errorprone::CompilationTestHelper
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function expectNoDiagnoticsAndNoDiagnosticsProducedSucceeds() in line 287
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable expectNoDiagnostics defined in com::google::errorprone::CompilationTestHelper
   function expectNoDiagnoticsAndNoDiagnosticsProducedSucceedsWithMatches() in line 298
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable expectNoDiagnostics defined in com::google::errorprone::CompilationTestHelper
   function expectNoDiagnoticsButDiagnosticsProducedFails() in line 310
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses variable expectNoDiagnostics defined in com::google::errorprone::CompilationTestHelper
   function expectNoDiagnoticsButDiagnosticsProducedFailsWithMatches() in line 330
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses variable expectNoDiagnostics defined in com::google::errorprone::CompilationTestHelper
   function fileWithBugMarkerAndErrorOnWrongLineFails() in line 146
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function fileWithBugMarkerAndMatchingErrorSucceeds() in line 117
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function fileWithBugMarkerAndNoErrorsFails() in line 82
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function fileWithBugMatcherAndErrorOnWrongLineFails() in line 165
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function expectErrorMessage(String,Predicate<?super String >) defined in com::google::errorprone::CompilationTestHelper
   function fileWithBugMatcherAndMatchingErrorSucceeds() in line 131
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function expectErrorMessage(String,Predicate<?super String >) defined in com::google::errorprone::CompilationTestHelper
   function fileWithBugMatcherAndNoErrorsFails() in line 99
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function expectErrorMessage(String,Predicate<?super String >) defined in com::google::errorprone::CompilationTestHelper
   function fileWithMultipleBugMarkersAndMatchingErrorsSucceeds() in line 185
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function fileWithMultipleDifferentBugMatchersAndMatchingErrorsSucceeds() in line 222
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function expectErrorMessage(String,Predicate<?super String >) defined in com::google::errorprone::CompilationTestHelper
   function fileWithMultipleSameBugMatchersAndMatchingErrorsSucceeds() in line 203
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function expectErrorMessage(String,Predicate<?super String >) defined in com::google::errorprone::CompilationTestHelper
   function fileWithNoBugMarkersAndErrorFails() in line 64
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function fileWithNoBugMarkersAndNoErrorsShouldPass() in line 55
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function fileWithSyntaxErrorFails() in line 242
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function missingExpectErrorFails() in line 367
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unexpectedDiagnosticOnFirstLine() in line 393
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   variable compilationHelper in line 47
module com::google::errorprone::CompilationTestHelperTest::ReturnTreeChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 387
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::CompilationTestHelperTest::PackageTreeChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::CompilationUnitTreeMatcher
   function matchCompilationUnit(CompilationUnitTree,VisitorState) in line 414
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/LocalStoreTest.java
module com::google::errorprone::dataflow::LocalStoreTest
   function leastUpperBoundEmpty() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function newStore() in line 39
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NonNullAssumptionsTest.java
module com::google::errorprone::dataflow::nullnesspropagation::NonNullAssumptionsTest
   function invokeWithSingleNullArgument(Method,int) in line 113
      18 lines of code
      2 parameters
      3 conditional paths
   function loadClass(String) in line 132
      3 lines of code
      1 parameters
      1 conditional paths
   function testClassesWithNonNullStaticFields() in line 48
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
   function testNullImpliesTrueParameters() in line 65
      protection public
      21 lines of code
      0 parameters
      5 conditional paths
   function testRequiredNonNullParameters() in line 88
      protection public
      24 lines of code
      0 parameters
      6 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessPropagationTest.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTest
   function setUp() in line 125
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testConstantsDefinedInOtherCompilationUnits() in line 179
      protection public
      42 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransferFunctions1() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransferFunctions2() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransferFunctions3() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransferFunctions4() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransferFunctions5() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransferFunctions6() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransferFunctions7() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testTransferFunctions8() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceFile(String) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function triggerNullnessChecker(Object) in line 63
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessChecker(boolean) in line 76
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessChecker(byte) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessChecker(char) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessChecker(double) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessChecker(float) in line 84
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessChecker(int) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessChecker(long) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessChecker(short) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnBoxed(Object) in line 96
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnPrimitive(boolean) in line 103
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnPrimitive(byte) in line 105
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnPrimitive(char) in line 107
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnPrimitive(double) in line 109
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnPrimitive(float) in line 111
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnPrimitive(int) in line 113
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnPrimitive(long) in line 115
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function triggerNullnessCheckerOnPrimitive(short) in line 117
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable compilationHelper in line 56
   variable COMPILE_TIME_CONSTANT in line 120
      protection public
   variable NOT_COMPILE_TIME_CONSTANT in line 122
      protection public
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTest::NullnessPropagationChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 251
      protection public
      22 lines of code
      2 parameters
      4 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses variable context defined in com::google::errorprone::VisitorState
   variable AMBIGUOUS_CALL_FALLBACK_MATCHER in line 246
   variable AMBIGUOUS_CALL_MESSAGE in line 235
   variable nullnessPropagation in line 232
   variable TRIGGER_CALL_MATCHER in line 238
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/NullnessTest.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessTest
   function testDeducedValueWhenNotEqual() in line 83
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testGreatestLowerBound() in line 60
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function testLeastUpperBound() in line 37
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases1.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases1
   function conditionalAnd1(String,String) in line 74
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
   function conditionalAnd2(String) in line 84
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function conditionalNot(String) in line 28
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function conditionalOr1(String,String) in line 39
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
   function conditionalOr2(String,String) in line 54
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
   function conditionalOr3(String) in line 64
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function leastUpperBoundOfNonNullAndUnknown(String,boolean) in line 130
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function stringConcatenation(String,String) in line 138
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function ternary1(String) in line 95
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function ternary2(boolean,String) in line 102
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function valueOfComparisonItself() in line 109
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases2.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases2
   function booleanMethodInvocationIsDereference(String) in line 179
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function builtInConstants() in line 113
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function checkNotNullReturnsNonNull(String) in line 242
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function checkNotNullUpdatesVariableNullness(String) in line 247
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function circularInitialization() in line 92
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable CIRCULAR defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases2
   function classgetNamesMethods() in line 216
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function constants() in line 63
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
   function enumConstants() in line 139
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function explicitValueOf() in line 150
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function filesToStringReturnNonNull() in line 211
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function junit3AssertNotNullOneArgUpdatesVariableNullness(Object) in line 264
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function junit3AssertNotNullTwoArgUpdatesVariableNullness(String,Object) in line 270
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function junit4AssertNotNullOneArgUpdatesVariableNullness(Object) in line 278
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function junit4AssertNotNullTwoArgUpdatesVariableNullness(String,Object) in line 284
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function methodInvocationIsDereference(String) in line 172
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function optionalMethodsReturnNonNullUnlessAnnotated() in line 302
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function staticMethodInvocationIsNotDereferenceButDefersToOtherNewInformation(String) in line 205
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function staticMethodInvocationIsNotDereferenceButPreservesExistingInformation() in line 198
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function staticMethodInvocationIsNotDereferenceNonNullReturn(String) in line 192
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function staticMethodInvocationIsNotDereferenceNullableReturn(MyClass) in line 186
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function stringInstanceMethodsReturnNonNull() in line 236
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function stringsIsNullOrEmptyIsNullCheck(String) in line 292
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function stringStaticMethodsReturnNonNull() in line 226
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function verifyNotNullReturnsNonNull(String) in line 253
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function verifyNotNullUpdatesVariableNullness(String) in line 258
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable CIRCULAR in line 90
      protection public
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases2::MyClass
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases2::MyBigInteger
   inherits from java::math::BigInteger
   function valueOf(long) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable CIRCLE in line 101
      protection public
   variable ONE in line 99
      protection public
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases2::MyEnum
   function instance() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueOf(char) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable NOT_COMPILE_TIME_CONSTANT in line 131
      protection public
   variable UNKNOWN_VALUE_CONSTANT in line 132
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases3.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases3
   function assignment(String) in line 105
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
   function assignmentExpressionValue() in line 127
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
   function autoboxed() in line 69
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function autounbox() in line 88
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function boxedIntReturningMethod() in line 207
      3 lines of code
      0 parameters
      1 conditional paths
   function boxedPrimitives() in line 181
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function casts() in line 28
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function inc() in line 228
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
   function intReturningMethod() in line 211
      3 lines of code
      0 parameters
      1 conditional paths
   function literals() in line 44
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
   function localVariable() in line 158
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
   function loop1() in line 248
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function loop2() in line 257
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
   function methodInvocation() in line 199
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function intReturningMethod() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases3
      uses function stringReturningMethod() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases3
   function nullableAssignmentToPrimitiveVariableExpressionValue() in line 191
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function boxedIntReturningMethod() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases3
   function objectCreation(Object) in line 219
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function parameter(String,int) in line 96
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function stringReturningMethod() in line 215
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases4.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases4
   function equalBothNonNull() in line 66
      protection public
      39 lines of code
      0 parameters
      4 conditional paths
   function equalBothNull() in line 26
      protection public
      39 lines of code
      0 parameters
      4 conditional paths
   function equalOneNullableOtherNonNull(String) in line 218
      protection public
      55 lines of code
      1 parameters
      5 conditional paths
   function equalOneNullableOtherNull(String) in line 162
      protection public
      55 lines of code
      1 parameters
      5 conditional paths
   function equalOneNullOtherNonNull() in line 106
      protection public
      55 lines of code
      0 parameters
      5 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases5.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases5
   function notEqualBothNonNull() in line 66
      protection public
      39 lines of code
      0 parameters
      4 conditional paths
   function notEqualBothNull() in line 26
      protection public
      39 lines of code
      0 parameters
      4 conditional paths
   function notEqualOneNullableOtherNonNull(String) in line 218
      protection public
      55 lines of code
      1 parameters
      5 conditional paths
   function notEqualOneNullableOtherNull(String) in line 162
      protection public
      55 lines of code
      1 parameters
      5 conditional paths
   function notEqualOneNullOtherNonNull() in line 106
      protection public
      55 lines of code
      0 parameters
      5 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases6.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases6
   function bitwiseOperations() in line 38
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function bitwiseOperationsAreDereferences(Integer) in line 49
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function nonCompileTimeConstantCapturedVariable() in line 176
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function numercialComparisons() in line 102
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function numercialOperations() in line 61
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
   function numericalComparisonsAreDereferences(Integer,Integer) in line 113
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function numericalOperationsAreDereferences(Integer) in line 92
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function sameNameImmediatelyShadowed() in line 133
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function sameNameLaterShadowed() in line 144
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function sameNameShadowedThenUnshadowed() in line 159
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function vanillaVisitNode() in line 127
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases6::MyEnum
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases6::HasStaticFields
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases7.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7
   function assignmentToFieldExpressionValue() in line 148
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function assignmentToPrimitiveFieldExpressionValue() in line 154
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function assignmentToStaticImportedFieldExpressionValue() in line 160
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function assignmentToStaticImportedPrimitiveFieldExpressionValue() in line 167
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function boxedIntReturningMethod() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7
   function boxedIntReturningMethod() in line 50
      3 lines of code
      0 parameters
      1 conditional paths
   function chainedFieldAssignmentIsDereference(MyClass) in line 110
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function field() in line 54
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable i defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7
      uses variable str defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7
      uses variable obj defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7
   function fieldAccessIsDereference(MyClass) in line 84
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable i defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7
   function fieldAssignmentIsDereference(MyClass) in line 103
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function fieldQualifiedByOtherVar() in line 75
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable i defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7
   function fieldQualifiedByThis() in line 68
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function fieldValuesMayChange() in line 137
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function nullableAssignmentToPrimitiveFieldExpressionValue() in line 172
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function boxedIntReturningMethod() defined in com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7
   function staticFieldAccessIsNotDereferenceButPreservesExistingInformation() in line 130
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function staticFieldAccessIsNotDereferenceNonNullReturn(MyEnum) in line 97
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function staticFieldAccessIsNotDereferenceNullableReturn(HasStaticFields) in line 91
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function staticFieldAssignmentIsNotDereferenceNonNullReturn(HasStaticFields) in line 124
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function staticFieldAssignmentIsNotDereferenceNullableReturn(HasStaticFields) in line 118
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable i in line 46
   variable obj in line 48
   variable str in line 47
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7::MyClass
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7::MyContainerClass
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7::MyEnum
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases7::HasStaticFields
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/dataflow/nullnesspropagation/testdata/NullnessPropagationTransferCases8.java
module com::google::errorprone::dataflow::nullnesspropagation::NullnessPropagationTransferCases8
   function caughtException() in line 26
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/DiagnosticKindTest.java
module com::google::errorprone::DiagnosticKindTest
   function setUp() in line 65
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function named(String) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
      uses function listenToDiagnostics(DiagnosticListener<?super JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
   function testError() in line 84
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses variable WARNING defined in com::google::errorprone::BugPattern::SeverityLevel
   function testSuggestion() in line 133
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function testWarning() in line 108
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forSourceLines(String,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses variable SUGGESTION defined in com::google::errorprone::BugPattern::SeverityLevel
   variable compilerBuilder in line 62
   variable diagnosticHelper in line 61
   variable TEST_CODE in line 53
module com::google::errorprone::DiagnosticKindTest::ErrorChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 78
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::DiagnosticKindTest::WarningChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 102
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::DiagnosticKindTest::SuggestionChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 127
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/DiagnosticTestHelper.java
module com::google::errorprone::DiagnosticTestHelper
   function assertHasDiagnosticOnAllMatchingLines(JavaFileObject,LookForCheckNameInDiagnostic) in line 283
      protection public
      67 lines of code
      2 parameters
      11 conditional paths
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses variable BUG_MARKER_COMMENT_INLINE defined in com::google::errorprone::DiagnosticTestHelper
      uses function extractPatterns(String,BufferedReader,String) defined in com::google::errorprone::DiagnosticTestHelper
      uses variable BUG_MARKER_COMMENT_LOOKUP defined in com::google::errorprone::DiagnosticTestHelper
      uses variable expectedErrorMsgs defined in com::google::errorprone::DiagnosticTestHelper
      uses variable usedLookupKeys defined in com::google::errorprone::DiagnosticTestHelper
      uses function diagnosticOnLine(final URI,final long) defined in com::google::errorprone::DiagnosticTestHelper
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable checkName defined in com::google::errorprone::DiagnosticTestHelper
   function clearDiagnostics() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses function clear() defined in com::google::errorprone::DiagnosticTestHelper::ClearableDiagnosticCollector
   function describe() in line 96
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function diagnosticLineAndColumn(final long,final long) in line 109
      protection public
      31 lines of code
      2 parameters
      3 conditional paths
   function diagnosticMessage(final Matcher< String >) in line 220
      protection public
      21 lines of code
      1 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function diagnosticOnLine(final URI,final long) in line 141
      protection public
      34 lines of code
      2 parameters
      4 conditional paths
   function diagnosticOnLine(final URI,final long,final Predicate<?super String >) in line 176
      protection public
      42 lines of code
      3 parameters
      5 conditional paths
   function expectErrorMessage(String,Predicate<?super String >) in line 271
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable expectedErrorMsgs defined in com::google::errorprone::DiagnosticTestHelper
   function extractPatterns(String,BufferedReader,String) in line 365
      19 lines of code
      3 parameters
      3 conditional paths
   function getDiagnostics() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper::ClearableDiagnosticCollector
   function getUnusedLookupKeys() in line 352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedErrorMsgs defined in com::google::errorprone::DiagnosticTestHelper
      uses variable usedLookupKeys defined in com::google::errorprone::DiagnosticTestHelper
   function suggestsRemovalOfLine(URI,int) in line 81
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function diagnosticOnLine(final URI,final long) defined in com::google::errorprone::DiagnosticTestHelper
      uses function diagnosticMessage(final Matcher< String >) defined in com::google::errorprone::DiagnosticTestHelper
   function DiagnosticTestHelper() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DiagnosticTestHelper(String) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable checkName defined in com::google::errorprone::DiagnosticTestHelper
   variable BUG_MARKER_COMMENT_INLINE in line 250
   variable BUG_MARKER_COMMENT_LOOKUP in line 251
   variable checkName in line 60
   variable collector in line 78
      protection public
   variable expectedErrorMsgs in line 62
   variable usedLookupKeys in line 252
module com::google::errorprone::DiagnosticTestHelper::LookForCheckNameInDiagnostic
   variable YES in line 255
      protection public
module com::google::errorprone::DiagnosticTestHelper::SimpleStringContains
   inherits from com::google::common::base::Predicate
   function apply(String) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pattern defined in com::google::errorprone::DiagnosticTestHelper::SimpleStringContains
   function toString() in line 398
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in com::google::errorprone::DiagnosticTestHelper::SimpleStringContains
   variable pattern in line 386
module com::google::errorprone::DiagnosticTestHelper::ClearableDiagnosticCollector
   inherits from javax::tools::DiagnosticListener
   function clear() in line 415
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDiagnostics() in line 411
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function report(Diagnostic<?extends S >) in line 407
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable diagnostics in line 404
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/DogfoodErrorProne.java
module com::google::errorprone::DogfoodErrorProne
   function addSourcesUnder(File,List< String >) in line 51
      15 lines of code
      2 parameters
      3 conditional paths
   function compile() in line 35
      5 lines of code
      0 parameters
      1 conditional paths
      uses function findSources() defined in com::google::errorprone::DogfoodErrorProne
   function findSources() in line 41
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addSourcesUnder(File,List< String >) defined in com::google::errorprone::DogfoodErrorProne
   function main(String[]) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compile() defined in com::google::errorprone::DogfoodErrorProne
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/ErrorProneCompilerIntegrationTest.java
module com::google::errorprone::ErrorProneCompilerIntegrationTest
   function annotationProcessingWorks() in line 198
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function cannotSuppressGeneratedError() in line 459
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function crashSourcePosition() in line 497
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
   function fileWithError() in line 107
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function describe() defined in com::google::errorprone::DiagnosticTestHelper
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function fileWithMultipleTopLevelClasses() in line 135
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function fileWithMultipleTopLevelClassesExtends() in line 143
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function fileWithMultipleTopLevelClassesExtendsWithError() in line 155
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function describe() defined in com::google::errorprone::DiagnosticTestHelper
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function fileWithWarning() in line 120
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function describe() defined in com::google::errorprone::DiagnosticTestHelper
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function flagEnablesCheck() in line 340
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function ignoreGeneratedConstructors() in line 270
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function ignoreGeneratedSuperInvocations() in line 308
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function invalidFlagCausesCmdErrResult() in line 327
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function maturityIsResetOnNextCompilation() in line 392
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function propagatesScannerThroughAnnotationProcessingRounds() in line 222
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function reportReadyForAnalysisOnce() in line 209
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function setUp() in line 96
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function named(String) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
      uses function redirectOutputTo(PrintWriter) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
      uses function listenToDiagnostics(DiagnosticListener<?super JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
   function severityIsResetOnNextCompilation() in line 368
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function suppressGeneratedWarning() in line 419
      protection public
      38 lines of code
      0 parameters
      1 conditional paths
   function unhandledExceptionsAreReportedWithoutBugParadeLink() in line 179
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   variable compilerBuilder in line 92
   variable diagnosticHelper in line 90
   variable outputStream in line 91
module com::google::errorprone::ErrorProneCompilerIntegrationTest::Throwing
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ExpressionStatementTreeMatcher
   function matchExpressionStatement(ExpressionStatementTree,VisitorState) in line 173
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::ErrorProneCompilerIntegrationTest::ScannerCheckingProcessor
   inherits from javax::annotation::processing::AbstractProcessor
   function getSupportedSourceVersion() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function process(Set<?extends TypeElement >,RoundEnvironment) in line 253
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function ScannerCheckingProcessor(ErrorProneScanner) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable expected in line 241
module com::google::errorprone::ErrorProneCompilerIntegrationTest::ConstructorMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function matchMethod(MethodTree,VisitorState) in line 264
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::ErrorProneCompilerIntegrationTest::SuperCallMatcher
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodInvocationTreeMatcher
   function matchMethodInvocation(MethodInvocationTree,VisitorState) in line 289
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::ErrorProneCompilerIntegrationTest::CrashOnReturn
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 491
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/ErrorProneInMemoryFileManager.java
module com::google::errorprone::ErrorProneInMemoryFileManager
   inherits from com::sun::tools::javac::file::JavacFileManager
   function forResource(Class<?>,String) in line 89
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses variable fileSystem defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses variable clazz defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function forResource(String) in line 112
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable clazz defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function forResource(Class<?>,String) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function forResources(Class<?>,String...) in line 78
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function forResource(Class<?>,String) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses variable clazz defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function forSourceLines(String,String...) in line 121
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable fileSystem defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function ErrorProneInMemoryFileManager() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ErrorProneInMemoryFileManager(Class<?>) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable clazz defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function ErrorProneInMemoryFileManager(Optional< Class<?>>) in line 69
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable clazz defined in com::google::errorprone::ErrorProneInMemoryFileManager
   variable clazz in line 46
   variable fileSystem in line 45
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/ErrorProneJavaCompilerTest.java
module com::google::errorprone::ErrorProneJavaCompilerTest
   function doCompile(Class<?>,List< String >,List< String >,List< Class<?extends BugChecker >>) in line 432
      26 lines of code
      4 parameters
      1 conditional paths
      uses function getTask(Writer,JavaFileManager,DiagnosticListener<?super JavaFileObject >,Iterable< String >,Iterable< String >,Iterable<?extends JavaFileObject >) defined in com::google::errorprone::ErrorProneJavaCompiler
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
   function fileWithErrorIntegrationTest() in line 138
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable succeeded defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable diagnosticHelper defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function testBadFlagThrowsException() in line 236
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
   function testCantDisableNonDisableableCheck() in line 256
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
   function testFixGeneratedConstructor() in line 407
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable succeeded defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses variable diagnosticHelper defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function testGetStandardJavaFileManager() in line 105
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getStandardFileManager(DiagnosticListener<?super JavaFileObject >,Locale,Charset) defined in com::google::errorprone::ErrorProneJavaCompiler
   function testIsSupportedOption() in line 87
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function isSupportedOption(String) defined in com::google::errorprone::ErrorProneJavaCompiler
   function testMaturityResetsAfterOverride() in line 344
      protection public
      41 lines of code
      0 parameters
      1 conditional paths
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function clearDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function testRun() in line 117
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function run(InputStream,OutputStream,OutputStream,String...) defined in com::google::errorprone::ErrorProneJavaCompiler
   function testSeverityResetsAfterOverride() in line 295
      protection public
      47 lines of code
      0 parameters
      1 conditional paths
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function clearDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function testSourceVersion() in line 131
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceVersions() defined in com::google::errorprone::ErrorProneJavaCompiler
   function testWithCheckDemotedToWarning() in line 191
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable succeeded defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses variable diagnosticHelper defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function testWithCheckPromotedToError() in line 168
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable succeeded defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses variable diagnosticHelper defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function testWithCustomCheckNegative() in line 284
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable succeeded defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses variable diagnosticHelper defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   function testWithCustomCheckPositive() in line 270
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable succeeded defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses variable diagnosticHelper defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function testWithDisabledCheck() in line 151
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable succeeded defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
   function testWithNonDefaultCheckOn() in line 214
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable succeeded defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses variable diagnosticHelper defined in com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   variable tempDir in line 84
      protection public
module com::google::errorprone::ErrorProneJavaCompilerTest::JavaFileObjectDiagnosticListener
   inherits from javax::tools::DiagnosticListener
module com::google::errorprone::ErrorProneJavaCompilerTest::UnsuppressibleArrayEquals
   inherits from com::google::errorprone::bugpatterns::ArrayEquals
module com::google::errorprone::ErrorProneJavaCompilerTest::DeleteMethod
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ClassTreeMatcher
   function matchClass(ClassTree,VisitorState) in line 399
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::ErrorProneJavaCompilerTest::CompilationResult
   function CompilationResult(boolean,DiagnosticTestHelper) in line 426
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable diagnosticHelper in line 424
      protection public
   variable succeeded in line 423
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/ErrorProneOptionsTest.java
module com::google::errorprone::ErrorProneOptionsTest
   function combineErrorProneFlagsWithNonErrorProneFlags() in line 84
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function getRemainingArgs() defined in com::google::errorprone::ErrorProneOptions
      uses variable WARN defined in com::google::errorprone::ErrorProneOptions::Severity
      uses variable ERROR defined in com::google::errorprone::ErrorProneOptions::Severity
      uses function getSeverityMap() defined in com::google::errorprone::ErrorProneOptions
   function handlesErrorProneFlags() in line 65
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT defined in com::google::errorprone::ErrorProneOptions::Severity
      uses function getSeverityMap() defined in com::google::errorprone::ErrorProneOptions
      uses variable OFF defined in com::google::errorprone::ErrorProneOptions::Severity
      uses variable WARN defined in com::google::errorprone::ErrorProneOptions::Severity
   function lastCheckFlagWins() in line 101
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable OFF defined in com::google::errorprone::ErrorProneOptions::Severity
      uses function getSeverityMap() defined in com::google::errorprone::ErrorProneOptions
   function malformedOptionThrowsProperException() in line 49
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
   function nonErrorProneFlagsPlacedInRemainingArgs() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getRemainingArgs() defined in com::google::errorprone::ErrorProneOptions
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/ErrorProneTestCompiler.java
module com::google::errorprone::ErrorProneTestCompiler
   function compile(List< JavaFileObject >) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function compile(String[],List< JavaFileObject >) in line 82
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
   function compile(List< JavaFileObject >,List<?extends Processor >) in line 86
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
   function compile(String[],List< JavaFileObject >,List<?extends Processor >) in line 90
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable compiler defined in com::google::errorprone::ErrorProneTestCompiler
      uses function run(String[]) defined in com::google::errorprone::ErrorProneCompiler
      uses function fileManager() defined in com::google::errorprone::ErrorProneTestCompiler
   function fileManager() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ErrorProneTestCompiler(ErrorProneCompiler) in line 74
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable compiler defined in com::google::errorprone::ErrorProneTestCompiler
   variable compiler in line 67
   variable fileManager in line 68
module com::google::errorprone::ErrorProneTestCompiler::Builder
   function build() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function ErrorProneTestCompiler(ErrorProneCompiler) defined in com::google::errorprone::ErrorProneTestCompiler
   function listenToDiagnostics(DiagnosticListener<?super JavaFileObject >) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function named(String) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function redirectOutputTo(PrintWriter) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function report(ScannerSupplier) in line 51
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/fixes/AppliedFixTest.java
module com::google::errorprone::fixes::AppliedFixTest
   function shouldApplySingleFixOnALine() in line 72
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function apply(Fix) defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses function getNewCodeSnippet() defined in com::google::errorprone::fixes::AppliedFix
   function shouldReportOnlyTheChangedLineInNewSnippet() in line 82
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function apply(Fix) defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses function prefixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function postfixWith(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function getNewCodeSnippet() defined in com::google::errorprone::fixes::AppliedFix
   function shouldReturnNullOnImportOnlyFix() in line 105
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function apply(Fix) defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function shouldThrowExceptionOnEmptyFix() in line 98
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function apply(Fix) defined in com::google::errorprone::fixes::AppliedFix::Applier
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
   function shouldThrowExceptionOnIllegalRange() in line 113
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function apply(Fix) defined in com::google::errorprone::fixes::AppliedFix::Applier
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/fixes/SuggestedFixTest.java
module com::google::errorprone::fixes::SuggestedFixTest
   function addModifiers() in line 107
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function addModifiersFirst() in line 128
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function qualifiedName_imported() in line 202
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function qualifiedName_notImported() in line 217
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function qualifiedName_Object() in line 188
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function qualifiedName_typeVariable() in line 231
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function removeModifiers() in line 143
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
      uses variable ONE_OFF defined in com::google::errorprone::BugPattern::Category
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
module com::google::errorprone::fixes::SuggestedFixTest::EditModifiers
   function kind() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::fixes::SuggestedFixTest::EditModifiers::EditKind
   variable ADD in line 60
      protection public
   variable REMOVE in line 62
      protection public
module com::google::errorprone::fixes::SuggestedFixTest::EditModifiersChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::VariableTreeMatcher
   function createModifiersByName() in line 76
      7 lines of code
      0 parameters
      2 conditional paths
   function matchVariable(VariableTree,VisitorState) in line 85
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
      uses function value() defined in com::google::errorprone::fixes::SuggestedFixTest::EditModifiers
      uses function kind() defined in com::google::errorprone::fixes::SuggestedFixTest::EditModifiers
module com::google::errorprone::fixes::SuggestedFixTest::CastReturn
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 173
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
      uses function getPath() defined in com::google::errorprone::VisitorState
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/MatcherChecker.java
module com::google::errorprone::MatcherChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ExpressionStatementTreeMatcher
   abstract class
   function matchExpressionStatement(ExpressionStatementTree,VisitorState) in line 47
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable expressionStatement defined in com::google::errorprone::MatcherChecker
      uses variable matcher defined in com::google::errorprone::MatcherChecker
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function describeMatch(Tree,Fix) defined in com::google::errorprone::bugpatterns::BugChecker
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function MatcherChecker(String,Matcher< Tree >) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable expressionStatement defined in com::google::errorprone::MatcherChecker
      uses variable matcher defined in com::google::errorprone::MatcherChecker
   variable expressionStatement in line 38
   variable matcher in line 39
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/AnnotationDoesNotHaveArgumentTest.java
module com::google::errorprone::matchers::AnnotationDoesNotHaveArgumentTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function annotationMatches(final boolean) in line 84
      10 lines of code
      1 parameters
      1 conditional paths
      uses function matches(AnnotationTree,VisitorState) defined in com::google::errorprone::matchers::AnnotationDoesNotHaveArgument
   function createAnnotation() in line 40
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function doesNotMatchWhenArgumentIsPresent_Explicit() in line 77
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function doesNotMatchWhenArgumentIsPresent_Implicit() in line 69
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function matchesWhenArgumentIsNotPresent() in line 48
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function matchesWhenArgumentIsNotPresent_OtherArgumentPresent() in line 56
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/AnnotationHasArgumentWithValueTest.java
module com::google::errorprone::matchers::AnnotationHasArgumentWithValueTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function annotationMatches(final boolean,final AnnotationHasArgumentWithValue) in line 79
      9 lines of code
      2 parameters
      1 conditional paths
      uses function matches(AnnotationTree,VisitorState) defined in com::google::errorprone::matchers::AnnotationHasArgumentWithValue
   function arrayValuedElement() in line 72
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function notMatches() in line 64
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function setUp() in line 37
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testMatches() in line 45
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testMatchesExtraParentheses() in line 53
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/AnnotationTest.java
module com::google::errorprone::matchers::AnnotationTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function matchOneAnnotationsOnClass() in line 172
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function nodeWithAnnotationMatches(final boolean,final Annotation< Tree >) in line 306
      30 lines of code
      2 parameters
      3 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in ChildMultiMatcher< T, AnnotationTree >
   function setUp() in line 52
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAllAnnotationsOnClass() in line 158
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnAnnotation() in line 279
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnConstructor() in line 249
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnEnum() in line 196
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnField() in line 208
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnInterface() in line 184
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnLocalVariable() in line 263
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnMethod() in line 222
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnPackage() in line 291
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchAnnotationOnParameter() in line 236
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchSingleAnnotationOnClass() in line 86
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchSingleFullyQualifiedAnnotationOnClass() in line 98
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchSingleNestedAnnotationOnClass() in line 110
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchNoAnnotations() in line 75
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchNonmatchingNestedAnnotationOnClass() in line 146
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchNonmatchingSingleAnnotationOnClass() in line 122
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchNonmatchingSingleFullyQualifiedAnnotationOnClass() in line 134
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function tearDown() in line 68
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
module com::google::errorprone::matchers::AnnotationTest::ScannerTest
   inherits from com::google::errorprone::scanner::Scanner
   abstract class
   function assertDone() in line 303
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/CompilerBasedAbstractTest.java
module com::google::errorprone::matchers::CompilerBasedAbstractTest
   function assertCompiles(ScannerSupplier) in line 56
      8 lines of code
      1 parameters
      2 conditional paths
      uses function expectResult(Result) defined in com::google::errorprone::CompilationTestHelper
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function assertCompiles(final Scanner) in line 65
      3 lines of code
      1 parameters
      1 conditional paths
      uses function assertCompiles(ScannerSupplier) defined in com::google::errorprone::matchers::CompilerBasedAbstractTest
   function clearSourceFiles() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeFile(String,String...) in line 52
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::matchers::CompilerBasedAbstractTest::FileToCompile
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/CompileTimeConstantExpressionMatcherTest.java
module com::google::errorprone::matchers::CompileTimeConstantExpressionMatcherTest
   function assertCompilerMatchesOnAssignment(final Map< String, Boolean >,String...) in line 181
      25 lines of code
      2 parameters
      3 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function testCompileTimeConstantAnnotationOnlyAllowedOnParameter() in line 175
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testMatches_doesNotMatchNonLiterals() in line 95
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function testMatches_finalCompileTimeConstantConstructorParameters() in line 144
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
   function testMatches_finalCompileTimeConstantMethodParameters() in line 120
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
   function testMatches_matchesLiteralsAndStaticFinals() in line 47
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
   function testMatches_nullLiteral() in line 73
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/CompoundAssignmentTest.java
module com::google::errorprone::matchers::CompoundAssignmentTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function cannotConstructWithBinaryOperator() in line 53
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function cannotConstructWithInvalidKind() in line 42
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function compoundAssignmentMatches(final boolean,final CompoundAssignment) in line 136
      11 lines of code
      2 parameters
      1 conditional paths
      uses function matches(CompoundAssignmentTree,VisitorState) defined in com::google::errorprone::matchers::CompoundAssignment
   function shouldMatch() in line 64
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchWhenLeftOperandMatcherFails() in line 101
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchWhenOperatorDiffers() in line 83
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchWhenRightOperandMatcherFails() in line 119
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/ConstructorOfClassTest.java
module com::google::errorprone::matchers::ConstructorOfClassTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function classMatches(final boolean,final ConstructorOfClass) in line 118
      22 lines of code
      2 parameters
      2 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::ChildMultiMatcher
   function setUp() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchSingleConstructor() in line 62
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable PRIVATE defined in com::google::errorprone::matchers::MethodVisibility::Visibility
   function shouldNotMatchNoConstructors() in line 75
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable PRIVATE defined in com::google::errorprone::matchers::MethodVisibility::Visibility
   function shouldNotMatchNonmatchingConstructor() in line 87
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable PRIVATE defined in com::google::errorprone::matchers::MethodVisibility::Visibility
   function tearDown() in line 55
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function testMultipleConstructors() in line 100
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable PRIVATE defined in com::google::errorprone::matchers::MethodVisibility::Visibility
module com::google::errorprone::matchers::ConstructorOfClassTest::ScannerTest
   inherits from com::google::errorprone::scanner::Scanner
   abstract class
   function assertDone() in line 115
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/DescendantOfAbstractTest.java
module com::google::errorprone::matchers::DescendantOfAbstractTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function memberSelectMatches(final boolean,final DescendantOf) in line 63
      23 lines of code
      2 parameters
      2 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses function matches(ExpressionTree,VisitorState) defined in com::google::errorprone::matchers::DescendantOf
      uses function assertDone() defined in com::google::errorprone::matchers::DescendantOfAbstractTest::ScannerTest
   function setUp() in line 38
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function writeFile(String,String...) defined in com::google::errorprone::matchers::CompilerBasedAbstractTest
   function tearDown() in line 53
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
module com::google::errorprone::matchers::DescendantOfAbstractTest::ScannerTest
   inherits from com::google::errorprone::scanner::Scanner
   abstract class
   function assertDone() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/DescendantOfTest.java
module com::google::errorprone::matchers::DescendantOfTest
   inherits from com::google::errorprone::matchers::DescendantOfAbstractTest
   function shouldMatchBareOverriddenMethod() in line 58
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchExactMethod() in line 30
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchOverriddenMethod() in line 44
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchDifferentMethod() in line 74
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchStaticMethod() in line 89
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/DescendantOfTransitiveTest.java
module com::google::errorprone::matchers::DescendantOfTransitiveTest
   inherits from com::google::errorprone::matchers::DescendantOfAbstractTest
   function assertCompilesWithLocalDisk(Scanner) in line 68
      13 lines of code
      1 parameters
      1 conditional paths
      uses function report(ScannerSupplier) defined in com::google::errorprone::ErrorProneCompiler::Builder
      uses function run(String[]) defined in com::google::errorprone::ErrorProneCompiler
   function setUp() in line 83
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchTransitively() in line 105
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
   function tearDown() in line 98
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function writeFileToLocalDisk(String,String...) in line 57
      10 lines of code
      2 parameters
      2 conditional paths
   variable tempDir in line 53
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/DescriptionTest.java
module com::google::errorprone::matchers::DescriptionTest
   function testCustomDescription() in line 76
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable checkName defined in com::google::errorprone::matchers::Description
      uses function getMessageWithoutCheckName() defined in com::google::errorprone::matchers::Description
      uses function getMessage() defined in com::google::errorprone::matchers::Description
   function testCustomLink() in line 102
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getMessage() defined in com::google::errorprone::matchers::Description
   function testDescriptionFromBugPattern() in line 66
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable checkName defined in com::google::errorprone::matchers::Description
      uses function getMessageWithoutCheckName() defined in com::google::errorprone::matchers::Description
      uses function getMessage() defined in com::google::errorprone::matchers::Description
   variable URL in line 62
module com::google::errorprone::matchers::DescriptionTest::MockTree
   inherits from com::sun::source::tree::Tree
   function getKind() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::matchers::DescriptionTest::MyChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
module com::google::errorprone::matchers::DescriptionTest::CustomLinkChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/EnclosingTest.java
module com::google::errorprone::matchers::EnclosingTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function fooIsChildOfLoopCondition(boolean) in line 183
      3 lines of code
      1 parameters
      1 conditional paths
   function fooIsUsedUnderLoopCondition(boolean) in line 179
      3 lines of code
      1 parameters
      1 conditional paths
   function fooIsUsedUnderLoopStatement(boolean) in line 187
      3 lines of code
      1 parameters
      1 conditional paths
   function fooIsUsedUnderLoopStatementAccordingToBlockOrCase(boolean) in line 191
      3 lines of code
      1 parameters
      1 conditional paths
   function fooMatches(final boolean,final Matcher< Tree >) in line 195
      22 lines of code
      2 parameters
      1 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses function getName(String) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function tearDown() in line 87
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function usedAsChildTreeOfLoopCondition() in line 111
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function usedDirectlyInLoopCondition() in line 95
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function usedElsewhereInLoop() in line 161
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function usedInStatement() in line 143
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function usedInSubTreeOfLoopCondition() in line 127
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   variable CHILD_OF_LOOP_CONDITION in line 79
   variable ENCLOSED_IN_LOOP_CONDITION in line 78
   variable IS_LOOP_CONDITION in line 65
   variable IS_LOOP_STATEMENT in line 71
   variable USED_UNDER_LOOP_STATEMENT in line 80
   variable USED_UNDER_LOOP_STATEMENT_ACCORDING_TO_BLOCK_OR_CASE in line 81
module com::google::errorprone::matchers::EnclosingTest::IsInterestingLoopSubNode
   inherits from Matcher< T >
   abstract class
   function matches(T,VisitorState) in line 54
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getPath() defined in com::google::errorprone::VisitorState
module com::google::errorprone::matchers::EnclosingTest::ScannerTest
   inherits from com::google::errorprone::scanner::Scanner
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/HasIdentifierTest.java
module com::google::errorprone::matchers::HasIdentifierTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function doesNotThrowWhenMatcherIsAppliedDirectlyToLiteral() in line 125
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function literalHasIdentifierMatching(final boolean,final MultiMatcher< Tree, IdentifierTree >) in line 168
      22 lines of code
      2 parameters
      2 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
   function methodHasIdentifierMatching(final boolean,final MultiMatcher< Tree, IdentifierTree >) in line 145
      22 lines of code
      2 parameters
      2 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
   function shouldMatchLocalVar() in line 69
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchParam() in line 87
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchThis() in line 53
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchDeclaration() in line 104
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function tearDown() in line 46
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
module com::google::errorprone::matchers::HasIdentifierTest::ScannerTest
   inherits from com::google::errorprone::scanner::Scanner
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/InstanceMethodTest.java
module com::google::errorprone::matchers::InstanceMethodTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function memberSelectMatches(final boolean,final InstanceMethod) in line 116
      12 lines of code
      2 parameters
      2 conditional paths
      uses function matches(ExpressionTree,VisitorState) defined in com::google::errorprone::matchers::InstanceMethod
   function shouldMatch() in line 39
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchWildCard() in line 53
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchStaticMethod() in line 95
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchWhenMatcherFails() in line 81
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchWhenMethodNamesDiffer() in line 67
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/MatchersTest.java
module com::google::errorprone::matchers::MatchersTest
   function inLoopShouldMatchInDoLoop() in line 72
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inLoopShouldMatchInEnhancedForLoop() in line 102
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inLoopShouldMatchInForLoop() in line 87
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inLoopShouldMatchInInitializerInLoop() in line 131
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inLoopShouldMatchInWhileLoop() in line 57
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inLoopShouldNotMatchInAnonymousInnerClassDefinedInLoop() in line 148
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function inLoopShouldNotMatchInInitializerWithoutLoop() in line 118
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function methodReturnsNonPrimitiveType() in line 226
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function methodReturnsSubtype() in line 188
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function methodReturnsType() in line 207
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function methodTreeCheckerSupplier(Matcher< MethodTree >) in line 254
      3 lines of code
      1 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
      uses variable NO_MATCH defined in com::google::errorprone::matchers::Description
   function methodWithClassAndName() in line 173
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function setUp() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable compilationHelper in line 49
module com::google::errorprone::matchers::MatchersTest::InLoopChecker
   inherits from com::google::errorprone::MatcherChecker
   function InLoopChecker() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::matchers::MatchersTest::MethodTreeChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::MethodTreeMatcher
   function matchMethod(MethodTree,VisitorState) in line 274
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function MethodTreeChecker(Matcher< MethodTree >) in line 269
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable matcher in line 267
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/MethodHasParametersTest.java
module com::google::errorprone::matchers::MethodHasParametersTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function methodMatches(final boolean,final MethodHasParameters) in line 124
      25 lines of code
      2 parameters
      2 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::ChildMultiMatcher
      uses function getName(String) defined in com::google::errorprone::VisitorState
   function setUp() in line 48
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchSingleParameter() in line 68
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchNonmatchingParameter() in line 94
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchNoParameters() in line 81
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function tearDown() in line 61
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function testMultipleParameters() in line 107
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::matchers::MethodHasParametersTest::ScannerTest
   inherits from com::google::errorprone::scanner::Scanner
   abstract class
   function assertDone() in line 121
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullNextTokenTest.java
module com::google::errorprone::matchers::MethodReturnsNonNullNextTokenTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function methodInvocationMatches(final boolean,final Matcher< ExpressionTree >) in line 86
      13 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function shouldMatch() in line 39
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchOtherMethod() in line 53
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchOverridenMethod() in line 67
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullStringTest.java
module com::google::errorprone::matchers::MethodReturnsNonNullStringTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function methodInvocationMatches(final boolean,final Matcher< ExpressionTree >) in line 91
      13 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function shouldMatchInstanceMethod() in line 39
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchStaticMethod() in line 52
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchConstructorInvocation() in line 64
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchOtherClasses() in line 77
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/MethodReturnsNonNullToStringTest.java
module com::google::errorprone::matchers::MethodReturnsNonNullToStringTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function methodInvocationMatches(final boolean,final Matcher< ExpressionTree >) in line 114
      13 lines of code
      2 parameters
      2 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function shoudlNotMatchWhenMethodSignatureDiffers() in line 102
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldMatch() in line 39
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchBareOverride() in line 72
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchDescendants() in line 52
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchWhenMethodNameDiffers() in line 87
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/MethodReturnsTest.java
module com::google::errorprone::matchers::MethodReturnsTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function fooReturnsType(final boolean,final String) in line 82
      22 lines of code
      2 parameters
      2 conditional paths
      uses function getTypeFromString(String) defined in com::google::errorprone::VisitorState
   function notReturnsString() in line 61
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function returnsInt() in line 70
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function returnsString() in line 52
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function tearDown() in line 45
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
module com::google::errorprone::matchers::MethodReturnsTest::ScannerTest
   inherits from com::google::errorprone::scanner::Scanner
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/NonNullLiteralTest.java
module com::google::errorprone::matchers::NonNullLiteralTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function nonNullLiteralMatches(final boolean,final Matcher< ExpressionTree >) in line 120
      26 lines of code
      2 parameters
      1 conditional paths
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function shouldMatchClassLiteral() in line 71
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchPrimitiveLiterals() in line 41
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchClassDeclaration() in line 84
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchMemberAccess() in line 97
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/StaticMethodTest.java
module com::google::errorprone::matchers::StaticMethodTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function methodInvocationMatches(final boolean,final StaticMethod) in line 148
      13 lines of code
      2 parameters
      2 conditional paths
      uses function matches(ExpressionTree,VisitorState) defined in com::google::errorprone::matchers::StaticMethod
   function setUp() in line 39
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchFullyQualifiedCallSite() in line 92
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchStaticImport() in line 136
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function shouldMatchUsingImportStatements() in line 57
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchInstanceMethod() in line 120
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function shouldNotMatchWhenPackageDiffers() in line 104
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function shouldOnlyMatchFullSignature() in line 74
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/matchers/StringLiteralTest.java
module com::google::errorprone::matchers::StringLiteralTest
   function matches() in line 36
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function notMatches() in line 42
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/NullAnnotationProcessor.java
module com::google::errorprone::NullAnnotationProcessor
   inherits from javax::annotation::processing::AbstractProcessor
   function getSupportedSourceVersion() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function process(Set<?extends TypeElement >,RoundEnvironment) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/AbstractUTreeTest.java
module com::google::errorprone::refaster::AbstractUTreeTest
   abstract class
   function assertInlines(String,UTree<?>) in line 66
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable inliner defined in com::google::errorprone::refaster::AbstractUTreeTest
   function assertInlines(String,UStatement) in line 76
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable inliner defined in com::google::errorprone::refaster::AbstractUTreeTest
   function assertUnifies(String,UTree<?>) in line 59
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function parseExpression(String) defined in com::google::errorprone::refaster::AbstractUTreeTest
      uses variable unifier defined in com::google::errorprone::refaster::AbstractUTreeTest
   function assertUnifiesAndInlines(String,UTree<?>) in line 54
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function assertUnifies(String,UTree<?>) defined in com::google::errorprone::refaster::AbstractUTreeTest
      uses function assertInlines(String,UTree<?>) defined in com::google::errorprone::refaster::AbstractUTreeTest
   function createContext() in line 47
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::AbstractUTreeTest
      uses variable unifier defined in com::google::errorprone::refaster::AbstractUTreeTest
      uses variable inliner defined in com::google::errorprone::refaster::AbstractUTreeTest
      uses function createInliner() defined in com::google::errorprone::refaster::Unifier
   function ident(final String) in line 98
      13 lines of code
      1 parameters
      1 conditional paths
   function parseExpression(String) in line 87
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable context defined in com::google::errorprone::refaster::AbstractUTreeTest
      uses variable inliner defined in com::google::errorprone::refaster::AbstractUTreeTest
      uses variable bindings defined in com::google::errorprone::refaster::Inliner
   variable context in line 42
   variable inliner in line 44
   variable unifier in line 43
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/BindingsTest.java
module com::google::errorprone::refaster::BindingsTest
   function testKeyClassesDistinct() in line 50
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function Key(String) defined in com::google::errorprone::refaster::Bindings::Key
   function testPutRestricts() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function put(Key<?>,Object) defined in com::google::errorprone::refaster::Bindings
      uses function Key(String) defined in com::google::errorprone::refaster::Bindings::Key
module com::google::errorprone::refaster::BindingsTest::Key
   inherits from Key< String >
module com::google::errorprone::refaster::BindingsTest::OtherKey
   inherits from Key< String >
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/ChoiceTest.java
module com::google::errorprone::refaster::ChoiceTest
   function testNone() in line 37
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testOr() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testThenChoose() in line 53
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testThenOption() in line 46
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/CodeTransformerTestHelper.java
module com::google::errorprone::refaster::CodeTransformerTestHelper
   abstract class
   function create(CodeTransformer) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function transform(JavaFileObject) in line 56
      protection public
      33 lines of code
      1 parameters
      2 conditional paths
      uses function apply(TreePath,Context,DescriptionListener) defined in com::google::errorprone::CodeTransformer
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function getSourceText() defined in com::google::errorprone::apply::SourceFile
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/CompilerBasedTest.java
module com::google::errorprone::refaster::CompilerBasedTest
   function compile(TreeScanner,JavaFileObject) in line 56
      24 lines of code
      2 parameters
      3 conditional paths
   function compile(TreeScanner,String...) in line 81
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compile(TreeScanner,JavaFileObject) defined in com::google::errorprone::refaster::CompilerBasedTest
   function compile(JavaFileObject) in line 85
      21 lines of code
      1 parameters
      2 conditional paths
      uses function compile(TreeScanner,JavaFileObject) defined in com::google::errorprone::refaster::CompilerBasedTest
   function compile(String...) in line 107
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compile(TreeScanner,JavaFileObject) defined in com::google::errorprone::refaster::CompilerBasedTest
   function getMethodDeclaration(String) in line 111
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methods defined in com::google::errorprone::refaster::CompilerBasedTest
   variable compilationUnits in line 53
   variable context in line 51
   variable methods in line 54
   variable sourceFile in line 52
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/DescriptionBasedDiffTest.java
module com::google::errorprone::refaster::DescriptionBasedDiffTest
   inherits from com::google::errorprone::refaster::CompilerBasedTest
   function addImport() in line 127
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function onDescribed(Description) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
   function noDiffs() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
   function oneDiff() in line 65
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function onDescribed(Description) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
   function prefixDiff() in line 84
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function onDescribed(Description) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
   function removeImport() in line 149
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function onDescribed(Description) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function removeImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
   function setUp() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function twoDiffs() in line 104
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function onDescribed(Description) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
   function twoDiffsWithImport() in line 169
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function onDescribed(Description) defined in com::google::errorprone::apply::DescriptionBasedDiff
      uses function replace(Tree,String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function addImport(String) defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses function build() defined in com::google::errorprone::fixes::SuggestedFix::Builder
      uses variable NOT_A_PROBLEM defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function applyDifferences(SourceFile) defined in com::google::errorprone::apply::DescriptionBasedDiff
   variable compilationUnit in line 39
   variable lines in line 41
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/Match.java
module com::google::errorprone::refaster::Match
   abstract class
   function create(TemplateMatch) in line 32
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getUnifier() defined in com::google::errorprone::refaster::TemplateMatch
      uses function getBindings() defined in com::google::errorprone::refaster::Unifier
   function create(Map< String, String >) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/RefasterRuleTest.java
module com::google::errorprone::refaster::RefasterRuleTest
   function fromSecondLevel() in line 31
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/TemplateIntegrationTest.java
module com::google::errorprone::refaster::TemplateIntegrationTest
   inherits from com::google::errorprone::refaster::CompilerBasedTest
   function anonymousClass() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function anyOf() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function array() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function assertions() in line 275
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function autoboxing() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function binary() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function blockPlaceholder() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function comparisonChain() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function diamond() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function expectTransforms(CodeTransformer,JavaFileObject,JavaFileObject) in line 66
      12 lines of code
      3 parameters
      1 conditional paths
      uses function transform(JavaFileObject) defined in com::google::errorprone::refaster::CodeTransformerTestHelper
   function explicitTypesPreserved() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function expressionPlaceholder() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function expressionPlaceholderAllowsIdentity() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function extractRefasterRule(JavaFileObject) in line 50
      15 lines of code
      1 parameters
      1 conditional paths
   function freeIdentWildcardCapture() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function genericPlaceholder() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ifFallthrough() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ifTemplate() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function implicitTypesInlined() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function importClassDirectly() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inferredThis() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInstance() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function labeledStatements() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function literal() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function mayOptionallyUse() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function methodInvocation() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function multibound() in line 240
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function multipleReferencesToIdentifier() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function oneLineToTwo() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parenthesesOptional() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function precedenceSensitive() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function repeated() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function returnPlaceholder() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function runTest(String) in line 83
      10 lines of code
      1 parameters
      1 conditional paths
   function samePackageImports() in line 280
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function staticField() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function topLevel() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function tryCatch() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function tryMultiCatch() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function twoLinesToOne() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function variableDecl() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function wildcard() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INPUT_DIR in line 80
   variable OUTPUT_DIR in line 81
   variable TEMPLATE_DIR in line 79
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/TemplatingTest.java
module com::google::errorprone::refaster::TemplatingTest
   inherits from com::google::errorprone::refaster::CompilerBasedTest
   function anonymousClass() in line 745
      protection public
      56 lines of code
      0 parameters
      1 conditional paths
   function anyOf() in line 222
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function arrayAccess() in line 45
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function arrayCast() in line 390
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function assignment() in line 596
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function binary() in line 61
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
   function conditional() in line 82
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function constructor() in line 440
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function doWhile() in line 327
      protection public
      36 lines of code
      0 parameters
      1 conditional paths
   function forEach() in line 689
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
   function forLoop() in line 456
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
   function forLoopNoCondition() in line 509
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
   function forLoopNoStart() in line 533
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function forLoopNoStep() in line 483
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
   function fullyQualifiedGlobalIdent() in line 130
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function genericMethodInvocation() in line 294
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
   function genericTemplate() in line 270
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
   function instanceMethodInvocation() in line 203
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function instanceOf() in line 579
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function localVariable() in line 632
      protection public
      40 lines of code
      0 parameters
      1 conditional paths
   function objectCast() in line 424
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function parameterizedCast() in line 556
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function primitiveCast() in line 408
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function qualifiedGlobalIdent() in line 146
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function recursiveTypes() in line 612
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function staticImportedGlobalIdent() in line 163
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function staticMethodInvocation() in line 181
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
   function synchronizd() in line 715
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
   function throwException() in line 674
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function unary() in line 242
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
   function voidReturn() in line 365
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function whileLoop() in line 101
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/AnonymousClassTemplateExample.java
module com::google::errorprone::refaster::testdata::AnonymousClassTemplateExample
   function differentOrderNoVariableConflicts() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function differentOrderNoVariableConflicts() in line 63
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function differentOrderVariableConflicts() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function differentOrderVariableConflicts() in line 82
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function fewerMethods() in line 42
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function fewerMethods() in line 101
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function moreMethods() in line 56
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function moreMethods() in line 115
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function sameOrderNoVariableConflicts() in line 25
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function sameOrderNoVariableConflicts() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sameOrderVariableConflicts() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sameOrderVariableConflicts() in line 44
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/AnonymousClassTemplateExample.java
module com::google::errorprone::refaster::testdata::AnonymousClassTemplateExample
   function differentOrderNoVariableConflicts() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function differentOrderNoVariableConflicts() in line 63
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function differentOrderVariableConflicts() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function differentOrderVariableConflicts() in line 82
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function fewerMethods() in line 42
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function fewerMethods() in line 101
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function moreMethods() in line 56
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function moreMethods() in line 115
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function sameOrderNoVariableConflicts() in line 25
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function sameOrderNoVariableConflicts() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sameOrderVariableConflicts() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sameOrderVariableConflicts() in line 44
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/AnyOfTemplateExample.java
module com::google::errorprone::refaster::testdata::AnyOfTemplateExample
   function foo(double) in line 23
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function foo(double) in line 23
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/AnyOfTemplateExample.java
module com::google::errorprone::refaster::testdata::AnyOfTemplateExample
   function foo(double) in line 23
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function foo(double) in line 23
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/ArrayTemplateExample.java
module com::google::errorprone::refaster::testdata::ArrayTemplateExample
   function foo() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/ArrayTemplateExample.java
module com::google::errorprone::refaster::testdata::ArrayTemplateExample
   function foo() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/AssertTemplateExample.java
module com::google::errorprone::refaster::testdata::AssertTemplateExample
   function example(String) in line 23
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function example(String) in line 26
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/AssertTemplateExample.java
module com::google::errorprone::refaster::testdata::AssertTemplateExample
   function example(String) in line 23
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function example(String) in line 26
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/AutoboxingTemplateExample.java
module com::google::errorprone::refaster::testdata::AutoboxingTemplateExample
   function foo() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/AutoboxingTemplateExample.java
module com::google::errorprone::refaster::testdata::AutoboxingTemplateExample
   function foo() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/BinaryTemplateExample.java
module com::google::errorprone::refaster::testdata::BinaryTemplateExample
   function example(int,int) in line 27
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function example(int,int) in line 27
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/BinaryTemplateExample.java
module com::google::errorprone::refaster::testdata::BinaryTemplateExample
   function example(int,int) in line 27
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function example(int,int) in line 27
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/BlockPlaceholderTemplateExample.java
module com::google::errorprone::refaster::testdata::BlockPlaceholderTemplateExample
   function negativeExample1() in line 51
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function negativeExample1() in line 55
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function negativeExample2() in line 61
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function negativeExample2() in line 65
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function positiveExample1() in line 29
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function positiveExample1() in line 29
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function positiveExample2() in line 36
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
   function positiveExample2() in line 38
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/BlockPlaceholderTemplateExample.java
module com::google::errorprone::refaster::testdata::BlockPlaceholderTemplateExample
   function negativeExample1() in line 51
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function negativeExample1() in line 55
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function negativeExample2() in line 61
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function negativeExample2() in line 65
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function positiveExample1() in line 29
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function positiveExample1() in line 29
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function positiveExample2() in line 36
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
   function positiveExample2() in line 38
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/ComparisonChainTemplateExample.java
module com::google::errorprone::refaster::testdata::ComparisonChainTemplateExample
   function compare(String,String) in line 21
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function compare(String,String) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/ComparisonChainTemplateExample.java
module com::google::errorprone::refaster::testdata::ComparisonChainTemplateExample
   function compare(String,String) in line 21
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
   function compare(String,String) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/DiamondTemplateExample.java
module com::google::errorprone::refaster::testdata::DiamondTemplateExample
   function example() in line 24
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/DiamondTemplateExample.java
module com::google::errorprone::refaster::testdata::DiamondTemplateExample
   function example() in line 24
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/ExplicitTypesPreservedTemplateExample.java
module com::google::errorprone::refaster::testdata::ExplicitTypesPreservedTemplateExample
   function example() in line 28
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function example() in line 29
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/ExplicitTypesPreservedTemplateExample.java
module com::google::errorprone::refaster::testdata::ExplicitTypesPreservedTemplateExample
   function example() in line 28
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function example() in line 29
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/GenericPlaceholderTemplateExample.java
module com::google::errorprone::refaster::testdata::GenericPlaceholderTemplateExample
   function main(String[]) in line 23
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 27
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/GenericPlaceholderTemplateExample.java
module com::google::errorprone::refaster::testdata::GenericPlaceholderTemplateExample
   function main(String[]) in line 23
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 27
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/IfFallthroughTemplateExample.java
module com::google::errorprone::refaster::testdata::IfFallthroughTemplateExample
   function example1() in line 27
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
   function example1() in line 27
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function example2() in line 36
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function example2() in line 45
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/IfFallthroughTemplateExample.java
module com::google::errorprone::refaster::testdata::IfFallthroughTemplateExample
   function example1() in line 27
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
   function example1() in line 27
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function example2() in line 36
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function example2() in line 45
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/IfTemplateExample.java
module com::google::errorprone::refaster::testdata::IfTemplateExample
   function example() in line 25
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
   function example() in line 25
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/IfTemplateExample.java
module com::google::errorprone::refaster::testdata::IfTemplateExample
   function example() in line 25
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
   function example() in line 25
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/ImplicitTypesInlinedTemplateExample.java
module com::google::errorprone::refaster::testdata::ImplicitTypesInlinedTemplateExample
   function foo() in line 29
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 30
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/ImplicitTypesInlinedTemplateExample.java
module com::google::errorprone::refaster::testdata::ImplicitTypesInlinedTemplateExample
   function foo() in line 29
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 30
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/ImportClassDirectlyTemplateExample.java
module com::google::errorprone::refaster::testdata::ImportClassDirectlyTemplateExample
   function example(Map< String, Integer >) in line 27
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function example(Map< String, Integer >) in line 28
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/ImportClassDirectlyTemplateExample.java
module com::google::errorprone::refaster::testdata::ImportClassDirectlyTemplateExample
   function example(Map< String, Integer >) in line 27
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function example(Map< String, Integer >) in line 28
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/InferredThisTemplateExample.java
module com::google::errorprone::refaster::testdata::InferredThisTemplateExample
   function example() in line 25
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/InferredThisTemplateExample.java
module com::google::errorprone::refaster::testdata::InferredThisTemplateExample
   function example() in line 25
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/IsInstanceTemplateExample.java
module com::google::errorprone::refaster::testdata::IsInstanceTemplateExample
   function foo() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/IsInstanceTemplateExample.java
module com::google::errorprone::refaster::testdata::IsInstanceTemplateExample
   function foo() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/LabelTemplateExample.java
module com::google::errorprone::refaster::testdata::LabelTemplateExample
   function example(BigInteger[]) in line 27
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
   function example(BigInteger[]) in line 29
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/LabelTemplateExample.java
module com::google::errorprone::refaster::testdata::LabelTemplateExample
   function example(BigInteger[]) in line 27
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
   function example(BigInteger[]) in line 29
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/LiteralTemplateExample.java
module com::google::errorprone::refaster::testdata::LiteralTemplateExample
   function example() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function example() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/LiteralTemplateExample.java
module com::google::errorprone::refaster::testdata::LiteralTemplateExample
   function example() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function example() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/MayOptionallyUseTemplateExample.java
module com::google::errorprone::refaster::testdata::MayOptionallyUseTemplateExample
   function example1() in line 26
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function example1() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function example2() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function example2() in line 33
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/MayOptionallyUseTemplateExample.java
module com::google::errorprone::refaster::testdata::MayOptionallyUseTemplateExample
   function example1() in line 26
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function example1() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function example2() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function example2() in line 33
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/MethodInvocationTemplateExample.java
module com::google::errorprone::refaster::testdata::MethodInvocationTemplateExample
   function example(MessageDigest,String) in line 28
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function example(MessageDigest,String) in line 29
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/MethodInvocationTemplateExample.java
module com::google::errorprone::refaster::testdata::MethodInvocationTemplateExample
   function example(MessageDigest,String) in line 28
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function example(MessageDigest,String) in line 29
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/MultiBoundTemplateExample.java
module com::google::errorprone::refaster::testdata::MultiBoundTemplateExample
   function example() in line 25
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/MultiBoundTemplateExample.java
module com::google::errorprone::refaster::testdata::MultiBoundTemplateExample
   function example() in line 25
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/MultipleReferencesToIdentifierTemplateExample.java
module com::google::errorprone::refaster::testdata::MultipleReferencesToIdentifierTemplateExample
   function example(int,int,String) in line 23
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function example(int,int,String) in line 23
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/MultipleReferencesToIdentifierTemplateExample.java
module com::google::errorprone::refaster::testdata::MultipleReferencesToIdentifierTemplateExample
   function example(int,int,String) in line 23
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function example(int,int,String) in line 23
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/OneLineToTwoTemplateExample.java
module com::google::errorprone::refaster::testdata::OneLineToTwoTemplateExample
   function example() in line 25
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/OneLineToTwoTemplateExample.java
module com::google::errorprone::refaster::testdata::OneLineToTwoTemplateExample
   function example() in line 25
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/ParenthesesOptionalTemplateExample.java
module com::google::errorprone::refaster::testdata::ParenthesesOptionalTemplateExample
   function example(int) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function example(int) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/ParenthesesOptionalTemplateExample.java
module com::google::errorprone::refaster::testdata::ParenthesesOptionalTemplateExample
   function example(int) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function example(int) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/PlaceholderAllowsIdentityTemplateExample.java
module com::google::errorprone::refaster::testdata::PlaceholderAllowsIdentityTemplateExample
   function positiveExample(List< Integer >) in line 26
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function positiveExample(List< Integer >) in line 29
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function positiveIdentityExample(List< Boolean >) in line 35
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function positiveIdentityExample(List< Boolean >) in line 38
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function refersToForbiddenVariable(List< Integer >) in line 44
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function refersToForbiddenVariable(List< Integer >) in line 47
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/PlaceholderAllowsIdentityTemplateExample.java
module com::google::errorprone::refaster::testdata::PlaceholderAllowsIdentityTemplateExample
   function positiveExample(List< Integer >) in line 26
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function positiveExample(List< Integer >) in line 29
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function positiveIdentityExample(List< Boolean >) in line 35
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function positiveIdentityExample(List< Boolean >) in line 38
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function refersToForbiddenVariable(List< Integer >) in line 44
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function refersToForbiddenVariable(List< Integer >) in line 47
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/PlaceholderTemplateExample.java
module com::google::errorprone::refaster::testdata::PlaceholderTemplateExample
   function negativeIdentityExample(List< Boolean >) in line 35
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function negativeIdentityExample(List< Boolean >) in line 40
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function positiveExample(List< Integer >) in line 26
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function positiveExample(List< Integer >) in line 29
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function refersToForbiddenVariable(List< Integer >) in line 44
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function refersToForbiddenVariable(List< Integer >) in line 49
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/PlaceholderTemplateExample.java
module com::google::errorprone::refaster::testdata::PlaceholderTemplateExample
   function negativeIdentityExample(List< Boolean >) in line 35
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function negativeIdentityExample(List< Boolean >) in line 40
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function positiveExample(List< Integer >) in line 26
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function positiveExample(List< Integer >) in line 29
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function refersToForbiddenVariable(List< Integer >) in line 44
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function refersToForbiddenVariable(List< Integer >) in line 49
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/PrecedenceSensitiveTemplateExample.java
module com::google::errorprone::refaster::testdata::PrecedenceSensitiveTemplateExample
   function foo(String,String) in line 26
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
   function foo(String,String) in line 26
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/PrecedenceSensitiveTemplateExample.java
module com::google::errorprone::refaster::testdata::PrecedenceSensitiveTemplateExample
   function foo(String,String) in line 26
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
   function foo(String,String) in line 26
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/ReturnPlaceholderTemplateExample.java
module com::google::errorprone::refaster::testdata::ReturnPlaceholderTemplateExample
   variable LENGTH_THEN_LOWER_CASE_MULTI_LINE in line 36
      protection public
   variable LENGTH_THEN_LOWER_CASE_ONE_LINE in line 25
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/ReturnPlaceholderTemplateExample.java
module com::google::errorprone::refaster::testdata::ReturnPlaceholderTemplateExample
   variable LENGTH_THEN_LOWER_CASE_MULTI_LINE in line 36
      protection public
   variable LENGTH_THEN_LOWER_CASE_ONE_LINE in line 25
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/SamePackageImportsTemplateExample.java
module java::util::SamePackageImportsTemplateExample
   function example() in line 25
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function example() in line 27
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/SamePackageImportsTemplateExample.java
module java::util::SamePackageImportsTemplateExample
   function example() in line 25
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function example() in line 27
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/StaticFieldTemplateExample.java
module com::google::errorprone::refaster::testdata::StaticFieldTemplateExample
   function foo() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/StaticFieldTemplateExample.java
module com::google::errorprone::refaster::testdata::StaticFieldTemplateExample
   function foo() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function foo() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/TopLevelTemplateExample.java
module com::google::errorprone::refaster::testdata::TopLevelTemplateExample
   variable logger in line 25
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/TopLevelTemplateExample.java
module com::google::errorprone::refaster::testdata::TopLevelTemplateExample
   variable logger in line 25
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/TryMultiCatchTemplateExample.java
module com::google::errorprone::refaster::testdata::TryMultiCatchTemplateExample
   function foo() in line 25
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function foo() in line 25
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/TryMultiCatchTemplateExample.java
module com::google::errorprone::refaster::testdata::TryMultiCatchTemplateExample
   function foo() in line 25
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
   function foo() in line 25
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/TryTemplateExample.java
module com::google::errorprone::refaster::testdata::TryTemplateExample
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/TryTemplateExample.java
module com::google::errorprone::refaster::testdata::TryTemplateExample
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/TwoLinesToOneTemplateExample.java
module com::google::errorprone::refaster::testdata::TwoLinesToOneTemplateExample
   function example() in line 25
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/TwoLinesToOneTemplateExample.java
module com::google::errorprone::refaster::testdata::TwoLinesToOneTemplateExample
   function example() in line 25
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function example() in line 25
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/VarargTemplateExample.java
module com::google::errorprone::refaster::testdata::VarargTemplateExample
   function foo0() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo0() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo0_empty() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo0_empty() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo1() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo1() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo2() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo2() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo3() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo3() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/VarargTemplateExample.java
module com::google::errorprone::refaster::testdata::VarargTemplateExample
   function foo0() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo0() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo0_empty() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo0_empty() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo1() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo1() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo2() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo2() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo3() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function foo3() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/VariableDeclTemplateExample.java
module com::google::errorprone::refaster::testdata::VariableDeclTemplateExample
   function example() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function example() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/VariableDeclTemplateExample.java
module com::google::errorprone::refaster::testdata::VariableDeclTemplateExample
   function example() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function example() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/WildcardTemplateExample.java
module com::google::errorprone::refaster::testdata::WildcardTemplateExample
   function example() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function example() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/WildcardTemplateExample.java
module com::google::errorprone::refaster::testdata::WildcardTemplateExample
   function example() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function example() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/input/WildcardUnificationTemplateExample.java
module com::google::errorprone::refaster::testdata::WildcardUnificationTemplateExample
   function example() in line 29
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function example() in line 29
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/output/WildcardUnificationTemplateExample.java
module com::google::errorprone::refaster::testdata::WildcardUnificationTemplateExample
   function example() in line 29
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function example() in line 29
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/AnonymousClassTemplate.java
module com::google::errorprone::refaster::testdata::template::AnonymousClassTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/AnyOfTemplate.java
module com::google::errorprone::refaster::testdata::template::AnyOfTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/ArrayTemplate.java
module com::google::errorprone::refaster::testdata::template::ArrayTemplate
   function after(List< String >,int) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function before(List< String >,int) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/AssertTemplate.java
module com::google::errorprone::refaster::testdata::template::AssertTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/AutoboxingTemplate.java
module com::google::errorprone::refaster::testdata::template::AutoboxingTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/BinaryTemplate.java
module com::google::errorprone::refaster::testdata::template::BinaryTemplate
   function divide(int,int) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function shift(int,int) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/BlockPlaceholderTemplate.java
module com::google::errorprone::refaster::testdata::template::BlockPlaceholderTemplate
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/ComparisonChainTemplate.java
module com::google::errorprone::refaster::testdata::template::ComparisonChainTemplate
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/DiamondTemplate.java
module com::google::errorprone::refaster::testdata::template::DiamondTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/ExplicitTypesPreservedTemplate.java
module com::google::errorprone::refaster::testdata::template::ExplicitTypesPreservedTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/GenericPlaceholderTemplate.java
module com::google::errorprone::refaster::testdata::template::GenericPlaceholderTemplate
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/IfFallthroughTemplate.java
module com::google::errorprone::refaster::testdata::template::IfFallthroughTemplate
   function before(T,T,Ordering<?super T >) in line 26
      protection public
      11 lines of code
      3 parameters
      4 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/IfTemplate.java
module com::google::errorprone::refaster::testdata::template::IfTemplate
   function conditional(boolean,T,T,T) in line 36
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function ifBefore(boolean,T,T,T) in line 27
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/ImplicitTypesInlinedTemplate.java
module com::google::errorprone::refaster::testdata::template::ImplicitTypesInlinedTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/ImportClassDirectlyTemplate.java
module com::google::errorprone::refaster::testdata::template::ImportClassDirectlyTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/InferredThisTemplate.java
module com::google::errorprone::refaster::testdata::template::InferredThisTemplate
   function after(Thread) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function before(Thread) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/IsInstanceTemplate.java
module com::google::errorprone::refaster::testdata::template::IsInstanceTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/LabelTemplate.java
module com::google::errorprone::refaster::testdata::template::LabelTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/LiteralTemplate.java
module com::google::errorprone::refaster::testdata::template::LiteralTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/MayOptionallyUseTemplate.java
module com::google::errorprone::refaster::testdata::template::MayOptionallyUseTemplate
   abstract class
   function safe(byte[]) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function tryCatch(byte[]) in line 37
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/MethodInvocationTemplate.java
module com::google::errorprone::refaster::testdata::template::MethodInvocationTemplate
   function explicit(MessageDigest,String) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function implicit(MessageDigest,String) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/MultiBoundTemplate.java
module com::google::errorprone::refaster::testdata::template::MultiBoundTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/MultipleReferencesToIdentifierTemplate.java
module com::google::errorprone::refaster::testdata::template::MultipleReferencesToIdentifierTemplate
   function identity(boolean) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function orSelf(boolean) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/OneLineToTwoTemplate.java
module com::google::errorprone::refaster::testdata::template::OneLineToTwoTemplate
   function oneStatement(int,int,int) in line 27
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function replacement(int,int,int) in line 32
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/ParenthesesOptionalTemplate.java
module com::google::errorprone::refaster::testdata::template::ParenthesesOptionalTemplate
   function after(int,int) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function before(int,int) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/PlaceholderAllowsIdentityTemplate.java
module com::google::errorprone::refaster::testdata::template::PlaceholderAllowsIdentityTemplate
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/PlaceholderTemplate.java
module com::google::errorprone::refaster::testdata::template::PlaceholderTemplate
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/PrecedenceSensitiveTemplate.java
module com::google::errorprone::refaster::testdata::template::PrecedenceSensitiveTemplate
   function after(Object,Object) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function before(Object,Object) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/ReturnPlaceholderTemplate.java
module com::google::errorprone::refaster::testdata::template::ReturnPlaceholderTemplate
   abstract class
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/SamePackageImportsTemplate.java
module com::google::errorprone::refaster::testdata::template::SamePackageImportsTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/StaticFieldTemplate.java
module com::google::errorprone::refaster::testdata::template::StaticFieldTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/TopLevelTemplate.java
module com::google::errorprone::refaster::testdata::template::TopLevelTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/TryMultiCatchTemplate.java
module com::google::errorprone::refaster::testdata::template::TryMultiCatchTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/TryTemplate.java
module com::google::errorprone::refaster::testdata::template::TryTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/TwoLinesToOneTemplate.java
module com::google::errorprone::refaster::testdata::template::TwoLinesToOneTemplate
   function oneAddition(int,int,int) in line 33
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function twoAdditions(int,int,int) in line 27
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/VarargTemplate.java
module com::google::errorprone::refaster::testdata::template::VarargTemplate
   function after(String,@Repeated Object) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function before(String,@Repeated Object) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/VariableDeclTemplate.java
module com::google::errorprone::refaster::testdata::template::VariableDeclTemplate
   function parse(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function valueOf(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/WildcardTemplate.java
module com::google::errorprone::refaster::testdata::template::WildcardTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/testdata/template/WildcardUnificationTemplate.java
module com::google::errorprone::refaster::testdata::template::WildcardUnificationTemplate
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UAnnotationTest.java
module com::google::errorprone::refaster::UAnnotationTest
   function equality() in line 34
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 45
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UArrayAccessTest.java
module com::google::errorprone::refaster::UArrayAccessTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function inline() in line 43
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function unify() in line 35
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function unify(@Nullable Tree,Unifier) defined in com::google::errorprone::refaster::UTree
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UArrayTypeTest.java
module com::google::errorprone::refaster::UArrayTypeTest
   function equality() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 43
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UArrayTypeTreeTest.java
module com::google::errorprone::refaster::UArrayTypeTreeTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UAssignOpTest.java
module com::google::errorprone::refaster::UAssignOpTest
   function equality() in line 36
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UAssignTest.java
module com::google::errorprone::refaster::UAssignTest
   function equality() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UBinaryTest.java
module com::google::errorprone::refaster::UBinaryTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function bitwiseAnd() in line 134
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function bitwiseOr() in line 141
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function bitwiseXor() in line 148
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function conditionalAnd() in line 155
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function conditionalOr() in line 163
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function divide() in line 57
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function equal() in line 99
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function equality() in line 171
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function greaterThan() in line 85
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function greaterThanOrEqual() in line 92
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function leftShift() in line 113
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function lessThan() in line 71
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function lessThanOrEqual() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function minus() in line 43
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function mod() in line 64
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function notEqual() in line 106
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function plus() in line 36
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 190
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function signedRightShift() in line 120
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function times() in line 50
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function unsignedRightShift() in line 127
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UBlockTest.java
module com::google::errorprone::refaster::UBlockTest
   function equality() in line 34
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 47
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UBreakTest.java
module com::google::errorprone::refaster::UBreakTest
   function equality() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UClassIdentTest.java
module com::google::errorprone::refaster::UClassIdentTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 38
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function importConflicts() in line 61
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 53
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UClassTypeTest.java
module com::google::errorprone::refaster::UClassTypeTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 38
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 51
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function unifies() in line 65
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function unify(Type,Unifier) defined in com::google::errorprone::refaster::UType
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UConditionalTest.java
module com::google::errorprone::refaster::UConditionalTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 47
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function match() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 61
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UContinueTest.java
module com::google::errorprone::refaster::UContinueTest
   function equality() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UDoWhileLoopTest.java
module com::google::errorprone::refaster::UDoWhileLoopTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 36
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 67
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UEnhancedForLoopTest.java
module com::google::errorprone::refaster::UEnhancedForLoopTest
   function equality() in line 34
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 48
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UExpressionStatementTest.java
module com::google::errorprone::refaster::UExpressionStatementTest
   function equality() in line 36
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UForAllTest.java
module com::google::errorprone::refaster::UForAllTest
   function equality() in line 37
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 50
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UForLoopTest.java
module com::google::errorprone::refaster::UForLoopTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 37
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 55
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UFreeIdentTest.java
module com::google::errorprone::refaster::UFreeIdentTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function binds() in line 47
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function unify(@Nullable Tree,Unifier) defined in com::google::errorprone::refaster::UTree
   function equality() in line 55
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function inlinesExpression() in line 40
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UIfTest.java
module com::google::errorprone::refaster::UIfTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 35
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function inlineWithElse() in line 68
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function inlineWithoutElse() in line 88
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 58
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UInstanceOfTest.java
module com::google::errorprone::refaster::UInstanceOfTest
   function equality() in line 34
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 46
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UIntersectionTypeTest.java
module com::google::errorprone::refaster::UIntersectionTypeTest
   function equality() in line 32
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/ULabeledStatementTest.java
module com::google::errorprone::refaster::ULabeledStatementTest
   function equality() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/ULiteralTest.java
module com::google::errorprone::refaster::ULiteralTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function booleanLiteral() in line 87
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
   function charLiteral() in line 66
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
   function doubleLiteral() in line 73
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
   function equality() in line 94
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function floatLiteral() in line 80
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
   function intLiteral() in line 52
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
   function longLiteral() in line 59
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
   function nullLiteral() in line 38
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
   function serialization() in line 108
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function stringLiteral() in line 45
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getKind() defined in com::google::errorprone::refaster::ULiteral
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/ULocalVarIdentTest.java
module com::google::errorprone::refaster::ULocalVarIdentTest
   function equality() in line 34
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UMemberSelectTest.java
module com::google::errorprone::refaster::UMemberSelectTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 44
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 36
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 63
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UMethodInvocationTest.java
module com::google::errorprone::refaster::UMethodInvocationTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 62
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 51
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function match() in line 39
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function unify(@Nullable Tree,Unifier) defined in com::google::errorprone::refaster::UTree
   function serialization() in line 80
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UMethodTypeTest.java
module com::google::errorprone::refaster::UMethodTypeTest
   function equality() in line 34
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UNewClassTest.java
module com::google::errorprone::refaster::UNewClassTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 34
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 52
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UnificationTest.java
module com::google::errorprone::refaster::UnificationTest
   inherits from com::google::errorprone::refaster::CompilerBasedTest
   function binary() in line 75
      protection public
      32 lines of code
      0 parameters
      1 conditional paths
   function blockTemplate() in line 308
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
   function compoundAssignment() in line 109
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function expectMatches(final Template<?>,Match...) in line 47
      protection public
      26 lines of code
      2 parameters
      6 conditional paths
   function ifBlockTemplate() in line 355
      protection public
      41 lines of code
      0 parameters
      1 conditional paths
   function methodInvocation() in line 132
      protection public
      38 lines of code
      0 parameters
      1 conditional paths
   function multipleMatch() in line 204
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function newArray() in line 398
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function recursiveType() in line 277
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
      uses function setUpperBound(UType) defined in com::google::errorprone::refaster::UTypeVar
   function returnTypeMatters() in line 229
      protection public
      46 lines of code
      0 parameters
      1 conditional paths
   function staticMethodInvocation() in line 172
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UParensTest.java
module com::google::errorprone::refaster::UParensTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 46
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UPrimitiveTypeTest.java
module com::google::errorprone::refaster::UPrimitiveTypeTest
   function equality() in line 36
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UPrimitiveTypeTreeTest.java
module com::google::errorprone::refaster::UPrimitiveTypeTreeTest
   function equality() in line 36
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/URepeatedTest.java
module com::google::errorprone::refaster::URepeatedTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 47
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function unifies() in line 39
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UReturnTest.java
module com::google::errorprone::refaster::UReturnTest
   function equality() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/USkipTest.java
module com::google::errorprone::refaster::USkipTest
   function serialization() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UStaticIdentTest.java
module com::google::errorprone::refaster::UStaticIdentTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 34
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 57
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 49
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/USynchronizedTest.java
module com::google::errorprone::refaster::USynchronizedTest
   function equality() in line 34
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UTemplaterTest.java
module com::google::errorprone::refaster::UTemplaterTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function binary() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function conditional() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function literal() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parens() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testTemplateWithoutTypes(String) in line 38
      5 lines of code
      1 parameters
      1 conditional paths
      uses function template(Tree) defined in com::google::errorprone::refaster::UTemplater
   function unary() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UThrowTest.java
module com::google::errorprone::refaster::UThrowTest
   function equality() in line 34
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UTypeApplyTest.java
module com::google::errorprone::refaster::UTypeApplyTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 34
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 52
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UTypeCastTest.java
module com::google::errorprone::refaster::UTypeCastTest
   function equality() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UTypeParameterTest.java
module com::google::errorprone::refaster::UTypeParameterTest
   function equality() in line 32
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UTypeVarIdentTest.java
module com::google::errorprone::refaster::UTypeVarIdentTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 43
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function inline() in line 56
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UTypeVarTest.java
module com::google::errorprone::refaster::UTypeVarTest
   function equality() in line 37
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 56
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UUnaryTest.java
module com::google::errorprone::refaster::UUnaryTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function complement() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function equality() in line 100
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function initializeFooIdentifier() in line 43
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function unify(@Nullable Tree,Unifier) defined in com::google::errorprone::refaster::UTree
   function logicalNegation() in line 63
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function postDecrement() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function postIncrement() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function preDecrement() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function preIncrement() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function rejectsNonUnaryOperations() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 113
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function unaryNegation() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function unaryPlus() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UUnionTypeTest.java
module com::google::errorprone::refaster::UUnionTypeTest
   function equality() in line 34
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 50
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UVariableDeclTest.java
module com::google::errorprone::refaster::UVariableDeclTest
   function equality() in line 34
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UWhileLoopTest.java
module com::google::errorprone::refaster::UWhileLoopTest
   inherits from com::google::errorprone::refaster::AbstractUTreeTest
   function equality() in line 34
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 54
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UWildcardTest.java
module com::google::errorprone::refaster::UWildcardTest
   function equality() in line 36
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 51
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/refaster/UWildcardTypeTest.java
module com::google::errorprone::refaster::UWildcardTypeTest
   function equality() in line 37
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function serialization() in line 50
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/scanner/ScannerSupplierTest.java
module com::google::errorprone::scanner::ScannerSupplierTest
   function applyOverridesDisablesChecks() in line 159
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
      uses function getEnabledChecks() defined in com::google::errorprone::scanner::ScannerSupplier
   function applyOverridesEnablesCheck() in line 143
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function filter(Predicate<?super BugCheckerInfo >) defined in com::google::errorprone::scanner::ScannerSupplier
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
      uses function getEnabledChecks() defined in com::google::errorprone::scanner::ScannerSupplier
   function applyOverridesSetsSeverity() in line 224
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable WARNING defined in com::google::errorprone::BugPattern::SeverityLevel
      uses function severities() defined in com::google::errorprone::scanner::ScannerSupplier
   function applyOverridesSucceedsWhenDisablingUnknownCheckAndIgnoreUnknownCheckNamesIsSet() in line 214
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
   function applyOverridesThrowsExceptionWhenDemotingNonDisablableCheck() in line 196
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
   function applyOverridesThrowsExceptionWhenDisablingNonDisablableCheck() in line 178
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
   function applyOverridesWorksOnEmptySeverityMap() in line 130
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getEnabledChecks() defined in com::google::errorprone::scanner::ScannerSupplier
      uses function applyOverrides(ErrorProneOptions) defined in com::google::errorprone::scanner::ScannerSupplier
   function filterWorks() in line 112
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable canonicalName defined in com::google::errorprone::BugCheckerInfo
      uses function filter(Predicate<?super BugCheckerInfo >) defined in com::google::errorprone::scanner::ScannerSupplier
      uses function getEnabledChecks() defined in com::google::errorprone::scanner::ScannerSupplier
   function fromBugCheckerClassesWorks() in line 55
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getEnabledChecks() defined in com::google::errorprone::scanner::ScannerSupplier
   function fromBugCheckersWorks() in line 67
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getEnabledChecks() defined in com::google::errorprone::scanner::ScannerSupplier
   function plusDoesntAllowDuplicateChecks() in line 98
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function plus(ScannerSupplier) defined in com::google::errorprone::scanner::ScannerSupplier
   function plusWorks() in line 78
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function plus(ScannerSupplier) defined in com::google::errorprone::scanner::ScannerSupplier
      uses function getEnabledChecks() defined in com::google::errorprone::scanner::ScannerSupplier
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/SubContextTest.java
module com::google::errorprone::SubContextTest
   function testOverlay() in line 47
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function testOverride() in line 65
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   variable KEY1 in line 35
   variable KEY2 in line 36
module com::google::errorprone::SubContextTest::Enum1
   variable VALUE1 in line 39
      protection public
module com::google::errorprone::SubContextTest::Enum2
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/suppress/CustomSuppressionTest.java
module com::google::errorprone::suppress::CustomSuppressionTest
   function myChecker2IsSuppressedWithEitherCustomAnnotation() in line 151
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function myCheckerIsNotSuppressedWithSuppressWarnings() in line 88
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function myCheckerIsNotSuppressedWithWrongCustomAnnotation() in line 135
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function myCheckerIsSuppressedWithCustomAnnotation() in line 103
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
   function myCheckerIsSuppressedWithCustomAnnotationAtLocalVariableScope() in line 118
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addSourceLines(String,String...) defined in com::google::errorprone::CompilationTestHelper
      uses function doTest() defined in com::google::errorprone::CompilationTestHelper
module com::google::errorprone::suppress::CustomSuppressionTest::SuppressBothCheckers
module com::google::errorprone::suppress::CustomSuppressionTest::MyChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::suppress::CustomSuppressionTest::SuppressMyChecker2
module com::google::errorprone::suppress::CustomSuppressionTest::MyChecker2
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 82
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/suppress/SuppressWarningsTest.java
module com::google::errorprone::suppress::SuppressWarningsTest
   function setUp() in line 50
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function report(ScannerSupplier) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
      uses function build() defined in com::google::errorprone::ErrorProneTestCompiler::Builder
   function testNegativeCase() in line 57
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
   variable compiler in line 47
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/suppress/testdata/SuppressWarningsNegativeCases.java
module com::google::errorprone::suppress::SuppressWarningsNegativeCases
   function testDeadException() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testEmptyIf() in line 28
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function testSelfAssignment() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/suppress/testdata/UnsuppressiblePositiveCases.java
module com::google::errorprone::suppress::UnsuppressiblePositiveCases
   function testUnsuppressible() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/suppress/UnsuppressibleTest.java
module com::google::errorprone::suppress::UnsuppressibleTest
   function setUp() in line 72
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function listenToDiagnostics(DiagnosticListener<?super JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
      uses variable collector defined in com::google::errorprone::DiagnosticTestHelper
      uses function report(ScannerSupplier) defined in com::google::errorprone::ErrorProneTestCompiler::Builder
   function testPositiveCase() in line 81
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable fileManager defined in com::google::errorprone::ErrorProneTestCompiler
      uses function forResources(Class<?>,String...) defined in com::google::errorprone::ErrorProneInMemoryFileManager
      uses function compile(List< JavaFileObject >) defined in com::google::errorprone::ErrorProneTestCompiler
      uses function getDiagnostics() defined in com::google::errorprone::DiagnosticTestHelper
   variable compiler in line 68
   variable diagnosticHelper in line 69
module com::google::errorprone::suppress::UnsuppressibleTest::MyChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker
   inherits from com::google::errorprone::bugpatterns::BugChecker::ReturnTreeMatcher
   function matchReturn(ReturnTree,VisitorState) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/CommandLineFlagTestFile.java
module com::google::errorprone::CommandLineFlagTestFile
   function foo() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/DeleteGeneratedConstructorTestCase.java
module com::google::errorprone::testdata::DeleteGeneratedConstructorTestCase
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/ExtendedMultipleTopLevelClassesWithErrors.java
module com::google::errorprone::ExtendedMultipleTopLevelClassesWithErrors
   inherits from com::google::errorprone::MultipleTopLevelClassesWithErrors
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/ExtendedMultipleTopLevelClassesWithNoErrors.java
module com::google::errorprone::ExtendedMultipleTopLevelClassesWithNoErrors
   inherits from com::google::errorprone::MultipleTopLevelClassesWithNoErrors
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/FlowConstants.java
module com::google::errorprone::FlowConstants
   variable SOME_BYTE in line 20
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/FlowSub.java
module com::google::errorprone::FlowSub
   inherits from com::google::errorprone::FlowSuper
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/FlowSuper.java
module com::google::errorprone::FlowSuper
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/MultipleTopLevelClassesWithErrors.java
module com::google::errorprone::MultipleTopLevelClassesWithErrors
module com::google::errorprone::Poo1
   function poo() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::Poo1::Poo2
   function poo() in line 27
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::Poo3
   function poo() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/MultipleTopLevelClassesWithNoErrors.java
module com::google::errorprone::MultipleTopLevelClassesWithNoErrors
   function MultipleTopLevelClassesWithNoErrors(int,int) in line 23
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::MultipleTopLevelClassesWithNoErrors::InnerFoo
module com::google::errorprone::Foo1
   function Foo1(int,int) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::Foo2
   function Foo2(int,int) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module com::google::errorprone::Foo3
   function Foo3(int,int) in line 56
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/testdata/UsesAnnotationProcessor.java
module com::google::errorprone::UsesAnnotationProcessor
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/util/ASTHelpersTest.java
module com::google::errorprone::util::ASTHelpersTest
   inherits from com::google::errorprone::matchers::CompilerBasedAbstractTest
   function expressionHasReceiver(final String) in line 174
      8 lines of code
      1 parameters
      1 conditional paths
   function expressionStatementMatches(final String,final Matcher< ExpressionTree >) in line 183
      14 lines of code
      2 parameters
      2 conditional paths
   function getUpperBoundScanner(final String) in line 353
      14 lines of code
      1 parameters
      1 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function literalExpressionMatches(final Matcher< LiteralTree >) in line 133
      12 lines of code
      1 parameters
      1 conditional paths
   function literalHasActualStartPosition(final int) in line 123
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceCode() defined in com::google::errorprone::VisitorState
   function tearDown() in line 65
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
   function testAnnotationHelpers() in line 199
      protection public
      35 lines of code
      0 parameters
      2 conditional paths
   function testCommentTokens() in line 467
      protection public
      45 lines of code
      0 parameters
      4 conditional paths
      uses function getTokensForNode(Tree) defined in com::google::errorprone::VisitorState
   function testGetActualStartPositionUnix() in line 72
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function testGetActualStartPositionWindows() in line 85
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function testGetActualStartPositionWithWhitespaceUnix() in line 98
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function testGetActualStartPositionWithWhitespaceWindows() in line 111
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function testGetReceiver() in line 147
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
   function testGetTypeOnNestedAnnotationType() in line 276
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
   function testGetTypeOnNestedClassType() in line 299
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
   function testGetTypeOnParameterizedType() in line 323
      protection public
      27 lines of code
      0 parameters
      1 conditional paths
   function testGetUpperBoundCapturedTypeVariable() in line 437
      protection public
      28 lines of code
      0 parameters
      2 conditional paths
      uses function getTypes() defined in com::google::errorprone::VisitorState
   function testGetUpperBoundConcreteType() in line 369
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function testGetUpperBoundLowerBoundedWildcard() in line 410
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function testGetUpperBoundTypeVariable() in line 424
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function testGetUpperBoundUnboundedWildcard() in line 397
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
   function testGetUpperBoundUpperBoundedWildcard() in line 383
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function testInnerAnnotationType() in line 237
      protection public
      35 lines of code
      0 parameters
      2 conditional paths
   variable UNIX_LINE_JOINER in line 59
   variable WINDOWS_LINE_JOINER in line 60
module com::google::errorprone::util::ASTHelpersTest::TestScanner
   inherits from com::google::errorprone::scanner::Scanner
   abstract class
   function setAssertionsComplete() in line 522
      3 lines of code
      0 parameters
      1 conditional paths
      uses function withPath(TreePath) defined in com::google::errorprone::VisitorState
      uses function matches(T,VisitorState) defined in com::google::errorprone::matchers::Matcher
   function verifyAssertionsComplete() in line 532
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable assertionsComplete in line 516
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/core/src/test/java/com/google/errorprone/util/InheritedAnnotation.java
module com::google::errorprone::util::InheritedAnnotation
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/main/java/com/google/errorprone/BugPatternFileGenerator.java
module com::google::errorprone::BugPatternFileGenerator
   inherits from com::google::common::io::LineProcessor
   function findExamples(List< Path >,Path,DirectoryStream.Filter< Path >) in line 320
      12 lines of code
      3 parameters
      1 conditional paths
   function getResult() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function processLine(String) in line 166
      protection public
      137 lines of code
      1 parameters
      1 conditional paths
   function writeExample(ExampleInfo,Writer) in line 304
      15 lines of code
      2 parameters
      1 conditional paths
   function BugPatternFileGenerator(Path,Path,Path,boolean,boolean) in line 93
      protection public
      13 lines of code
      5 parameters
      1 conditional paths
   variable ANNOTATE_AND_CODIFY in line 66
   variable COMMA_JOINER in line 65
   variable exampleDirBase in line 78
   variable explanationDir in line 79
   variable generateFrontMatter in line 91
   variable IS_POSITIVE in line 157
   variable outputDir in line 77
   variable result in line 80
   variable usePygments in line 86
module com::google::errorprone::BugPatternFileGenerator::ExampleFilter
   inherits from DirectoryStream::Filter
   function accept(Path) in line 115
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable matchPattern defined in com::google::errorprone::BugPatternFileGenerator::ExampleFilter
   function ExampleFilter(String) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable matchPattern in line 108
module com::google::errorprone::BugPatternFileGenerator::PathToExampleInfo
   inherits from com::google::common::base::Function
   function apply(Path) in line 133
      protection public
      22 lines of code
      1 parameters
      24 conditional paths
      uses variable POSITIVE defined in com::google::errorprone::ExampleInfo::ExampleKind
      uses variable NEGATIVE defined in com::google::errorprone::ExampleInfo::ExampleKind
      uses function type() defined in com::google::errorprone::ExampleInfo
      uses variable name defined in com::google::errorprone::BugPatternInstance
      uses variable explanation defined in com::google::errorprone::BugPatternInstance
      uses variable category defined in com::google::errorprone::BugPatternInstance
      uses variable severity defined in com::google::errorprone::BugPatternInstance
      uses variable maturity defined in com::google::errorprone::BugPatternInstance
      uses variable summary defined in com::google::errorprone::BugPatternInstance
      uses variable altNames defined in com::google::errorprone::BugPatternInstance
      uses variable documentSuppression defined in com::google::errorprone::BugPatternInstance
      uses variable suppressibility defined in com::google::errorprone::BugPatternInstance
      uses variable customSuppressionAnnotations defined in com::google::errorprone::BugPatternInstance
      uses variable generateExamplesFromTestCases defined in com::google::errorprone::BugPatternInstance
      uses function ExampleFilter(String) defined in com::google::errorprone::BugPatternFileGenerator::ExampleFilter
      uses variable className defined in com::google::errorprone::BugPatternInstance
      uses function name() defined in com::google::errorprone::ExampleInfo
      uses function code() defined in com::google::errorprone::ExampleInfo
   function PathToExampleInfo(String) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable checkerClass in line 126
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/main/java/com/google/errorprone/BugPatternIndexWriter.java
module com::google::errorprone::BugPatternIndexWriter
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/main/java/com/google/errorprone/BugPatternInstance.java
module com::google::errorprone::BugPatternInstance
   function annotationKeyValues(AnnotationMirror) in line 108
      7 lines of code
      1 parameters
      2 conditional paths
   function fromElement(Element) in line 62
      protection public
      36 lines of code
      1 parameters
      2 conditional paths
      uses variable className defined in com::google::errorprone::BugPatternInstance
      uses variable name defined in com::google::errorprone::BugPatternInstance
      uses function name() defined in com::google::errorprone::BugPattern
      uses variable altNames defined in com::google::errorprone::BugPatternInstance
      uses function altNames() defined in com::google::errorprone::BugPattern
      uses variable maturity defined in com::google::errorprone::BugPatternInstance
      uses function maturity() defined in com::google::errorprone::BugPattern
      uses variable severity defined in com::google::errorprone::BugPatternInstance
      uses function severity() defined in com::google::errorprone::BugPattern
      uses variable suppressibility defined in com::google::errorprone::BugPatternInstance
      uses function suppressibility() defined in com::google::errorprone::BugPattern
      uses variable summary defined in com::google::errorprone::BugPatternInstance
      uses function summary() defined in com::google::errorprone::BugPattern
      uses variable explanation defined in com::google::errorprone::BugPatternInstance
      uses function explanation() defined in com::google::errorprone::BugPattern
      uses variable documentSuppression defined in com::google::errorprone::BugPatternInstance
      uses function documentSuppression() defined in com::google::errorprone::BugPattern
      uses function getAnnotation(Element,String) defined in com::google::errorprone::BugPatternInstance
      uses variable category defined in com::google::errorprone::BugPatternInstance
      uses variable customSuppressionAnnotations defined in com::google::errorprone::BugPatternInstance
      uses variable TO_STRING defined in com::google::errorprone::BugPatternInstance
      uses variable generateExamplesFromTestCases defined in com::google::errorprone::BugPatternInstance
   function getAnnotation(Element,String) in line 99
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable name defined in com::google::errorprone::BugPatternInstance
      uses function annotationKeyValues(AnnotationMirror) defined in com::google::errorprone::BugPatternInstance
   variable altNames in line 53
      protection public
   variable category in line 54
      protection public
   variable className in line 49
      protection public
   variable customSuppressionAnnotations in line 58
      protection public
   variable documentSuppression in line 59
      protection public
   variable explanation in line 52
      protection public
   variable generateExamplesFromTestCases in line 60
      protection public
   variable maturity in line 55
      protection public
   variable name in line 50
      protection public
   variable severity in line 56
      protection public
   variable summary in line 51
      protection public
   variable suppressibility in line 57
      protection public
   variable TO_STRING in line 41
module com::google::errorprone::BugPatternInstance::Comparators
   inherits from java::util::Comparator
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/main/java/com/google/errorprone/DocGenProcessor.java
module com::google::errorprone::DocGenProcessor
   inherits from javax::annotation::processing::AbstractProcessor
   function cleanup() in line 95
      3 lines of code
      0 parameters
      1 conditional paths
   function getSupportedSourceVersion() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function init(ProcessingEnvironment) in line 64
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function process(Set<?extends TypeElement >,RoundEnvironment) in line 79
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
   variable gson in line 56
   variable pw in line 58
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/main/java/com/google/errorprone/DocGenTool.java
module com::google::errorprone::DocGenTool
   function main(String[]) in line 86
      protection public
      36 lines of code
      1 parameters
      6 conditional paths
      uses function usage(String) defined in com::google::errorprone::DocGenTool
   function usage(String) in line 123
      4 lines of code
      1 parameters
      1 conditional paths
module com::google::errorprone::DocGenTool::Options
   variable bugPatterns in line 43
   variable docsRepository in line 53
   variable examplesDir in line 56
   variable explanations in line 50
   variable target in line 64
   variable usePygments in line 71
module com::google::errorprone::DocGenTool::Target
   variable EXTERNAL in line 77
      protection public
   variable INTERNAL in line 75
      protection public
module com::google::errorprone::DocGenTool::TargetEnumConverter
   inherits from com::beust::jcommander::IStringConverter
   function convert(String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/main/java/com/google/errorprone/ExampleInfo.java
module com::google::errorprone::ExampleInfo
   abstract class
   function checkerClass() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function code() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function create(ExampleKind,String,String,String) in line 54
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function type() defined in com::google::errorprone::ExampleInfo
      uses function checkerClass() defined in com::google::errorprone::ExampleInfo
      uses function name() defined in com::google::errorprone::ExampleInfo
      uses function code() defined in com::google::errorprone::ExampleInfo
   function name() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function type() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module com::google::errorprone::ExampleInfo::ExampleKind
   variable NEGATIVE in line 31
      protection public
   variable POSITIVE in line 29
      protection public
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/test/java/com/google/errorprone/BugPatternFileGeneratorTest.java
module com::google::errorprone::BugPatternFileGeneratorTest
   function deadExceptionTestInfo() in line 63
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in com::google::errorprone::BugPatternInstance
      uses variable name defined in com::google::errorprone::BugPatternInstance
      uses variable summary defined in com::google::errorprone::BugPatternInstance
      uses variable explanation defined in com::google::errorprone::BugPatternInstance
      uses variable altNames defined in com::google::errorprone::BugPatternInstance
      uses variable category defined in com::google::errorprone::BugPatternInstance
      uses variable JDK defined in com::google::errorprone::BugPattern::Category
      uses variable severity defined in com::google::errorprone::BugPatternInstance
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable maturity defined in com::google::errorprone::BugPatternInstance
      uses variable MATURE defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable suppressibility defined in com::google::errorprone::BugPatternInstance
      uses variable SUPPRESS_WARNINGS defined in com::google::errorprone::BugPattern::Suppressibility
      uses variable customSuppressionAnnotations defined in com::google::errorprone::BugPatternInstance
   function regressionTest_frontmatter_pygments() in line 100
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function regressionTest_nofrontmatter_gfm() in line 112
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function regressionTest_sidecar() in line 123
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function setUp() in line 53
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   variable BUGPATTERN_LINE in line 80
   variable BUGPATTERN_LINE_SIDECAR in line 87
   variable exampleDir in line 47
   variable exampleDirBase in line 49
   variable explanationDirBase in line 50
   variable tmpfolder in line 45
      protection public
   variable wikiDir in line 48
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/test/java/com/google/errorprone/BugPatternIndexWriterTest.java
module com::google::errorprone::BugPatternIndexWriterTest
   function dumpExternal() in line 88
      protection public
      55 lines of code
      0 parameters
      1 conditional paths
      uses variable severity defined in com::google::errorprone::BugPatternInstance
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable maturity defined in com::google::errorprone::BugPatternInstance
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable name defined in com::google::errorprone::BugPatternInstance
      uses variable summary defined in com::google::errorprone::BugPatternInstance
      uses variable MATURE defined in com::google::errorprone::BugPattern::MaturityLevel
   function dumpInternal() in line 36
      protection public
      50 lines of code
      0 parameters
      1 conditional paths
      uses variable severity defined in com::google::errorprone::BugPatternInstance
      uses variable ERROR defined in com::google::errorprone::BugPattern::SeverityLevel
      uses variable maturity defined in com::google::errorprone::BugPatternInstance
      uses variable EXPERIMENTAL defined in com::google::errorprone::BugPattern::MaturityLevel
      uses variable name defined in com::google::errorprone::BugPatternInstance
      uses variable summary defined in com::google::errorprone::BugPatternInstance
      uses variable MATURE defined in com::google::errorprone::BugPattern::MaturityLevel
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/test/java/com/google/errorprone/testdata/DeadException_frontmatter_pygments.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docgen/src/test/java/com/google/errorprone/testdata/DeadException_nofrontmatter_gfm.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/android/FragmentNotInstantiable.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/ArrayHashCode.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/CheckReturnValue.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/CollectionIncompatibleType.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/DoubleCheckedLocking.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/EqualsHashCode.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/EqualsIncompatibleType.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/Finally.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/GuardedByChecker.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/HashtableContains.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/Immutable.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/IsInstanceOfClass.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/MissingFail.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/MissingOverride.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/MockitoCast.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/MockitoUsage.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/MultipleTopLevelClasses.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/NonCanonicalStaticImport.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/NonCanonicalStaticMemberImport.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/NonOverridingEquals.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/PackageLocation.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/StaticGuardedByInstance.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/TypeParameterQualifier.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/TypeParameterUnusedInFormals.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/UnnecessaryTypeArgument.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/UnsynchronizedOverridesSynchronized.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/UnusedAnonymousClass.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/Var.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/WaitNotInLoop.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/docs/bugpattern/WildcardImport.md
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/examples/ant/ant_fork/src/Main.java
module Main
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/examples/ant/ant_lib/src/Main.java
module Main
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/examples/ant/compilerclasspath/src/Main.java
module Main
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/examples/gradle/src/main/java/Main.java
module Main
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/examples/maven/error_prone_should_flag/src/main/java/Main.java
module Main
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function main(String[]) in line 18
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/examples/maven/annotation_processing_bug_repro/src/main/java/NeedsAnnotationProcessing.java
module NeedsAnnotationProcessing
   inherits from NeedsAnnotationProcessing::SomeContract
module NeedsAnnotationProcessing::SomeContract
file /home/joenio/src/dissertacao-ufba-2016/dataset/PAPERS/error-prone/error-prone-2.0.9/README.md
