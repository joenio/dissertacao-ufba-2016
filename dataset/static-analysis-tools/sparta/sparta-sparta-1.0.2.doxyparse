file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/BrowserActivity.java
module com::android::browser::BrowserActivity
   inherits from android::app::Activity
   function getIntent() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap() Intent) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/Camera.java
module com::android::camera::Camera
   inherits from android::app::Activity
   function getIntent() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap({                       @Extra(key=MediaStore.EXTRA_OUTPUT, source={ANY}, sink={INTERNET, FILESYSTEM})}) Intent) in line 22
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/ComposeActivity.java
module com::android::mail::compose::ComposeActivity
   inherits from android::app::Activity
   function getIntent() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap({                                       @Extra(key=Intent.EXTRA_SUBJECT, sink={INTERNET, FILESYSTEM}),                                       @Extra(key=Intent.EXTRA_TEXT, sink={INTERNET, FILESYSTEM})}) Intent) in line 20
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/DeviceAdminAdd.java
module com::android::settings::DeviceAdminAdd
   inherits from android::app::Activity
   function getIntent() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap(value={@Extra(key="android.app.extra.DEVICE_ADMIN", source={ANY},                                       sink={BIND_DEVICE_ADMIN}),                                       @Extra(key="android.app.extra.ADD_EXPLANATION", source={ANY},                                                                       sink={BIND_DEVICE_ADMIN})       }) Intent) in line 21
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/MockBCReceiver.java
module com::android::MockBCReceiver
   inherits from android::content::BroadcastReceiver
   function onReceive(Context,@IntentMap() Intent) in line 19
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/MockReceiver.java
module com::android::MockReceiver
   inherits from android::app::Activity
   function getIntent() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap() Intent) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/MockService.java
module com::android::MockService
   inherits from android::app::Service
   function onBind(@IntentMap() Intent) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onStartCommand(@IntentMap() Intent,int,int) in line 25
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/RingtonePickerActivity.java
module com::android::internal::app::RingtonePickerActivity
   inherits from android::app::Activity
   function getIntent() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap() Intent) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.android/WifiPickerActivity.java
module com::android::settings::wifi::WifiPickerActivity
   inherits from android::app::Activity
   function getIntent() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap() Intent) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.google/CaptureActivity.java
module com::google::zxing::client::android::CaptureActivity
   inherits from android::app::Activity
   function getIntent() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap({@Extra(key="SCAN_MODE", source={INTERNET}, sink={})}) Intent) in line 18
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/annotated-intent-receivers/com.google/MapsActivity.java
module com::google::android::maps::MapsActivity
   inherits from android::app::Activity
   function getIntent() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap() Intent) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/AddsSourceValidator.java
module sparta::checkers::AddsSourceValidator
   inherits from sparta::checkers::validator::BaseValidator
   function checkAddsSourcesData(AnnotatedTypeMirror,final ExpressionTree,final String) in line 162
      26 lines of code
      3 parameters
      2 conditional paths
      uses function checkforMissingSource(final ExpressionTree,final String,AnnotatedTypeMirror,AnnotatedTypeMirror) defined in sparta::checkers::AddsSourceValidator
      uses variable atypeFactory defined in sparta::checkers::AddsSourceValidator
   function checkforMissingSource(final ExpressionTree,final String,AnnotatedTypeMirror,AnnotatedTypeMirror) in line 189
      16 lines of code
      4 parameters
      4 conditional paths
      uses variable checker defined in sparta::checkers::AddsSourceValidator
   function getParamIndexFromAddsSourceData(ExecutableElement) in line 139
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable atypeFactory defined in sparta::checkers::AddsSourceValidator
   function isValidAddsSourceData(Tree,ExecutableElement,boolean) in line 67
      26 lines of code
      3 parameters
      7 conditional paths
      uses function getParamIndexFromAddsSourceData(ExecutableElement) defined in sparta::checkers::AddsSourceValidator
      uses variable checker defined in sparta::checkers::AddsSourceValidator
      uses variable node defined in d3.v2.min.js
   function visitMethod(MethodTree) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in d3.v2.min.js
      uses function isValidAddsSourceData(Tree,ExecutableElement,boolean) defined in sparta::checkers::AddsSourceValidator
   function visitMethodInvocation(MethodInvocationTree) in line 115
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses variable node defined in d3.v2.min.js
      uses function getParamIndexFromAddsSourceData(ExecutableElement) defined in sparta::checkers::AddsSourceValidator
      uses variable atypeFactory defined in sparta::checkers::AddsSourceValidator
      uses function isValidAddsSourceData(Tree,ExecutableElement,boolean) defined in sparta::checkers::AddsSourceValidator
      uses function checkAddsSourcesData(AnnotatedTypeMirror,final ExpressionTree,final String) defined in sparta::checkers::AddsSourceValidator
   function visitNewClass(NewClassTree) in line 95
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable node defined in d3.v2.min.js
      uses function getParamIndexFromAddsSourceData(ExecutableElement) defined in sparta::checkers::AddsSourceValidator
      uses variable atypeFactory defined in sparta::checkers::AddsSourceValidator
      uses function isValidAddsSourceData(Tree,ExecutableElement,boolean) defined in sparta::checkers::AddsSourceValidator
      uses function checkAddsSourcesData(AnnotatedTypeMirror,final ExpressionTree,final String) defined in sparta::checkers::AddsSourceValidator
   function AddsSourceValidator(AnnotatedTypeFactory,BaseTypeChecker) in line 46
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable atypeFactory defined in sparta::checkers::AddsSourceValidator
      uses variable checker defined in sparta::checkers::AddsSourceValidator
   variable atypeFactory in line 43
   variable checker in line 44
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/AndroidChecker.java
module sparta::checkers::AndroidChecker
   inherits from org::checkerframework::framework::source::AggregateChecker
   function getSupportedCheckers() in line 19
      9 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/ConditionalValidator.java
module sparta::checkers::ConditionalValidator
   inherits from sparta::checkers::validator::BaseValidator
   function checkConditionalPredicate(ExpressionTree) in line 40
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable atypeFactory defined in sparta::checkers::ConditionalValidator
      uses variable tree defined in d3.v2.min.js
      uses variable checker defined in sparta::checkers::ConditionalValidator
   function visitCase(CaseTree) in line 66
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
      uses function checkConditionalPredicate(ExpressionTree) defined in sparta::checkers::ConditionalValidator
   function visitConditionalExpression(ConditionalExpressionTree) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function checkConditionalPredicate(ExpressionTree) defined in sparta::checkers::ConditionalValidator
      uses variable node defined in d3.v2.min.js
   function visitDoWhileLoop(DoWhileLoopTree) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkConditionalPredicate(ExpressionTree) defined in sparta::checkers::ConditionalValidator
      uses variable node defined in d3.v2.min.js
   function visitForLoop(ForLoopTree) in line 87
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
      uses function checkConditionalPredicate(ExpressionTree) defined in sparta::checkers::ConditionalValidator
   function visitIf(IfTree) in line 54
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkConditionalPredicate(ExpressionTree) defined in sparta::checkers::ConditionalValidator
      uses variable node defined in d3.v2.min.js
   function visitSwitch(SwitchTree) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkConditionalPredicate(ExpressionTree) defined in sparta::checkers::ConditionalValidator
      uses variable node defined in d3.v2.min.js
   function visitWhileLoop(WhileLoopTree) in line 80
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkConditionalPredicate(ExpressionTree) defined in sparta::checkers::ConditionalValidator
      uses variable node defined in d3.v2.min.js
   function ConditionalValidator(AnnotatedTypeFactory,BaseTypeChecker) in line 33
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable atypeFactory defined in sparta::checkers::ConditionalValidator
      uses variable checker defined in sparta::checkers::ConditionalValidator
   variable atypeFactory in line 30
   variable checker in line 31
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/Flow.java
module sparta::checkers::Flow
   function addSink(PFPermission) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addSink(Set< PFPermission >) in line 86
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function convertToAnySink(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function addSource(PFPermission) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addSource(Set< PFPermission >) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function convertToAnySource(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function convertAnyToAllSinks(final Set< PFPermission >,boolean) in line 185
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable ANY defined in sparta::checkers::Flow
      uses function getSetOfAllSinks() defined in sparta::checkers::Flow
   function convertAnytoAllSources(final Set< PFPermission >,boolean) in line 201
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable ANY defined in sparta::checkers::Flow
      uses function getSetOfAllSinks() defined in sparta::checkers::Flow
   function convertFromParameterizedFlowPermission(Set< PFPermission >) in line 411
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function convertToAnySink(final Set< PFPermission >,boolean) in line 278
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getSetOfAllSinks() defined in sparta::checkers::Flow
      uses variable ANY defined in sparta::checkers::Flow
   function convertToAnySource(final Set< PFPermission >,boolean) in line 258
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getSetOfAllSources() defined in sparta::checkers::Flow
      uses variable ANY defined in sparta::checkers::Flow
   function convertToParameterizedFlowPermission(Set< FlowPermission >) in line 403
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function equals(Object) in line 111
      protection public
      20 lines of code
      1 parameters
      10 conditional paths
      uses function Flow() defined in sparta::checkers::Flow
   function getSetOfAllSinks() in line 235
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable values defined in d3.v2.min.js
      uses variable ANY defined in sparta::checkers::quals::FlowPermission
   function getSetOfAllSources() in line 217
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable ANY defined in sparta::checkers::quals::FlowPermission
   function getSinks(final AnnotatedTypeMirror) in line 132
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function getSinks(final AnnotationMirror) in line 150
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function convertToAnySink(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function getSources(final AnnotatedTypeMirror) in line 141
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function getSources(final AnnotationMirror) in line 164
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function convertToAnySource(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function hashCode() in line 102
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function hasSink() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function intersectSinks(AnnotationMirror,AnnotationMirror) in line 340
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getSinks(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
   function intersectSinks(Set< PFPermission >,Set< PFPermission >) in line 345
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function convertAnyToAllSinks(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
      uses function convertToAnySink(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function intersectSources(AnnotationMirror,AnnotationMirror) in line 307
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getSources(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
   function intersectSources(Set< PFPermission >,Set< PFPermission >) in line 313
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function convertAnytoAllSources(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
      uses function convertToAnySource(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function isBottom() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ANY defined in sparta::checkers::Flow
   function isBottom(AnnotatedTypeMirror) in line 295
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getSources(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
      uses function getSinks(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
      uses variable ANY defined in sparta::checkers::Flow
   function isTop(AnnotatedTypeMirror) in line 290
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getSources(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
      uses function getSinks(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
      uses variable ANY defined in sparta::checkers::Flow
   function toString() in line 60
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
   function unionSinks(AnnotationMirror,AnnotationMirror) in line 387
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getSinks(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
   function unionSinks(Set< PFPermission >,Set< PFPermission >) in line 397
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function convertToAnySink(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function unionSources(AnnotationMirror,AnnotationMirror) in line 370
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getSources(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
   function unionSources(Set< PFPermission >,Set< PFPermission >) in line 373
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function convertToAnySource(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function Flow(Set< PFPermission >,Set< PFPermission >) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function Flow(PFPermission,Set< PFPermission >) in line 29
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function convertToAnySink(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function Flow(Set< PFPermission >,PFPermission) in line 37
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function convertToAnySource(final Set< PFPermission >,boolean) defined in sparta::checkers::Flow
   function Flow(AnnotatedTypeMirror) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getSinks(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
      uses function getSources(final AnnotatedTypeMirror) defined in sparta::checkers::Flow
   function Flow() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function Flow(PFPermission) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable ANY in line 19
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/FlowAnalyzer.java
module sparta::checkers::FlowAnalyzer
   function addAssignmentFlow(AnnotatedTypeMirror,AnnotatedTypeMirror,TypeHierarchy,TreePath) in line 71
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
      uses variable assignmentFlows defined in sparta::checkers::FlowAnalyzer
      uses variable allFlows defined in sparta::checkers::FlowAnalyzer
   function addTypeFlow(AnnotatedTypeMirror,TypeHierarchy,TreePath) in line 84
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
      uses variable typeFlows defined in sparta::checkers::FlowAnalyzer
      uses variable allFlows defined in sparta::checkers::FlowAnalyzer
   function getAllFlowsFile() in line 304
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allFlowsFile defined in sparta::checkers::FlowAnalyzer
   function getFlowStrList(Collection< Flow >) in line 287
      8 lines of code
      1 parameters
      2 conditional paths
   function getForbiddenFlowsPairwise(Collection< Flow >) in line 247
      16 lines of code
      1 parameters
      5 conditional paths
      uses variable flowPolicy defined in sparta::checkers::FlowAnalyzer
      uses function areFlowsAllowed(final AnnotatedTypeMirror) defined in sparta::checkers::FlowPolicy
   function groupFlowsOnSource(Set< Flow >) in line 264
      14 lines of code
      1 parameters
      4 conditional paths
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
   function printAllFlows() in line 172
      protection public
      45 lines of code
      0 parameters
      7 conditional paths
      uses variable impliedFlowsVerboseFile defined in sparta::checkers::FlowAnalyzer
      uses function printSourcesAndSinks(PrintWriter) defined in sparta::checkers::FlowAnalyzer
      uses variable f defined in convert.py
      uses variable typeFlows defined in sparta::checkers::FlowAnalyzer
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
      uses function addSource(PFPermission) defined in sparta::checkers::Flow
      uses function addSink(PFPermission) defined in sparta::checkers::Flow
      uses variable assignmentFlows defined in sparta::checkers::FlowAnalyzer
      uses function printFlows(PrintWriter,List< String >,String) defined in sparta::checkers::FlowAnalyzer
      uses function getFlowStrList(Collection< Flow >) defined in sparta::checkers::FlowAnalyzer
      uses function groupFlowsOnSource(Set< Flow >) defined in sparta::checkers::FlowAnalyzer
      uses variable e defined in d3.v2.min.js
   function printAllFlowsWithSourceLocation() in line 129
      protection public
      26 lines of code
      0 parameters
      4 conditional paths
      uses variable allFlowsFile defined in sparta::checkers::FlowAnalyzer
      uses variable allFlows defined in sparta::checkers::FlowAnalyzer
      uses variable tree defined in d3.v2.min.js
      uses function toString() defined in sparta::checkers::Flow
      uses variable e defined in d3.v2.min.js
   function printFlows(PrintWriter,List< String >,String) in line 279
      7 lines of code
      3 parameters
      2 conditional paths
   function printForbiddenFlows() in line 218
      protection public
      20 lines of code
      0 parameters
      3 conditional paths
      uses variable impliedFlowsForbiddenFile defined in sparta::checkers::FlowAnalyzer
      uses function getForbiddenFlowsPairwise(Collection< Flow >) defined in sparta::checkers::FlowAnalyzer
      uses function groupFlowsOnSource(Set< Flow >) defined in sparta::checkers::FlowAnalyzer
      uses variable typeFlows defined in sparta::checkers::FlowAnalyzer
      uses variable assignmentFlows defined in sparta::checkers::FlowAnalyzer
      uses function printFlows(PrintWriter,List< String >,String) defined in sparta::checkers::FlowAnalyzer
      uses function getFlowStrList(Collection< Flow >) defined in sparta::checkers::FlowAnalyzer
      uses variable e defined in d3.v2.min.js
   function printIntentFlowsByComponent() in line 92
      protection public
      36 lines of code
      0 parameters
      8 conditional paths
      uses variable intentFlowsFile defined in sparta::checkers::FlowAnalyzer
      uses variable allFlows defined in sparta::checkers::FlowAnalyzer
      uses variable f defined in convert.py
      uses variable tree defined in d3.v2.min.js
      uses function toString() defined in sparta::checkers::Flow
      uses variable e defined in d3.v2.min.js
   function printSourcesAndSinks(PrintWriter) in line 156
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable f defined in convert.py
      uses variable typeFlows defined in sparta::checkers::FlowAnalyzer
   function setAllFlowsFiles(String) in line 308
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable allFlowsFile defined in sparta::checkers::FlowAnalyzer
   function setImpliedFlowsForbiddenFile(String) in line 296
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable impliedFlowsForbiddenFile defined in sparta::checkers::FlowAnalyzer
   function setImpliedFlowsVerboseFile(String) in line 300
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable impliedFlowsVerboseFile defined in sparta::checkers::FlowAnalyzer
   function FlowAnalyzer(FlowPolicy) in line 64
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable flowPolicy defined in sparta::checkers::FlowAnalyzer
      uses variable assignmentFlows defined in sparta::checkers::FlowAnalyzer
      uses variable typeFlows defined in sparta::checkers::FlowAnalyzer
      uses variable allFlows defined in sparta::checkers::FlowAnalyzer
   variable ALL_FLOWS_FILE_DEFAULT in line 49
   variable allFlows in line 60
   variable allFlowsFile in line 55
   variable assignmentFlows in line 58
   variable flowPolicy in line 62
   variable IMPLIED_FLOWS_FORBIDDEN_FILE_DEFAULT in line 47
   variable IMPLIED_FLOWS_VERBOSE_FILE_DEFAULT in line 48
   variable impliedFlowsForbiddenFile in line 53
   variable impliedFlowsVerboseFile in line 54
   variable INTENT_FLOWS_FILE_DEFAULT in line 50
   variable intentFlowsFile in line 56
   variable typeFlows in line 59
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/FlowAnnotatedTypeFactory.java
module sparta::checkers::FlowAnnotatedTypeFactory
   inherits from org::checkerframework::common::basetype::BaseAnnotatedTypeFactory
   function addAnnotationsToComponentType(AnnotationMirror,AnnotationMirror,AnnotatedTypeMirror) in line 394
      16 lines of code
      3 parameters
      6 conditional paths
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
   function addAnnotationsToComponentTypes(AnnotatedTypeMirror,AnnotationMirror,AnnotationMirror) in line 374
      11 lines of code
      3 parameters
      3 conditional paths
      uses function addAnnotationsToComponentType(AnnotationMirror,AnnotationMirror,AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function addCheckedCodeDefaults(QualifierDefaults) in line 259
      26 lines of code
      1 parameters
      1 conditional paths
      uses variable NOSINK defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
   function allParametersMatch(List< String >,List< String >) in line 970
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses function singleParametersMatch(String,List< String >) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function annotateImplicit(Tree,AnnotatedTypeMirror,boolean) in line 310
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses function handleDefaulting(final Element,final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function annotateImplicit(Element,AnnotatedTypeMirror) in line 318
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function handleDefaulting(final Element,final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function completePolicyFlows(final AnnotatedTypeMirror) in line 568
      29 lines of code
      1 parameters
      7 conditional paths
      uses function shouldNotComplete(Set< AnnotationMirror >) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getFlowPolicy() defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getIntersectionAllowedSinks(final Set< PFPermission >) defined in sparta::checkers::FlowPolicy
      uses function createAnnoFromSink(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getIntersectionAllowedSources(finalCollection< PFPermission >) defined in sparta::checkers::FlowPolicy
      uses function createAnnoFromSource(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function constructorFromUse(NewClassTree) in line 638
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses variable method defined in convert.py
      uses variable polyReceiver defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function annotate(MethodInvocationTree,AnnotatedExecutableType) defined in sparta::checkers::poly::ReceiverPolymorphism
      uses variable polyParameterPerm defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function annotate(MethodInvocationTree,AnnotatedExecutableType) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
   function createAnnoFromSink(PFPermission) in line 180
      4 lines of code
      1 parameters
      1 conditional paths
   function createAnnoFromSink(final Set< PFPermission >) in line 286
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createIFlowAnnotation(final Set< PFPermission >,final AnnotationBuilder) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function createAnnoFromSource(PFPermission) in line 185
      4 lines of code
      1 parameters
      1 conditional paths
   function createAnnoFromSource(Set< PFPermission >) in line 292
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createIFlowAnnotation(final Set< PFPermission >,final AnnotationBuilder) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function createAnnotatedTypeFormatter() in line 191
      4 lines of code
      0 parameters
      1 conditional paths
      uses function createAnnotationFormatter() defined in sparta::checkers::FlowAnnotatedTypeFactory
   function createAnnotationFormatter() in line 196
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable PRETTY_PRINT_OPTION defined in sparta::checkers::FlowChecker
   function createFlowTransferFunction(CFAbstractAnalysis< CFValue, CFStore, CFTransfer >) in line 204
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function createIFlowAnnotation(final Set< PFPermission >,final AnnotationBuilder) in line 298
      9 lines of code
      2 parameters
      2 conditional paths
   function createQualifierHierarchy(MultiGraphFactory) in line 654
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createQualifierHierarchyFactory() in line 649
      3 lines of code
      0 parameters
      1 conditional paths
   function createSupportedTypeQualifiers() in line 158
      6 lines of code
      0 parameters
      1 conditional paths
   function createTreeAnnotator() in line 412
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getFlowCheckerImplicits() defined in sparta::checkers::FlowAnnotatedTypeFactory
   function createTypeAnnotator() in line 484
      6 lines of code
      0 parameters
      1 conditional paths
   function createTypeHierarchy() in line 667
      5 lines of code
      0 parameters
      1 conditional paths
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
      uses function equals(Object) defined in sparta::checkers::Flow
   function getFlowAnalizer() in line 955
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flowAnalizer defined in sparta::checkers::FlowAnnotatedTypeFactory
   function getFlowCheckerImplicits() in line 420
      24 lines of code
      0 parameters
      1 conditional paths
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
   function getFlowPolicy() in line 951
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flowPolicy defined in sparta::checkers::FlowAnnotatedTypeFactory
   function getPolyReceiverQuals() in line 993
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in d3.v2.min.js
      uses variable NOSINK defined in sparta::checkers::FlowAnnotatedTypeFactory
   function handleDefaulting(final Element,final AnnotatedTypeMirror) in line 323
      16 lines of code
      2 parameters
      4 conditional paths
      uses function handlePolyFlow(Element,AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function handlePolyFlow(Element,AnnotatedTypeMirror) in line 340
      33 lines of code
      2 parameters
      8 conditional paths
      uses variable method defined in convert.py
      uses function addAnnotationsToComponentTypes(AnnotatedTypeMirror,AnnotationMirror,AnnotationMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function initQualifierDefaults() in line 229
      28 lines of code
      0 parameters
      1 conditional paths
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
   function isMatchInSet(PFPermission,Set< PFPermission >) in line 959
      protection public
      10 lines of code
      2 parameters
      4 conditional paths
      uses function getPermission() defined in sparta::checkers::quals::PFPermission
      uses function allParametersMatch(List< String >,List< String >) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getParameters() defined in sparta::checkers::quals::PFPermission
   function methodFromUse(MethodInvocationTree) in line 627
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses variable method defined in convert.py
      uses variable polyReceiver defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function annotate(MethodInvocationTree,AnnotatedExecutableType) defined in sparta::checkers::poly::ReceiverPolymorphism
      uses variable polyParameterPerm defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function annotate(MethodInvocationTree,AnnotatedExecutableType) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
   function postInit() in line 166
      13 lines of code
      0 parameters
      1 conditional paths
      uses function initQualifierDefaults() defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable polyReceiver defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable polyParameterPerm defined in sparta::checkers::FlowAnnotatedTypeFactory
   function shouldNotComplete(Set< AnnotationMirror >) in line 607
      17 lines of code
      1 parameters
      6 conditional paths
   function singleParametersMatch(String,List< String >) in line 979
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses function wildcardMatch(String,String) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function wildcardMatch(String,String) in line 988
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function FlowAnnotatedTypeFactory(BaseTypeChecker) in line 121
      protection public
      35 lines of code
      1 parameters
      3 conditional paths
      uses variable ANY defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable ANY defined in sparta::checkers::quals::FlowPermission
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function createAnnoFromSource(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable NOSINK defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function createAnnoFromSink(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable POLYALL defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable SOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable SINK defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable POLICY_FILE_OPTION defined in sparta::checkers::FlowPolicy
      uses variable flowPolicy defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable flowAnalizer defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getFlowPolicy() defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function postInit() defined in sparta::checkers::FlowAnnotatedTypeFactory
   variable ANY in line 109
   variable flowAnalizer in line 107
   variable flowPolicy in line 104
   variable NOSINK in line 98
   variable NOSOURCE in line 97
   variable POLYALL in line 99
   variable polyParameterPerm in line 112
   variable polyReceiver in line 111
   variable SINK in line 102
   variable SOURCE in line 101
   variable time in line 566
      protection public
module sparta::checkers::FlowAnnotatedTypeFactory::FlowPolicyTreeAnnotator
   inherits from org::checkerframework::framework::type::treeannotator::TreeAnnotator
   function visitNewClass(NewClassTree,AnnotatedTypeMirror) in line 457
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitTypeCast(TypeCastTree,AnnotatedTypeMirror) in line 475
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable node defined in d3.v2.min.js
   function FlowPolicyTreeAnnotator(FlowAnnotatedTypeFactory) in line 452
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::FlowAnnotatedTypeFactory::FlowPolicyTypeAnnotator
   inherits from org::checkerframework::framework::type::typeannotator::TypeAnnotator
   function visitArray(AnnotatedArrayType,Void) in line 505
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function visitDeclared(AnnotatedDeclaredType,Void) in line 510
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function visitExecutable(AnnotatedExecutableType,Void) in line 515
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable t defined in d3.v2.min.js
   function visitIntersection(AnnotatedIntersectionType,Void) in line 527
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function visitPrimitive(AnnotatedPrimitiveType,Void) in line 533
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function visitTypeVariable(AnnotatedTypeVariable,Void) in line 538
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function visitUnion(AnnotatedUnionType,Void) in line 549
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function visitWildcard(AnnotatedWildcardType,Void) in line 554
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function FlowPolicyTypeAnnotator(FlowAnnotatedTypeFactory) in line 501
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::FlowAnnotatedTypeFactory::NormalizingStructuralEqualityComparer
   inherits from org::checkerframework::framework::type::StructuralEqualityComparer
   function arePrimeAnnosEqual(AnnotatedTypeMirror,AnnotatedTypeMirror) in line 682
      7 lines of code
      2 parameters
      1 conditional paths
   function NormalizingStructuralEqualityComparer(DefaultRawnessComparer) in line 676
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::FlowAnnotatedTypeFactory::FlowTypeHierarchy
   inherits from org::checkerframework::framework::type::DefaultTypeHierarchy
   function createEqualityComparer() in line 699
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FlowTypeHierarchy(BaseTypeChecker,QualifierHierarchy,boolean,boolean) in line 693
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
module sparta::checkers::FlowAnnotatedTypeFactory::FlowQualifierHierarchy
   inherits from org::checkerframework::framework::util::MultiGraphQualifierHierarchy
   function addPolyRelations(QualifierHierarchy,Map< AnnotationMirror, Set< AnnotationMirror >>,Map< AnnotationMirror, AnnotationMirror >,Set< AnnotationMirror >,Set< AnnotationMirror >) in line 813
      21 lines of code
      5 parameters
      1 conditional paths
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable POLYALL defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable NOSINK defined in sparta::checkers::FlowAnnotatedTypeFactory
   function boundSink(final Set< PFPermission >) in line 937
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable SINK defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable ANY defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function createAnnoFromSink(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function boundSource(final Set< PFPermission >) in line 923
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable ANY defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable SOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function createAnnoFromSource(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function findBottoms(Map< AnnotationMirror, Set< AnnotationMirror >>) in line 712
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
   function findTops(Map< AnnotationMirror, Set< AnnotationMirror >>) in line 721
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable NOSINK defined in sparta::checkers::FlowAnnotatedTypeFactory
   function getTopAnnotation(AnnotationMirror) in line 752
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable NOSINK defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable POLYALL defined in sparta::checkers::FlowAnnotatedTypeFactory
   function greatestLowerBound(AnnotationMirror,AnnotationMirror) in line 881
      protection public
      41 lines of code
      2 parameters
      13 conditional paths
      uses variable SOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable SINK defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable ANY defined in sparta::checkers::FlowAnnotatedTypeFactory
   function isPolySinkQualifier(AnnotationMirror) in line 745
      5 lines of code
      1 parameters
      1 conditional paths
   function isPolySourceQualifier(AnnotationMirror) in line 735
      5 lines of code
      1 parameters
      1 conditional paths
   function isSinkQualifier(AnnotationMirror) in line 741
      3 lines of code
      1 parameters
      1 conditional paths
   function isSourceQualifier(AnnotationMirror) in line 730
      4 lines of code
      1 parameters
      1 conditional paths
   function isSubtype(AnnotationMirror,AnnotationMirror) in line 766
      protection public
      32 lines of code
      2 parameters
      9 conditional paths
      uses variable ANY defined in sparta::checkers::FlowAnnotatedTypeFactory
   function isSuperSet(Set< PFPermission >,Set< PFPermission >) in line 799
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable ANY defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function isMatchInSet(PFPermission,Set< PFPermission >) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function leastUpperBound(AnnotationMirror,AnnotationMirror) in line 836
      protection public
      43 lines of code
      2 parameters
      14 conditional paths
      uses variable SOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable SINK defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable ANY defined in sparta::checkers::FlowAnnotatedTypeFactory
   function FlowQualifierHierarchy(MultiGraphFactory) in line 707
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable f defined in convert.py
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/FlowAnnotationFormatter.java
module sparta::checkers::FlowAnnotationFormatter
   inherits from org::checkerframework::framework::util::DefaultAnnotationFormatter
   function formatAnnotationString(Collection<?extends AnnotationMirror >,boolean) in line 22
      protection public
      25 lines of code
      2 parameters
      6 conditional paths
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
      uses function toString() defined in sparta::checkers::Flow
      uses variable append defined in d3.v2.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/FlowChecker.java
module sparta::checkers::FlowChecker
   inherits from org::checkerframework::common::basetype::BaseTypeChecker
   function createSourceVisitor() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
   function getImmediateSubcheckerClasses() in line 46
      5 lines of code
      0 parameters
      1 conditional paths
   function initChecker() in line 53
      protection public
      20 lines of code
      0 parameters
      5 conditional paths
   function typeProcessingOver() in line 75
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable flowAnalizer defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function printAllFlows() defined in sparta::checkers::FlowAnalyzer
      uses function printForbiddenFlows() defined in sparta::checkers::FlowAnalyzer
      uses function printAllFlowsWithSourceLocation() defined in sparta::checkers::FlowAnalyzer
      uses function printIntentFlowsByComponent() defined in sparta::checkers::FlowAnalyzer
   function FlowChecker() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable MSG_FILTER_OPTION in line 33
      protection public
   variable PRETTY_PRINT_OPTION in line 34
      protection public
   variable SPARTA_OUTPUT_DIR in line 32
      protection public
   variable unfilteredMessages in line 36
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/FlowPolicy.java
module sparta::checkers::FlowPolicy
   function addToMap(final Set< PFPermission >,PFPermission,List< PFPermission >) in line 379
      18 lines of code
      3 parameters
      3 conditional paths
      uses variable allowedSourceToSinks defined in sparta::checkers::FlowPolicy
      uses variable ANY defined in sparta::checkers::FlowPolicy
   function annotatedTypeMirrorToFlows(final AnnotatedTypeMirror) in line 87
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function areFlowsAllowed(final AnnotatedTypeMirror) in line 98
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function annotatedTypeMirrorToFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowPolicy
   function areFlowsAllowed(final Pair< Set< PFPermission >, Set< PFPermission >>) in line 135
      protection public
      39 lines of code
      1 parameters
      9 conditional paths
      uses variable sinksFromAnySource defined in sparta::checkers::FlowPolicy
      uses function getAllowedSinks(final PFPermission) defined in sparta::checkers::FlowPolicy
      uses variable ANY defined in sparta::checkers::FlowPolicy
   function checkForTransitivity() in line 403
      40 lines of code
      0 parameters
      11 conditional paths
      uses variable allowedSourceToSinks defined in sparta::checkers::FlowPolicy
      uses variable allowedSinkToSources defined in sparta::checkers::FlowPolicy
      uses function getAllowedSources(PFPermission) defined in sparta::checkers::FlowPolicy
      uses function getAllowedSinks(final PFPermission) defined in sparta::checkers::FlowPolicy
      uses function areFlowsAllowed(final AnnotatedTypeMirror) defined in sparta::checkers::FlowPolicy
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
      uses function addSink(PFPermission) defined in sparta::checkers::Flow
      uses function warning(String) defined in sparta::checkers::FlowPolicy
   function enumValuesToString(final Enum<?>[]) in line 451
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
   function error(String) in line 474
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable processingEnv defined in sparta::checkers::FlowPolicy
      uses function warning(String) defined in sparta::checkers::FlowPolicy
   function forbiddenFlows(final AnnotatedTypeMirror) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function annotatedTypeMirrorToFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowPolicy
   function forbiddenFlows(final Pair< Set< PFPermission >, Set< PFPermission >>) in line 117
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function areFlowsAllowed(final AnnotatedTypeMirror) defined in sparta::checkers::FlowPolicy
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
   function getAllowedSinks(final PFPermission) in line 247
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable allowedSourceToSinks defined in sparta::checkers::FlowPolicy
      uses function getPermission() defined in sparta::checkers::quals::PFPermission
      uses function getParameters() defined in sparta::checkers::quals::PFPermission
   function getAllowedSources(PFPermission) in line 229
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable allowedSinkToSources defined in sparta::checkers::FlowPolicy
      uses function getPermission() defined in sparta::checkers::quals::PFPermission
      uses function getParameters() defined in sparta::checkers::quals::PFPermission
   function getDefaultAllowedFlows() in line 81
      4 lines of code
      0 parameters
      1 conditional paths
   function getIntersectionAllowedSinks(final Set< PFPermission >) in line 201
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable ANY defined in sparta::checkers::FlowPolicy
      uses function getAllowedSinks(final PFPermission) defined in sparta::checkers::FlowPolicy
      uses function getSinkFromSource(final PFPermission,boolean) defined in sparta::checkers::FlowPolicy
   function getIntersectionAllowedSources(finalCollection< PFPermission >) in line 216
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable ANY defined in sparta::checkers::FlowPolicy
      uses function getAllowedSources(PFPermission) defined in sparta::checkers::FlowPolicy
      uses function getSourceFromSink(final PFPermission,boolean) defined in sparta::checkers::FlowPolicy
   function getSet(final PFPermission,final Map< PFPermission, Set< PFPermission >>,boolean) in line 505
      20 lines of code
      3 parameters
      4 conditional paths
      uses variable values defined in d3.v2.min.js
      uses variable data defined in d3.v2.min.js
      uses variable ANY defined in sparta::checkers::FlowPolicy
   function getSinkFromSource(final PFPermission,boolean) in line 492
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getSet(final PFPermission,final Map< PFPermission, Set< PFPermission >>,boolean) defined in sparta::checkers::FlowPolicy
      uses variable allowedSourceToSinks defined in sparta::checkers::FlowPolicy
   function getSourceFromSink(final PFPermission,boolean) in line 498
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getSet(final PFPermission,final Map< PFPermission, Set< PFPermission >>,boolean) defined in sparta::checkers::FlowPolicy
      uses variable allowedSinkToSources defined in sparta::checkers::FlowPolicy
   function isWhiteSpaceLine(final String) in line 447
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable WHITE_SPACE_PATTERN defined in sparta::checkers::FlowPolicy
      uses variable line defined in d3.v2.min.js
   function lineError(final File,final int,final String,final String) in line 468
      5 lines of code
      4 parameters
      1 conditional paths
      uses function error(String) defined in sparta::checkers::FlowPolicy
      uses variable line defined in d3.v2.min.js
   function notAllowed(String) in line 398
      3 lines of code
      1 parameters
      1 conditional paths
   function readPolicyFile(final File) in line 294
      84 lines of code
      1 parameters
      11 conditional paths
      uses variable ANY defined in sparta::checkers::quals::FlowPermission
      uses variable line defined in d3.v2.min.js
      uses function stripComment(final String) defined in sparta::checkers::FlowPolicy
      uses function isWhiteSpaceLine(final String) defined in sparta::checkers::FlowPolicy
      uses function lineError(final File,final int,final String,final String) defined in sparta::checkers::FlowPolicy
      uses function notAllowed(String) defined in sparta::checkers::FlowPolicy
      uses function addToMap(final Set< PFPermission >,PFPermission,List< PFPermission >) defined in sparta::checkers::FlowPolicy
      uses function enumValuesToString(final Enum<?>[]) defined in sparta::checkers::FlowPolicy
      uses variable values defined in d3.v2.min.js
   function reverse(final Map< PFPermission, Set< PFPermission >>) in line 526
      20 lines of code
      1 parameters
      5 conditional paths
   function stripComment(final String) in line 184
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
   function warning(String) in line 483
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable processingEnv defined in sparta::checkers::FlowPolicy
   function FlowPolicy(final File,ProcessingEnvironment) in line 64
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable processingEnv defined in sparta::checkers::FlowPolicy
      uses variable ANY defined in sparta::checkers::FlowPolicy
      uses variable ANY defined in sparta::checkers::quals::FlowPermission
      uses function getDefaultAllowedFlows() defined in sparta::checkers::FlowPolicy
      uses function readPolicyFile(final File) defined in sparta::checkers::FlowPolicy
      uses variable allowedSourceToSinks defined in sparta::checkers::FlowPolicy
      uses function reverse(final Map< PFPermission, Set< PFPermission >>) defined in sparta::checkers::FlowPolicy
      uses function checkForTransitivity() defined in sparta::checkers::FlowPolicy
   variable allowedSinkToSources in line 51
   variable allowedSourceToSinks in line 50
   variable ANY in line 55
   variable EMPTY in line 46
      protection public
   variable EMPTY_REGEX in line 47
      protection public
   variable POLICY_FILE_OPTION in line 44
      protection public
   variable processingEnv in line 56
   variable sinksFromAnySource in line 53
   variable WHITE_SPACE_PATTERN in line 444
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/FlowShow.java
module sparta::checkers::FlowShow
   inherits from sparta::checkers::FlowChecker
   function createSourceVisitor() in line 30
      3 lines of code
      0 parameters
      1 conditional paths
module sparta::checkers::FlowShow::FlowShowVisitor
   inherits from org::checkerframework::common::basetype::BaseTypeVisitor
   function createTypeFactory() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Tree,Void) in line 46
      protection public
      31 lines of code
      2 parameters
      7 conditional paths
      uses variable tree defined in d3.v2.min.js
   function FlowShowVisitor(BaseTypeChecker) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/FlowVisitor.java
module sparta::checkers::FlowVisitor
   inherits from sparta::checkers::validator::BaseFlowVisitor
   function areFlowsValid(final AnnotatedTypeMirror,Tree) in line 88
      10 lines of code
      2 parameters
      2 conditional paths
      uses function areFlowsAllowed(final AnnotatedTypeMirror) defined in sparta::checkers::FlowPolicy
   function commonAssignmentCheck(AnnotatedTypeMirror,AnnotatedTypeMirror,Tree,String,boolean) in line 77
      9 lines of code
      5 parameters
      1 conditional paths
   function createTypeFactory() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
   function createTypeValidator() in line 100
      12 lines of code
      0 parameters
      2 conditional paths
   function isValidUse(AnnotatedDeclaredType,AnnotatedTypeMirror.AnnotatedDeclaredType,Tree) in line 47
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function areFlowsValid(final AnnotatedTypeMirror,Tree) defined in sparta::checkers::FlowVisitor
      uses variable tree defined in d3.v2.min.js
   function isValidUse(AnnotatedPrimitiveType,Tree) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function areFlowsValid(final AnnotatedTypeMirror,Tree) defined in sparta::checkers::FlowVisitor
      uses variable tree defined in d3.v2.min.js
   function isValidUse(AnnotatedArrayType,Tree) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function areFlowsValid(final AnnotatedTypeMirror,Tree) defined in sparta::checkers::FlowVisitor
      uses variable tree defined in d3.v2.min.js
   function visitAnnotatedType(AnnotatedTypeTree,Void) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitAnnotation(AnnotationTree,Void) in line 71
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FlowVisitor(BaseTypeChecker) in line 27
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable checkConditional defined in sparta::checkers::FlowVisitor
      uses function setValidator(Validator...) defined in sparta::checkers::validator::BaseFlowVisitor
   variable CHECK_CONDITIONALS_OPTION in line 23
      protection public
   variable checkConditional in line 25
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/ComponentMap.java
module sparta::checkers::intents::ComponentMap
   function formatComponentMapError(final File,final int,final String,final String) in line 161
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable line defined in d3.v2.min.js
   function getIntentMap() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable componentMap defined in sparta::checkers::intents::ComponentMap
   function isWhiteSpaceLine(final String) in line 157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable WHITE_SPACE_PATTERN defined in sparta::checkers::intents::ComponentMap
      uses variable line defined in d3.v2.min.js
   function readComponentMapFile(final File) in line 58
      96 lines of code
      1 parameters
      15 conditional paths
      uses variable EMPTY_REGEX defined in sparta::checkers::intents::ComponentMap
      uses variable linesToUpdate defined in sparta::checkers::intents::ComponentMap
      uses variable line defined in d3.v2.min.js
      uses function stripComment(final String) defined in sparta::checkers::intents::ComponentMap
      uses variable updateLine defined in sparta::checkers::intents::ComponentMap
      uses function formatComponentMapError(final File,final int,final String,final String) defined in sparta::checkers::intents::ComponentMap
      uses function isWhiteSpaceLine(final String) defined in sparta::checkers::intents::ComponentMap
      uses variable EMPTY defined in sparta::checkers::intents::ComponentMap
      uses variable componentMap defined in sparta::checkers::intents::ComponentMap
   function stripComment(final String) in line 40
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
   function ComponentMap(final String) in line 28
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable componentMap defined in sparta::checkers::intents::ComponentMap
      uses function readComponentMapFile(final File) defined in sparta::checkers::intents::ComponentMap
   variable COMPONENT_MAP_FILE_OPTION in line 19
      protection public
   variable componentMap in line 26
   variable EMPTY in line 21
   variable EMPTY_REGEX in line 22
   variable linesToUpdate in line 24
      protection public
   variable updateLine in line 23
      protection public
   variable WHITE_SPACE_PATTERN in line 155
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/componentmap/IntentFilter.java
module sparta::checkers::intents::componentmap::IntentFilter
   function addAction(String) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addCategory(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addData(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable data defined in d3.v2.min.js
   function hasAction(String) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAction(List< String >) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCategories(List< String >) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setData(List< String >) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable data defined in d3.v2.min.js
   function setHasURI(boolean) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 51
      protection public
      33 lines of code
      0 parameters
      6 conditional paths
      uses variable data defined in d3.v2.min.js
   function IntentFilter() in line 12
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in d3.v2.min.js
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/componentmap/ProcessAndroidManifest.java
module sparta::checkers::intents::componentmap::ProcessAndroidManifest
   function main(String[]) in line 20
      protection public
      37 lines of code
      1 parameters
      31 conditional paths
      uses variable args defined in convert.py
      uses variable e defined in d3.v2.min.js
      uses variable fw defined in d3.v2.min.js
      uses variable filter defined in d3.v2.min.js
      uses function addAction(String) defined in sparta::checkers::intents::componentmap::IntentFilter
      uses function addCategory(String) defined in sparta::checkers::intents::componentmap::IntentFilter
      uses function setHasURI(boolean) defined in sparta::checkers::intents::componentmap::IntentFilter
      uses variable data defined in d3.v2.min.js
      uses variable path defined in d3.v2.min.js
      uses function addData(String) defined in sparta::checkers::intents::componentmap::IntentFilter
      uses variable toString defined in d3.v2.min.js
module sparta::checkers::intents::componentmap::SAXHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function characters(char[],int,int) in line 180
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function endElement(String,String,String) in line 156
      protection public
      22 lines of code
      3 parameters
      1 conditional paths
   function startElement(String,String,String,Attributes) in line 73
      protection public
      81 lines of code
      4 parameters
      1 conditional paths
module sparta::checkers::intents::componentmap::Component
   function addFilter(IntentFilter) in line 206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 193
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function Component() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/componentmap/ProcessEpicOutput.java
module sparta::checkers::intents::componentmap::ProcessEpicOutput
   function addCMEntry(String,String) in line 111
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable receivers defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable componentMap defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
   function addCMEntryURI(String,String,String) in line 122
      15 lines of code
      3 parameters
      3 conditional paths
      uses variable receivers defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable componentMapURI defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable filter defined in d3.v2.min.js
   function bytecodeDescriptorToSimpleJava(String) in line 138
      61 lines of code
      1 parameters
      60 conditional paths
      uses variable i defined in convert.py
      uses variable filters defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable file defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable receivers defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable runtimeAssignedIntents defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable filter defined in d3.v2.min.js
      uses variable fw defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable e defined in d3.v2.min.js
      uses function addAction(String) defined in sparta::checkers::intents::componentmap::IntentFilter
      uses function addCategory(String) defined in sparta::checkers::intents::componentmap::IntentFilter
      uses function addCMEntry(String,String) defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable componentMap defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable componentMapURI defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable senderFilterMap defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable updateLine defined in sparta::checkers::intents::ComponentMap
      uses variable UNKNOWN defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable RUN_TIME_ASSIGNED defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable receiverNotFoundIntents defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable NOT_FOUND defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
   function main(String[]) in line 481
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable componentMap defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable componentMapURI defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable receivers defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable senderFilterMap defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable runtimeAssignedIntents defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable receiverNotFoundIntents defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable args defined in convert.py
   variable componentMap in line 26
   variable componentMapFile in line 22
   variable componentMapURI in line 27
   variable file in line 24
   variable filters in line 23
   variable fw in line 25
   variable NOT_FOUND in line 35
      protection public
   variable receiverNotFoundIntents in line 31
   variable receivers in line 28
   variable RUN_TIME_ASSIGNED in line 34
      protection public
   variable runtimeAssignedIntents in line 30
   variable senderFilterMap in line 29
   variable UNKNOWN in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/IntentAnnotatedTypeFactory.java
module sparta::checkers::intents::IntentAnnotatedTypeFactory
   inherits from sparta::checkers::FlowAnnotatedTypeFactory
   function addCheckedCodeDefaults(QualifierDefaults) in line 286
      7 lines of code
      1 parameters
      1 conditional paths
   function changeMethodReturnType(MethodInvocationTree,Pair< AnnotatedExecutableType, List< AnnotatedTypeMirror >>) in line 815
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses function getLUBIExtraFromPutExtraOrGetExtra(MethodInvocationTree,AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable hostSetTypeVisitor defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function changeParametersToIntentMapKeyType(MethodInvocationTree,Pair< AnnotatedExecutableType, List< AnnotatedTypeMirror >>) in line 224
      40 lines of code
      2 parameters
      7 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses variable aliasingATF defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable hostSetTypeVisitor defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function getLUBIExtraFromPutExtraOrGetExtra(MethodInvocationTree,AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function checkForRefinementCM() in line 146
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable componentMap defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable linesToUpdate defined in sparta::checkers::intents::ComponentMap
   function completeFlowsInIExtra(AnnotatedTypeMirror) in line 436
      31 lines of code
      1 parameters
      6 conditional paths
      uses variable EXTRA_DEFAULT defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getFlowPolicy() defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getIntersectionAllowedSinks(final Set< PFPermission >) defined in sparta::checkers::FlowPolicy
      uses function getIntersectionAllowedSources(finalCollection< PFPermission >) defined in sparta::checkers::FlowPolicy
   function createAnnotationFormatter() in line 134
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable PRETTY_PRINT_OPTION defined in sparta::checkers::FlowChecker
   function createFlowTransferFunction(CFAbstractAnalysis< CFValue, CFStore, CFTransfer >) in line 197
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function createQualifierHierarchy(MultiGraphFactory) in line 469
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createSupportedTypeQualifiers() in line 126
      6 lines of code
      0 parameters
      1 conditional paths
   function createTopIntentMap() in line 158
      5 lines of code
      0 parameters
      1 conditional paths
   function createTreeAnnotator() in line 295
      17 lines of code
      0 parameters
      1 conditional paths
      uses function getFlowCheckerImplicits() defined in sparta::checkers::FlowAnnotatedTypeFactory
   function createTypeAnnotator() in line 350
      3 lines of code
      0 parameters
      1 conditional paths
   function getAliasingTypeFactory() in line 902
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getComponentMap() in line 896
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable componentMap defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function getKeysFromPutExtraOrGetExtraCall(MethodInvocationTree) in line 834
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses variable keys defined in d3.v2.min.js
      uses function getValueATF() defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable tree defined in d3.v2.min.js
      uses variable t defined in d3.v2.min.js
      uses variable k defined in d3.v2.min.js
      uses variable toString defined in d3.v2.min.js
   function getLUBIExtraFromPutExtraOrGetExtra(MethodInvocationTree,AnnotatedTypeMirror) in line 265
      19 lines of code
      2 parameters
      4 conditional paths
      uses variable keys defined in d3.v2.min.js
      uses function getKeysFromPutExtraOrGetExtraCall(MethodInvocationTree) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable tree defined in d3.v2.min.js
   function getValueATF() in line 905
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function methodFromUse(MethodInvocationTree) in line 174
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses function changeMethodReturnType(MethodInvocationTree,Pair< AnnotatedExecutableType, List< AnnotatedTypeMirror >>) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function setTypeToTop(List< AnnotatedTypeMirror >) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function changeParametersToIntentMapKeyType(MethodInvocationTree,Pair< AnnotatedExecutableType, List< AnnotatedTypeMirror >>) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable hostSetTypeVisitor defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function setTypeToTop(List< AnnotatedTypeMirror >) in line 212
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable hostSetTypeVisitor defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function IntentAnnotatedTypeFactory(BaseTypeChecker) in line 94
      protection public
      30 lines of code
      1 parameters
      2 conditional paths
      uses variable COMPONENT_MAP_FILE_OPTION defined in sparta::checkers::intents::ComponentMap
      uses variable aliasingATF defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable componentMap defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function checkForRefinementCM() defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable getIntent defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable setIntent defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable INTENT_MAP defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable NOSOURCE defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses variable NOSINK defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function createTopIntentMap() defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable EXTRA_DEFAULT defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable EXTRA_DEFAULT defined in sparta::checkers::quals::FlowPermission
      uses function postInit() defined in sparta::checkers::FlowAnnotatedTypeFactory
   variable aliasingATF in line 89
   variable componentMap in line 90
   variable EXTRA_DEFAULT in line 92
   variable getIntent in line 87
   variable hostSetTypeVisitor in line 91
   variable INTENT_MAP in line 84
   variable setIntent in line 88
module sparta::checkers::intents::IntentAnnotatedTypeFactory::IntentTreeAnnotator
   inherits from FlowPolicyTreeAnnotator
   function completeIExtraFlows(Tree,AnnotatedTypeMirror) in line 336
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function defaultAction(Tree,AnnotatedTypeMirror) in line 321
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completeIExtraFlows(Tree,AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory::IntentTreeAnnotator
      uses variable tree defined in d3.v2.min.js
   function IntentTreeAnnotator(FlowAnnotatedTypeFactory) in line 316
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::intents::IntentAnnotatedTypeFactory::IntentTypeAnnotator
   inherits from FlowPolicyTypeAnnotator
   function visitArray(AnnotatedArrayType,Void) in line 385
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function visitDeclared(AnnotatedDeclaredType,Void) in line 390
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function visitExecutable(AnnotatedExecutableType,Void) in line 360
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable t defined in d3.v2.min.js
      uses function completePolicyFlows(final AnnotatedTypeMirror) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function visitIntersection(AnnotatedIntersectionType,Void) in line 396
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function visitPrimitive(AnnotatedPrimitiveType,Void) in line 402
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function visitTypeVariable(AnnotatedTypeVariable,Void) in line 407
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function visitUnion(AnnotatedUnionType,Void) in line 418
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function visitWildcard(AnnotatedWildcardType,Void) in line 423
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function completeFlowsInIExtra(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function IntentTypeAnnotator(FlowAnnotatedTypeFactory) in line 355
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::intents::IntentAnnotatedTypeFactory::IntentQualifierHierarchy
   inherits from FlowQualifierHierarchy
   function addPolyRelations(QualifierHierarchy,Map< AnnotationMirror, Set< AnnotationMirror >>,Map< AnnotationMirror, AnnotationMirror >,Set< AnnotationMirror >,Set< AnnotationMirror >) in line 593
      15 lines of code
      5 parameters
      1 conditional paths
      uses variable POLYALL defined in sparta::checkers::FlowAnnotatedTypeFactory
   function findBottoms(Map< AnnotationMirror, Set< AnnotationMirror >>) in line 480
      6 lines of code
      1 parameters
      1 conditional paths
   function findTops(Map< AnnotationMirror, Set< AnnotationMirror >>) in line 488
      6 lines of code
      1 parameters
      1 conditional paths
   function getTopAnnotation(AnnotationMirror) in line 519
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function greatestLowerBound(AnnotationMirror,AnnotationMirror) in line 718
      protection public
      64 lines of code
      2 parameters
      12 conditional paths
      uses variable INTENT_MAP defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function hostIsExactType(AnnotationMirror,AnnotationMirror,String) in line 618
      16 lines of code
      3 parameters
      1 conditional paths
   function hostKeysMapToSameType(AnnotationMirror,String,AnnotationMirror) in line 788
      13 lines of code
      3 parameters
      1 conditional paths
   function isIExtraQualifier(AnnotationMirror) in line 502
      3 lines of code
      1 parameters
      1 conditional paths
   function isIntentMapBottomQualifier(AnnotationMirror) in line 506
      3 lines of code
      1 parameters
      1 conditional paths
   function isIntentMapNewQualifier(AnnotationMirror) in line 510
      3 lines of code
      1 parameters
      1 conditional paths
   function isIntentMapQualifier(AnnotationMirror) in line 495
      6 lines of code
      1 parameters
      1 conditional paths
   function isPolyIntentMapQualifier(AnnotationMirror) in line 514
      4 lines of code
      1 parameters
      1 conditional paths
   function isSubtype(AnnotationMirror,AnnotationMirror) in line 530
      protection public
      61 lines of code
      2 parameters
      16 conditional paths
      uses function createAnnoFromSink(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function createAnnoFromSource(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function leastUpperBound(AnnotationMirror,AnnotationMirror) in line 642
      protection public
      67 lines of code
      2 parameters
      11 conditional paths
      uses variable INTENT_MAP defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function createAnnoFromSink(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function createAnnoFromSource(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function IntentQualifierHierarchy(MultiGraphFactory) in line 475
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable f defined in convert.py
module sparta::checkers::intents::IntentAnnotatedTypeFactory::HostSetTypeVisitor
   inherits from org::checkerframework::framework::type::visitor::AnnotatedTypeScanner
   function hostSetType(AnnotatedTypeMirror,AnnotationMirror) in line 883
      11 lines of code
      2 parameters
      1 conditional paths
      uses function createAnnoFromSource(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function createAnnoFromSink(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
   function scan(AnnotatedTypeMirror,AnnotationMirror) in line 870
      6 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/IntentAnnotationFormatter.java
module sparta::checkers::intents::IntentAnnotationFormatter
   inherits from sparta::checkers::FlowAnnotationFormatter
   function extraToString(AnnotationMirror) in line 42
      6 lines of code
      1 parameters
      1 conditional paths
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
      uses function toString() defined in sparta::checkers::Flow
   function formatAnnotationMirror(AnnotationMirror) in line 21
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable first defined in d3.v2.min.js
      uses function extraToString(AnnotationMirror) defined in sparta::checkers::intents::IntentAnnotationFormatter
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/IntentChecker.java
module sparta::checkers::intents::IntentChecker
   inherits from sparta::checkers::FlowChecker
   function createSourceVisitor() in line 34
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in d3.v2.min.js
   function getImmediateSubcheckerClasses() in line 46
      7 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/IntentTransfer.java
module sparta::checkers::intents::IntentTransfer
   inherits from org::checkerframework::framework::flow::CFTransfer
   function refineIntentMap(MethodInvocationNode,AnnotatedTypeMirror,AnnotationMirror) in line 133
      35 lines of code
      3 parameters
      4 conditional paths
      uses variable intentATF defined in sparta::checkers::intents::IntentTransfer
      uses variable keys defined in d3.v2.min.js
      uses function getKeysFromPutExtraOrGetExtraCall(MethodInvocationTree) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function strengthenAnnotationOfEqualTo(TransferResult< CFValue, CFStore >,Node,Node,CFValue,CFValue,boolean) in line 52
      6 lines of code
      6 parameters
      1 conditional paths
   function visitAssignment(AssignmentNode,TransferInput< CFValue, CFStore >) in line 60
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable intentATF defined in sparta::checkers::intents::IntentTransfer
   function visitMethodInvocation(MethodInvocationNode,TransferInput< CFValue, CFStore >) in line 72
      protection public
      60 lines of code
      2 parameters
      6 conditional paths
      uses variable method defined in convert.py
      uses variable intentATF defined in sparta::checkers::intents::IntentTransfer
      uses variable aliasingATF defined in sparta::checkers::intents::IntentTransfer
      uses function createTopIntentMap() defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function refineIntentMap(MethodInvocationNode,AnnotatedTypeMirror,AnnotationMirror) defined in sparta::checkers::intents::IntentTransfer
   function IntentTransfer(CFAbstractAnalysis< CFValue, CFStore, CFTransfer >) in line 40
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable intentATF defined in sparta::checkers::intents::IntentTransfer
      uses variable aliasingATF defined in sparta::checkers::intents::IntentTransfer
      uses function getAliasingTypeFactory() defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   variable aliasingATF in line 38
   variable intentATF in line 37
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/IntentUtils.java
module sparta::checkers::intents::IntentUtils
   function addIExtraInIntentExtras(AnnotationMirror,AnnotationMirror,ProcessingEnvironment) in line 182
      protection public
      10 lines of code
      3 parameters
      1 conditional paths
      uses function getIExtras(AnnotationMirror) defined in sparta::checkers::intents::IntentUtils
   function addIExtrasToIntentExtras(AnnotationMirror,List< AnnotationMirror >,ProcessingEnvironment) in line 231
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function addIExtraInIntentExtras(AnnotationMirror,AnnotationMirror,ProcessingEnvironment) defined in sparta::checkers::intents::IntentUtils
   function createAnnoFromValues(ProcessingEnvironment,Class<?extends Annotation >,List< CharSequence >,List< Enum<?>>) in line 402
      protection public
      13 lines of code
      4 parameters
      3 conditional paths
      uses variable values defined in d3.v2.min.js
      uses variable i defined in convert.py
   function createIExtraAnno(String,Set< PFPermission >,Set< PFPermission >,ProcessingEnvironment) in line 154
      protection public
      18 lines of code
      4 parameters
      1 conditional paths
   function getDeclaredTypeIExtra(AnnotatedTypeMirror,String) in line 101
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getIExtra(AnnotationMirror,String) defined in sparta::checkers::intents::IntentUtils
   function getIExtra(AnnotationMirror,String) in line 62
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getIExtras(AnnotationMirror) defined in sparta::checkers::intents::IntentUtils
      uses function getKeyName(AnnotationMirror) defined in sparta::checkers::intents::IntentUtils
   function getIExtra(AnnotatedTypeMirror,String) in line 86
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getIExtra(AnnotationMirror,String) defined in sparta::checkers::intents::IntentUtils
   function getIExtras(AnnotationMirror) in line 73
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getKeyName(AnnotationMirror) in line 416
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getMethodGetIntent(BaseTypeChecker,String) in line 279
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
   function getMethodSetIntent(BaseTypeChecker,String) in line 296
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
   function getNewIMapWithExtra(AnnotationMirror,String,Set< PFPermission >,Set< PFPermission >,ProcessingEnvironment) in line 207
      protection public
      14 lines of code
      5 parameters
      1 conditional paths
      uses function getIExtra(AnnotationMirror,String) defined in sparta::checkers::intents::IntentUtils
      uses function getIExtras(AnnotationMirror) defined in sparta::checkers::intents::IntentUtils
      uses function createIExtraAnno(String,Set< PFPermission >,Set< PFPermission >,ProcessingEnvironment) defined in sparta::checkers::intents::IntentUtils
   function getSinks(AnnotationMirror) in line 145
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getSinksPFP(AnnotationMirror) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSinks(AnnotationMirror) defined in sparta::checkers::intents::IntentUtils
   function getSources(AnnotationMirror) in line 126
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getSourcesPFP(AnnotationMirror) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSources(AnnotationMirror) defined in sparta::checkers::intents::IntentUtils
   function isGetExtra(MethodInvocationTree,AnnotatedTypeFactory) in line 246
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
   function isGetIntentFilter(MethodInvocationTree,AnnotatedTypeFactory) in line 341
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
   function isIntentMap(AnnotatedTypeMirror) in line 350
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function isIntentMapBottom(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentUtils
      uses function isIntentMapNew(AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentUtils
   function isIntentMapBottom(AnnotatedTypeMirror) in line 346
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isIntentMapNew(AnnotatedTypeMirror) in line 355
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isPutExtra(MethodInvocationTree,AnnotatedTypeFactory) in line 257
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
   function isReceiveIntent(MethodInvocationTree,AnnotatedTypeFactory) in line 315
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
   function isSendIntent(MethodInvocationTree,AnnotatedTypeFactory) in line 269
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
   function isSetIntentFilter(MethodInvocationTree,AnnotatedTypeFactory) in line 328
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
   function retrieveSendIntentPath(TreePath) in line 359
      protection public
      42 lines of code
      1 parameters
      5 conditional paths
      uses variable args defined in convert.py
   function unionSinksIExtras(AnnotationMirror,AnnotationMirror) in line 136
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getSinksPFP(AnnotationMirror) defined in sparta::checkers::intents::IntentUtils
   function unionSourcesIExtras(AnnotationMirror,AnnotationMirror) in line 116
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getSourcesPFP(AnnotationMirror) defined in sparta::checkers::intents::IntentUtils
   variable notAllowedAnnos in line 52
      protection public
   variable qualsPackage in line 50
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/intents/IntentVisitor.java
module sparta::checkers::intents::IntentVisitor
   inherits from sparta::checkers::FlowVisitor
   function checkIntentExtraMethods(AnnotatedExecutableType,MethodInvocationTree) in line 606
      27 lines of code
      2 parameters
      5 conditional paths
      uses variable node defined in d3.v2.min.js
      uses variable keys defined in d3.v2.min.js
      uses function getKeysFromPutExtraOrGetExtraCall(MethodInvocationTree) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function checkKeyIsInIntentMap(AnnotatedExecutableType,MethodInvocationTree,String,ExpressionTree,AnnotatedTypeMirror) defined in sparta::checkers::intents::IntentVisitor
      uses variable method defined in convert.py
   function checkKeyIsInIntentMap(AnnotatedExecutableType,MethodInvocationTree,String,ExpressionTree,AnnotatedTypeMirror) in line 657
      31 lines of code
      5 parameters
      6 conditional paths
      uses variable node defined in d3.v2.min.js
   function checkMethodInvocability(AnnotatedExecutableType,MethodInvocationTree) in line 264
      28 lines of code
      2 parameters
      6 conditional paths
      uses variable method defined in convert.py
      uses function isTypeOf(AnnotatedExecutableType,Class<?>) defined in sparta::checkers::intents::IntentVisitor
      uses function checkIntentExtraMethods(AnnotatedExecutableType,MethodInvocationTree) defined in sparta::checkers::intents::IntentVisitor
      uses variable node defined in d3.v2.min.js
      uses function getReceiverNameFromSendIntendAnnotation(MethodInvocationTree) defined in sparta::checkers::intents::IntentVisitor
      uses function checkSendIntent(AnnotatedExecutableType,MethodInvocationTree,String) defined in sparta::checkers::intents::IntentVisitor
   function checkOverride(MethodTree,AnnotatedDeclaredType,AnnotatedExecutableType,AnnotatedDeclaredType,Void) in line 104
      35 lines of code
      5 parameters
      4 conditional paths
      uses variable getIntent defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function checkReceiveIntentOverride(MethodTree,AnnotatedExecutableType,AnnotatedExecutableType,AnnotationMirror) defined in sparta::checkers::intents::IntentVisitor
      uses function checkSendIntentOverride(MethodTree,AnnotatedExecutableType,AnnotationMirror) defined in sparta::checkers::intents::IntentVisitor
   function checkReceiveIntentDefaulting(MethodTree) in line 202
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable EXTRA_DEFAULT defined in sparta::checkers::quals::FlowPermission
   function checkReceiveIntentOverride(MethodTree,AnnotatedExecutableType,AnnotatedExecutableType,AnnotationMirror) in line 159
      27 lines of code
      4 parameters
      4 conditional paths
      uses function checkReceiveIntentDefaulting(MethodTree) defined in sparta::checkers::intents::IntentVisitor
      uses variable setIntent defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function checkSetIntentOverride(MethodTree,AnnotatedExecutableType,AnnotationMirror) defined in sparta::checkers::intents::IntentVisitor
   function checkSendIntent(AnnotatedExecutableType,MethodInvocationTree,String) in line 323
      101 lines of code
      3 parameters
      13 conditional paths
      uses function getReceiversFromSender(String,Object) defined in sparta::checkers::intents::IntentVisitor
      uses variable node defined in d3.v2.min.js
      uses variable NOT_FOUND defined in sparta::checkers::intents::componentmap::ProcessEpicOutput
      uses variable method defined in convert.py
      uses function getReceiversMethods(MethodInvocationTree,String,Set< String >) defined in sparta::checkers::intents::IntentVisitor
      uses function isCopyableTo(AnnotationMirror,AnnotationMirror) defined in sparta::checkers::intents::IntentVisitor
   function checkSendIntentOverride(MethodTree,AnnotatedExecutableType,AnnotationMirror) in line 140
      18 lines of code
      3 parameters
      3 conditional paths
   function checkSetIntentOverride(MethodTree,AnnotatedExecutableType,AnnotationMirror) in line 233
      29 lines of code
      3 parameters
      3 conditional paths
   function createTypeFactory() in line 82
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable aliasingATF defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses variable e defined in d3.v2.min.js
   function getMethodSymbolFor(String,String,int,Env< AttrContext >) in line 437
      45 lines of code
      4 parameters
      7 conditional paths
      uses variable e defined in d3.v2.min.js
   function getReceiverNameFromSendIntendAnnotation(MethodInvocationTree) in line 302
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function getReceiversFromSender(String,Object) in line 492
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable map defined in d3.v2.min.js
      uses function getComponentMap() defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
      uses function getIntentMap() defined in sparta::checkers::intents::ComponentMap
      uses variable tree defined in d3.v2.min.js
   function getReceiversMethods(MethodInvocationTree,String,Set< String >) in line 522
      29 lines of code
      3 parameters
      4 conditional paths
      uses variable method defined in convert.py
      uses variable tree defined in d3.v2.min.js
      uses function getSpoofedMethodCall(MethodInvocationTree,String,String,int) defined in sparta::checkers::intents::IntentVisitor
   function getSpoofedMethodCall(MethodInvocationTree,String,String,int) in line 567
      28 lines of code
      4 parameters
      2 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses variable path defined in d3.v2.min.js
      uses variable args defined in convert.py
      uses variable symbol defined in d3.v2.min.js
      uses function getMethodSymbolFor(String,String,int,Env< AttrContext >) defined in sparta::checkers::intents::IntentVisitor
   function hostIsCopyableTo(AnnotationMirror,AnnotationMirror) in line 833
      43 lines of code
      2 parameters
      1 conditional paths
   function isCopyableTo(AnnotationMirror,AnnotationMirror) in line 753
      53 lines of code
      2 parameters
      9 conditional paths
      uses variable isCopyable defined in sparta::checkers::intents::IntentVisitor
      uses function hostIsCopyableTo(AnnotationMirror,AnnotationMirror) defined in sparta::checkers::intents::IntentVisitor
   function isTypeOf(AnnotatedExecutableType,Class<?>) in line 293
      8 lines of code
      2 parameters
      1 conditional paths
   function visitAnnotation(AnnotationTree,Void) in line 690
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable node defined in d3.v2.min.js
      uses variable notAllowedAnnos defined in sparta::checkers::intents::IntentUtils
   function visitMethodInvocation(MethodInvocationTree,Void) in line 716
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable node defined in d3.v2.min.js
      uses variable keys defined in d3.v2.min.js
      uses function getKeysFromPutExtraOrGetExtraCall(MethodInvocationTree) defined in sparta::checkers::intents::IntentAnnotatedTypeFactory
   function IntentVisitor(BaseTypeChecker) in line 75
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable isCopyable defined in sparta::checkers::intents::IntentVisitor
   variable isCopyable in line 73
module sparta::checkers::intents::IntentVisitor::Copyable
   function Copyable(int) in line 819
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable INCOMPATIBLE_TYPES in line 817
      protection public
   variable IS_COPYABLE in line 815
      protection public
   variable MISSING_KEY in line 816
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/JsonJavac.java
module sparta::checkers::Data
   abstract class
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module sparta::checkers::ReadWriteData
   inherits from sparta::checkers::Data
module sparta::checkers::WriteData
   inherits from sparta::checkers::Data
module sparta::checkers::CallData
   inherits from sparta::checkers::Data
module sparta::checkers::NewData
   inherits from sparta::checkers::Data
module sparta::checkers::InheritData
   inherits from sparta::checkers::Data
module sparta::checkers::OverrideData
   inherits from sparta::checkers::Data
module sparta::checkers::UseData
   inherits from sparta::checkers::Data
   function toString() in line 84
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
module sparta::checkers::FlowData
   inherits from sparta::checkers::Data
module sparta::checkers::JsonJavac
   abstract class
   function compile(String[]) in line 121
      35 lines of code
      1 parameters
      2 conditional paths
      uses variable args defined in convert.py
   function filter(List< Diagnostic<?extends JavaFileObject >>) in line 163
      94 lines of code
      1 parameters
      19 conditional paths
      uses variable data defined in d3.v2.min.js
   function print(List< Data >) in line 258
      1 lines of code
      1 parameters
      1 conditional paths
   function run(String[]) in line 114
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable args defined in convert.py
      uses variable filter defined in d3.v2.min.js
   variable CALL_Pattern in line 272
   variable CALL_String in line 271
   variable FLOW_Pattern in line 287
   variable FLOW_String in line 286
   variable INHERIT_Pattern in line 278
   variable INHERIT_String in line 277
   variable NEW_Pattern in line 275
   variable NEW_String in line 274
   variable OVERRIDE_Pattern in line 281
   variable OVERRIDE_String in line 280
   variable READWRITE_Pattern in line 266
   variable READWRITE_String in line 265
   variable USE_Pattern in line 284
   variable USE_String in line 283
   variable WRITE_Pattern in line 269
   variable WRITE_String in line 268
module sparta::checkers::JsonJavac::JsonPrint
   inherits from sparta::checkers::JsonJavac
   abstract class
   function print(List< Data >) in line 290
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable json defined in d3.v2.min.js
module sparta::checkers::JsonJavac::FlowShowJson
   inherits from sparta::checkers::JsonJavac::JsonPrint
   function main(String[]) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in sparta::checkers::JsonJavac
      uses variable args defined in convert.py
module sparta::checkers::JsonJavac::ReportUsageJson
   inherits from sparta::checkers::JsonJavac::JsonPrint
   function main(String[]) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in sparta::checkers::JsonJavac
      uses variable args defined in convert.py
module sparta::checkers::JsonJavac::ReportUsageText
   inherits from sparta::checkers::JsonJavac
   function main(String[]) in line 321
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in sparta::checkers::JsonJavac
      uses variable args defined in convert.py
   function print(List< Data >) in line 333
      18 lines of code
      1 parameters
      5 conditional paths
      uses function d((null),(null)) defined in d3.v2.min.js
      uses variable keys defined in d3.v2.min.js
      uses variable map defined in d3.v2.min.js
      uses variable data defined in d3.v2.min.js
module sparta::checkers::JsonJavac::FlowShowText
   inherits from sparta::checkers::JsonJavac
   function main(String[]) in line 365
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function run(String[]) defined in sparta::checkers::JsonJavac
      uses variable args defined in convert.py
   function print(List< Data >) in line 377
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/NotReviewedLibraryChecker.java
module sparta::checkers::NotReviewedLibraryChecker
   inherits from org::checkerframework::common::basetype::BaseTypeChecker
   function createSourceVisitor() in line 93
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassName(Element) in line 182
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses variable node defined in d3.v2.min.js
      uses variable e defined in d3.v2.min.js
   function initChecker() in line 84
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function printMethods() in line 109
      33 lines of code
      0 parameters
      7 conditional paths
      uses variable pack defined in d3.v2.min.js
      uses variable map defined in d3.v2.min.js
      uses variable e defined in d3.v2.min.js
   function report(Kind,String) in line 143
      protection public
      4 lines of code
      2 parameters
      5 conditional paths
      uses variable i defined in convert.py
   function typeProcessingOver() in line 98
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
   function NotReviewedLibraryChecker() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable defaultOutputFile in line 71
   variable notInStubFile in line 73
   variable OUTPUT_DIR_OPTION in line 68
      protection public
   variable OUTPUT_FILE_OPTION in line 69
      protection public
   variable outputMissingDir in line 77
   variable outputMissingFile in line 75
   variable PRINT_FREQUENCY_OPTION in line 70
      protection public
   variable printFrequency in line 76
module sparta::checkers::NotReviewedLibraryVisitor
   inherits from org::checkerframework::common::basetype::BaseTypeVisitor
   function createTypeFactory() in line 203
      3 lines of code
      0 parameters
      1 conditional paths
   function visitMemberSelect(MemberSelectTree,Void) in line 232
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function visitMethod(MethodTree,Void) in line 222
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function visitMethodInvocation(MethodInvocationTree,Void) in line 208
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function visitNewClass(NewClassTree,Void) in line 215
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function warnNotReviewed(Tree,Element,String) in line 240
      10 lines of code
      3 parameters
      1 conditional paths
   function NotReviewedLibraryVisitor(BaseTypeChecker) in line 198
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::NotReviewedLibraryAnnotatedTypeFactory
   inherits from org::checkerframework::common::basetype::BaseAnnotatedTypeFactory
   function createSupportedTypeQualifiers() in line 259
      4 lines of code
      0 parameters
      1 conditional paths
   function NotReviewedLibraryAnnotatedTypeFactory(BaseTypeChecker) in line 253
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/AndroidFenumChecker.java
module sparta::checkers::permission::AndroidFenumChecker
   inherits from org::checkerframework::checker::fenum::FenumChecker
   function createSourceVisitor() in line 24
      3 lines of code
      0 parameters
      1 conditional paths
module sparta::checkers::permission::AndroidFenumVisitor
   inherits from org::checkerframework::checker::fenum::FenumVisitor
   function createTypeFactory() in line 35
      3 lines of code
      0 parameters
      1 conditional paths
   function AndroidFenumVisitor(BaseTypeChecker) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::permission::AndroidFenumAnnotatedTypeFactory
   inherits from org::checkerframework::checker::fenum::FenumAnnotatedTypeFactory
   function createSupportedTypeQualifiers() in line 46
      5 lines of code
      0 parameters
      1 conditional paths
   function AndroidFenumAnnotatedTypeFactory(BaseTypeChecker) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/DependentPermissionsAnnotatedTypeFactory.java
module sparta::checkers::permission::DependentPermissionsAnnotatedTypeFactory
   inherits from org::checkerframework::common::basetype::BaseAnnotatedTypeFactory
   function addCheckedCodeDefaults(QualifierDefaults) in line 242
      4 lines of code
      1 parameters
      1 conditional paths
   function createQualifierHierarchy(MultiGraphFactory) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createSupportedTypeQualifiers() in line 235
      5 lines of code
      0 parameters
      1 conditional paths
   function createTreeAnnotator() in line 248
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function DependentPermissionsAnnotatedTypeFactory(BaseTypeChecker) in line 225
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable DP defined in sparta::checkers::permission::DependentPermissionsAnnotatedTypeFactory
   variable contentURIConstList in line 42
      protection public
   variable contentURIPatternList in line 41
      protection public
   variable DP in line 38
   variable intentConstTable in line 40
      protection public
module sparta::checkers::permission::DependentPermissionsAnnotatedTypeFactory::DPTreeAnnotator
   inherits from org::checkerframework::framework::type::treeannotator::TreeAnnotator
   function visitLiteral(LiteralTree,AnnotatedTypeMirror) in line 267
      protection public
      38 lines of code
      2 parameters
      9 conditional paths
      uses variable tree defined in d3.v2.min.js
      uses variable intentConstTable defined in sparta::checkers::permission::DependentPermissionsAnnotatedTypeFactory
      uses variable perms defined in convert.py
      uses variable contentURIPatternList defined in sparta::checkers::permission::DependentPermissionsAnnotatedTypeFactory
      uses variable contentURIConstList defined in sparta::checkers::permission::DependentPermissionsAnnotatedTypeFactory
   function DPTreeAnnotator(DependentPermissionsAnnotatedTypeFactory) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::permission::DependentPermissionsAnnotatedTypeFactory::DPQualifierHierarchy
   inherits from org::checkerframework::framework::util::GraphQualifierHierarchy
   function isSubtype(AnnotationMirror,AnnotationMirror) in line 324
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable DP defined in sparta::checkers::permission::DependentPermissionsAnnotatedTypeFactory
   function DPQualifierHierarchy(MultiGraphFactory) in line 319
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/DependentPermissionsChecker.java
module sparta::checkers::permission::DependentPermissionsChecker
   inherits from org::checkerframework::common::basetype::BaseTypeChecker
   function report(final Result,final Object) in line 38
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/DependentPermissionsVisitor.java
module sparta::checkers::permission::DependentPermissionsVisitor
   inherits from org::checkerframework::common::basetype::BaseTypeVisitor
   function checkConstructorInvocation(AnnotatedDeclaredType,AnnotatedExecutableType,Tree) in line 35
      5 lines of code
      3 parameters
      1 conditional paths
   function commonAssignmentCheck(AnnotatedTypeMirror,AnnotatedTypeMirror,Tree,String,boolean) in line 22
      11 lines of code
      5 parameters
      2 conditional paths
   function isValidUse(AnnotatedDeclaredType,AnnotatedDeclaredType,Tree) in line 44
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function DependentPermissionsVisitor(BaseTypeChecker) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/PermissionsChecker.java
module sparta::checkers::permission::PermissionsChecker
   inherits from org::checkerframework::framework::source::AggregateChecker
   function getSupportedCheckers() in line 13
      7 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/qual/DependentPermissions.java
module sparta::checkers::permission::qual::DependentPermissions
   function value() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/qual/DependentPermissionsTop.java
module sparta::checkers::permission::qual::DependentPermissionsTop
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/qual/DependentPermissionsUnqualified.java
module sparta::checkers::permission::qual::DependentPermissionsUnqualified
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/qual/MayRequiredPermissions.java
module sparta::checkers::permission::qual::MayRequiredPermissions
   function notes() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 20
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/qual/Permission.java
module sparta::checkers::permission::qual::Permission
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/qual/RequiredPermissions.java
module sparta::checkers::permission::qual::RequiredPermissions
   function value() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/RequiredPermissionsChecker.java
module sparta::checkers::permission::RequiredPermissionsChecker
   inherits from org::checkerframework::common::basetype::BaseTypeChecker
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/permission/RequiredPermissionsVisitor.java
module sparta::checkers::permission::RequiredPermissionsVisitor
   inherits from org::checkerframework::common::basetype::BaseTypeVisitor
   function createTypeFactory() in line 50
      3 lines of code
      0 parameters
      1 conditional paths
   function visitMethod(MethodTree,Void) in line 128
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitMethodInvocation(MethodInvocationTree,Void) in line 43
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function visitMethodRequiredPermissions(MethodInvocationTree) defined in sparta::checkers::permission::RequiredPermissionsVisitor
      uses variable node defined in d3.v2.min.js
      uses function visitMethodMayRequirePermissions(MethodInvocationTree,ExecutableElement) defined in sparta::checkers::permission::RequiredPermissionsVisitor
   function visitMethodMayRequirePermissions(MethodInvocationTree,ExecutableElement) in line 54
      36 lines of code
      2 parameters
      7 conditional paths
      uses variable perm defined in convert.py
      uses variable node defined in d3.v2.min.js
   function visitMethodRequiredPermissions(MethodInvocationTree) in line 91
      35 lines of code
      1 parameters
      7 conditional paths
      uses variable node defined in d3.v2.min.js
      uses variable perm defined in convert.py
   function RequiredPermissionsVisitor(BaseTypeChecker) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::permission::RequiredPermissionsAnnotatedTypeFactory
   inherits from org::checkerframework::common::basetype::BaseAnnotatedTypeFactory
   function createSupportedTypeQualifiers() in line 140
      3 lines of code
      0 parameters
      1 conditional paths
   function RequiredPermissionsAnnotatedTypeFactory(BaseTypeChecker) in line 134
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/poly/ParameterizedPermissonPolymorphism.java
module sparta::checkers::poly::ParameterizedPermissonPolymorphism
   function addPermissionParameters(List< String >,AnnotatedExecutableType,InferedPermInfo) in line 78
      58 lines of code
      3 parameters
      11 conditional paths
      uses variable values defined in d3.v2.min.js
      uses variable atypeFactory defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
      uses function createAnnoFromSource(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getFlowPolicy() defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getIntersectionAllowedSinks(final Set< PFPermission >) defined in sparta::checkers::FlowPolicy
      uses function createAnnoFromSink(PFPermission) defined in sparta::checkers::FlowAnnotatedTypeFactory
      uses function getIntersectionAllowedSources(finalCollection< PFPermission >) defined in sparta::checkers::FlowPolicy
   function annotate(MethodInvocationTree,AnnotatedExecutableType) in line 51
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function inferParameters(AnnotatedExecutableType,List<?extends ExpressionTree >,Tree) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
      uses variable tree defined in d3.v2.min.js
   function annotate(NewClassTree,AnnotatedExecutableType) in line 62
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function inferParameters(AnnotatedExecutableType,List<?extends ExpressionTree >,Tree) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
      uses variable tree defined in d3.v2.min.js
   function appendCartesian(List< String >,List< String >,String) in line 200
      10 lines of code
      3 parameters
      3 conditional paths
   function getStringValues(Tree) in line 211
      11 lines of code
      1 parameters
      5 conditional paths
      uses variable values defined in d3.v2.min.js
      uses variable atypeFactory defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
      uses variable tree defined in d3.v2.min.js
      uses variable perm defined in convert.py
      uses function getPermission() defined in sparta::checkers::quals::PFPermission
      uses variable FILESYSTEM defined in sparta::checkers::quals::FlowPermission
   function getValues(InferedPermInfo,Tree) in line 162
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable values defined in d3.v2.min.js
      uses function getStringValues(Tree) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
      uses variable tree defined in d3.v2.min.js
      uses function getValuesFromPermission(InferedPermInfo,Tree) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
   function getValuesFromArguments(InferedPermInfo,List<?extends ExpressionTree >,Tree) in line 141
      20 lines of code
      3 parameters
      5 conditional paths
      uses variable values defined in d3.v2.min.js
      uses function getValues(InferedPermInfo,Tree) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
      uses function appendCartesian(List< String >,List< String >,String) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
   function getValuesFromPermission(InferedPermInfo,Tree) in line 178
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable atypeFactory defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
      uses variable tree defined in d3.v2.min.js
      uses variable perms defined in convert.py
      uses variable values defined in d3.v2.min.js
      uses variable perm defined in convert.py
   function inferParameters(AnnotatedExecutableType,List<?extends ExpressionTree >,Tree) in line 67
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable values defined in d3.v2.min.js
      uses function getValuesFromArguments(InferedPermInfo,List<?extends ExpressionTree >,Tree) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
      uses function addPermissionParameters(List< String >,AnnotatedExecutableType,InferedPermInfo) defined in sparta::checkers::poly::ParameterizedPermissonPolymorphism
   function ParameterizedPermissonPolymorphism(ProcessingEnvironment,FlowAnnotatedTypeFactory) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable atypeFactory in line 38
module sparta::checkers::poly::ParameterizedPermissonPolymorphism::InferedPermInfo
   function getFlowPermission() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParamIndexs() in line 273
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSeparator(FlowPermission) in line 256
      6 lines of code
      1 parameters
      1 conditional paths
   function hasInferedPermInfo() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInferSource() in line 281
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InferedPermInfo(Element) in line 234
      protection public
      21 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/poly/QualifierPolymorphism.java
module sparta::checkers::poly::QualifierPolymorphism
   abstract class
   function addDefaultForPolyQualifier(AnnotatedTypeMirror,AnnotationMirror,AnnotationMirror) in line 166
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable topQuals defined in sparta::checkers::poly::QualifierPolymorphism
   function annotate(MethodInvocationTree,AnnotatedExecutableType) in line 117
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function annotate(NewClassTree,AnnotatedExecutableType) in line 120
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getPolyQualifiers(Elements) in line 102
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isPolyAll(AnnotationMirror) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function annotate(MethodInvocationTree,AnnotatedExecutableType) defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable tree defined in d3.v2.min.js
   function QualifierPolymorphism(ProcessingEnvironment,AnnotatedTypeFactory) in line 75
      protection public
      18 lines of code
      2 parameters
      1 conditional paths
      uses variable POLYALL defined in sparta::checkers::poly::QualifierPolymorphism
      uses function getPolyQualifiers(Elements) defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable qualhierarchy defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable collector defined in sparta::checkers::poly::QualifierPolymorphism
   variable atypeFactory in line 45
   variable collector in line 179
   variable completer in line 47
   variable POLYALL in line 63
   variable polyQuals in line 55
   variable qualhierarchy in line 61
   variable replacer in line 123
   variable topQuals in line 58
   variable types in line 43
module sparta::checkers::poly::QualifierPolymorphism::Completer
   inherits from org::checkerframework::framework::type::visitor::AnnotatedTypeScanner
   function scan(AnnotatedTypeMirror,Void) in line 149
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
      uses function addDefaultForPolyQualifier(AnnotatedTypeMirror,AnnotationMirror,AnnotationMirror) defined in sparta::checkers::poly::QualifierPolymorphism
module sparta::checkers::poly::QualifierPolymorphism::PolyCollector
   inherits from org::checkerframework::framework::type::visitor::SimpleAnnotatedTypeVisitor
   function findType(AnnotatedTypeMirror,AnnotatedTypeMirror) in line 495
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable types defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable atypeFactory defined in sparta::checkers::poly::QualifierPolymorphism
   function reduce(Map< AnnotationMirror, Set<?extends AnnotationMirror >>,Map< AnnotationMirror, Set<?extends AnnotationMirror >>) in line 192
      protection public
      34 lines of code
      2 parameters
      6 conditional paths
      uses variable qualhierarchy defined in sparta::checkers::poly::QualifierPolymorphism
   function visit(Iterable<?extends AnnotatedTypeMirror >,Iterable<?extends AnnotatedTypeMirror >) in line 227
      protection public
      16 lines of code
      2 parameters
      2 conditional paths
      uses variable types defined in sparta::checkers::poly::QualifierPolymorphism
   function visitArray(AnnotatedArrayType,AnnotatedTypeMirror) in line 371
      protection public
      53 lines of code
      2 parameters
      9 conditional paths
      uses variable types defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable atypeFactory defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
   function visitDeclared(AnnotatedDeclaredType,AnnotatedTypeMirror) in line 245
      protection public
      74 lines of code
      2 parameters
      13 conditional paths
      uses variable types defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable atypeFactory defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable POLYALL defined in sparta::checkers::poly::QualifierPolymorphism
   function visitNull(AnnotatedNullType,AnnotatedTypeMirror) in line 344
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
   function visitPrimitive(AnnotatedPrimitiveType,AnnotatedTypeMirror) in line 321
      protection public
      21 lines of code
      2 parameters
      4 conditional paths
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable POLYALL defined in sparta::checkers::poly::QualifierPolymorphism
   function visitTypeVariable(AnnotatedTypeVariable,AnnotatedTypeMirror) in line 428
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
   function visitWildcard(AnnotatedWildcardType,AnnotatedTypeMirror) in line 454
      protection public
      40 lines of code
      2 parameters
      6 conditional paths
   variable visited in line 425
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/poly/ReceiverPolymorphism.java
module sparta::checkers::poly::ReceiverPolymorphism
   inherits from sparta::checkers::poly::QualifierPolymorphism
   function annotate(MethodInvocationTree,AnnotatedExecutableType) in line 56
      protection public
      24 lines of code
      2 parameters
      5 conditional paths
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable collector defined in sparta::checkers::poly::QualifierPolymorphism
      uses function visit(Iterable<?extends AnnotatedTypeMirror >,Iterable<?extends AnnotatedTypeMirror >) defined in sparta::checkers::poly::QualifierPolymorphism::PolyCollector
      uses variable atypeFactory defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable replacer defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable completer defined in sparta::checkers::poly::QualifierPolymorphism
   function annotate(NewClassTree,AnnotatedExecutableType) in line 86
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable collector defined in sparta::checkers::poly::QualifierPolymorphism
      uses function visit(Iterable<?extends AnnotatedTypeMirror >,Iterable<?extends AnnotatedTypeMirror >) defined in sparta::checkers::poly::QualifierPolymorphism::PolyCollector
      uses variable atypeFactory defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable replacer defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable completer defined in sparta::checkers::poly::QualifierPolymorphism
   function getPolyQualifiers(Elements) in line 39
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable atypeFactory defined in sparta::checkers::poly::QualifierPolymorphism
   function ReceiverPolymorphism(ProcessingEnvironment,AnnotatedTypeFactory) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/poly/StandardQualifierPolymorphism.java
module sparta::checkers::poly::StandardQualifierPolymorphism
   inherits from sparta::checkers::poly::QualifierPolymorphism
   function annotate(MethodInvocationTree,AnnotatedExecutableType) in line 104
      protection public
      30 lines of code
      2 parameters
      5 conditional paths
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable tree defined in d3.v2.min.js
      uses variable atypeFactory defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable collector defined in sparta::checkers::poly::QualifierPolymorphism
      uses function visit(Iterable<?extends AnnotatedTypeMirror >,Iterable<?extends AnnotatedTypeMirror >) defined in sparta::checkers::poly::QualifierPolymorphism::PolyCollector
      uses function reduce(Map< AnnotationMirror, Set<?extends AnnotationMirror >>,Map< AnnotationMirror, Set<?extends AnnotationMirror >>) defined in sparta::checkers::poly::QualifierPolymorphism::PolyCollector
      uses variable replacer defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable completer defined in sparta::checkers::poly::QualifierPolymorphism
   function annotate(NewClassTree,AnnotatedExecutableType) in line 135
      protection public
      21 lines of code
      2 parameters
      3 conditional paths
      uses variable polyQuals defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable atypeFactory defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable tree defined in d3.v2.min.js
      uses variable collector defined in sparta::checkers::poly::QualifierPolymorphism
      uses function visit(Iterable<?extends AnnotatedTypeMirror >,Iterable<?extends AnnotatedTypeMirror >) defined in sparta::checkers::poly::QualifierPolymorphism::PolyCollector
      uses variable replacer defined in sparta::checkers::poly::QualifierPolymorphism
      uses variable completer defined in sparta::checkers::poly::QualifierPolymorphism
   function getPolyQualifiers(Elements) in line 50
      protection public
      41 lines of code
      1 parameters
      8 conditional paths
      uses variable qualhierarchy defined in sparta::checkers::poly::QualifierPolymorphism
      uses function isPolyAll(AnnotationMirror) defined in sparta::checkers::poly::StandardQualifierPolymorphism
   function isPolyAll(AnnotationMirror) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function StandardQualifierPolymorphism(ProcessingEnvironment,AnnotatedTypeFactory) in line 45
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/AddsSourceData.java
module sparta::checkers::quals::AddsSourceData
   function value() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/Extra.java
module sparta::checkers::quals::Extra
   function key() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function sink() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable EXTRA_DEFAULT defined in sparta::checkers::quals::FlowPermission
   function source() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable EXTRA_DEFAULT defined in sparta::checkers::quals::FlowPermission
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/FlowPermission.java
module sparta::checkers::quals::FlowPermission
   function getFlowPermission(String) in line 523
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable f defined in convert.py
   function isSink() in line 509
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SINK defined in sparta::checkers::quals::FlowPermission::T
      uses variable BOTH defined in sparta::checkers::quals::FlowPermission::T
   function isSource() in line 513
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE defined in sparta::checkers::quals::FlowPermission::T
      uses variable BOTH defined in sparta::checkers::quals::FlowPermission::T
   function FlowPermission(T) in line 506
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable ACCELEROMETER in line 62
      protection public
   variable ACCESS_CHECKIN_PROPERTIES in line 86
      protection public
   variable ACCESS_COARSE_LOCATION in line 89
      protection public
   variable ACCESS_FINE_LOCATION in line 92
      protection public
   variable ACCESS_LOCATION_EXTRA_COMMANDS in line 94
      protection public
   variable ACCESS_MOCK_LOCATION in line 96
      protection public
   variable ACCESS_NETWORK_STATE in line 98
      protection public
   variable ACCESS_SURFACE_FLINGER in line 100
      protection public
   variable ACCESS_WIFI_STATE in line 102
      protection public
   variable ACCOUNT_MANAGER in line 104
      protection public
   variable ADD_VOICEMAIL in line 106
      protection public
   variable ANY in line 31
      protection public
   variable AUTHENTICATE_ACCOUNTS in line 109
      protection public
   variable BATTERY_STATS in line 111
      protection public
   variable BIND_ACCESSIBILITY_SERVICE in line 114
      protection public
   variable BIND_APPWIDGET in line 117
      protection public
   variable BIND_DEVICE_ADMIN in line 120
      protection public
   variable BIND_INPUT_METHOD in line 123
      protection public
   variable BIND_REMOTEVIEWS in line 126
      protection public
   variable BIND_TEXT_SERVICE in line 128
      protection public
   variable BIND_VPN_SERVICE in line 131
      protection public
   variable BIND_WALLPAPER in line 134
      protection public
   variable BLUETOOTH in line 136
      protection public
   variable BLUETOOTH_ADMIN in line 138
      protection public
   variable BRICK in line 140
      protection public
   variable BROADCAST_PACKAGE_REMOVED in line 143
      protection public
   variable BROADCAST_SMS in line 145
      protection public
   variable BROADCAST_STICKY in line 147
      protection public
   variable BROADCAST_WAP_PUSH in line 149
      protection public
   variable BUNDLE in line 72
      protection public
   variable CALL_PHONE in line 152
      protection public
   variable CALL_PRIVILEGED in line 156
      protection public
   variable CAMERA in line 158
      protection public
   variable CAMERA_SETTINGS in line 39
      protection public
   variable CHANGE_COMPONENT_ENABLED_STATE in line 161
      protection public
   variable CHANGE_CONFIGURATION in line 164
      protection public
   variable CHANGE_NETWORK_STATE in line 166
      protection public
   variable CHANGE_WIFI_MULTICAST_STATE in line 168
      protection public
   variable CHANGE_WIFI_STATE in line 170
      protection public
   variable CLEAR_APP_CACHE in line 173
      protection public
   variable CLEAR_APP_USER_DATA in line 175
      protection public
   variable CONTENT_PROVIDER in line 77
      protection public
   variable CONTROL_LOCATION_UPDATES in line 177
      protection public
   variable DATABASE in line 45
      protection public
   variable DELETE_CACHE_FILES in line 179
      protection public
   variable DELETE_PACKAGES in line 181
      protection public
   variable DEVICE_POWER in line 183
      protection public
   variable DIAGNOSTIC in line 185
      protection public
   variable DISABLE_KEYGUARD in line 187
      protection public
   variable DISPLAY in line 39
      protection public
   variable DUMP in line 190
      protection public
   variable EXPAND_STATUS_BAR in line 192
      protection public
   variable EXTRA_DEFAULT in line 24
      protection public
   variable FACTORY_TEST in line 194
      protection public
   variable FILESYSTEM in line 39
      protection public
   variable FLASHLIGHT in line 196
      protection public
   variable FORCE_BACK in line 199
      protection public
   variable GET_ACCOUNTS in line 201
      protection public
   variable GET_PACKAGE_SIZE in line 203
      protection public
   variable GET_TASKS in line 206
      protection public
   variable GLOBAL_SEARCH in line 209
      protection public
   variable HARDWARE_TEST in line 211
      protection public
   variable INJECT_EVENTS in line 214
      protection public
   variable INSTALL_LOCATION_PROVIDER in line 217
      protection public
   variable INSTALL_PACKAGES in line 219
      protection public
   variable INTENT in line 71
      protection public
   variable INTERNAL_SYSTEM_WINDOW in line 222
      protection public
   variable INTERNET in line 224
      protection public
   variable KILL_BACKGROUND_PROCESSES in line 226
      protection public
   variable MANAGE_ACCOUNTS in line 229
      protection public
   variable MANAGE_APP_TOKENS in line 232
      protection public
   variable MASTER_CLEAR in line 234
      protection public
   variable MEDIA in line 48
      protection public
   variable MODIFY_AUDIO_SETTINGS in line 236
      protection public
   variable MODIFY_PHONE_STATE in line 238
      protection public
   variable MOUNT_FORMAT_FILESYSTEMS in line 240
      protection public
   variable MOUNT_UNMOUNT_FILESYSTEMS in line 242
      protection public
   variable NFC in line 244
      protection public
   variable PACKAGE_INFO in line 55
      protection public
   variable PARCEL in line 75
      protection public
   variable PERSISTENT_ACTIVITY in line 248
      protection public
   variable PHONE_NUMBER in line 60
      protection public
   variable PROCESS_BUILDER in line 73
      protection public
   variable PROCESS_OUTGOING_CALLS in line 250
      protection public
   variable RANDOM in line 39
      protection public
   variable READ_CALENDAR in line 252
      protection public
   variable READ_CALL_LOG in line 254
      protection public
   variable READ_CLIPBOARD in line 52
      protection public
   variable READ_CONTACTS in line 256
      protection public
   variable READ_EMAIL in line 49
      protection public
   variable READ_EXTERNAL_STORAGE in line 258
      protection public
   variable READ_FRAME_BUFFER in line 261
      protection public
   variable READ_HISTORY_BOOKMARKS in line 264
      protection public
   variable READ_INPUT_STATE in line 267
      protection public
   variable READ_LOGS in line 269
      protection public
   variable READ_PHONE_STATE in line 271
      protection public
   variable READ_PROFILE in line 273
      protection public
   variable READ_SMS in line 275
      protection public
   variable READ_SOCIAL_STREAM in line 277
      protection public
   variable READ_SYNC_SETTINGS in line 279
      protection public
   variable READ_SYNC_STATS in line 281
      protection public
   variable READ_TIME in line 40
      protection public
   variable READ_USER_DICTIONARY in line 283
      protection public
   variable REBOOT in line 285
      protection public
   variable RECEIVE_BOOT_COMPLETED in line 288
      protection public
   variable RECEIVE_MMS in line 291
      protection public
   variable RECEIVE_SMS in line 294
      protection public
   variable RECEIVE_WAP_PUSH in line 296
      protection public
   variable RECORD_AUDIO in line 298
      protection public
   variable REFLECTION in line 69
      protection public
   variable REORDER_TASKS in line 300
      protection public
   variable RESTART_PACKAGES in line 303
      protection public
   variable SECURE_HASH in line 76
      protection public
   variable SEND_SMS in line 305
      protection public
   variable SENSOR in line 54
      protection public
   variable SET_ACTIVITY_WATCHER in line 308
      protection public
   variable SET_ALARM in line 311
      protection public
   variable SET_ALWAYS_FINISH in line 314
      protection public
   variable SET_ANIMATION_SCALE in line 316
      protection public
   variable SET_DEBUG_APP in line 318
      protection public
   variable SET_ORIENTATION in line 321
      protection public
   variable SET_POINTER_SPEED in line 323
      protection public
   variable SET_PREFERRED_APPLICATIONS in line 326
      protection public
   variable SET_PROCESS_LIMIT in line 329
      protection public
   variable SET_TIME in line 331
      protection public
   variable SET_TIME_ZONE in line 333
      protection public
   variable SET_WALLPAPER in line 335
      protection public
   variable SET_WALLPAPER_HINTS in line 337
      protection public
   variable SHARED_PREFERENCES in line 61
      protection public
   variable SIGNAL_PERSISTENT_PROCESSES in line 340
      protection public
   variable sourceOrSink in line 504
   variable SPEAKER in line 53
      protection public
   variable STATUS_BAR in line 343
      protection public
   variable SUBSCRIBED_FEEDS_READ in line 346
      protection public
   variable SUBSCRIBED_FEEDS_WRITE in line 348
      protection public
   variable SUSI_ACCOUNT_INFORMATION in line 402
      protection public
   variable SUSI_ACCOUNT_SETTINGS in line 420
      protection public
   variable SUSI_AUDIO in line 421
      protection public
   variable SUSI_BLUETOOTH in line 419
      protection public
   variable SUSI_BLUETOOTH_INFORMATION in line 404
      protection public
   variable SUSI_BROWSER_INFORMATION in line 413
      protection public
   variable SUSI_CALENDAR_INFORMATION in line 410
      protection public
   variable SUSI_CONTACT_INFORMATION in line 409
      protection public
   variable SUSI_DATABASE_INFORMATION in line 405
      protection public
   variable SUSI_EMAIL in line 406
      protection public
   variable SUSI_FILE in line 423
      protection public
   variable SUSI_FILE_INFORMATION in line 403
      protection public
   variable SUSI_IMAGE in line 412
      protection public
   variable SUSI_LOCATION_INFORMATION in line 400
      protection public
   variable SUSI_LOG in line 424
      protection public
   variable SUSI_NETWORK in line 422
      protection public
   variable SUSI_NETWORK_INFORMATION in line 401
      protection public
   variable SUSI_NFC in line 414
      protection public
   variable SUSI_NO_CATEGORY in line 415
      protection public
   variable SUSI_PHONE_CONNECTION in line 416
      protection public
   variable SUSI_PHONE_STATE in line 418
      protection public
   variable SUSI_SMS_MMS in line 408
      protection public
   variable SUSI_SYNCHRONIZATION_DATA in line 407
      protection public
   variable SUSI_SYSTEM_SETTINGS in line 411
      protection public
   variable SUSI_UNIQUE_IDENTIFIER in line 399
      protection public
   variable SUSI_VOIP in line 417
      protection public
   variable SYSTEM_ALERT_WINDOW in line 351
      protection public
   variable SYSTEM_PROPERTIES in line 47
      protection public
   variable UPDATE_DEVICE_STATS in line 353
      protection public
   variable USE_CREDENTIALS in line 355
      protection public
   variable USE_SIP in line 357
      protection public
   variable USER_INPUT in line 42
      protection public
   variable VIBRATE in line 359
      protection public
   variable WAKE_LOCK in line 362
      protection public
   variable WRITE_APN_SETTINGS in line 364
      protection public
   variable WRITE_CALENDAR in line 366
      protection public
   variable WRITE_CALL_LOG in line 368
      protection public
   variable WRITE_CLIPBOARD in line 51
      protection public
   variable WRITE_CONTACTS in line 370
      protection public
   variable WRITE_EMAIL in line 50
      protection public
   variable WRITE_EXTERNAL_STORAGE in line 372
      protection public
   variable WRITE_GSERVICES in line 374
      protection public
   variable WRITE_HISTORY_BOOKMARKS in line 377
      protection public
   variable WRITE_LOGS in line 43
      protection public
   variable WRITE_PROFILE in line 380
      protection public
   variable WRITE_SECURE_SETTINGS in line 382
      protection public
   variable WRITE_SETTINGS in line 384
      protection public
   variable WRITE_SMS in line 386
      protection public
   variable WRITE_SOCIAL_STREAM in line 389
      protection public
   variable WRITE_SYNC_SETTINGS in line 391
      protection public
   variable WRITE_TIME in line 392
      protection public
   variable WRITE_USER_DICTIONARY in line 394
      protection public
module sparta::checkers::quals::FlowPermission::T
   variable BOTH in line 553
      protection public
   variable SINK in line 547
      protection public
   variable SOURCE in line 541
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/FlowPermissionString.java
module sparta::checkers::quals::FlowPermissionString
   variable ACCELEROMETER in line 31
      protection public
   variable ACCESS_CHECKIN_PROPERTIES in line 51
      protection public
   variable ACCESS_COARSE_LOCATION in line 52
      protection public
   variable ACCESS_FINE_LOCATION in line 53
      protection public
   variable ACCESS_LOCATION_EXTRA_COMMANDS in line 54
      protection public
   variable ACCESS_MOCK_LOCATION in line 55
      protection public
   variable ACCESS_NETWORK_STATE in line 56
      protection public
   variable ACCESS_SURFACE_FLINGER in line 57
      protection public
   variable ACCESS_WIFI_STATE in line 58
      protection public
   variable ACCOUNT_MANAGER in line 59
      protection public
   variable ADD_VOICEMAIL in line 60
      protection public
   variable ANY in line 10
      protection public
   variable AUTHENTICATE_ACCOUNTS in line 61
      protection public
   variable BATTERY_STATS in line 62
      protection public
   variable BIND_ACCESSIBILITY_SERVICE in line 63
      protection public
   variable BIND_APPWIDGET in line 64
      protection public
   variable BIND_DEVICE_ADMIN in line 65
      protection public
   variable BIND_INPUT_METHOD in line 66
      protection public
   variable BIND_REMOTEVIEWS in line 67
      protection public
   variable BIND_TEXT_SERVICE in line 68
      protection public
   variable BIND_VPN_SERVICE in line 69
      protection public
   variable BIND_WALLPAPER in line 70
      protection public
   variable BLUETOOTH in line 71
      protection public
   variable BLUETOOTH_ADMIN in line 72
      protection public
   variable BRICK in line 73
      protection public
   variable BROADCAST_PACKAGE_REMOVED in line 74
      protection public
   variable BROADCAST_SMS in line 75
      protection public
   variable BROADCAST_STICKY in line 76
      protection public
   variable BROADCAST_WAP_PUSH in line 77
      protection public
   variable BUNDLE in line 39
      protection public
   variable CALL_PHONE in line 78
      protection public
   variable CALL_PRIVILEGED in line 79
      protection public
   variable CAMERA in line 80
      protection public
   variable CAMERA_SETTINGS in line 12
      protection public
   variable CHANGE_COMPONENT_ENABLED_STATE in line 81
      protection public
   variable CHANGE_CONFIGURATION in line 82
      protection public
   variable CHANGE_NETWORK_STATE in line 83
      protection public
   variable CHANGE_WIFI_MULTICAST_STATE in line 84
      protection public
   variable CHANGE_WIFI_STATE in line 85
      protection public
   variable CLEAR_APP_CACHE in line 86
      protection public
   variable CLEAR_APP_USER_DATA in line 87
      protection public
   variable CONTENT_PROVIDER in line 43
      protection public
   variable CONTROL_LOCATION_UPDATES in line 88
      protection public
   variable DATABASE in line 19
      protection public
   variable DELETE_CACHE_FILES in line 89
      protection public
   variable DELETE_PACKAGES in line 90
      protection public
   variable DEVICE_POWER in line 91
      protection public
   variable DIAGNOSTIC in line 92
      protection public
   variable DISABLE_KEYGUARD in line 93
      protection public
   variable DISPLAY in line 13
      protection public
   variable DUMP in line 94
      protection public
   variable EXPAND_STATUS_BAR in line 95
      protection public
   variable EXTRA_DEFAULT in line 9
      protection public
   variable FACTORY_TEST in line 96
      protection public
   variable FILESYSTEM in line 14
      protection public
   variable FLASHLIGHT in line 97
      protection public
   variable FORCE_BACK in line 98
      protection public
   variable GET_ACCOUNTS in line 99
      protection public
   variable GET_PACKAGE_SIZE in line 100
      protection public
   variable GET_TASKS in line 101
      protection public
   variable GLOBAL_SEARCH in line 102
      protection public
   variable HARDWARE_TEST in line 103
      protection public
   variable INJECT_EVENTS in line 104
      protection public
   variable INSTALL_LOCATION_PROVIDER in line 105
      protection public
   variable INSTALL_PACKAGES in line 106
      protection public
   variable INTENT in line 38
      protection public
   variable INTERNAL_SYSTEM_WINDOW in line 107
      protection public
   variable INTERNET in line 108
      protection public
   variable KILL_BACKGROUND_PROCESSES in line 109
      protection public
   variable MANAGE_ACCOUNTS in line 110
      protection public
   variable MANAGE_APP_TOKENS in line 111
      protection public
   variable MASTER_CLEAR in line 112
      protection public
   variable MEDIA in line 21
      protection public
   variable MODIFY_AUDIO_SETTINGS in line 113
      protection public
   variable MODIFY_PHONE_STATE in line 114
      protection public
   variable MOUNT_FORMAT_FILESYSTEMS in line 115
      protection public
   variable MOUNT_UNMOUNT_FILESYSTEMS in line 116
      protection public
   variable NFC in line 117
      protection public
   variable PACKAGE_INFO in line 28
      protection public
   variable PARCEL in line 41
      protection public
   variable PERSISTENT_ACTIVITY in line 118
      protection public
   variable PHONE_NUMBER in line 29
      protection public
   variable PROCESS_BUILDER in line 40
      protection public
   variable PROCESS_OUTGOING_CALLS in line 119
      protection public
   variable RANDOM in line 15
      protection public
   variable READ_CALENDAR in line 120
      protection public
   variable READ_CALL_LOG in line 121
      protection public
   variable READ_CLIPBOARD in line 25
      protection public
   variable READ_CONTACTS in line 122
      protection public
   variable READ_EMAIL in line 22
      protection public
   variable READ_EXTERNAL_STORAGE in line 123
      protection public
   variable READ_FRAME_BUFFER in line 124
      protection public
   variable READ_HISTORY_BOOKMARKS in line 125
      protection public
   variable READ_INPUT_STATE in line 126
      protection public
   variable READ_LOGS in line 127
      protection public
   variable READ_PHONE_STATE in line 128
      protection public
   variable READ_PROFILE in line 129
      protection public
   variable READ_SMS in line 130
      protection public
   variable READ_SOCIAL_STREAM in line 131
      protection public
   variable READ_SYNC_SETTINGS in line 132
      protection public
   variable READ_SYNC_STATS in line 133
      protection public
   variable READ_TIME in line 16
      protection public
   variable READ_USER_DICTIONARY in line 134
      protection public
   variable REBOOT in line 135
      protection public
   variable RECEIVE_BOOT_COMPLETED in line 136
      protection public
   variable RECEIVE_MMS in line 137
      protection public
   variable RECEIVE_SMS in line 138
      protection public
   variable RECEIVE_WAP_PUSH in line 139
      protection public
   variable RECORD_AUDIO in line 140
      protection public
   variable REFLECTION in line 37
      protection public
   variable REORDER_TASKS in line 141
      protection public
   variable RESTART_PACKAGES in line 142
      protection public
   variable SECURE_HASH in line 42
      protection public
   variable SEND_SMS in line 143
      protection public
   variable SENSOR in line 27
      protection public
   variable SET_ACTIVITY_WATCHER in line 144
      protection public
   variable SET_ALARM in line 145
      protection public
   variable SET_ALWAYS_FINISH in line 146
      protection public
   variable SET_ANIMATION_SCALE in line 147
      protection public
   variable SET_DEBUG_APP in line 148
      protection public
   variable SET_ORIENTATION in line 149
      protection public
   variable SET_POINTER_SPEED in line 150
      protection public
   variable SET_PREFERRED_APPLICATIONS in line 151
      protection public
   variable SET_PROCESS_LIMIT in line 152
      protection public
   variable SET_TIME in line 153
      protection public
   variable SET_TIME_ZONE in line 154
      protection public
   variable SET_WALLPAPER in line 155
      protection public
   variable SET_WALLPAPER_HINTS in line 156
      protection public
   variable SHARED_PREFERENCES in line 30
      protection public
   variable SIGNAL_PERSISTENT_PROCESSES in line 157
      protection public
   variable SPEAKER in line 26
      protection public
   variable STATUS_BAR in line 158
      protection public
   variable SUBSCRIBED_FEEDS_READ in line 159
      protection public
   variable SUBSCRIBED_FEEDS_WRITE in line 160
      protection public
   variable SUSI_ACCOUNT_INFORMATION in line 185
      protection public
   variable SUSI_ACCOUNT_SETTINGS in line 203
      protection public
   variable SUSI_AUDIO in line 204
      protection public
   variable SUSI_BLUETOOTH in line 202
      protection public
   variable SUSI_BLUETOOTH_INFORMATION in line 187
      protection public
   variable SUSI_BROWSER_INFORMATION in line 196
      protection public
   variable SUSI_CALENDAR_INFORMATION in line 193
      protection public
   variable SUSI_CONTACT_INFORMATION in line 192
      protection public
   variable SUSI_DATABASE_INFORMATION in line 188
      protection public
   variable SUSI_EMAIL in line 189
      protection public
   variable SUSI_FILE in line 206
      protection public
   variable SUSI_FILE_INFORMATION in line 186
      protection public
   variable SUSI_IMAGE in line 195
      protection public
   variable SUSI_LOCATION_INFORMATION in line 183
      protection public
   variable SUSI_LOG in line 207
      protection public
   variable SUSI_NETWORK in line 205
      protection public
   variable SUSI_NETWORK_INFORMATION in line 184
      protection public
   variable SUSI_NFC in line 197
      protection public
   variable SUSI_NO_CATEGORY in line 198
      protection public
   variable SUSI_PHONE_CONNECTION in line 199
      protection public
   variable SUSI_PHONE_STATE in line 201
      protection public
   variable SUSI_SMS_MMS in line 191
      protection public
   variable SUSI_SYNCHRONIZATION_DATA in line 190
      protection public
   variable SUSI_SYSTEM_SETTINGS in line 194
      protection public
   variable SUSI_UNIQUE_IDENTIFIER in line 182
      protection public
   variable SUSI_VOIP in line 200
      protection public
   variable SYSTEM_ALERT_WINDOW in line 161
      protection public
   variable SYSTEM_PROPERTIES in line 20
      protection public
   variable UPDATE_DEVICE_STATS in line 162
      protection public
   variable USE_CREDENTIALS in line 163
      protection public
   variable USE_SIP in line 164
      protection public
   variable USER_INPUT in line 17
      protection public
   variable VIBRATE in line 165
      protection public
   variable WAKE_LOCK in line 166
      protection public
   variable WRITE_APN_SETTINGS in line 167
      protection public
   variable WRITE_CALENDAR in line 168
      protection public
   variable WRITE_CALL_LOG in line 169
      protection public
   variable WRITE_CLIPBOARD in line 24
      protection public
   variable WRITE_CONTACTS in line 170
      protection public
   variable WRITE_EMAIL in line 23
      protection public
   variable WRITE_EXTERNAL_STORAGE in line 171
      protection public
   variable WRITE_GSERVICES in line 172
      protection public
   variable WRITE_HISTORY_BOOKMARKS in line 173
      protection public
   variable WRITE_LOGS in line 18
      protection public
   variable WRITE_PROFILE in line 174
      protection public
   variable WRITE_SECURE_SETTINGS in line 175
      protection public
   variable WRITE_SETTINGS in line 176
      protection public
   variable WRITE_SMS in line 177
      protection public
   variable WRITE_SOCIAL_STREAM in line 178
      protection public
   variable WRITE_SYNC_SETTINGS in line 179
      protection public
   variable WRITE_TIME in line 180
      protection public
   variable WRITE_USER_DICTIONARY in line 181
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/GetExtra.java
module sparta::checkers::quals::GetExtra
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/GetIntentFilter.java
module sparta::checkers::quals::GetIntentFilter
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/InferParameterizedPermission.java
module sparta::checkers::quals::InferParameterizedPermission
   function isA() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function param() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function separator() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/IntentMap.java
module sparta::checkers::quals::IntentMap
   function value() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/IntentMapBottom.java
module sparta::checkers::quals::IntentMapBottom
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/IntentMapNew.java
module sparta::checkers::quals::IntentMapNew
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PFPermission.java
module sparta::checkers::quals::PFPermission
   inherits from Comparable
   function addParameters(List< String >) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function coarsePermissionExists(PFPermission,Set< PFPermission >) in line 122
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable permission defined in sparta::checkers::quals::PFPermission
   function compareTo(PFPermission) in line 99
      protection public
      21 lines of code
      1 parameters
      7 conditional paths
      uses variable permission defined in sparta::checkers::quals::PFPermission
      uses variable parameters defined in sparta::checkers::quals::PFPermission
   function convertStringToPFPermission(String) in line 165
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses variable PARAMETERIZED_PERMISSION_REGEX defined in sparta::checkers::quals::PFPermission
      uses function PFPermission(FlowPermission) defined in sparta::checkers::quals::PFPermission
   function equals(Object) in line 75
      protection public
      17 lines of code
      1 parameters
      8 conditional paths
      uses function PFPermission(FlowPermission) defined in sparta::checkers::quals::PFPermission
      uses variable parameters defined in sparta::checkers::quals::PFPermission
      uses variable permission defined in sparta::checkers::quals::PFPermission
   function getParameters() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameters defined in sparta::checkers::quals::PFPermission
   function getPermission() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable permission defined in sparta::checkers::quals::PFPermission
   function hashCode() in line 64
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable parameters defined in sparta::checkers::quals::PFPermission
      uses variable permission defined in sparta::checkers::quals::PFPermission
   function isSink() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPermission() defined in sparta::checkers::quals::PFPermission
      uses function isSink() defined in sparta::checkers::quals::FlowPermission
   function isValidPFPermission(String) in line 145
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable PARAMETERIZED_PERMISSION_REGEX defined in sparta::checkers::quals::PFPermission
      uses variable perm defined in convert.py
   function removeStar() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 45
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses function getParameters() defined in sparta::checkers::quals::PFPermission
      uses function getPermission() defined in sparta::checkers::quals::PFPermission
      uses function equals(Object) defined in sparta::checkers::quals::PFPermission
   function PFPermission(FlowPermission) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable permission defined in sparta::checkers::quals::PFPermission
   function PFPermission(FlowPermission,List< String >) in line 26
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable permission defined in sparta::checkers::quals::PFPermission
      uses variable parameters defined in sparta::checkers::quals::PFPermission
   variable ANY in line 16
      protection public
   variable PARAMETERIZED_PERMISSION_REGEX in line 14
      protection public
   variable parameters in line 19
   variable permission in line 18
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PolyFlow.java
module sparta::checkers::quals::PolyFlow
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PolyFlowReceiver.java
module sparta::checkers::quals::PolyFlowReceiver
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PolyIntentMap.java
module sparta::checkers::quals::PolyIntentMap
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PolySink.java
module sparta::checkers::quals::PolySink
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PolySinkR.java
module sparta::checkers::quals::PolySinkR
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PolySource.java
module sparta::checkers::quals::PolySource
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PolySourceR.java
module sparta::checkers::quals::PolySourceR
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/PutExtra.java
module sparta::checkers::quals::PutExtra
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/ReceiveIntent.java
module sparta::checkers::quals::ReceiveIntent
   function value() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/SendIntent.java
module sparta::checkers::quals::SendIntent
   function value() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/SetIntentFilter.java
module sparta::checkers::quals::SetIntentFilter
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/Sink.java
module sparta::checkers::quals::Sink
   function value() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/quals/Source.java
module sparta::checkers::quals::Source
   function value() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/report/ReportAPIChecker.java
module sparta::checkers::report::ReportAPIChecker
   inherits from org::checkerframework::common::util::report::ReportChecker
   function createSourceVisitor() in line 28
      3 lines of code
      0 parameters
      1 conditional paths
module sparta::checkers::report::ReportAPIAnnotatedTypeFactory
   inherits from org::checkerframework::common::basetype::BaseAnnotatedTypeFactory
   function createSupportedTypeQualifiers() in line 40
      4 lines of code
      0 parameters
      1 conditional paths
   function ReportAPIAnnotatedTypeFactory(BaseTypeChecker) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module sparta::checkers::report::ReportAPIVisitor
   inherits from org::checkerframework::common::util::report::ReportVisitor
   function createTypeFactory() in line 52
      3 lines of code
      0 parameters
      1 conditional paths
   function ReportAPIVisitor(BaseTypeChecker) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/report/ReportBinaryChecker.java
module sparta::checkers::report::ReportBinaryChecker
   inherits from org::checkerframework::common::basetype::BaseTypeChecker
   function createSourceVisitor() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
   function shouldReport(Element) in line 30
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable ignorePackages defined in sparta::checkers::report::ReportBinaryChecker
   variable ignorePackages in line 28
module sparta::checkers::report::ReportBinaryChecker::ReportBinaryVisitor
   inherits from org::checkerframework::common::basetype::BaseTypeVisitor
   function visitMemberSelect(MemberSelectTree,Void) in line 50
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
      uses function shouldReport(Element) defined in sparta::checkers::report::ReportBinaryChecker
   function visitMethodInvocation(MethodInvocationTree,Void) in line 60
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
      uses function shouldReport(Element) defined in sparta::checkers::report::ReportBinaryChecker
   function ReportBinaryVisitor(BaseTypeChecker) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/report/ReportValueAnnotatedTypeFactory.java
module sparta::checkers::report::ReportValueAnnotatedTypeFactory
   inherits from org::checkerframework::common::value::ValueAnnotatedTypeFactory
   function ReportValueAnnotatedTypeFactory(BaseTypeChecker) in line 8
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/report/ReportValueChecker.java
module sparta::checkers::report::ReportValueChecker
   inherits from org::checkerframework::common::value::ValueChecker
   function createSourceVisitor() in line 60
      3 lines of code
      0 parameters
      1 conditional paths
   function printStrings(Set< String >,String) in line 84
      9 lines of code
      2 parameters
      3 conditional paths
      uses function write(String) defined in sparta::checkers::report::ReportValueChecker
   function typeProcessingOver() in line 65
      protection public
      18 lines of code
      0 parameters
      6 conditional paths
      uses variable writer defined in sparta::checkers::report::ReportValueChecker
      uses variable OUTPUT_FILENAME defined in sparta::checkers::report::ReportValueChecker
      uses variable CATEGORIES defined in sparta::checkers::report::ReportValueChecker
      uses function printStrings(Set< String >,String) defined in sparta::checkers::report::ReportValueChecker
      uses variable e defined in d3.v2.min.js
   function write(String) in line 94
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable writer defined in sparta::checkers::report::ReportValueChecker
      uses variable e defined in d3.v2.min.js
   variable CATEGORIES in line 25
      protection public
   variable CLASSNAME_REGEX in line 22
      protection public
   variable CONTENT_REGEX in line 21
      protection public
   variable FILE_NAME_REGEX in line 19
      protection public
   variable FILE_PATH_REGEX in line 20
      protection public
   variable MESSAGE_REGEX in line 23
      protection public
   variable OUTPUT_FILENAME in line 26
   variable URL_REGEX in line 18
      protection public
   variable writer in line 57
module sparta::checkers::report::Category
   function getErrorKey() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFound() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(String) in line 125
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function Category(String,String,String) in line 109
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/report/ReportValueVisitor.java
module sparta::checkers::report::ReportValueVisitor
   inherits from org::checkerframework::common::value::ValueVisitor
   function getStringValues(AnnotatedTypeMirror) in line 40
      8 lines of code
      1 parameters
      2 conditional paths
   function isValidUse(AnnotatedArrayType,Tree) in line 50
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function reportStrings(AnnotatedTypeMirror,Tree) defined in sparta::checkers::report::ReportValueVisitor
      uses variable tree defined in d3.v2.min.js
   function isValidUse(AnnotatedDeclaredType,AnnotatedDeclaredType,Tree) in line 56
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function reportStrings(AnnotatedTypeMirror,Tree) defined in sparta::checkers::report::ReportValueVisitor
      uses variable tree defined in d3.v2.min.js
   function isValidUse(AnnotatedPrimitiveType,Tree) in line 63
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function reportStrings(AnnotatedTypeMirror,Tree) defined in sparta::checkers::report::ReportValueVisitor
      uses variable tree defined in d3.v2.min.js
   function reportStrings(AnnotatedTypeMirror,Tree) in line 26
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getStringValues(AnnotatedTypeMirror) defined in sparta::checkers::report::ReportValueVisitor
      uses variable CATEGORIES defined in sparta::checkers::report::ReportValueChecker
      uses variable tree defined in d3.v2.min.js
   function ReportValueVisitor(BaseTypeChecker) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/StubChecker.java
module sparta::checkers::StubChecker
   function addToMap(Element,String) in line 136
      9 lines of code
      2 parameters
      2 conditional paths
   function alphabetizeList(Set< String >) in line 99
      6 lines of code
      1 parameters
      1 conditional paths
   function checkAddsSourceData() in line 72
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable indexTypes defined in sparta::checkers::StubChecker
      uses function getParamIndexWithSource(AnnotatedExecutableType) defined in sparta::checkers::StubChecker
      uses function existingAddSourceIsCorrect(List< Integer >,Element) defined in sparta::checkers::StubChecker
      uses function addToMap(Element,String) defined in sparta::checkers::StubChecker
      uses function createAddSource(List< Integer >) defined in sparta::checkers::StubChecker
      uses function printMap() defined in sparta::checkers::StubChecker
   function checkStubs(Map< String, Set< AnnotationMirror >>,Map< Element, AnnotatedTypeMirror >,BaseTypeChecker,AnnotatedTypeFactory,ProcessingEnvironment) in line 47
      protection public
      10 lines of code
      5 parameters
      1 conditional paths
      uses function StubChecker(BaseTypeChecker,AnnotatedTypeFactory,ProcessingEnvironment,Map< String, Set< AnnotationMirror >>,Map< Element, AnnotatedTypeMirror >) defined in sparta::checkers::StubChecker
      uses variable checker defined in sparta::checkers::StubChecker
      uses variable factory defined in sparta::checkers::StubChecker
      uses variable env defined in sparta::checkers::StubChecker
      uses variable indexDeclAnnos defined in sparta::checkers::StubChecker
      uses variable indexTypes defined in sparta::checkers::StubChecker
      uses function checkAddsSourceData() defined in sparta::checkers::StubChecker
   function createAddSource(List< Integer >) in line 106
      16 lines of code
      1 parameters
      5 conditional paths
   function existingAddSourceIsCorrect(List< Integer >,Element) in line 123
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable factory defined in sparta::checkers::StubChecker
   function getParamIndexWithSource(AnnotatedExecutableType) in line 146
      5 lines of code
      1 parameters
      11 conditional paths
      uses variable i defined in convert.py
   function printMap() in line 87
      11 lines of code
      0 parameters
      3 conditional paths
      uses function alphabetizeList(Set< String >) defined in sparta::checkers::StubChecker
   function StubChecker(BaseTypeChecker,AnnotatedTypeFactory,ProcessingEnvironment,Map< String, Set< AnnotationMirror >>,Map< Element, AnnotatedTypeMirror >) in line 58
      protection public
      11 lines of code
      5 parameters
      1 conditional paths
      uses variable checker defined in sparta::checkers::StubChecker
      uses variable factory defined in sparta::checkers::StubChecker
      uses variable indexDeclAnnos defined in sparta::checkers::StubChecker
      uses variable indexTypes defined in sparta::checkers::StubChecker
      uses variable env defined in sparta::checkers::StubChecker
   variable checker in line 41
   variable env in line 45
   variable factory in line 44
   variable indexDeclAnnos in line 42
   variable indexTypes in line 43
module sparta::checkers::StubChecker::SourceScanner
   inherits from org::checkerframework::framework::type::visitor::AnnotatedTypeScanner
   function getParams() in line 220
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function reduce(Boolean,Boolean) in line 176
      9 lines of code
      2 parameters
      1 conditional paths
   function scan(AnnotatedTypeMirror,Void) in line 162
      12 lines of code
      2 parameters
      1 conditional paths
   function visitExecutable(AnnotatedExecutableType,Void) in line 187
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
   function visitTypeVariable(AnnotatedTypeVariable,Void) in line 208
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitWildcard(AnnotatedWildcardType,Void) in line 214
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable params in line 159
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/util/IntentKeyChecker.java
module sparta::checkers::util::IntentKeyChecker
   inherits from org::checkerframework::common::value::ValueChecker
   function createSourceVisitor() in line 69
      3 lines of code
      0 parameters
      1 conditional paths
   function message(Diagnostic.Kind,Object,String,Object...) in line 139
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
   function typeProcessingOver() in line 73
      protection public
      46 lines of code
      0 parameters
      5 conditional paths
      uses variable e defined in d3.v2.min.js
      uses variable keys defined in d3.v2.min.js
   function write(Object) in line 131
      5 lines of code
      1 parameters
      1 conditional paths
   function writenewline() in line 128
      3 lines of code
      0 parameters
      1 conditional paths
   function writeNoComma(Object) in line 120
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in d3.v2.min.js
   variable writer in line 35
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/util/IntentKeyVisitor.java
module sparta::checkers::util::IntentKeyVisitor
   inherits from org::checkerframework::common::value::ValueVisitor
   function addKeysToList(List< String >) in line 111
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable keys defined in d3.v2.min.js
      uses function putOrIncrementMap(String,Map< String, Integer >) defined in sparta::checkers::util::IntentKeyVisitor
   function checkMethodInvocability(AnnotatedExecutableType,MethodInvocationTree) in line 49
      12 lines of code
      2 parameters
      3 conditional paths
      uses function hasDeclAnnotation(MethodInvocationTree,Class<?extends Annotation >) defined in sparta::checkers::util::IntentKeyVisitor
      uses variable node defined in d3.v2.min.js
      uses function whatkind(MethodInvocationTree) defined in sparta::checkers::util::IntentKeyVisitor
      uses function countGetExtra(MethodInvocationTree) defined in sparta::checkers::util::IntentKeyVisitor
      uses function putOrIncrementMap(String,Map< String, Integer >) defined in sparta::checkers::util::IntentKeyVisitor
      uses variable method defined in convert.py
      uses function countPutExtra(MethodInvocationTree) defined in sparta::checkers::util::IntentKeyVisitor
   function countGetExtra(MethodInvocationTree) in line 83
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable keys defined in d3.v2.min.js
      uses function getKeys(MethodInvocationTree) defined in sparta::checkers::util::IntentKeyVisitor
      uses variable node defined in d3.v2.min.js
      uses function addKeysToList(List< String >) defined in sparta::checkers::util::IntentKeyVisitor
   function countPutExtra(MethodInvocationTree) in line 97
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable keys defined in d3.v2.min.js
      uses function getKeys(MethodInvocationTree) defined in sparta::checkers::util::IntentKeyVisitor
      uses variable node defined in d3.v2.min.js
      uses function addKeysToList(List< String >) defined in sparta::checkers::util::IntentKeyVisitor
   function createTypeFactory() in line 44
      3 lines of code
      0 parameters
      1 conditional paths
   function getKeys(MethodInvocationTree) in line 122
      37 lines of code
      1 parameters
      6 conditional paths
      uses variable keys defined in d3.v2.min.js
      uses variable tree defined in d3.v2.min.js
      uses variable t defined in d3.v2.min.js
      uses variable k defined in d3.v2.min.js
      uses variable toString defined in d3.v2.min.js
   function hasDeclAnnotation(MethodInvocationTree,Class<?extends Annotation >) in line 117
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
   function putOrIncrementMap(String,Map< String, Integer >) in line 62
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable map defined in d3.v2.min.js
   function visitAnnotation(AnnotationTree,Void) in line 161
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable args defined in convert.py
      uses variable node defined in d3.v2.min.js
   function whatkind(MethodInvocationTree) in line 71
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in convert.py
      uses variable node defined in d3.v2.min.js
      uses function putOrIncrementMap(String,Map< String, Integer >) defined in sparta::checkers::util::IntentKeyVisitor
   function IntentKeyVisitor(BaseTypeChecker) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/util/IntentStatsAnnotatedTypeFactory.java
module sparta::checkers::util::IntentStatsAnnotatedTypeFactory
   inherits from org::checkerframework::checker::linear::LinearAnnotatedTypeFactory
   function IntentStatsAnnotatedTypeFactory(BaseTypeChecker) in line 7
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/util/IntentStatsChecker.java
module sparta::checkers::util::IntentStatsChecker
   inherits from org::checkerframework::common::basetype::BaseTypeChecker
   function createSourceVisitor() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   function message(Diagnostic.Kind,Object,String,Object...) in line 101
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
   function typeProcessingOver() in line 62
      protection public
      20 lines of code
      0 parameters
      3 conditional paths
   function write(Object) in line 93
      5 lines of code
      1 parameters
      1 conditional paths
   function writenewline() in line 90
      3 lines of code
      0 parameters
      1 conditional paths
   function writeNoComma(Object) in line 83
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in d3.v2.min.js
   variable OUTPUT_NAME in line 49
   variable writer in line 47
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/util/IntentStatsVisitor.java
module sparta::checkers::util::IntentStatsVisitor
   inherits from org::checkerframework::common::basetype::BaseTypeVisitor
   function checkMethodInvocability(AnnotatedExecutableType,MethodInvocationTree) in line 45
      19 lines of code
      2 parameters
      4 conditional paths
      uses function hasDeclAnnotation(MethodInvocationTree,Class<?extends Annotation >) defined in sparta::checkers::util::IntentStatsVisitor
      uses variable node defined in d3.v2.min.js
      uses variable possiblePutExtrasSideEffectFree defined in sparta::checkers::util::IntentStatsVisitor
      uses variable method defined in convert.py
   function commonAssignmentCheck(Tree,ExpressionTree,String) in line 72
      24 lines of code
      3 parameters
      5 conditional paths
      uses function isTypeOf(TypeMirror,Class<?>) defined in sparta::checkers::util::IntentStatsVisitor
   function hasDeclAnnotation(MethodInvocationTree,Class<?extends Annotation >) in line 65
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable tree defined in d3.v2.min.js
   function isTypeOf(TypeMirror,Class<?>) in line 102
      4 lines of code
      2 parameters
      1 conditional paths
   function visitAnnotation(AnnotationTree,Void) in line 98
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visitMethod(MethodTree,Void) in line 38
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable possiblePutExtrasSideEffectFree defined in sparta::checkers::util::IntentStatsVisitor
   function IntentStatsVisitor(BaseTypeChecker) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable possiblePutExtrasSideEffectFree in line 31
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/validator/BaseFlowVisitor.java
module sparta::checkers::validator::BaseFlowVisitor
   inherits from org::checkerframework::common::basetype::BaseTypeVisitor
   function setValidator(Validator...) in line 47
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
   function visitAnnotation(AnnotationTree,Void) in line 118
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitAnnotation(AnnotationTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitArrayAccess(ArrayAccessTree,Void) in line 161
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitArrayAccess(ArrayAccessTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitAssignment(AssignmentTree,Void) in line 76
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitAssignment(AssignmentTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitCase(CaseTree,Void) in line 191
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitCase(CaseTree) defined in sparta::checkers::validator::Validator
   function visitClass(ClassTree,Void) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitClass(ClassTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitCompilationUnit(CompilationUnitTree,Void) in line 173
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitCompilationUnit(CompilationUnitTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitCompoundAssignment(CompoundAssignmentTree,Void) in line 137
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitCompoundAssignment(CompoundAssignmentTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitConditionalExpression(ConditionalExpressionTree,Void) in line 124
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitConditionalExpression(ConditionalExpressionTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitDoWhileLoop(DoWhileLoopTree,Void) in line 199
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitDoWhileLoop(DoWhileLoopTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitEnhancedForLoop(EnhancedForLoopTree,Void) in line 82
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitEnhancedForLoop(EnhancedForLoopTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitIdentifier(IdentifierTree,Void) in line 167
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitIdentifier(IdentifierTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitIf(IfTree,Void) in line 179
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitIf(IfTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitInstanceOf(InstanceOfTree,Void) in line 155
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitInstanceOf(InstanceOfTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitLambdaExpression(LambdaExpressionTree,Void) in line 100
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitLambdaExpression(LambdaExpressionTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitMemberReference(MemberReferenceTree,Void) in line 106
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitMemberReference(MemberReferenceTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitMethod(MethodTree,Void) in line 58
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitMethod(MethodTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitMethodInvocation(MethodInvocationTree,Void) in line 88
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitMethodInvocation(MethodInvocationTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitNewArray(NewArrayTree,Void) in line 143
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitNewArray(NewArrayTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitNewClass(NewClassTree,Void) in line 94
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitNewClass(NewClassTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitReturn(ReturnTree,Void) in line 112
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitReturn(ReturnTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitSwitch(SwitchTree,Void) in line 185
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitSwitch(SwitchTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitTypeCast(TypeCastTree,Void) in line 149
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitTypeCast(TypeCastTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitTypeParameter(TypeParameterTree,Void) in line 64
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitTypeParameter(TypeParameterTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitUnary(UnaryTree,Void) in line 131
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitUnary(UnaryTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitVariable(VariableTree,Void) in line 70
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitVariable(VariableTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function visitWhileLoop(WhileLoopTree,Void) in line 205
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable validator defined in sparta::checkers::validator::BaseFlowVisitor
      uses function visitWhileLoop(WhileLoopTree) defined in sparta::checkers::validator::Validator
      uses variable node defined in d3.v2.min.js
   function BaseFlowVisitor(BaseTypeChecker) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable validator in line 41
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/validator/BaseValidator.java
module sparta::checkers::validator::BaseValidator
   inherits from sparta::checkers::validator::Validator
   function visitAnnotation(AnnotationTree) in line 40
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitArrayAccess(ArrayAccessTree) in line 44
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitAssignment(AssignmentTree) in line 48
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCase(CaseTree) in line 132
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitClass(ClassTree) in line 52
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCompilationUnit(CompilationUnitTree) in line 120
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCompoundAssignment(CompoundAssignmentTree) in line 100
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConditionalExpression(ConditionalExpressionTree) in line 92
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitDoWhileLoop(DoWhileLoopTree) in line 136
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitEnhancedForLoop(EnhancedForLoopTree) in line 68
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitForLoop(ForLoopTree) in line 144
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIdentifier(IdentifierTree) in line 116
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIf(IfTree) in line 124
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitInstanceOf(InstanceOfTree) in line 112
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLambdaExpression(LambdaExpressionTree) in line 80
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitMemberReference(MemberReferenceTree) in line 84
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitMethod(MethodTree) in line 56
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitMethodInvocation(MethodInvocationTree) in line 72
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitNewArray(NewArrayTree) in line 104
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitNewClass(NewClassTree) in line 76
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitReturn(ReturnTree) in line 88
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSwitch(SwitchTree) in line 128
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitTypeCast(TypeCastTree) in line 108
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitTypeParameter(TypeParameterTree) in line 60
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitUnary(UnaryTree) in line 96
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitVariable(VariableTree) in line 64
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitWhileLoop(WhileLoopTree) in line 140
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/validator/Validator.java
module sparta::checkers::validator::Validator
   function visitAnnotation(AnnotationTree) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitArrayAccess(ArrayAccessTree) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitAssignment(AssignmentTree) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitCase(CaseTree) in line 96
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitClass(ClassTree) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitCompilationUnit(CompilationUnitTree) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitCompoundAssignment(CompoundAssignmentTree) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitConditionalExpression(ConditionalExpressionTree) in line 76
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitDoWhileLoop(DoWhileLoopTree) in line 98
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitEnhancedForLoop(EnhancedForLoopTree) in line 64
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitForLoop(ForLoopTree) in line 102
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitIdentifier(IdentifierTree) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitIf(IfTree) in line 92
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitInstanceOf(InstanceOfTree) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitLambdaExpression(LambdaExpressionTree) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitMemberReference(MemberReferenceTree) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitMethod(MethodTree) in line 58
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitMethodInvocation(MethodInvocationTree) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitNewArray(NewArrayTree) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitNewClass(NewClassTree) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitReturn(ReturnTree) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitSwitch(SwitchTree) in line 94
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitTypeCast(TypeCastTree) in line 84
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitTypeParameter(TypeParameterTree) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitUnary(UnaryTree) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitVariable(VariableTree) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitWhileLoop(WhileLoopTree) in line 100
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/src/sparta/checkers/validator/ValidatorList.java
module sparta::checkers::validator::ValidatorList
   inherits from sparta::checkers::validator::Validator
   function visitAnnotation(AnnotationTree) in line 44
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitArrayAccess(ArrayAccessTree) in line 50
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitAssignment(AssignmentTree) in line 56
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitCase(CaseTree) in line 185
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitClass(ClassTree) in line 62
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitCompilationUnit(CompilationUnitTree) in line 164
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitCompoundAssignment(CompoundAssignmentTree) in line 134
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitConditionalExpression(ConditionalExpressionTree) in line 122
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitDoWhileLoop(DoWhileLoopTree) in line 192
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitEnhancedForLoop(EnhancedForLoopTree) in line 86
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitForLoop(ForLoopTree) in line 206
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitIdentifier(IdentifierTree) in line 158
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitIf(IfTree) in line 171
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitInstanceOf(InstanceOfTree) in line 152
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitLambdaExpression(LambdaExpressionTree) in line 104
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitMemberReference(MemberReferenceTree) in line 110
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitMethod(MethodTree) in line 68
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitMethodInvocation(MethodInvocationTree) in line 92
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitNewArray(NewArrayTree) in line 140
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitNewClass(NewClassTree) in line 98
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitReturn(ReturnTree) in line 116
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitSwitch(SwitchTree) in line 178
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitTypeCast(TypeCastTree) in line 146
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitTypeParameter(TypeParameterTree) in line 74
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitUnary(UnaryTree) in line 128
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitVariable(VariableTree) in line 80
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function visitWhileLoop(WhileLoopTree) in line 199
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in d3.v2.min.js
   function ValidatorList(Validator...) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/fenums/InAnnotation.java
module InAnnotation
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/fenums/Simple.java
module Simple
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/report/Simple.java
module Simple
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/AddsSourceDataTest.java
module AddsSourceDataTest
   function addsSourceReceiver(@Source(READ_SMS)@Sink({}) AddsSourceDataTest) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addsSourceReceiver(@Source(READ_SMS)@Sink({}) AddsSourceDataTest) defined in AddsSourceDataTest
   function AddsSourceDataTest(@Source({READ_SMS})@Sink({}) Object) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AddsSourceDataTest(@Source({READ_SMS})@Sink({}) byte @Source({})@Sink({})   []) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function AddsSourceDataTest() defined in AddsSourceDataTest
   function AddsSourceDataTest() in line 127
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function AddsSourceDataTest(String,String) in line 130
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
      uses function AddsSourceDataTest() defined in AddsSourceDataTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/Arithmetics.java
module Arithmetics
   function checkAccelToFile(final @Source({ACCELEROMETER})@Sink({FILESYSTEM}) int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function checkBottom(final @Source({})@Sink(ANY) int) in line 27
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function checkLUB(final @Source({READ_SMS, ACCELEROMETER})@Sink({}) int) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function checkReadSmsToWriteSms(final @Source({READ_SMS})@Sink({WRITE_SMS}) int) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function checkTop(final @Source(ANY)@Sink({}) int) in line 24
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/ArrayCast.java
module ArrayCast
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/CastTest.java
module CastTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/Conditions.java
module Conditions
   variable mLastValues in line 54
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/ConstructorAnnotation.java
module TestImplicitConstructor
module TestNoParamConstructor
module TestParamConstructor
module TestExplicitConstructorType
module TestClassAnnotationType
module ConstructorAnnotation
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/DefaultFlowTest.java
module DefaultFlowTest
module TestClass
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/EnumTest.java
module EnumTest
module EnumTest::EnumAnnoBottom
module EnumTest::EnumAnnoEmpty
module EnumTest::EnumNoAnno
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/FlowCompletion.java
module FlowCompleteWays
module FlowCompletionSource
   function FlowCompletionSource() in line 65
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable bottom in line 62
      protection public
   variable c in line 60
      protection public
   variable testField in line 57
      protection public
   variable top in line 61
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/FlowPolicyDefaulting.java
module FlowPoilcyDefaulting
module RecieverTest
module UpperObject
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/ForEach.java
module ForEach
   function test() in line 11
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function testArrays() in line 28
      protection public
      30 lines of code
      0 parameters
      9 conditional paths
   function testSMS() in line 16
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/Generics.java
module ListTest
module List
module Generics
module UpperObject
   function testWildCard(java.util.List<?extends Number >) in line 46
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module GenObject
module GenObjectLit
module TestUpperObject
module TypeAsKeyHashMap
module AppList
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/MethodTypeArgumentResolution.java
module MethodTypeArgumentResolution
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/MiscTests.java
module MiscTests
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/NewList.java
module MyList
module NewList
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/NewTest.java
module TestClass2
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/Null.java
module Null
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/Overriding.java
module LocationController
   inherits from android::location::LocationListener
   function onLocationChanged(@Source({ACCESS_FINE_LOCATION, ACCESS_COARSE_LOCATION}) Location) in line 9
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onProviderDisabled(@Source(ANY) String) in line 13
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onProviderEnabled(@Source(ANY) String) in line 12
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onStatusChanged(@Source(ANY) String,@Source(ANY) int,@Source(ANY) Bundle) in line 11
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
module LocationControllerBad
   inherits from android::location::LocationListener
   function onLocationChanged(@Sink(INTERNET) Location) in line 18
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onProviderDisabled(@Source(ANY) String) in line 22
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onProviderEnabled(@Source(ANY) String) in line 21
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function onStatusChanged(@Source(ANY) String,@Source(ANY) int,@Source(ANY) Bundle) in line 20
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/Poly.java
module Poly
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/PolyConstructors.java
module HttpGet
module PolyConstructors
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/PolyFlowTest.java
module Cons
   function toString() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module Use
module GetterSetter
   function getField() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setField(String) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function GetterSetter(@PolySource @PolySink String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable field in line 77
module TestGetterSetter
   function method(@Source(READ_SMS)@Sink(INTERNET) String,@Source(READ_TIME)@Sink(WRITE_TIME) String) in line 104
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
module OtherTests
   function identity(String[]) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function identityMultiDem(String) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/PolyOverride.java
module PolyOverride
module PolyOverride::Comparator
   function compare(@PolySource @PolySink T,@PolySource @PolySink T) in line 8
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module PolyOverride::ObjectComparator
   inherits from PolyOverride::Comparator
   function compare(@Source(FlowPermissionString.ACCESS_FINE_LOCATION) Object,@Source(FlowPermissionString.ACCESS_FINE_LOCATION) Object) in line 14
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/PolyTest.java
module PolyTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/PrimiOps.java
module PrimiOps
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/ReceiverPolyDefaultTest.java
module ReceiverPolyDefaultTest
   function polyNoReturn(String) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/ReceiverPolyTest.java
module ReceiverPolyTest
   function ReceiverPolyTest(@PolySinkR @PolySourceR String) in line 10
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module ReceiverPolyTest::Inner
   function Inner(@PolySinkR @PolySourceR ReceiverPolyTest ReceiverPolyTest.) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function Inner(@PolySinkR @PolySourceR ReceiverPolyTest ReceiverPolyTest.,@PolySinkR @PolySourceR String) in line 51
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/SinksTest.java
module SinkTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/SourceAndSink.java
module SourceAndSink
module SourceAndSinkOld
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/SourcesTest.java
module SourceTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/StringConcat.java
module Use
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/SWAssignment.java
module SupressWarningsAssignment
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/SwitchTest.java
module SwitchTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/TestLiteralDefaults.java
module TestLiteralDefaults
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/flow/TypeParameterReturn.java
module TypeParameterReturn
module TypeParameterReturn::MyClass
   function myMethod() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/ActivityReceiver.java
module tests::ActivityReceiver
   inherits from android::app::Activity
   function getIntent() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable i defined in convert.py
   function setIntent(@IntentMap({@Extra(key="k5", source={ACCESS_FINE_LOCATION}, sink={})}) Intent) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/ActivityTest.java
module tests::ActivityTest
   inherits from android::app::Activity
   variable clickListenerFail in line 136
   variable clickListenerOK in line 125
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/AndroidSystemTest.java
module AndroidSystemTest
   inherits from android::app::Activity
   variable key1 in line 11
      protection public
   variable key2 in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/ArrayTest.java
module ArrayTest
   inherits from android::app::Activity
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/BReceiverReceiver.java
module tests::BReceiverReceiver
   inherits from android::content::BroadcastReceiver
   function onReceive(Context,@IntentMap({@Extra(key="k5", source={ACCESS_FINE_LOCATION}, sink={})}) Intent) in line 23
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/BReceiverTest.java
module BReceiverTest
   inherits from android::app::Activity
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/ConstCheckerTest.java
module ConstCheckerTest
   inherits from android::app::Activity
   variable k1 in line 14
      protection public
   variable k2 in line 15
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/DataflowInferenceTest.java
module tests::DataflowInferenceTest
   inherits from android::app::Activity
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/DefaultingTest.java
module tests::DefaultingTest
   inherits from android::app::Activity
   function setIntent(@IntentMap({@Extra(key="k5", sink={})}) Intent) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable i defined in convert.py
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/GenericsTest.java
module GenericsTest
   inherits from android::app::Activity
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/IntentMapBottomTest.java
module tests::IntentMapBottomTest
   inherits from android::app::Activity
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/NotAllowedAnnos.java
module tests::NotAllowedAnnos
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/PolyIntentMapTest.java
module PolyIntentMapTest
   inherits from android::app::Activity
   variable k1 in line 13
      protection public
   variable k2 in line 14
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/ReceiverIntentTest.java
module tests::ReceiverIntentTest
   inherits from android::app::Activity
   function setIntent(@IntentMap({@Extra(key="k5", source={ACCESS_FINE_LOCATION}, sink={})}) Intent) in line 26
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/ServiceReceiver.java
module tests::ServiceReceiver
   inherits from android::app::Service
   function onBind(Intent) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onStartCommand(@IntentMap({@Extra(key="k5", source={ACCESS_FINE_LOCATION}, sink={})}) Intent,int,int) in line 16
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/ServiceTest.java
module ServiceTest
   inherits from android::app::Activity
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intent/TypeRefinement.java
module TypeRefinementTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intentreceivers/ActivityReceiverStub.java
module tests::ActivityReceiverStub
   inherits from android::app::Activity
   function getIntent() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap({@Extra(key="k5", source={ACCESS_FINE_LOCATION}, sink={})}) Intent) in line 24
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intentreceivers/BReceiverReceiverStub.java
module tests::BReceiverReceiverStub
   inherits from android::content::BroadcastReceiver
   function onReceive(Context,@IntentMap({@Extra(key="k5", source={ACCESS_FINE_LOCATION}, sink={})}) Intent) in line 23
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intentreceivers/IntentMapBottom2ReceiverStub.java
module tests::IntentMapBottom2ReceiverStub
   inherits from android::app::Activity
   function getIntent() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap({                       @Extra(key="k1", source={FILESYSTEM}, sink={INTERNET}),                       @Extra(key="k2", source={ACCESS_FINE_LOCATION}, sink={DISPLAY})}) Intent) in line 26
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intentreceivers/IntentMapBottom3ReceiverStub.java
module tests::IntentMapBottom3ReceiverStub
   inherits from android::app::Activity
   function getIntent() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntent(@IntentMap() Intent) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/intentreceivers/ServiceReceiverStub.java
module tests::ServiceReceiverStub
   inherits from android::app::Service
   function onBind(Intent) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function onStartCommand(@IntentMap({@Extra(key="k5", source={ACCESS_FINE_LOCATION}, sink={})}) Intent,int,int) in line 22
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/not-reviewed/NotReviewed.java
module NotReviewed
module SubExampleApi
   inherits from stubfile::ExampleApi
   function notReviewed() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function notReviewed1() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function notReviewed2(String) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function notReviewed3(String) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/InferParamPermTest.java
module InferParamPermTest
module InferParamPermTest::MyFile
   function MyFile(String) in line 76
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function MyFile(String,String) in line 80
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module InferParamPermTest::MyFileOutputStream
   function write(@PolySourceR @PolySinkR MyFileOutputStream,@PolySourceR @PolySinkR byte[]) in line 93
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function write(@PolySourceR @PolySinkR MyFileOutputStream,@PolySourceR @PolySinkR Object) in line 96
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function MyFileOutputStream(String) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function MyFileOutputStream(MyFile) in line 90
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module InferParamPermTest::MyFileInputStream
   function read(@PolySourceR @PolySinkR MyFileInputStream,@PolySourceR @PolySinkR byte @Source({})   []) in line 108
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function read(@PolySourceR @PolySinkR MyFileInputStream,@PolySourceR @PolySinkR Object) in line 111
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function MyFileInputStream(String) in line 103
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function MyFileInputStream(MyFile) in line 106
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/ParameterizedArithmeticsTest.java
module ParameterizedArithmeticsTest
   function saveAccelData(final @Source({ACCELEROMETER}) int) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/ParameterizedCastTest.java
module ParameterizedCastTest
   function anyToLoc(@Source(ANY) int) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function bar(@Source(ACCESS_FINE_LOCATION) int) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function foo(@Source(ACCESS_FINE_LOCATION+"(my*)") int) in line 21
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function foo2(@Source(ACCESS_FINE_LOCATION) int) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function fromAny(@Source(ANY) int) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/ParameterizedFlowPolicyTest.java
module ParameterizedFlowPolicyTestSinks
module TestSources
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/ParameterizedGenericsTest.java
module ParameterizedGenericsTest
   function testSourceGenerics() in line 11
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/ParameterizedSinksSubtypingTest.java
module ParameterizedSinksSubtypingTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/ParameterizedSinkTest.java
module ParameterizedSinkTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/ParameterizedSourcesSubtypingTest.java
module ParameterizedSourcesSubtypingTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/parameterized/ParameterizedSourceTest.java
module ParameterizedSourceTest
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/permissions/FirstCall.java
module FirstCall
   variable s in line 53
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/permissions/TestSpec.java
module TestSpec
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/policyfile/WithoutPolicyTest.java
module PolicyTest
   function accFileToNet() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function accFileToNet() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function fromAny(@Source(ACCESS_FINE_LOCATION)@Sink(WRITE_EXTERNAL_STORAGE) int) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function fromAny(@Source(ACCESS_FINE_LOCATION)@Sink(WRITE_EXTERNAL_STORAGE) int) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function fsAny() in line 26
      3 lines of code
      0 parameters
      1 conditional paths
   function fsAny() in line 26
      3 lines of code
      0 parameters
      1 conditional paths
   function micToExt(final @Source({RECORD_AUDIO})@Sink({WRITE_EXTERNAL_STORAGE}) Object) in line 33
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function micToExt(final @Source({RECORD_AUDIO})@Sink({WRITE_EXTERNAL_STORAGE}) Object) in line 33
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function micToExt2(final @Source({RECORD_AUDIO})@Sink({}) Object) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function micToExt2(final @Source({RECORD_AUDIO})@Sink({}) Object) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testInstantiate() in line 97
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testInstantiate() in line 99
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function timeToLogCat(final @Source({READ_TIME})@Sink({WRITE_LOGS}) Object) in line 30
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function timeToLogCat(final @Source({READ_TIME})@Sink({WRITE_LOGS}) Object) in line 30
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable anySource in line 20
   variable esFsLocSource in line 23
   variable logcatSink in line 24
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/policyfile/WithPolicyTest.java
module PolicyTest
   function accFileToNet() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function accFileToNet() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function fromAny(@Source(ACCESS_FINE_LOCATION)@Sink(WRITE_EXTERNAL_STORAGE) int) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function fromAny(@Source(ACCESS_FINE_LOCATION)@Sink(WRITE_EXTERNAL_STORAGE) int) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function fsAny() in line 26
      3 lines of code
      0 parameters
      1 conditional paths
   function fsAny() in line 26
      3 lines of code
      0 parameters
      1 conditional paths
   function micToExt(final @Source({RECORD_AUDIO})@Sink({WRITE_EXTERNAL_STORAGE}) Object) in line 33
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function micToExt(final @Source({RECORD_AUDIO})@Sink({WRITE_EXTERNAL_STORAGE}) Object) in line 33
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function micToExt2(final @Source({RECORD_AUDIO})@Sink({}) Object) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function micToExt2(final @Source({RECORD_AUDIO})@Sink({}) Object) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testInstantiate() in line 97
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testInstantiate() in line 99
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function timeToLogCat(final @Source({READ_TIME})@Sink({WRITE_LOGS}) Object) in line 30
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function timeToLogCat(final @Source({READ_TIME})@Sink({WRITE_LOGS}) Object) in line 30
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable anySource in line 20
   variable esFsLocSource in line 23
   variable logcatSink in line 24
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/reflection/ReflectionTest.java
module ReflectionTest
   variable CN in line 10
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/report/Android.java
module MyActivity
   inherits from android::app::Activity
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/src/tests/AndroidTests.java
module tests::AndroidTests
   function main(String[]) in line 34
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable f defined in convert.py
module tests::AndroidTests::AndroidFenumCheckerTests
   inherits from org::checkerframework::framework::test::CheckerFrameworkTest
   function getTestDirs() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AndroidFenumCheckerTests(File) in line 51
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
module tests::AndroidTests::AndroidPermissionsCheckerTests
   inherits from org::checkerframework::framework::test::CheckerFrameworkTest
   function getTestDirs() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AndroidPermissionsCheckerTests(File) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module tests::AndroidTests::AndroidReportCheckerTests
   inherits from org::checkerframework::framework::test::CheckerFrameworkTest
   function getTestDirs() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AndroidReportCheckerTests(File) in line 75
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module tests::AndroidTests::IntentCheckerTests
   inherits from org::checkerframework::framework::test::CheckerFrameworkTest
   function customizeOptions(List< String >) in line 104
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
   function getComponentMap(final File) in line 142
      3 lines of code
      1 parameters
      1 conditional paths
   function getFile(final File,final String) in line 127
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable path defined in d3.v2.min.js
   function getFlowPolicy(final File) in line 138
      3 lines of code
      1 parameters
      1 conditional paths
   function getTestDirs() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IntentCheckerTests(File) in line 87
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function IntentCheckerTests(File,String...) in line 93
      3 lines of code
      2 parameters
      1 conditional paths
module tests::AndroidTests::ParameterizedFlowCheckerTests
   inherits from tests::AndroidTests::FlowCheckerTests
   function getTestDirs() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParameterizedFlowCheckerTests(File) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module tests::AndroidTests::ReflectionFlowCheckerTests
   inherits from tests::AndroidTests::FlowCheckerTests
   function getTestDirs() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ReflectionFlowCheckerTests(File) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module tests::AndroidTests::FlowCheckerTests
   inherits from org::checkerframework::framework::test::CheckerFrameworkTest
   function customizeOptions(List< String >) in line 186
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
   function getFile(final File,final String) in line 202
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable path defined in d3.v2.min.js
   function getFlowPolicy(final File) in line 213
      3 lines of code
      1 parameters
      1 conditional paths
   function getTestDirs() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FlowCheckerTests(File) in line 170
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function FlowCheckerTests(File,String...) in line 176
      3 lines of code
      2 parameters
      1 conditional paths
module tests::AndroidTests::FlowStrictTests
   inherits from tests::AndroidTests::FlowCheckerTests
   function getTestDirs() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FlowStrictTests(File) in line 220
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
module tests::AndroidTests::StubfileTests
   inherits from tests::AndroidTests::FlowCheckerTests
   function customizeOptions(List< String >) in line 244
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
   function getjarfile(final File) in line 276
      3 lines of code
      1 parameters
      1 conditional paths
   function getStubfile(final File) in line 272
      3 lines of code
      1 parameters
      1 conditional paths
   function getTestDirs() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function StubfileTests(File) in line 234
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module tests::AndroidTests::FlowPolicyTests
   inherits from tests::AndroidTests::FlowCheckerTests
   function getTestDirs() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FlowPolicyTests(File) in line 283
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module tests::AndroidTests::NotReviewedLibraryCheckerTests
   inherits from org::checkerframework::framework::test::CheckerFrameworkTest
   function getTestDirs() in line 312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function run() in line 317
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   function NotReviewedLibraryCheckerTests(File) in line 302
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function NotReviewedLibraryCheckerTests(File,String...) in line 307
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/strict/ArrayInvariant.java
module ArrayInvariant
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/stubfile/ConstructorStubAnnotation.java
module mypakage::TestStubImplicitConstructor
module mypakage::TestStubNoParamConstructor
module mypakage::TestStubParamConstructor
module mypakage::TestStubExplicitConstructorType
module mypakage::ConstructorStubAnnotation
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/stubfile/stubfile/ExampleApi.java
module stubfile::ExampleApi
   function notReviewed() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function notReviewed1() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function notReviewed2(String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function notReviewed3(String) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function polyFlow() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function polyFlow1() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function polyFlow2(String) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function polyFlow3(String) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function polyFlowR() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function polyFlowR1() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function polyFlowR2(String) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function polyFlowR3(String) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reviewed() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reviewed1() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reviewed2(String) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reviewed3(String) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reviewedSomeAnnos() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reviewedSomeAnnos1() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reviewedSomeAnnos2(String) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reviewedSomeAnnos3(String) in line 47
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function staticImport(String) in line 54
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function ExampleApi() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function ExampleApi(String) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function ExampleApi(int) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable STATIC_FIELD in line 58
      protection public
module stubfile::ExampleApi::MyAnnotation
   function value() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module stubfile::ExampleApi::ExampleStaticApi
   function notReviewed() in line 80
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function notReviewed1() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function notReviewed2(String) in line 82
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function notReviewed3(String) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function polyFlow() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function polyFlow1() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function polyFlow2(String) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function polyFlow3(String) in line 63
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function polyFlowR() in line 65
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function polyFlowR1() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function polyFlowR2(String) in line 67
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function polyFlowR3(String) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reviewed() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reviewed1() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reviewed2(String) in line 72
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reviewed3(String) in line 73
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reviewedSomeAnnos() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reviewedSomeAnnos1() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reviewedSomeAnnos2(String) in line 77
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reviewedSomeAnnos3(String) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable STATIC_FIELD in line 85
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/stubfile/StubfileTests.java
module StubfileTests
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tests/Test.java
module Test
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tools/permissionmap-convert/convert.py
module convert.py
   variable f in line 8
      protection public
   variable lines in line 9
      protection public
   variable prev_package in line 11
      protection public
   variable prev_cls in line 12
      protection public
   variable sp in line 14
      protection public
   variable api in line 15
      protection public
   variable sp_m in line 16
      protection public
   variable sp2 in line 18
      protection public
   variable method in line 20
      protection public
   variable cls in line 21
      protection public
   variable package in line 22
      protection public
   variable args in line 35
      protection public
   variable perm in line 37
      protection public
   variable perms in line 38
      protection public
   variable i in line 39
      protection public
   variable args_arr in line 45
      protection public
   variable lst in line 47
      protection public
   variable cnt in line 48
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tools/permissionmap-convert/PermissionMap.java
module PermissionMap
   function asSortedList(Collection< T >) in line 142
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getMethod(String,String,Map< String, List< Method >>) in line 171
      16 lines of code
      3 parameters
      3 conditional paths
      uses variable method defined in convert.py
   function getMethod(String) in line 197
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable line defined in d3.v2.min.js
   function getPackage(String) in line 188
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable line defined in d3.v2.min.js
   function getPerm(String) in line 206
      8 lines of code
      1 parameters
      13 conditional paths
      uses variable line defined in d3.v2.min.js
      uses variable perms defined in convert.py
      uses variable method defined in convert.py
      uses variable perm defined in convert.py
      uses variable toString defined in d3.v2.min.js
      uses variable i defined in convert.py
   function getPrivateMethod(String) in line 85
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable line defined in d3.v2.min.js
   function getPrivatePackage(String) in line 104
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable line defined in d3.v2.min.js
   function main(String[]) in line 23
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function readPermMap(String) defined in PermissionMap
      uses variable args defined in convert.py
      uses function removePrivateAPIs(String,Map< String, List< Method >>) defined in PermissionMap
      uses function printPerm(Map< String, List< Method >>) defined in PermissionMap
      uses variable e defined in d3.v2.min.js
   function printClasses(List< Method >) in line 164
      7 lines of code
      1 parameters
      2 conditional paths
   function printPerm(Map< String, List< Method >>) in line 147
      17 lines of code
      1 parameters
      3 conditional paths
      uses function asSortedList(Collection< T >) defined in PermissionMap
      uses variable i defined in convert.py
      uses function printClasses(List< Method >) defined in PermissionMap
   function readPermMap(String) in line 115
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable line defined in d3.v2.min.js
      uses variable perm defined in convert.py
      uses function getPerm(String) defined in PermissionMap
      uses function getPackage(String) defined in PermissionMap
      uses variable method defined in convert.py
      uses function getMethod(String,String,Map< String, List< Method >>) defined in PermissionMap
   function removePrivateAPIs(String,Map< String, List< Method >>) in line 39
      44 lines of code
      2 parameters
      7 conditional paths
      uses variable line defined in d3.v2.min.js
      uses function getPrivatePackage(String) defined in PermissionMap
      uses variable method defined in convert.py
      uses function getPrivateMethod(String) defined in PermissionMap
      uses variable i defined in convert.py
      uses variable args defined in convert.py
module Method
   function addPermission(String) in line 226
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function convertMethod(String) in line 268
      20 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 244
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 236
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 260
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function Method(String,String) in line 220
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tools/permissionmap-convert/pscout-convert.py
module pscout-convert.py
   variable f in line 8
      protection public
   variable lines in line 9
      protection public
   variable prev_package in line 11
      protection public
   variable prev_cls in line 12
      protection public
   variable sp in line 14
      protection public
   variable api in line 15
      protection public
   variable sp_m in line 16
      protection public
   variable sp2 in line 18
      protection public
   variable method in line 20
      protection public
   variable cls in line 21
      protection public
   variable package in line 22
      protection public
   variable args in line 35
      protection public
   variable perm in line 37
      protection public
   variable perms in line 38
      protection public
   variable i in line 39
      protection public
   variable args_arr in line 45
      protection public
   variable lst in line 47
      protection public
   variable cnt in line 48
      protection public
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/tools/susi-convert/GenerateStubFilesFromSuSi.java
module GenerateStubFilesFromSuSi
   function addParamAnnotations(SuSiMethod,String[]) in line 126
      17 lines of code
      2 parameters
      3 conditional paths
      uses variable i defined in convert.py
      uses function getSinkAnnotation(SuSiMethod) defined in GenerateStubFilesFromSuSi
      uses variable method defined in convert.py
   function getSinkAnnotation(SuSiMethod) in line 144
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in convert.py
   function getSourceAnno(String,SuSiMethod) in line 152
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable method defined in convert.py
   function main(String[]) in line 27
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable args defined in convert.py
      uses function readFile(String) defined in GenerateStubFilesFromSuSi
      uses function printStubs() defined in GenerateStubFilesFromSuSi
   function print(String) in line 159
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in convert.py
      uses variable toString defined in d3.v2.min.js
   function printMethod(SuSiMethod) in line 106
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in convert.py
      uses function addParamAnnotations(SuSiMethod,String[]) defined in GenerateStubFilesFromSuSi
      uses function getSourceAnno(String,SuSiMethod) defined in GenerateStubFilesFromSuSi
      uses function print(String) defined in GenerateStubFilesFromSuSi
   function printPackage(List< SuSiMethod >) in line 82
      23 lines of code
      1 parameters
      4 conditional paths
      uses function print(String) defined in GenerateStubFilesFromSuSi
      uses variable method defined in convert.py
      uses function printMethod(SuSiMethod) defined in GenerateStubFilesFromSuSi
   function printStubs() in line 67
      14 lines of code
      0 parameters
      3 conditional paths
      uses function print(String) defined in GenerateStubFilesFromSuSi
      uses variable map defined in GenerateStubFilesFromSuSi
      uses function printPackage(List< SuSiMethod >) defined in GenerateStubFilesFromSuSi
   function readFile(String) in line 38
      29 lines of code
      1 parameters
      7 conditional paths
      uses variable line defined in d3.v2.min.js
      uses variable map defined in GenerateStubFilesFromSuSi
      uses variable e defined in d3.v2.min.js
   variable map in line 25
      protection public
module SuSiMethod
   function getClazz() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethod() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPckg() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPermissions() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSusi() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 205
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function SuSiMethod(String,String,String,String) in line 174
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/visualization/Scripts/API Graph.js
module API Graph.js
   variable DATA_FILE_PATH in line 4
      protection public
   variable PATH_DELIMITER in line 5
      protection public
   variable PACKAGE_DELIMITER in line 6
      protection public
   variable svg in line 9
      protection public
   variable x_children in line 12
      protection public
   variable x_parent in line 13
      protection public
   variable y_children in line 14
      protection public
   variable y_parent in line 15
      protection public
   variable apiTree in line 17
      protection public
   variable directoryTree in line 18
      protection public
   variable apiViewActive in line 20
      protection public
   variable treemap in line 22
      protection public
   variable onload in line 479
      protection public
   function initialize() in line 27
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function parseDataFile((null),(null)) defined in API Graph.js
      uses variable DATA_FILE_PATH defined in API Graph.js
      uses variable x_children defined in API Graph.js
      uses variable y_children defined in API Graph.js
      uses variable x_parent defined in API Graph.js
      uses variable y_parent defined in API Graph.js
      uses variable apiTree defined in API Graph.js
      uses variable directoryTree defined in API Graph.js
      uses variable apiViewActive defined in API Graph.js
      uses function displayTreemap() defined in API Graph.js
      uses function addViewByButtonClickListeners() defined in API Graph.js
   function addViewByButtonClickListeners() in line 49
      protection public
      27 lines of code
      0 parameters
      3 conditional paths
      uses variable apiViewActive defined in API Graph.js
      uses variable x_children defined in API Graph.js
      uses variable y_children defined in API Graph.js
      uses variable x_parent defined in API Graph.js
      uses variable y_parent defined in API Graph.js
      uses function displayTreemap() defined in API Graph.js
   function displayTreemap() in line 77
      protection public
      99 lines of code
      0 parameters
      3 conditional paths
      uses variable apiViewActive defined in API Graph.js
      uses variable svg defined in API Graph.js
      uses variable treemap defined in API Graph.js
      uses function d((null),(null)) defined in d3.v2.min.js
      uses variable apiTree defined in API Graph.js
      uses variable selectAll defined in d3.v2.min.js
      uses variable attr defined in d3.v2.min.js
      uses variable x_children defined in API Graph.js
      uses variable y_children defined in API Graph.js
      uses variable on defined in d3.v2.min.js
      uses function onClick((null),(null)) defined in API Graph.js
      uses variable style defined in d3.v2.min.js
      uses variable append defined in d3.v2.min.js
      uses variable text defined in d3.v2.min.js
      uses variable directoryTree defined in API Graph.js
   function onClick((null),(null)) in line 177
      protection public
      104 lines of code
      2 parameters
      5 conditional paths
      uses variable path defined in d3.v2.min.js
      uses function d((null),(null)) defined in d3.v2.min.js
      uses variable datum defined in d3.v2.min.js
      uses variable x_parent defined in API Graph.js
      uses variable y_parent defined in API Graph.js
      uses variable svg defined in API Graph.js
      uses variable attr defined in d3.v2.min.js
      uses variable select defined in d3.v2.min.js
      uses variable x_children defined in API Graph.js
      uses variable y_children defined in API Graph.js
      uses variable transition defined in d3.v2.min.js
      uses variable apiViewActive defined in API Graph.js
      uses variable api defined in convert.py
   function getTextDimensions((null)) in line 282
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable text defined in d3.v2.min.js
   function parseDataFile((null),(null)) in line 296
      protection public
      27 lines of code
      2 parameters
      1 conditional paths
      uses variable directoryTree defined in API Graph.js
      uses variable apiTree defined in API Graph.js
      uses function makeDirectoryTreeNodesFromPath((null),(null)) defined in API Graph.js
      uses function makeApiTreeNodesFromName((null),(null),(null)) defined in API Graph.js
      uses function ApiUsage((null),(null)) defined in API Graph.js
      uses function FileUsage((null),(null)) defined in API Graph.js
      uses function setApiUsageCounts((null)) defined in API Graph.js
      uses function setFileUsageCounts((null)) defined in API Graph.js
   function setApiUsageCounts((null)) in line 324
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable directoryTree defined in API Graph.js
      uses function setApiUsageCountsHelper((null)) defined in API Graph.js
   function setApiUsageCountsHelper((null)) in line 330
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function setFileUsageCounts((null)) in line 343
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable apiTree defined in API Graph.js
      uses function setFileUsageCountsHelper((null)) defined in API Graph.js
   function setFileUsageCountsHelper((null)) in line 349
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function makeDirectoryTreeNodesFromPath((null),(null)) in line 362
      protection public
      37 lines of code
      2 parameters
      6 conditional paths
      uses variable path defined in d3.v2.min.js
      uses variable PATH_DELIMITER defined in API Graph.js
      uses variable tree defined in d3.v2.min.js
      uses variable i defined in convert.py
      uses function DirectoryTreeNode((null),(null),(null)) defined in API Graph.js
   function makeApiTreeNodesFromName((null),(null),(null)) in line 401
      protection public
      39 lines of code
      3 parameters
      6 conditional paths
      uses variable PACKAGE_DELIMITER defined in API Graph.js
      uses variable tree defined in d3.v2.min.js
      uses variable i defined in convert.py
      uses function ApiTreeNode((null),(null),(null)) defined in API Graph.js
   function DirectoryTreeNode((null),(null),(null)) in line 442
      protection public
      13 lines of code
      3 parameters
      2 conditional paths
   function ApiTreeNode((null),(null),(null)) in line 456
      protection public
      12 lines of code
      3 parameters
      2 conditional paths
   function FileUsage((null),(null)) in line 469
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function ApiUsage((null),(null)) in line 474
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable api defined in convert.py
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/visualization/Scripts/d3.v2.min.js
module d3.v2.min.js
   variable try in line 2
      protection public
   variable e in line 2
      protection public
   variable map in line 2
      protection public
   variable k in line 2
      protection public
   variable l in line 2
      protection public
   variable functor in line 2
      protection public
   variable rebind in line 2
      protection public
   variable ascending in line 2
      protection public
   variable descending in line 2
      protection public
   variable mean in line 2
      protection public
   variable median in line 2
      protection public
   variable min in line 2
      protection public
   variable max in line 2
      protection public
   variable extent in line 2
      protection public
   variable random in line 2
      protection public
   variable sum in line 2
      protection public
   variable quantile in line 2
      protection public
   variable transpose in line 2
      protection public
   variable zip in line 2
      protection public
   variable bisector in line 2
      protection public
   variable t in line 2
      protection public
   variable bisectLeft in line 2
      protection public
   variable bisect in line 2
      protection public
   variable first in line 2
      protection public
   variable last in line 2
      protection public
   variable nest in line 2
      protection public
   variable keys in line 2
      protection public
   variable values in line 2
      protection public
   variable entries in line 2
      protection public
   variable permute in line 2
      protection public
   variable merge in line 2
      protection public
   variable split in line 2
      protection public
   variable range in line 2
      protection public
   variable requote in line 2
      protection public
   variable x in line 2
      protection public
   variable round in line 2
      protection public
   variable xhr in line 2
      protection public
   variable text in line 2
      protection public
   variable json in line 2
      protection public
   variable html in line 2
      protection public
   variable xml in line 2
      protection public
   variable y in line 2
      protection public
   variable ns in line 2
      protection public
   variable dispatch in line 2
      protection public
   variable on in line 2
      protection public
   variable format in line 2
      protection public
   variable B in line 2
      protection public
   variable C in line 2
      protection public
   variable G in line 2
      protection public
   variable formatPrefix in line 2
      protection public
   variable I in line 2
      protection public
   variable J in line 2
      protection public
   variable K in line 2
      protection public
   variable L in line 2
      protection public
   variable M in line 2
      protection public
   variable ease in line 2
      protection public
   variable event in line 2
      protection public
   variable interpolate in line 2
      protection public
   variable interpolateNumber in line 2
      protection public
   variable interpolateRound in line 2
      protection public
   variable interpolateString in line 2
      protection public
   variable interpolateTransform in line 2
      protection public
   variable interpolateRgb in line 2
      protection public
   variable interpolateHsl in line 2
      protection public
   variable interpolateArray in line 2
      protection public
   variable interpolateObject in line 2
      protection public
   variable _ in line 2
      protection public
   variable interpolators in line 2
      protection public
   variable rgb in line 2
      protection public
   variable brighter in line 2
      protection public
   variable darker in line 2
      protection public
   variable hsl in line 2
      protection public
   variable toString in line 2
      protection public
   variable bj in line 2
      protection public
   variable bo in line 2
      protection public
   variable bp in line 2
      protection public
   variable bq in line 2
      protection public
   variable br in line 2
      protection public
   variable bs in line 2
      protection public
   variable Sizzle in line 2
      protection public
   variable bt in line 2
      protection public
   variable selection in line 2
      protection public
   variable prototype in line 2
      protection public
   variable select in line 2
      protection public
   variable selectAll in line 2
      protection public
   variable attr in line 2
      protection public
   variable classed in line 2
      protection public
   variable style in line 2
      protection public
   variable property in line 2
      protection public
   variable append in line 2
      protection public
   variable insert in line 2
      protection public
   variable remove in line 2
      protection public
   variable data in line 2
      protection public
   variable datum in line 2
      protection public
   variable filter in line 2
      protection public
   variable order in line 2
      protection public
   variable sort in line 2
      protection public
   variable each in line 2
      protection public
   variable call in line 2
      protection public
   variable empty in line 2
      protection public
   variable node in line 2
      protection public
   variable transition in line 2
      protection public
   variable bB in line 2
      protection public
   variable parentNode in line 2
      protection public
   variable bD in line 2
      protection public
   variable enter in line 2
      protection public
   variable bF in line 2
      protection public
   variable bI in line 2
      protection public
   variable bJ in line 2
      protection public
   variable bK in line 2
      protection public
   variable bL in line 2
      protection public
   variable bM in line 2
      protection public
   variable bN in line 2
      protection public
   variable bO in line 2
      protection public
   variable bP in line 2
      protection public
   variable bQ in line 2
      protection public
   variable attrTween in line 2
      protection public
   variable styleTween in line 2
      protection public
   variable delay in line 2
      protection public
   variable duration in line 2
      protection public
   variable bS in line 2
      protection public
   variable bT in line 2
      protection public
   variable bU in line 2
      protection public
   variable timer in line 2
      protection public
   variable flush in line 2
      protection public
   variable bX in line 2
      protection public
   variable transform in line 2
      protection public
   variable ca in line 2
      protection public
   variable mouse in line 2
      protection public
   variable cb in line 2
      protection public
   variable touches in line 2
      protection public
   variable scale in line 2
      protection public
   variable linear in line 2
      protection public
   variable log in line 2
      protection public
   variable cr in line 2
      protection public
   variable pow in line 2
      protection public
   variable sqrt in line 2
      protection public
   variable ordinal in line 2
      protection public
   variable category10 in line 2
      protection public
   variable category20 in line 2
      protection public
   variable category20b in line 2
      protection public
   variable category20c in line 2
      protection public
   variable cx in line 2
      protection public
   variable cy in line 2
      protection public
   variable cz in line 2
      protection public
   variable cA in line 2
      protection public
   variable quantize in line 2
      protection public
   variable identity in line 2
      protection public
   variable svg in line 2
      protection public
   variable arc in line 2
      protection public
   variable cE in line 2
      protection public
   variable cF in line 2
      protection public
   variable line in line 2
      protection public
   variable cN in line 2
      protection public
   variable cO in line 2
      protection public
   variable da in line 2
      protection public
   variable db in line 2
      protection public
   variable dc in line 2
      protection public
   variable radial in line 2
      protection public
   variable reverse in line 2
      protection public
   variable area in line 2
      protection public
   variable chord in line 2
      protection public
   variable diagonal in line 2
      protection public
   variable symbol in line 3
      protection public
   variable dv in line 3
      protection public
   variable symbolTypes in line 3
      protection public
   variable dw in line 3
      protection public
   variable dx in line 3
      protection public
   variable axis in line 3
      protection public
   variable brush in line 3
      protection public
   variable dB in line 3
      protection public
   variable dC in line 3
      protection public
   variable behavior in line 3
      protection public
   variable drag in line 3
      protection public
   variable zoom in line 3
      protection public
   variable dD in line 3
      protection public
   variable dE in line 3
      protection public
   variable layout in line 3
      protection public
   variable bundle in line 3
      protection public
   variable force in line 3
      protection public
   variable dJ in line 3
      protection public
   variable dK in line 3
      protection public
   variable partition in line 3
      protection public
   variable pie in line 3
      protection public
   variable dS in line 3
      protection public
   variable stack in line 3
      protection public
   variable dW in line 3
      protection public
   variable dX in line 3
      protection public
   variable histogram in line 3
      protection public
   variable hierarchy in line 3
      protection public
   variable ej in line 3
      protection public
   variable pack in line 3
      protection public
   variable cluster in line 3
      protection public
   variable tree in line 3
      protection public
   variable treemap in line 3
      protection public
   variable csv in line 3
      protection public
   variable parse in line 3
      protection public
   variable parseRows in line 3
      protection public
   variable geo in line 3
      protection public
   variable eN in line 3
      protection public
   variable azimuthal in line 3
      protection public
   variable albers in line 3
      protection public
   variable albersUsa in line 3
      protection public
   variable bonne in line 3
      protection public
   variable equirectangular in line 3
      protection public
   variable mercator in line 3
      protection public
   variable path in line 3
      protection public
   variable bounds in line 3
      protection public
   variable eR in line 3
      protection public
   variable circle in line 3
      protection public
   variable greatArc in line 4
      protection public
   variable greatCircle in line 4
      protection public
   variable geom in line 4
      protection public
   variable contour in line 4
      protection public
   variable fc in line 4
      protection public
   variable fd in line 4
      protection public
   variable hull in line 4
      protection public
   variable polygon in line 4
      protection public
   variable voronoi in line 4
      protection public
   variable fi in line 4
      protection public
   variable delaunay in line 4
      protection public
   variable quadtree in line 4
      protection public
   variable time in line 4
      protection public
   variable fn in line 4
      protection public
   variable fp in line 4
      protection public
   variable fr in line 4
      protection public
   variable fs in line 4
      protection public
   variable ft in line 4
      protection public
   variable fu in line 4
      protection public
   variable fv in line 4
      protection public
   variable fw in line 4
      protection public
   variable fz in line 4
      protection public
   variable fA in line 4
      protection public
   variable fB in line 4
      protection public
   variable fD in line 4
      protection public
   variable fF in line 4
      protection public
   variable fG in line 4
      protection public
   variable fH in line 4
      protection public
   variable fU in line 4
      protection public
   variable fW in line 4
      protection public
   variable utc in line 4
      protection public
   variable fY in line 4
      protection public
   variable iso in line 4
      protection public
   variable second in line 4
      protection public
   variable seconds in line 4
      protection public
   variable minute in line 4
      protection public
   variable minutes in line 4
      protection public
   variable hour in line 4
      protection public
   variable hours in line 4
      protection public
   variable day in line 4
      protection public
   variable days in line 4
      protection public
   variable dayOfYear in line 4
      protection public
   variable week in line 4
      protection public
   variable weeks in line 4
      protection public
   variable weekOfYear in line 4
      protection public
   variable month in line 4
      protection public
   variable months in line 4
      protection public
   variable year in line 4
      protection public
   variable years in line 4
      protection public
   variable gg in line 4
      protection public
   variable gh in line 4
      protection public
   variable gi in line 4
      protection public
   variable gj in line 4
      protection public
   variable gk in line 4
      protection public
   variable gl in line 4
      protection public
   variable gm in line 4
      protection public
   variable gn in line 4
      protection public
   function d((null),(null)) in line 2
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function forEach((null)) in line 2
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/visualization/Scripts/Flow Graph.js
module Flow Graph.js
   variable strict in line 1
      protection public
   variable DATA_FILE_PATH in line 4
      protection public
   variable CATEGORIES in line 5
      protection public
   variable SOURCES in line 6
      protection public
   variable SINKS in line 8
      protection public
   variable PADDING in line 9
      protection public
   variable svg in line 12
      protection public
   variable onload in line 139
      protection public
   function initialize() in line 17
      protection public
      107 lines of code
      0 parameters
      7 conditional paths
      uses variable svg defined in Flow Graph.js
      uses variable PADDING defined in Flow Graph.js
      uses variable style defined in d3.v2.min.js
      uses variable x defined in d3.v2.min.js
      uses variable CATEGORIES defined in Flow Graph.js
      uses variable y defined in d3.v2.min.js
      uses variable axis defined in d3.v2.min.js
      uses variable SOURCES defined in Flow Graph.js
      uses variable SINKS defined in Flow Graph.js
      uses variable DATA_FILE_PATH defined in Flow Graph.js
      uses variable json defined in d3.v2.min.js
      uses variable i defined in convert.py
      uses function Flow((null),(null),(null)) defined in Flow Graph.js
      uses function d((null),(null)) defined in d3.v2.min.js
      uses variable on defined in d3.v2.min.js
      uses function highlight((null)) defined in Flow Graph.js
      uses function unhighlight((null)) defined in Flow Graph.js
      uses variable append defined in d3.v2.min.js
   function Flow((null),(null),(null)) in line 125
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function highlight((null)) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function unhighlight((null)) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/PAPERS/sparta/sparta-sparta-1.0.2/visualization/Scripts/Main.js
module Main.js
   variable strict in line 6
      protection public
   variable DATA_FILE_PATH in line 9
      protection public
   variable PATH_DELIMITER in line 10
      protection public
   variable PACKAGE_DELIMITER in line 11
      protection public
   variable svg in line 14
      protection public
   variable x_children in line 17
      protection public
   variable x_parent in line 18
      protection public
   variable y_children in line 19
      protection public
   variable y_parent in line 20
      protection public
   variable apiTree in line 22
      protection public
   variable directoryTree in line 23
      protection public
   variable apiViewActive in line 25
      protection public
   variable treemap in line 27
      protection public
   variable onload in line 393
      protection public
   function initialize() in line 32
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function parseDataFile((null),(null)) defined in Main.js
      uses variable DATA_FILE_PATH defined in Main.js
      uses variable x_children defined in Main.js
      uses variable y_children defined in Main.js
      uses variable x_parent defined in Main.js
      uses variable y_parent defined in Main.js
      uses variable apiTree defined in Main.js
      uses variable directoryTree defined in Main.js
      uses variable apiViewActive defined in Main.js
      uses function displayTreemap() defined in Main.js
      uses function addViewByButtonClickListeners() defined in Main.js
   function addViewByButtonClickListeners() in line 55
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable apiViewActive defined in Main.js
      uses function displayTreemap() defined in Main.js
   function displayTreemap() in line 71
      protection public
      82 lines of code
      0 parameters
      3 conditional paths
      uses variable apiViewActive defined in Main.js
      uses variable svg defined in Main.js
      uses variable treemap defined in Main.js
      uses function d((null),(null)) defined in d3.v2.min.js
      uses variable apiTree defined in Main.js
      uses variable selectAll defined in d3.v2.min.js
      uses variable attr defined in d3.v2.min.js
      uses variable x_children defined in Main.js
      uses variable y_children defined in Main.js
      uses variable on defined in d3.v2.min.js
      uses function onClick((null),(null)) defined in Main.js
      uses variable style defined in d3.v2.min.js
      uses variable directoryTree defined in Main.js
   function onClick((null),(null)) in line 154
      protection public
      41 lines of code
      2 parameters
      2 conditional paths
      uses variable datum defined in d3.v2.min.js
      uses function d((null),(null)) defined in d3.v2.min.js
      uses variable x_parent defined in Main.js
      uses variable y_parent defined in Main.js
      uses variable svg defined in Main.js
      uses variable attr defined in d3.v2.min.js
      uses variable select defined in d3.v2.min.js
      uses variable x_children defined in Main.js
      uses variable y_children defined in Main.js
      uses variable transition defined in d3.v2.min.js
   function getTextDimensions((null)) in line 196
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable text defined in d3.v2.min.js
   function parseDataFile((null),(null)) in line 210
      protection public
      27 lines of code
      2 parameters
      1 conditional paths
      uses variable directoryTree defined in Main.js
      uses variable apiTree defined in Main.js
      uses function makeDirectoryTreeNodesFromPath((null),(null)) defined in Main.js
      uses function makeApiTreeNodesFromName((null),(null),(null)) defined in Main.js
      uses function ApiUsage((null),(null)) defined in Main.js
      uses function FileUsage((null),(null)) defined in Main.js
      uses function setApiUsageCounts((null)) defined in Main.js
      uses function setFileUsageCounts((null)) defined in Main.js
   function setApiUsageCounts((null)) in line 238
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable directoryTree defined in Main.js
      uses function setApiUsageCountsHelper((null)) defined in Main.js
   function setApiUsageCountsHelper((null)) in line 244
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function setFileUsageCounts((null)) in line 257
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable apiTree defined in Main.js
      uses function setFileUsageCountsHelper((null)) defined in Main.js
   function setFileUsageCountsHelper((null)) in line 263
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function makeDirectoryTreeNodesFromPath((null),(null)) in line 276
      protection public
      37 lines of code
      2 parameters
      6 conditional paths
      uses variable path defined in d3.v2.min.js
      uses variable PATH_DELIMITER defined in Main.js
      uses variable tree defined in d3.v2.min.js
      uses variable i defined in convert.py
      uses function DirectoryTreeNode((null),(null),(null)) defined in Main.js
   function makeApiTreeNodesFromName((null),(null),(null)) in line 315
      protection public
      39 lines of code
      3 parameters
      6 conditional paths
      uses variable PACKAGE_DELIMITER defined in Main.js
      uses variable tree defined in d3.v2.min.js
      uses variable i defined in convert.py
      uses function ApiTreeNode((null),(null),(null)) defined in Main.js
   function DirectoryTreeNode((null),(null),(null)) in line 356
      protection public
      13 lines of code
      3 parameters
      2 conditional paths
   function ApiTreeNode((null),(null),(null)) in line 370
      protection public
      12 lines of code
      3 parameters
      2 conditional paths
   function FileUsage((null),(null)) in line 383
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function ApiUsage((null),(null)) in line 388
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable api defined in convert.py
