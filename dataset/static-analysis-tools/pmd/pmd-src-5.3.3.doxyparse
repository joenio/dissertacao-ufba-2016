file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/ant/PmdBuildTask.java
module net::sourceforge::pmd::ant::PmdBuildTask
   inherits from org::apache::tools::ant::Task
   function execute() in line 87
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function validate(RuleSetToDocs) defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses function setTargetDirectory(String) defined in net::sourceforge::pmd::build::PmdBuildTools
      uses function setSiteXml(String) defined in net::sourceforge::pmd::build::PmdBuildTools
      uses variable siteXml defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses function setSiteXmlTarget(String) defined in net::sourceforge::pmd::build::PmdBuildTools
      uses function setRulesDirectory(String) defined in net::sourceforge::pmd::build::PmdBuildTools
      uses function setRuntimeClasspath(URL[]) defined in net::sourceforge::pmd::build::PmdBuildTools
      uses variable runtimeClasspath defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses function convertRulesets() defined in net::sourceforge::pmd::build::PmdBuildTools
      uses function preSiteGeneration() defined in net::sourceforge::pmd::build::PmdBuildTools
      uses variable e defined in sample-matlab.m
   function getIndexFilename() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable indexFilename defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getMergedRulesetFilename() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergedRulesetFilename defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getMergeRuleset() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergeRuleset defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getRulesDirectory() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rulesDirectory defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getRulesetToDocs() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rulesetToDocs defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getRulesIndex() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rulesIndex defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getRuntimeClasspath() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable runtimeClasspath defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getSiteXml() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable siteXml defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getSiteXmlTarget() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable siteXmlTarget defined in net::sourceforge::pmd::ant::PmdBuildTask
   function getTarget() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable target defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setIndexFilename(String) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable indexFilename defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setMergedRulesetFilename(String) in line 204
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergedRulesetFilename defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setMergeRuleset(String) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeRuleset defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setRulesDirectory(String) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rulesDirectory defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setRulesetToDocs(String) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rulesetToDocs defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setRulesIndex(String) in line 174
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rulesIndex defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setRuntimeClasspath(URL[]) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable runtimeClasspath defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setSiteXml(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable siteXml defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setSiteXmlTarget(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable siteXmlTarget defined in net::sourceforge::pmd::ant::PmdBuildTask
   function setTarget(String) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function validate(RuleSetToDocs) in line 103
      29 lines of code
      1 parameters
      9 conditional paths
      uses variable target defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses variable siteXml defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses variable runtimeClasspath defined in net::sourceforge::pmd::ant::PmdBuildTask
   variable indexFilename in line 54
   variable mergedRulesetFilename in line 55
   variable mergeRuleset in line 52
   variable rulesDirectory in line 21
   variable rulesetToDocs in line 51
   variable rulesIndex in line 53
   variable runtimeClasspath in line 25
   variable siteXml in line 23
   variable siteXmlTarget in line 24
   variable target in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/filefilter/DirectoryFileFilter.java
module net::sourceforge::pmd::build::filefilter::DirectoryFileFilter
   inherits from java::io::FilenameFilter
   function accept(File,String) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/filefilter/RulesetFilenameFilter.java
module net::sourceforge::pmd::build::filefilter::RulesetFilenameFilter
   inherits from java::io::FilenameFilter
   function accept(File,String) in line 27
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function doesNotMatchExcludeNames(String) defined in net::sourceforge::pmd::build::filefilter::RulesetFilenameFilter
   function doesNotMatchExcludeNames(String) in line 35
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable EXCLUDE defined in net::sourceforge::pmd::build::filefilter::RulesetFilenameFilter
   variable EXCLUDE in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/PmdBuildException.java
module net::sourceforge::pmd::build::PmdBuildException
   inherits from Exception
   function PmdBuildException(String) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PmdBuildException(Throwable) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in sample-matlab.m
   variable serialVersionUID in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/PmdBuildTools.java
module net::sourceforge::pmd::build::PmdBuildTools
   function convertRulesets() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRulesDirectory() in line 13
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTargetDirectory() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function preSiteGeneration() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setRulesDirectory(String) in line 19
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setRuntimeClasspath(URL[]) in line 58
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSiteXml(String) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSiteXmlTarget(String) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setTargetDirectory(String) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/RuleSetToDocs.java
module net::sourceforge::pmd::build::RuleSetToDocs
   inherits from net::sourceforge::pmd::build::PmdBuildTools
   function addRulesetsToSiteXml(DOMSource) in line 226
      27 lines of code
      1 parameters
      5 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable xmlFileTemplater defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function transform(File,File,String) defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses function getCreateRulesetMenuXsl() defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses variable siteXml defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function getAddToSiteDescriptorXsl() defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses function getSiteXmlTarget() defined in net::sourceforge::pmd::build::RuleSetToDocs
   function buildTransformedRulesetDirectory(File) in line 159
      4 lines of code
      1 parameters
      1 conditional paths
   function convertRuleSetFile(File,File) in line 173
      26 lines of code
      2 parameters
      6 conditional paths
      uses variable dom defined in sample-matlab.m
      uses variable ruleAnalyzer defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function analyze(Document,Node) defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses function escapeTextContent(Collection< Node >) defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function findChildren(Node,String) defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable property defined in sample-matlab.m
      uses variable xmlFileTemplater defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function transform(File,File,String) defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses function getRulesetToDocsXsl() defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses variable e defined in sample-matlab.m
   function convertRulesets() in line 134
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses function init() defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable rulesDirectory defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function recursivelyProcessSubFolder(File) defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function processAllXDocsFilesFromDir(File) defined in net::sourceforge::pmd::build::RuleSetToDocs
   function createMergedFile(File) in line 254
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable xmlFileTemplater defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable LOGGER defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function transform(File,File,String) defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses function getMergeRulesetXsl() defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function escapeTextContent(Collection< Node >) in line 214
      5 lines of code
      1 parameters
      2 conditional paths
   function escapeTextContent(Node) in line 219
      6 lines of code
      1 parameters
      1 conditional paths
   function findChildren(Node,String) in line 200
      11 lines of code
      2 parameters
      3 conditional paths
      uses function isElement(Node,String) defined in net::sourceforge::pmd::build::RuleSetToDocs
   function getIndexRuleSetFilename() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable indexRuleSetFilename defined in net::sourceforge::pmd::build::RuleSetToDocs
   function getMergedRuleSetFilename() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergedRuleSetFilename defined in net::sourceforge::pmd::build::RuleSetToDocs
   function getRulesDirectory() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rulesDirectory defined in net::sourceforge::pmd::build::RuleSetToDocs
   function getRuntimeClasspath() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable runtimeClasspath defined in net::sourceforge::pmd::build::RuleSetToDocs
   function getSiteXml() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable siteXml defined in net::sourceforge::pmd::build::RuleSetToDocs
   function getSiteXmlTarget() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable siteXmlTarget defined in net::sourceforge::pmd::build::RuleSetToDocs
   function getTargetDirectory() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable targetDirectory defined in net::sourceforge::pmd::build::RuleSetToDocs
   function getXmlFileTemplater() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xmlFileTemplater defined in net::sourceforge::pmd::build::RuleSetToDocs
   function init() in line 125
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable targetDirectory defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable xmlFileTemplater defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable rulesDirectory defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable ruleAnalyzer defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable runtimeClasspath defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable LOGGER defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function getMergeRulesetXsl() defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function isElement(Node,String) in line 211
      3 lines of code
      2 parameters
      1 conditional paths
   function preSiteGeneration() in line 269
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable pathToParent defined in net::sourceforge::pmd::build::util::FileUtil
      uses variable mergedRuleSetFilename defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function createMergedFile(File) defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable xmlFileTemplater defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function transform(File,File,String) defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses variable indexRuleSetFilename defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function getGenerateIndexXsl() defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses function addRulesetsToSiteXml(DOMSource) defined in net::sourceforge::pmd::build::RuleSetToDocs
   function processAllXDocsFilesFromDir(File) in line 152
      6 lines of code
      1 parameters
      2 conditional paths
      uses function processXDocFile(File) defined in net::sourceforge::pmd::build::RuleSetToDocs
   function processXDocFile(File) in line 164
      8 lines of code
      1 parameters
      2 conditional paths
      uses function buildTransformedRulesetDirectory(File) defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable LOGGER defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function convertRuleSetFile(File,File) defined in net::sourceforge::pmd::build::RuleSetToDocs
   function recursivelyProcessSubFolder(File) in line 146
      5 lines of code
      1 parameters
      2 conditional paths
      uses function processAllXDocsFilesFromDir(File) defined in net::sourceforge::pmd::build::RuleSetToDocs
   function setIndexRuleSetFilename(String) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable indexRuleSetFilename defined in net::sourceforge::pmd::build::RuleSetToDocs
   function setMergedRuleSetFilename(String) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergedRuleSetFilename defined in net::sourceforge::pmd::build::RuleSetToDocs
   function setRulesDirectory(String) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rulesDirectory defined in net::sourceforge::pmd::build::RuleSetToDocs
   function setRuntimeClasspath(URL[]) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable runtimeClasspath defined in net::sourceforge::pmd::build::RuleSetToDocs
   function setSiteXml(String) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable siteXml defined in net::sourceforge::pmd::build::RuleSetToDocs
   function setSiteXmlTarget(String) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable siteXmlTarget defined in net::sourceforge::pmd::build::RuleSetToDocs
   function setTargetDirectory(String) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable targetDirectory defined in net::sourceforge::pmd::build::RuleSetToDocs
   function setXmlFileTemplater(RulesetFileTemplater) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable xmlFileTemplater defined in net::sourceforge::pmd::build::RuleSetToDocs
   variable indexRuleSetFilename in line 45
   variable LOGGER in line 43
   variable mergedRuleSetFilename in line 46
   variable ruleAnalyzer in line 53
   variable rulesDirectory in line 48
   variable runtimeClasspath in line 52
   variable siteXml in line 50
   variable siteXmlTarget in line 51
   variable targetDirectory in line 49
   variable xmlFileTemplater in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/RuntimeRulePropertiesAnalyzer.java
module net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
   function analyze(Document,Node) in line 58
      protection public
      57 lines of code
      2 parameters
      11 conditional paths
      uses variable XPATH_RULE_CLASSNAME defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable cl defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable propertiesField defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable propertiesValues defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable j defined in sample-matlab.m
      uses variable defaultValueMethod defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable nameMethod defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable descMethod defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable e defined in sample-matlab.m
   function init(URL[]) in line 32
      16 lines of code
      1 parameters
      2 conditional paths
      uses variable cl defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable nameMethod defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable descMethod defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable defaultValueMethod defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable propertiesField defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable propertiesValues defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
      uses variable e defined in sample-matlab.m
   function RuntimeRulePropertiesAnalyzer(URL[]) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function init(URL[]) defined in net::sourceforge::pmd::build::RuntimeRulePropertiesAnalyzer
   variable cl in line 21
   variable defaultValueMethod in line 24
   variable descMethod in line 23
   variable nameMethod in line 22
   variable propertiesField in line 25
   variable propertiesValues in line 26
   variable XPATH_RULE_CLASSNAME in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/util/ConfigUtil.java
module net::sourceforge::pmd::build::util::ConfigUtil
   function getString(String) in line 18
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable RESOURCE_BUNDLE defined in net::sourceforge::pmd::build::util::ConfigUtil
      uses variable e defined in sample-matlab.m
   function ConfigUtil() in line 15
      2 lines of code
      0 parameters
      1 conditional paths
   variable BUNDLE_NAME in line 11
   variable RESOURCE_BUNDLE in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/util/FileUtil.java
module net::sourceforge::pmd::build::util::FileUtil
   function copy(File,File) in line 57
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable out defined in sample-matlab.m
   function createDirIfMissing(String) in line 79
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function createInputStream(String) in line 161
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in sample-matlab.m
   function createTempFile(String) in line 130
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function deleteFile(File) in line 91
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable files defined in sample-matlab.m
      uses function deleteFile(File) defined in net::sourceforge::pmd::build::util::FileUtil
   function ensureTargetDirectoryExist(File) in line 69
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function existAndIsADirectory(String) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function filterFilesFrom(File,FilenameFilter) in line 40
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable files defined in sample-matlab.m
   function listFilesFrom(File) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterFilesFrom(File,FilenameFilter) defined in net::sourceforge::pmd::build::util::FileUtil
   function move(File,File) in line 139
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses function copy(File,File) defined in net::sourceforge::pmd::build::util::FileUtil
      uses variable e defined in sample-matlab.m
   function replaceAllInFile(File,String,String) in line 103
      protection public
      26 lines of code
      3 parameters
      3 conditional paths
      uses function copy(File,File) defined in net::sourceforge::pmd::build::util::FileUtil
      uses variable e defined in sample-matlab.m
   function FileUtil() in line 33
      2 lines of code
      0 parameters
      1 conditional paths
   variable pathToParent in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/FileUtil.java
module net::sourceforge::pmd::util::FileUtil
   function collect(List< DataSource >,String,FilenameFilter) in line 69
      38 lines of code
      3 parameters
      8 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable files defined in sample-matlab.m
      uses function findFilesFrom(File,FilenameFilter,boolean) defined in net::sourceforge::pmd::util::FileFinder
      uses variable f defined in sample-matlab.m
   function collectFiles(String,FilenameFilter) in line 61
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function collect(List< DataSource >,String,FilenameFilter) defined in net::sourceforge::pmd::util::FileUtil
   function findPatternInFile(final File,final String) in line 116
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
   function getFileNameWithoutExtension(String) in line 38
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function FileUtil() in line 31
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/util/XmlUtil.java
module net::sourceforge::pmd::build::util::XmlUtil
   function createDomSourceFrom(InputStream) in line 53
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function createTransformer(String) in line 43
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function loadXsl(String) defined in net::sourceforge::pmd::build::util::XmlUtil
      uses variable e defined in sample-matlab.m
   function createXmlBackbone(XmlFileTemplater) in line 65
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
      uses function doTemplate(Document,Element) defined in net::sourceforge::pmd::build::xml::XmlFileTemplater
   function loadXsl(String) in line 35
      7 lines of code
      1 parameters
      2 conditional paths
   function transformDOMToString(DOMSource) in line 80
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/xml/RulesetFileTemplater.java
module net::sourceforge::pmd::build::xml::RulesetFileTemplater
   inherits from net::sourceforge::pmd::build::xml::XmlFileTemplater
   function addEachRuleset(Document,Element,File) in line 114
      10 lines of code
      3 parameters
      2 conditional paths
   function addRulesetForEachLanguage(Document,Element,File) in line 104
      9 lines of code
      3 parameters
      2 conditional paths
      uses function addEachRuleset(Document,Element,File) defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function doTemplate(Document,Element) in line 92
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable rulesDirectory defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses variable LOGGER defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses function addRulesetForEachLanguage(Document,Element,File) defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function getAddToSiteDescriptorXsl() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable addToSiteDescriptorXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function getCreateRulesetMenuXsl() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable createRulesetMenuXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function getGenerateIndexXsl() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable generateIndexXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function getMergeRulesetXsl() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergeRulesetXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function getRulesetToDocsXsl() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rulesetToDocsXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function setAddToSiteDescriptorXsl(String) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable addToSiteDescriptorXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function setCreateRulesetMenuXsl(String) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable createRulesetMenuXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function setGenerateIndexXsl(String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable generateIndexXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function setMergeRulesetXsl(String) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeRulesetXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function setRulesetToDocsXsl(String) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rulesetToDocsXsl defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function transform(File,File,String) in line 126
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function transform(DOMSource,File,String) in line 131
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function transform(File,File,String) defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   function transform(DOMSource,File,String,Map< String, String >) in line 136
      protection public
      13 lines of code
      4 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
   function transform(File,File,String,Map< String, String >) in line 151
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function transform(File,File,String) defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
      uses variable e defined in sample-matlab.m
   function RulesetFileTemplater(String) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rulesDirectory defined in net::sourceforge::pmd::build::xml::RulesetFileTemplater
   variable addToSiteDescriptorXsl in line 43
   variable createRulesetMenuXsl in line 42
   variable generateIndexXsl in line 41
   variable LOGGER in line 37
   variable mergeRulesetXsl in line 40
   variable rulesDirectory in line 85
   variable rulesetToDocsXsl in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/build/xml/XmlFileTemplater.java
module net::sourceforge::pmd::build::xml::XmlFileTemplater
   function doTemplate(Document,Element) in line 16
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function transform(File,File,String) in line 18
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function transform(File,File,String,Map< String, String >) in line 20
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
   function transform(DOMSource,File,String) in line 22
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function transform(DOMSource,File,String,Map< String, String >) in line 24
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/main/java/net/sourceforge/pmd/maven/PmdPreSite.java
module net::sourceforge::pmd::maven::PmdPreSite
   inherits from org::apache::maven::plugin::AbstractMojo
   function determineRuntimeClasspath() in line 81
      16 lines of code
      0 parameters
      1 conditional paths
   function execute() in line 57
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
   variable project in line 55
   variable rulesetsDirectory in line 52
   variable siteXml in line 34
   variable siteXmlTarget in line 40
   variable target in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/AbstractPropertySource.java
module net::sourceforge::pmd::AbstractPropertySource
   inherits from net::sourceforge::pmd::PropertySource
   function checkValidPropertyDescriptor(PropertyDescriptor<?>) in line 139
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function getName() defined in net::sourceforge::pmd::AbstractPropertySource
   function copyPropertyDescriptors() in line 34
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
   function copyPropertyValues() in line 45
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
   function defineProperty(final String,final String,final Object) in line 20
      21 lines of code
      3 parameters
      1 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
   function definePropertyDescriptor(PropertyDescriptor<?>) in line 62
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function getName() defined in net::sourceforge::pmd::AbstractPropertySource
   function dysfunctionReason() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPropertiesByPropertyDescriptor() in line 150
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function defaultValue() defined in net::sourceforge::pmd::PropertyDescriptor
   function getPropertyDescriptor(String) in line 85
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
   function getPropertyDescriptors() in line 111
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function checkValidPropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses function defaultValue() defined in net::sourceforge::pmd::PropertyDescriptor
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
   function hasDescriptor(PropertyDescriptor<?>) in line 98
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::AbstractPropertySource
   function ignoredProperties() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function useDefaultValueFor(PropertyDescriptor<?>) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
   function usesDefaultValues() in line 174
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::AbstractPropertySource
   variable propertyDescriptors in line 17
   variable propertyDescriptors in line 25
   variable propertyValuesByDescriptor in line 18
   variable propertyValuesByDescriptor in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/AbstractPropertySource.java
module net::sourceforge::pmd::AbstractPropertySource
   inherits from net::sourceforge::pmd::PropertySource
   function checkValidPropertyDescriptor(PropertyDescriptor<?>) in line 139
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function getName() defined in net::sourceforge::pmd::AbstractPropertySource
   function copyPropertyDescriptors() in line 34
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
   function copyPropertyValues() in line 45
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
   function defineProperty(final String,final String,final Object) in line 20
      21 lines of code
      3 parameters
      1 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
   function definePropertyDescriptor(PropertyDescriptor<?>) in line 62
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function getName() defined in net::sourceforge::pmd::AbstractPropertySource
   function dysfunctionReason() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPropertiesByPropertyDescriptor() in line 150
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function defaultValue() defined in net::sourceforge::pmd::PropertyDescriptor
   function getPropertyDescriptor(String) in line 85
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
   function getPropertyDescriptors() in line 111
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function checkValidPropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses function defaultValue() defined in net::sourceforge::pmd::PropertyDescriptor
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
   function hasDescriptor(PropertyDescriptor<?>) in line 98
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::AbstractPropertySource
   function ignoredProperties() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function useDefaultValueFor(PropertyDescriptor<?>) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
   function usesDefaultValues() in line 174
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::AbstractPropertySource
   variable propertyDescriptors in line 17
   variable propertyDescriptors in line 25
   variable propertyValuesByDescriptor in line 18
   variable propertyValuesByDescriptor in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/ant/PmdBuildTaskTest.java
module net::sourceforge::pmd::ant::PmdBuildTaskTest
   inherits from net::sourceforge::pmd::TestBase
   function antTask() in line 24
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function setRulesDirectory(String) defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses variable TEST_DIR defined in net::sourceforge::pmd::TestBase
      uses function setTarget(String) defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses function setSiteXml(String) defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses function setSiteXmlTarget(String) defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses function setRuntimeClasspath(URL[]) defined in net::sourceforge::pmd::ant::PmdBuildTask
      uses function execute() defined in net::sourceforge::pmd::ant::PmdBuildTask
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/build/RulesetFilenameFilterTest.java
module net::sourceforge::pmd::build::RulesetFilenameFilterTest
   function testAccept() in line 18
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function accept(File,String) defined in net::sourceforge::pmd::build::filefilter::RulesetFilenameFilter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/build/RuleSetToDocsTest.java
module net::sourceforge::pmd::build::RuleSetToDocsTest
   inherits from net::sourceforge::pmd::TestBase
   function convertRulesetsTest() in line 28
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function setRulesDirectory(String) defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses variable TEST_DIR defined in net::sourceforge::pmd::TestBase
      uses function setTargetDirectory(String) defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function setRuntimeClasspath(URL[]) defined in net::sourceforge::pmd::build::RuleSetToDocs
      uses function convertRulesets() defined in net::sourceforge::pmd::build::RuleSetToDocs
   function readPropertyDescriptors() in line 54
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/lang/java/rule/codesize/NPathComplexityRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   inherits from net::sourceforge::pmd::AbstractPropertySource
   function complexityMultipleOf(JavaNode,int,Object) in line 41
      12 lines of code
      3 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function complexitySumOf(JavaNode,int,Object) in line 54
      12 lines of code
      3 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function getViolationParameters(DataPoint) in line 260
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::stat::DataPoint
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function sumExpressionComplexity(ASTExpression) in line 236
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
   function visit(ASTMethodDeclaration,Object) in line 68
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function complexityMultipleOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   function visit(JavaNode,Object) in line 81
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function complexityMultipleOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 87
      protection public
      30 lines of code
      2 parameters
      6 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable hasElse defined in net::sourceforge::pmd::lang::java::ast::ASTIfStatement
      uses variable data defined in sample-matlab.m
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
   function visit(ASTWhileStatement,Object) in line 119
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDoStatement,Object) in line 130
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 141
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 152
      protection public
      22 lines of code
      2 parameters
      4 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 176
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function visit(ASTTryStatement,Object) in line 201
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses function complexitySumOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 215
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable isTernary defined in net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
      uses function complexitySumOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function NPathComplexityRule() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function defineProperty(final String,final String,final Object) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable d defined in sample-matlab.m
   function NPathComplexityRule() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/NPathComplexityRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   inherits from net::sourceforge::pmd::AbstractPropertySource
   function complexityMultipleOf(JavaNode,int,Object) in line 41
      12 lines of code
      3 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function complexitySumOf(JavaNode,int,Object) in line 54
      12 lines of code
      3 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function getViolationParameters(DataPoint) in line 260
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::stat::DataPoint
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function sumExpressionComplexity(ASTExpression) in line 236
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
   function visit(ASTMethodDeclaration,Object) in line 68
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function complexityMultipleOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   function visit(JavaNode,Object) in line 81
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function complexityMultipleOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 87
      protection public
      30 lines of code
      2 parameters
      6 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable hasElse defined in net::sourceforge::pmd::lang::java::ast::ASTIfStatement
      uses variable data defined in sample-matlab.m
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
   function visit(ASTWhileStatement,Object) in line 119
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDoStatement,Object) in line 130
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 141
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 152
      protection public
      22 lines of code
      2 parameters
      4 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 176
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function visit(ASTTryStatement,Object) in line 201
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses function complexitySumOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 215
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable isTernary defined in net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
      uses function complexitySumOf(JavaNode,int,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function NPathComplexityRule() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function defineProperty(final String,final String,final Object) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable d defined in sample-matlab.m
   function NPathComplexityRule() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/NPathComplexityRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
   function complexityMultipleOf(PLSQLNode,int,Object) in line 50
      14 lines of code
      3 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable data defined in sample-matlab.m
   function getViolationParameters(DataPoint) in line 436
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::stat::DataPoint
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function sumExpressionComplexity(ASTExpression) in line 409
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
   function visit(ASTMethodDeclaration,Object) in line 66
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(PLSQLNode,int,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTProgramUnit,Object) in line 85
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(PLSQLNode,int,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTTypeMethod,Object) in line 104
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(PLSQLNode,int,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTTriggerUnit,Object) in line 123
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(PLSQLNode,int,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTTriggerTimingPointSection,Object) in line 142
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(PLSQLNode,int,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(PLSQLNode,Object) in line 161
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(PLSQLNode,int,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 169
      protection public
      48 lines of code
      2 parameters
      5 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function visit(ASTElsifClause,Object) in line 219
      protection public
      36 lines of code
      2 parameters
      5 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElseClause,Object) in line 257
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 284
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLoopStatement,Object) in line 297
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 310
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 323
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function complexityMultipleOf(PLSQLNode,int,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseWhenClause,Object) in line 349
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseStatement,Object) in line 371
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function sumExpressionComplexity(ASTExpression) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NPathComplexityRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalOrExpression,Object) in line 393
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function NPathComplexityRule() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
   variable CLASS_NAME in line 42
   variable LOGGER in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/maven/PmdPreSiteTest.java
module net::sourceforge::pmd::maven::PmdPreSiteTest
   inherits from org::apache::maven::plugin::testing::AbstractMojoTestCase
   function setUp() in line 19
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testMojo() in line 25
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/maven/stubs/ProjectStub.java
module net::sourceforge::pmd::maven::stubs::ProjectStub
   inherits from org::apache::maven::plugin::testing::stubs::MavenProjectStub
   function getBasedir() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRuntimeArtifacts() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ProjectStub() in line 21
      protection public
      34 lines of code
      0 parameters
      2 conditional paths
      uses function getBasedir() defined in net::sourceforge::pmd::maven::stubs::ProjectStub
      uses variable e defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/PropertyDescriptor.java
module net::sourceforge::pmd::PropertyDescriptor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/PropertyDescriptor.java
module net::sourceforge::pmd::PropertyDescriptor
   inherits from Comparable
   function asDelimitedString(T) in line 112
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function attributeValuesById() in line 155
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function choices() in line 120
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function defaultValue() in line 16
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function defaultValue() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function description() in line 14
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function description() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function errorFor(Object) in line 76
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isMultiValue() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isRequired() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function multiValueDelimiter() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function name() in line 12
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function name() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function preferredRowCount() in line 147
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function propertyErrorFor(Rule) in line 129
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function type() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function uiOrder() in line 92
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 103
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/maven-plugin-pmd-build/src/test/java/net/sourceforge/pmd/TestBase.java
module net::sourceforge::pmd::TestBase
   abstract class
   function setUp() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable testDir defined in net::sourceforge::pmd::TestBase
   variable TEST_DIR in line 19
   variable testDir in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/etc/xslt/fcoltable.js
module pmd-core/etc/xslt/fcoltable.js
   variable onload in line 56
      protection public
   function tablecollapse() in line 1
      protection public
      52 lines of code
      0 parameters
      6 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable j defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/resources/ant/ecmascript/fcoltable.js
module pmd-javascript/src/test/resources/ant/ecmascript/fcoltable.js
   variable onload in line 56
      protection public
   function tablecollapse() in line 1
      protection public
      52 lines of code
      0 parameters
      6 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable j defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/etc/xslt/sorttable.js
module pmd-core/etc/xslt/sorttable.js
   variable SORT_COLUMN_INDEX in line 4
      protection public
   function addEvent((null),(null),(null)) in line 2
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function sortables_init() in line 6
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses function ts_makeSortable((null)) defined in pmd-core/etc/xslt/sorttable.js
   function ts_makeSortable((null)) in line 19
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
   function ts_getInnerText((null)) in line 33
      protection public
      20 lines of code
      1 parameters
      7 conditional paths
   function ts_resortTable((null)) in line 54
      protection public
      54 lines of code
      1 parameters
      18 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function getParent((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function ts_sort_caseinsensitive((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable d defined in sample-matlab.m
      uses function ts_sort_date((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function ts_sort_currency((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function ts_sort_numeric((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
      uses variable j defined in sample-matlab.m
   function getParent((null),(null)) in line 109
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
   function ts_sort_date((null),(null)) in line 116
      protection public
      22 lines of code
      2 parameters
      7 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
   function ts_sort_currency((null),(null)) in line 139
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
      uses variable g defined in sample-matlab.m
   function ts_sort_numeric((null),(null)) in line 145
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
   function ts_sort_caseinsensitive((null),(null)) in line 153
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
   function ts_sort_default((null),(null)) in line 161
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
   function addEvent((null),(null),(null),(null)) in line 170
      protection public
      15 lines of code
      4 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/resources/ant/ecmascript/sorttable.js
module pmd-javascript/src/test/resources/ant/ecmascript/sorttable.js
   variable SORT_COLUMN_INDEX in line 4
      protection public
   function addEvent((null),(null),(null)) in line 2
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function sortables_init() in line 6
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses function ts_makeSortable((null)) defined in pmd-core/etc/xslt/sorttable.js
   function ts_makeSortable((null)) in line 19
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
   function ts_getInnerText((null)) in line 33
      protection public
      20 lines of code
      1 parameters
      7 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
   function ts_resortTable((null)) in line 54
      protection public
      54 lines of code
      1 parameters
      18 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function getParent((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function ts_sort_caseinsensitive((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable d defined in sample-matlab.m
      uses function ts_sort_date((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function ts_sort_currency((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function ts_sort_numeric((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
      uses variable j defined in sample-matlab.m
   function getParent((null),(null)) in line 109
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getParent((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
   function ts_sort_date((null),(null)) in line 116
      protection public
      22 lines of code
      2 parameters
      7 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
   function ts_sort_currency((null),(null)) in line 139
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
      uses variable g defined in sample-matlab.m
   function ts_sort_numeric((null),(null)) in line 145
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
   function ts_sort_caseinsensitive((null),(null)) in line 153
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
   function ts_sort_default((null),(null)) in line 161
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function ts_getInnerText((null)) defined in pmd-core/etc/xslt/sorttable.js
      uses variable SORT_COLUMN_INDEX defined in pmd-core/etc/xslt/sorttable.js
   function addEvent((null),(null),(null),(null)) in line 170
      protection public
      15 lines of code
      4 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/AbstractConfiguration.java
module net::sourceforge::pmd::AbstractConfiguration
   abstract class
   function getSourceEncoding() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceEncoding defined in net::sourceforge::pmd::AbstractConfiguration
   function isDebug() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable debug defined in net::sourceforge::pmd::AbstractConfiguration
   function setDebug(boolean) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable debug defined in net::sourceforge::pmd::AbstractConfiguration
   function setSourceEncoding(String) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceEncoding defined in net::sourceforge::pmd::AbstractConfiguration
   function AbstractConfiguration() in line 19
      3 lines of code
      0 parameters
      1 conditional paths
   variable debug in line 14
   variable sourceEncoding in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/ant/Formatter.java
module net::sourceforge::pmd::ant::Formatter
   function addConfiguredParam(Parameter) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createProperties() in line 128
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable parameters defined in net::sourceforge::pmd::ant::Formatter
   function end(Report) in line 76
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable renderer defined in net::sourceforge::pmd::ant::Formatter
      uses function renderFileReport(Report) defined in net::sourceforge::pmd::renderers::Renderer
      uses function end() defined in net::sourceforge::pmd::renderers::Renderer
      uses variable toConsole defined in net::sourceforge::pmd::ant::Formatter
      uses variable writer defined in net::sourceforge::pmd::ant::Formatter
   function getRenderer() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable renderer defined in net::sourceforge::pmd::ant::Formatter
   function getToFileWriter(String) in line 136
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable toFile defined in net::sourceforge::pmd::ant::Formatter
   function isNoOutputSupplied() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable toFile defined in net::sourceforge::pmd::ant::Formatter
      uses variable toConsole defined in net::sourceforge::pmd::ant::Formatter
   function setShowSuppressed(boolean) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setToConsole(boolean) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable toConsole defined in net::sourceforge::pmd::ant::Formatter
   function setToFile(File) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable toFile defined in net::sourceforge::pmd::ant::Formatter
   function setType(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::ant::Formatter
   function start(String) in line 60
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable toConsole defined in net::sourceforge::pmd::ant::Formatter
      uses variable writer defined in net::sourceforge::pmd::ant::Formatter
      uses variable toFile defined in net::sourceforge::pmd::ant::Formatter
      uses function getToFileWriter(String) defined in net::sourceforge::pmd::ant::Formatter
      uses variable renderer defined in net::sourceforge::pmd::ant::Formatter
      uses function setWriter(Writer) defined in net::sourceforge::pmd::renderers::Renderer
      uses function start() defined in net::sourceforge::pmd::renderers::Renderer
   function toString() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable toFile defined in net::sourceforge::pmd::ant::Formatter
      uses variable type defined in net::sourceforge::pmd::ant::Formatter
   function unknownRendererMessage(String) in line 103
      12 lines of code
      1 parameters
      3 conditional paths
      uses function validRendererCodes() defined in net::sourceforge::pmd::ant::Formatter
      uses variable type defined in net::sourceforge::pmd::ant::Formatter
      uses function createProperties() defined in net::sourceforge::pmd::ant::Formatter
      uses variable renderer defined in net::sourceforge::pmd::ant::Formatter
      uses function setShowSuppressedViolations(boolean) defined in net::sourceforge::pmd::renderers::Renderer
      uses variable showSuppressed defined in net::sourceforge::pmd::ant::Formatter
   function validRendererCodes() in line 99
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable REPORT_FORMAT_TO_RENDERER defined in net::sourceforge::pmd::renderers::RendererFactory
   variable parameters in line 30
   variable renderer in line 54
   variable showSuppressed in line 29
   variable toConsole in line 28
   variable toFile in line 26
   variable type in line 27
   variable writer in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/ant/internal/PMDTaskImpl.java
module net::sourceforge::pmd::ant::internal::PMDTaskImpl
   function doTask() in line 97
      107 lines of code
      0 parameters
      13 conditional paths
      uses function setupClassLoader() defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function setClassLoader(ClassLoader) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable configuration defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function getClassLoader() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getMinimumPriority() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setWarnDeprecated(boolean) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleSets() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setRuleSets(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses variable project defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function logRulesUsed(RuleSets) defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable e defined in sample-matlab.m
      uses function getSuppressMarker() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable formatters defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable filesets defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable files defined in sample-matlab.m
      uses function setInputPaths(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getNiceFileName(boolean,String) defined in net::sourceforge::pmd::util::datasource::DataSource
      uses variable r defined in sample-matlab.m
      uses function handleError(RuleContext,Report,RuntimeException) defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable failuresPropertyName defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable failOnRuleViolation defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable maxRuleViolations defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
   function execute() in line 259
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable project defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function doTask() defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function close() defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
   function handleError(RuleContext,Report,RuntimeException) in line 205
      24 lines of code
      3 parameters
      4 conditional paths
      uses variable project defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable failOnError defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function addError(ProcessingError) defined in net::sourceforge::pmd::Report
      uses function getSourceCodeFilename() defined in net::sourceforge::pmd::RuleContext
   function logRulesUsed(RuleSets) in line 269
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable project defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable configuration defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function getRuleSets() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getAllRuleSets() defined in net::sourceforge::pmd::RuleSets
   function setupClassLoader() in line 230
      28 lines of code
      0 parameters
      4 conditional paths
      uses variable classpath defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable project defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses variable configuration defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function setClassLoader(ClassLoader) defined in net::sourceforge::pmd::PMDConfiguration
      uses function prependClasspath(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses variable auxClasspath defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
   function PMDTaskImpl(PMDTask) in line 61
      protection public
      35 lines of code
      1 parameters
      5 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function setReportShortNames(boolean) defined in net::sourceforge::pmd::PMDConfiguration
      uses function isShortFilenames() defined in net::sourceforge::pmd::ant::PMDTask
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getSuppressMarker() defined in net::sourceforge::pmd::ant::PMDTask
      uses function isFailOnError() defined in net::sourceforge::pmd::ant::PMDTask
      uses function isFailOnRuleViolation() defined in net::sourceforge::pmd::ant::PMDTask
      uses function getMaxRuleViolations() defined in net::sourceforge::pmd::ant::PMDTask
      uses function setRuleSets(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getRulesetFiles() defined in net::sourceforge::pmd::ant::PMDTask
      uses function getEncoding() defined in net::sourceforge::pmd::ant::PMDTask
      uses function setSourceEncoding(String) defined in net::sourceforge::pmd::AbstractConfiguration
      uses function setThreads(int) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getThreads() defined in net::sourceforge::pmd::ant::PMDTask
      uses function getFailuresPropertyName() defined in net::sourceforge::pmd::ant::PMDTask
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getMinimumPriority() defined in net::sourceforge::pmd::ant::PMDTask
      uses function getSourceLanguage() defined in net::sourceforge::pmd::ant::PMDTask
      uses function getName() defined in net::sourceforge::pmd::ant::SourceLanguage
      uses function getVersion() defined in net::sourceforge::pmd::ant::SourceLanguage
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::PMDConfiguration
      uses variable classpath defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function getClasspath() defined in net::sourceforge::pmd::ant::PMDTask
      uses variable auxClasspath defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function getAuxClasspath() defined in net::sourceforge::pmd::ant::PMDTask
      uses variable filesets defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function getFilesets() defined in net::sourceforge::pmd::ant::PMDTask
      uses variable formatters defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
      uses function getFormatters() defined in net::sourceforge::pmd::ant::PMDTask
      uses variable project defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
   variable auxClasspath in line 51
   variable classpath in line 50
   variable configuration in line 54
   variable failOnError in line 55
   variable failOnRuleViolation in line 56
   variable failuresPropertyName in line 58
   variable filesets in line 53
   variable formatters in line 52
   variable maxRuleViolations in line 57
   variable project in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/ant/PMDTask.java
module net::sourceforge::pmd::ant::PMDTask
   inherits from org::apache::tools::ant::Task
   function addConfiguredSourceLanguage(SourceLanguage) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addFileset(FileSet) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filesets defined in net::sourceforge::pmd::ant::PMDTask
   function addFormatter(Formatter) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable formatters defined in net::sourceforge::pmd::ant::PMDTask
      uses variable f defined in sample-matlab.m
   function addRuleset(RuleSetWrapper) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nestedRules defined in net::sourceforge::pmd::ant::PMDTask
      uses variable r defined in sample-matlab.m
   function createAuxClasspath() in line 168
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable auxClasspath defined in net::sourceforge::pmd::ant::PMDTask
   function createClasspath() in line 149
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classpath defined in net::sourceforge::pmd::ant::PMDTask
   function execute() in line 39
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function validate() defined in net::sourceforge::pmd::ant::PMDTask
      uses function execute() defined in net::sourceforge::pmd::ant::internal::PMDTaskImpl
   function getAuxClasspath() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxClasspath defined in net::sourceforge::pmd::ant::PMDTask
   function getClasspath() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classpath defined in net::sourceforge::pmd::ant::PMDTask
   function getEncoding() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::ant::PMDTask
   function getFailuresPropertyName() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable failuresPropertyName defined in net::sourceforge::pmd::ant::PMDTask
   function getFilesets() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filesets defined in net::sourceforge::pmd::ant::PMDTask
   function getFormatters() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable formatters defined in net::sourceforge::pmd::ant::PMDTask
   function getMaxRuleViolations() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxRuleViolations defined in net::sourceforge::pmd::ant::PMDTask
   function getMinimumPriority() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minimumPriority defined in net::sourceforge::pmd::ant::PMDTask
   function getNestedRules() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nestedRules defined in net::sourceforge::pmd::ant::PMDTask
   function getNestedRuleSetFiles() in line 74
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable nestedRules defined in net::sourceforge::pmd::ant::PMDTask
      uses function getFile() defined in net::sourceforge::pmd::ant::RuleSetWrapper
   function getRulesetFiles() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rulesetFiles defined in net::sourceforge::pmd::ant::PMDTask
   function getSourceLanguage() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceLanguage defined in net::sourceforge::pmd::ant::PMDTask
   function getSuppressMarker() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressMarker defined in net::sourceforge::pmd::ant::PMDTask
   function getThreads() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable threads defined in net::sourceforge::pmd::ant::PMDTask
   function isFailOnError() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable failOnError defined in net::sourceforge::pmd::ant::PMDTask
   function isFailOnRuleViolation() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable failOnRuleViolation defined in net::sourceforge::pmd::ant::PMDTask
   function isShortFilenames() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortFilenames defined in net::sourceforge::pmd::ant::PMDTask
   function setAuxClasspath(Path) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspath defined in net::sourceforge::pmd::ant::PMDTask
   function setAuxClasspathRef(Reference) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createAuxClasspath() defined in net::sourceforge::pmd::ant::PMDTask
      uses variable r defined in sample-matlab.m
   function setClasspath(Path) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classpath defined in net::sourceforge::pmd::ant::PMDTask
   function setClasspathRef(Reference) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClasspath() defined in net::sourceforge::pmd::ant::PMDTask
      uses variable r defined in sample-matlab.m
   function setEncoding(String) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFailOnError(boolean) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFailOnRuleViolation(boolean) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFailuresPropertyName(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable failuresPropertyName defined in net::sourceforge::pmd::ant::PMDTask
   function setMaxRuleViolations(int) in line 102
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function setMinimumPriority(int) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRuleSetFiles(String) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setShortFilenames(boolean) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSuppressMarker(String) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable suppressMarker defined in net::sourceforge::pmd::ant::PMDTask
   function setThreads(int) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable threads defined in net::sourceforge::pmd::ant::PMDTask
   function validate() in line 52
      21 lines of code
      0 parameters
      6 conditional paths
      uses variable formatters defined in net::sourceforge::pmd::ant::PMDTask
      uses function setType(String) defined in net::sourceforge::pmd::ant::Formatter
      uses function setToConsole(boolean) defined in net::sourceforge::pmd::ant::Formatter
      uses variable f defined in sample-matlab.m
      uses variable rulesetFiles defined in net::sourceforge::pmd::ant::PMDTask
      uses variable nestedRules defined in net::sourceforge::pmd::ant::PMDTask
      uses function getNestedRuleSetFiles() defined in net::sourceforge::pmd::ant::PMDTask
   variable auxClasspath in line 22
   variable classpath in line 21
   variable encoding in line 30
   variable failOnError in line 25
   variable failOnRuleViolation in line 26
   variable failuresPropertyName in line 34
   variable filesets in line 24
   variable formatters in line 23
   variable maxRuleViolations in line 33
   variable minimumPriority in line 32
   variable nestedRules in line 36
   variable rulesetFiles in line 29
   variable shortFilenames in line 27
   variable sourceLanguage in line 35
   variable suppressMarker in line 28
   variable threads in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/ant/RuleSetWrapper.java
module net::sourceforge::pmd::ant::RuleSetWrapper
   function addText(String) in line 13
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function getFile() in line 9
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in net::sourceforge::pmd::ant::RuleSetWrapper
   variable file in line 7
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/ant/SourceLanguage.java
module net::sourceforge::pmd::ant::SourceLanguage
   function getName() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::ant::SourceLanguage
   function getVersion() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in net::sourceforge::pmd::ant::SourceLanguage
   function setName(String) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::ant::SourceLanguage
   function setVersion(String) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable version defined in net::sourceforge::pmd::ant::SourceLanguage
   function toString() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable name in line 11
   variable version in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/benchmark/Benchmark.java
module net::sourceforge::pmd::benchmark::Benchmark
   function Benchmark(int,String) in line 30
      4 lines of code
      2 parameters
      1 conditional paths
   variable CollectFiles in line 13
      protection public
   variable DFA in line 17
      protection public
   variable index in line 27
      protection public
   variable LoadRules in line 14
      protection public
   variable MeasuredTotal in line 23
      protection public
   variable name in line 28
      protection public
   variable NonMeasuredTotal in line 24
      protection public
   variable Parser in line 15
      protection public
   variable Reporting in line 20
      protection public
   variable Rule in line 11
      protection public
   variable RuleChainRule in line 12
      protection public
   variable RuleChainTotal in line 22
      protection public
   variable RuleChainVisit in line 19
      protection public
   variable RuleTotal in line 21
      protection public
   variable SymbolTable in line 16
      protection public
   variable TotalPMD in line 25
      protection public
   variable TypeResolution in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/benchmark/Benchmarker.java
module net::sourceforge::pmd::benchmark::Benchmarker
   function findBooleanSwitch(String[],String) in line 48
      8 lines of code
      2 parameters
      3 conditional paths
   function findOptionalStringValue(String[],String,String) in line 64
      8 lines of code
      3 parameters
      3 conditional paths
   function main(String[]) in line 80
      protection public
      41 lines of code
      1 parameters
      7 conditional paths
      uses function findOptionalStringValue(String[],String,String) defined in net::sourceforge::pmd::benchmark::Benchmarker
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function findBooleanSwitch(String[],String) defined in net::sourceforge::pmd::benchmark::Benchmarker
      uses function getName() defined in net::sourceforge::pmd::lang::Language
      uses function getVersion() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function parseStress(Parser,List< DataSource >,boolean) defined in net::sourceforge::pmd::benchmark::Benchmarker
      uses function stress(LanguageVersion,RuleSet,List< DataSource >,Set< RuleDuration >,boolean) defined in net::sourceforge::pmd::benchmark::Benchmarker
   function mark(Benchmark,long,long) in line 195
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function mark(Benchmark,String,long,long) in line 206
      protection public
      16 lines of code
      4 parameters
      5 conditional paths
      uses variable name defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable BENCHMARKS_BY_NAME defined in net::sourceforge::pmd::benchmark::Benchmarker
   function parseStress(Parser,List< DataSource >,boolean) in line 128
      18 lines of code
      3 parameters
      3 conditional paths
   function reset() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable BENCHMARKS_BY_NAME defined in net::sourceforge::pmd::benchmark::Benchmarker
   function stress(LanguageVersion,RuleSet,List< DataSource >,Set< RuleDuration >,boolean) in line 156
      31 lines of code
      5 parameters
      5 conditional paths
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::PMDConfiguration
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
   function values() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable BENCHMARKS_BY_NAME defined in net::sourceforge::pmd::benchmark::Benchmarker
   variable BENCHMARKS_BY_NAME in line 188
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/benchmark/BenchmarkReport.java
module net::sourceforge::pmd::benchmark::BenchmarkReport
   function generate(Set< RuleDuration >,PrintStream) in line 21
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function generate(Map< String, BenchmarkResult >,PrintStream) in line 28
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/benchmark/BenchmarkResult.java
module net::sourceforge::pmd::benchmark::BenchmarkResult
   inherits from Comparable
   function compareTo(BenchmarkResult) in line 32
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getCount() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTime() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function update(long,long) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function BenchmarkResult(Benchmark,String) in line 14
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function BenchmarkResult(Benchmark,long,long) in line 18
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable count in line 12
   variable name in line 10
      protection public
   variable time in line 11
   variable type in line 9
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/benchmark/RuleDuration.java
module net::sourceforge::pmd::benchmark::RuleDuration
   inherits from Comparable
   function compareTo(RuleDuration) in line 13
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable time defined in net::sourceforge::pmd::benchmark::RuleDuration
      uses variable rule defined in net::sourceforge::pmd::benchmark::RuleDuration
      uses function getName() defined in net::sourceforge::pmd::Rule
   function RuleDuration(long,Rule) in line 23
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::benchmark::RuleDuration
   variable rule in line 10
      protection public
   variable time in line 11
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/benchmark/StringBuilderCR.java
module net::sourceforge::pmd::benchmark::StringBuilderCR
   function appendLn(String...) in line 26
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable sb defined in net::sourceforge::pmd::benchmark::StringBuilderCR
      uses variable cr defined in net::sourceforge::pmd::benchmark::StringBuilderCR
   function toString() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sb defined in net::sourceforge::pmd::benchmark::StringBuilderCR
   function StringBuilderCR(String) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cr defined in net::sourceforge::pmd::benchmark::StringBuilderCR
   function StringBuilderCR(String,String) in line 21
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function appendLn(String...) defined in net::sourceforge::pmd::benchmark::StringBuilderCR
   variable cr in line 14
   variable sb in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/benchmark/TextReport.java
module net::sourceforge::pmd::benchmark::TextReport
   inherits from net::sourceforge::pmd::benchmark::BenchmarkReport
   function generate(Set< RuleDuration >,PrintStream) in line 34
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses variable out defined in sample-matlab.m
      uses variable TIME_COLUMN defined in net::sourceforge::pmd::benchmark::TextReport
   function generate(Map< String, BenchmarkResult >,PrintStream) in line 66
      protection public
      86 lines of code
      2 parameters
      12 conditional paths
      uses variable TotalPMD defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable MeasuredTotal defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable RuleTotal defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable RuleChainTotal defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable NonMeasuredTotal defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable NAME_COLUMN_WIDTH defined in net::sourceforge::pmd::benchmark::TextReport
      uses variable VALUE_COLUMN_WIDTH defined in net::sourceforge::pmd::benchmark::TextReport
      uses variable RuleChainRule defined in net::sourceforge::pmd::benchmark::Benchmark
      uses function appendLn(String...) defined in net::sourceforge::pmd::benchmark::StringBuilderCR
      uses variable t defined in sample-matlab.m
      uses function total(long[],Benchmark,long) defined in net::sourceforge::pmd::benchmark::TextReport
      uses variable Rule defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable out defined in sample-matlab.m
      uses function toString() defined in net::sourceforge::pmd::benchmark::StringBuilderCR
   function report(Map< String, BenchmarkResult >) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function generate(Set< RuleDuration >,PrintStream) defined in net::sourceforge::pmd::benchmark::TextReport
   function total(long[],Benchmark,long) in line 160
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable index defined in net::sourceforge::pmd::benchmark::Benchmark
   variable NAME_COLUMN_WIDTH in line 25
   variable TIME_COLUMN in line 24
   variable VALUE_COLUMN_WIDTH in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cli/PMDCommandLineInterface.java
module net::sourceforge::pmd::cli::PMDCommandLineInterface
   function buildUsageText() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function buildUsageText(JCommander) in line 55
      protection public
      35 lines of code
      1 parameters
      4 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function getWindowsLaunchCmd() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses function supportedVersions() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses function getReports() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses function getExamples() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function extractParameters(PMDParameters,String[],String) in line 31
      protection public
      19 lines of code
      3 parameters
      3 conditional paths
      uses function isHelp() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function buildUsageText() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses function setStatusCodeOrExit(int) defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses variable e defined in sample-matlab.m
      uses variable ERROR_STATUS defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function getExamples() in line 91
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getWindowsExample() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses function getUnixExample() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function getReports() in line 140
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable REPORT_FORMAT_TO_RENDERER defined in net::sourceforge::pmd::renderers::RendererFactory
      uses function getName() defined in net::sourceforge::pmd::renderers::Renderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function getDescription() defined in net::sourceforge::pmd::renderers::Renderer
      uses variable property defined in sample-matlab.m
      uses function getPropertyDescriptors() defined in net::sourceforge::pmd::PropertySource
   function getUnixExample() in line 112
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable VERSION defined in net::sourceforge::pmd::PMD
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getWindowsExample() in line 100
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getWindowsLaunchCmd() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getWindowsLaunchCmd() in line 95
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable VERSION defined in net::sourceforge::pmd::PMD
   function isExitAfterRunSet() in line 178
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable NO_EXIT_AFTER_RUN defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function jarName() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable VERSION defined in net::sourceforge::pmd::PMD
   function main(String[]) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function buildUsageText() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function run(String[]) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setStatusCodeOrExit(int) defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function setStatusCode(int) in line 186
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable STATUS_CODE_PROPERTY defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function setStatusCodeOrExit(int) in line 170
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isExitAfterRunSet() defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses function setStatusCode(int) defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function supportedVersions() in line 122
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   variable ERROR_STATUS in line 28
      protection public
   variable NO_EXIT_AFTER_RUN in line 25
      protection public
   variable PROG_NAME in line 23
      protection public
   variable STATUS_CODE_PROPERTY in line 26
      protection public
   variable VIOLATIONS_FOUND in line 29
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cli/PMDParameters.java
module net::sourceforge::pmd::cli::PMDParameters
   function getAuxclasspath() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxclasspath defined in net::sourceforge::pmd::cli::PMDParameters
   function getEncoding() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::cli::PMDParameters
   function getFormat() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable format defined in net::sourceforge::pmd::cli::PMDParameters
   function getLanguage() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::cli::PMDParameters
      uses function getTerseName() defined in net::sourceforge::pmd::lang::Language
   function getMinimumPriority() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minimumPriority defined in net::sourceforge::pmd::cli::PMDParameters
   function getProperties() in line 191
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable properties defined in net::sourceforge::pmd::cli::PMDParameters
   function getReportfile() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reportfile defined in net::sourceforge::pmd::cli::PMDParameters
   function getRulesets() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rulesets defined in net::sourceforge::pmd::cli::PMDParameters
   function getSourceDir() in line 219
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceDir defined in net::sourceforge::pmd::cli::PMDParameters
   function getSuppressmarker() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressmarker defined in net::sourceforge::pmd::cli::PMDParameters
   function getThreads() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable threads defined in net::sourceforge::pmd::cli::PMDParameters
   function getUri() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::cli::PMDParameters
   function getVersion() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in net::sourceforge::pmd::cli::PMDParameters
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getVersion() defined in net::sourceforge::pmd::lang::LanguageVersion
   function isBenchmark() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable benchmark defined in net::sourceforge::pmd::cli::PMDParameters
   function isDebug() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable debug defined in net::sourceforge::pmd::cli::PMDParameters
   function isHelp() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable help defined in net::sourceforge::pmd::cli::PMDParameters
   function isShortnames() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortnames defined in net::sourceforge::pmd::cli::PMDParameters
   function isShowsuppressed() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable showsuppressed defined in net::sourceforge::pmd::cli::PMDParameters
   function isStress() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stress defined in net::sourceforge::pmd::cli::PMDParameters
   function setUri(String) in line 237
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::cli::PMDParameters
   function transformParametersIntoConfiguration(PMDParameters) in line 117
      protection public
      33 lines of code
      1 parameters
      4 conditional paths
      uses function getSourceDir() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function getUri() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setInputPaths(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function setInputUri(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function setReportFormat(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getFormat() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setBenchmark(boolean) defined in net::sourceforge::pmd::PMDConfiguration
      uses function isBenchmark() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setDebug(boolean) defined in net::sourceforge::pmd::AbstractConfiguration
      uses function isDebug() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getMinimumPriority() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setReportFile(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getReportfile() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setReportProperties(Properties) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getProperties() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setReportShortNames(boolean) defined in net::sourceforge::pmd::PMDConfiguration
      uses function isShortnames() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setRuleSets(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getRulesets() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setShowSuppressedViolations(boolean) defined in net::sourceforge::pmd::PMDConfiguration
      uses function isShowsuppressed() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setSourceEncoding(String) defined in net::sourceforge::pmd::AbstractConfiguration
      uses function getEncoding() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setStressTest(boolean) defined in net::sourceforge::pmd::PMDConfiguration
      uses function isStress() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getSuppressmarker() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function setThreads(int) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getThreads() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function getLanguage() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function getVersion() defined in net::sourceforge::pmd::cli::PMDParameters
      uses function getLanguageVersionDiscoverer() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function prependClasspath(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getAuxclasspath() defined in net::sourceforge::pmd::cli::PMDParameters
      uses variable e defined in sample-matlab.m
   variable auxclasspath in line 79
   variable benchmark in line 48
   variable debug in line 36
   variable encoding in line 42
   variable format in line 33
   variable help in line 39
   variable language in line 76
   variable minimumPriority in line 63
   variable properties in line 67
   variable reportfile in line 70
   variable rulesets in line 24
   variable shortnames in line 54
   variable showsuppressed in line 57
   variable sourceDir in line 30
   variable stress in line 51
   variable suppressmarker in line 60
   variable threads in line 45
   variable uri in line 27
   variable version in line 73
module net::sourceforge::pmd::cli::PMDParameters::PropertyConverter
   inherits from com::beust::jcommander::IStringConverter
   function convert(String) in line 86
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable properties defined in net::sourceforge::pmd::cli::PMDParameters
   variable SEPARATOR in line 84
module net::sourceforge::pmd::cli::PMDParameters::RulePriorityConverter
   inherits from com::beust::jcommander::IStringConverter
   function convert(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function validate(String) defined in net::sourceforge::pmd::cli::PMDParameters::RulePriorityConverter
   function validate(String) in line 103
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cli/XPathCLI.java
module net::sourceforge::pmd::cli::XPathCLI
   function main(String[]) in line 38
      protection public
      41 lines of code
      1 parameters
      6 conditional paths
      uses function setMessage(String) defined in net::sourceforge::pmd::Rule
      uses function setLanguage(Language) defined in net::sourceforge::pmd::Rule
      uses variable LANGUAGE defined in net::sourceforge::pmd::cli::XPathCLI
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::PMDConfiguration
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function iterator() defined in net::sourceforge::pmd::Report
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getPackageName() defined in net::sourceforge::pmd::RuleViolation
      uses function getMethodName() defined in net::sourceforge::pmd::RuleViolation
      uses function getVariableName() defined in net::sourceforge::pmd::RuleViolation
   variable LANGUAGE in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/AbstractLanguage.java
module net::sourceforge::pmd::cpd::AbstractLanguage
   inherits from net::sourceforge::pmd::cpd::Language
   abstract class
   function getExtensions() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable extensions defined in net::sourceforge::pmd::cpd::AbstractLanguage
   function getFileFilter() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileFilter defined in net::sourceforge::pmd::cpd::AbstractLanguage
   function getName() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::cpd::AbstractLanguage
   function getTerseName() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable terseName defined in net::sourceforge::pmd::cpd::AbstractLanguage
   function getTokenizer() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::AbstractLanguage
   function setProperties(Properties) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractLanguage(String,String,Tokenizer,String...) in line 20
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::cpd::AbstractLanguage
      uses variable terseName defined in net::sourceforge::pmd::cpd::AbstractLanguage
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::AbstractLanguage
      uses variable fileFilter defined in net::sourceforge::pmd::cpd::AbstractLanguage
      uses variable extensions defined in net::sourceforge::pmd::cpd::AbstractLanguage
   variable extensions in line 18
   variable fileFilter in line 17
   variable name in line 14
   variable terseName in line 15
   variable tokenizer in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/AbstractTokenizer.java
module net::sourceforge::pmd::cpd::AbstractTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   abstract class
   function getCommentToken(StringBuilder,int) in line 154
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable currentLine defined in net::sourceforge::pmd::cpd::AbstractTokenizer
   function getTokenFromLine(StringBuilder,int) in line 66
      30 lines of code
      2 parameters
      8 conditional paths
      uses variable j defined in sample-matlab.m
      uses variable currentLine defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function ignoreCharacter(char) defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function isComment(char) defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function getCommentToken(StringBuilder,int) defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function isString(char) defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function parseString(StringBuilder,int,char) defined in net::sourceforge::pmd::cpd::AbstractTokenizer
   function ignoreCharacter(char) in line 142
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignorableCharacter defined in net::sourceforge::pmd::cpd::AbstractTokenizer
   function isComment(char) in line 150
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oneLineCommentChar defined in net::sourceforge::pmd::cpd::AbstractTokenizer
   function isIgnorableString(String) in line 161
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignorableStmt defined in net::sourceforge::pmd::cpd::AbstractTokenizer
   function isString(char) in line 146
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stringToken defined in net::sourceforge::pmd::cpd::AbstractTokenizer
   function parseString(StringBuilder,int,char) in line 97
      44 lines of code
      3 parameters
      7 conditional paths
      uses variable currentLine defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable spanMultipleLinesString defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable lineNumber defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable code defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable spanMultipleLinesLineContinuationCharacter defined in net::sourceforge::pmd::cpd::AbstractTokenizer
   function tokenize(SourceCode,Tokens) in line 41
      protection public
      24 lines of code
      2 parameters
      5 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function getCode() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable lineNumber defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable currentLine defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function getTokenFromLine(StringBuilder,int) defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function isIgnorableString(String) defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable downcaseString defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
   variable code in line 31
   variable currentLine in line 33
   variable downcaseString in line 39
   variable ignorableCharacter in line 20
   variable ignorableStmt in line 25
   variable lineNumber in line 32
   variable oneLineCommentChar in line 27
   variable spanMultipleLinesLineContinuationCharacter in line 37
   variable spanMultipleLinesString in line 35
   variable stringToken in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/AnyLanguage.java
module net::sourceforge::pmd::cpd::AnyLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function AnyLanguage(String...) in line 7
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable extensions defined in net::sourceforge::pmd::cpd::AbstractLanguage
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/AnyTokenizer.java
module net::sourceforge::pmd::cpd::AnyTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 21
      protection public
      30 lines of code
      2 parameters
      6 conditional paths
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable TOKENS defined in net::sourceforge::pmd::cpd::AnyTokenizer
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
   variable TOKENS in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPD.java
module net::sourceforge::pmd::cpd::CPD
   function add(List< File >) in line 64
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable f defined in sample-matlab.m
      uses variable files defined in sample-matlab.m
   function add(File) in line 81
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::cpd::CPD
      uses function isSkipDuplicates() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable current defined in net::sourceforge::pmd::cpd::CPD
      uses function sourceCodeFor(File) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
   function add(DBURI) in line 107
      protection public
      27 lines of code
      1 parameters
      3 conditional paths
      uses function getSourceObjectList() defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable LOGGER defined in net::sourceforge::pmd::cpd::CPD
      uses variable configuration defined in net::sourceforge::pmd::cpd::CPD
      uses function sourceCodeFor(File) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getSourceCode(SourceObject) defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
   function add(SourceCode) in line 135
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::cpd::CPD
      uses function isSkipLexicalErrors() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function addAndSkipLexicalErrors(SourceCode) defined in net::sourceforge::pmd::cpd::CPD
      uses function addAndThrowLexicalError(SourceCode) defined in net::sourceforge::pmd::cpd::CPD
   function addAllInDirectory(File) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addDirectory(File,boolean) defined in net::sourceforge::pmd::cpd::CPD
   function addAndSkipLexicalErrors(SourceCode) in line 149
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::CPD
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
      uses function addAndThrowLexicalError(SourceCode) defined in net::sourceforge::pmd::cpd::CPD
      uses variable e defined in sample-matlab.m
   function addAndThrowLexicalError(SourceCode) in line 143
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::cpd::CPD
      uses function tokenizer() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable tokens defined in net::sourceforge::pmd::cpd::CPD
      uses variable listener defined in net::sourceforge::pmd::cpd::CPD
      uses function addedFile(int,File) defined in net::sourceforge::pmd::cpd::CPDListener
      uses variable source defined in net::sourceforge::pmd::cpd::CPD
   function addDirectory(File,boolean) in line 70
      8 lines of code
      2 parameters
      2 conditional paths
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
      uses function findFilesFrom(File,FilenameFilter,boolean) defined in net::sourceforge::pmd::util::FileFinder
      uses variable configuration defined in net::sourceforge::pmd::cpd::CPD
      uses function filenameFilter() defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function addRecursively(File) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addDirectory(File,boolean) defined in net::sourceforge::pmd::cpd::CPD
   function getMatches() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchAlgorithm defined in net::sourceforge::pmd::cpd::CPD
      uses variable matches defined in net::sourceforge::pmd::cpd::MatchAlgorithm
   function getSourcePaths() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in net::sourceforge::pmd::cpd::CPD
   function getSources() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in net::sourceforge::pmd::cpd::CPD
   function go() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable matchAlgorithm defined in net::sourceforge::pmd::cpd::CPD
      uses variable source defined in net::sourceforge::pmd::cpd::CPD
      uses variable tokens defined in net::sourceforge::pmd::cpd::CPD
      uses variable configuration defined in net::sourceforge::pmd::cpd::CPD
      uses function getMinimumTileSize() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable listener defined in net::sourceforge::pmd::cpd::CPD
      uses function findMatches() defined in net::sourceforge::pmd::cpd::MatchAlgorithm
   function main(String[]) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCpdListener(CPDListener) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function CPD(CPDConfiguration) in line 37
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::cpd::CPD
   variable configuration in line 30
   variable current in line 79
   variable listener in line 33
   variable LOGGER in line 28
   variable matchAlgorithm in line 35
   variable source in line 32
   variable tokens in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDCommandLineInterface.java
module net::sourceforge::pmd::cpd::CPDCommandLineInterface
   function addSourcesFilesToCPD(List< File >,FilenameFilter,CPD,boolean) in line 96
      25 lines of code
      4 parameters
      7 conditional paths
      uses variable files defined in sample-matlab.m
      uses function addRecursively(File) defined in net::sourceforge::pmd::cpd::CPD
      uses function addAllInDirectory(File) defined in net::sourceforge::pmd::cpd::CPD
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
      uses variable e defined in sample-matlab.m
   function addSourceURIToCPD(String,CPD) in line 122
      22 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
      uses function toString() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getDbType() defined in net::sourceforge::pmd::util::database::DBURI
      uses function toString() defined in net::sourceforge::pmd::util::database::DBType
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
      uses variable e defined in sample-matlab.m
   function buildUsageText() in line 145
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable VERSION defined in net::sourceforge::pmd::PMD
      uses variable supportedLanguages defined in net::sourceforge::pmd::cpd::LanguageFactory
   function isExitAfterRunSet() in line 39
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable NO_EXIT_AFTER_RUN defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
   function main(String[]) in line 51
      protection public
      44 lines of code
      1 parameters
      6 conditional paths
      uses variable PROGRAM_NAME defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
      uses function isHelp() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function buildUsageText() defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
      uses function setStatusCodeOrExit(int) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
      uses variable e defined in sample-matlab.m
      uses function postContruct() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getFiles() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function addSourcesFilesToCPD(List< File >,FilenameFilter,CPD,boolean) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
      uses function filenameFilter() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function isNonRecursive() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getURI() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function addSourceURIToCPD(String,CPD) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
      uses function go() defined in net::sourceforge::pmd::cpd::CPD
      uses function getMatches() defined in net::sourceforge::pmd::cpd::CPD
      uses function getRenderer() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::Renderer
      uses variable DUPLICATE_CODE_FOUND defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
   function setStatusCode(int) in line 47
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable STATUS_CODE_PROPERTY defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
   function setStatusCodeOrExit(int) in line 31
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isExitAfterRunSet() defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
      uses function setStatusCode(int) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
   variable DUPLICATE_CODE_FOUND in line 24
   variable LOGGER in line 22
   variable NO_EXIT_AFTER_RUN in line 26
      protection public
   variable PROGRAM_NAME in line 29
   variable STATUS_CODE_PROPERTY in line 27
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDConfiguration.java
module net::sourceforge::pmd::cpd::CPDConfiguration
   inherits from net::sourceforge::pmd::AbstractConfiguration
   function filenameFilter() in line 274
      protection public
      34 lines of code
      0 parameters
      7 conditional paths
      uses variable language defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getFileFilter() defined in net::sourceforge::pmd::cpd::Language
      uses variable excludes defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable files defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function findFilesFrom(File,FilenameFilter,boolean) defined in net::sourceforge::pmd::util::FileFinder
      uses variable f defined in sample-matlab.m
   function getEncoding() in line 385
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getExcludes() in line 361
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable excludes defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getFiles() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable files defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getLanguage() in line 231
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getLanguageFromString(String) in line 205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getMinimumTileSize() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minimumTileSize defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getRenderer() in line 263
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable renderer defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getRendererFromString(String) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRendererFromString(String,String) in line 162
      protection public
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable DEFAULT_RENDERER defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable RENDERERS defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable e defined in sample-matlab.m
      uses variable renderer defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setRendererEncoding(Renderer,String) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable encoding defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getRendererName() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rendererName defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getRenderers() in line 199
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable RENDERERS defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getSkipBlocksPattern() in line 397
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable skipBlocksPattern defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function getURI() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function isHelp() in line 377
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable help defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function isIgnoreAnnotations() in line 329
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function isIgnoreIdentifiers() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreIdentifiers defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function isIgnoreLiterals() in line 313
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreLiterals defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function isNonRecursive() in line 369
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonRecursive defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function isNoSkipBlocks() in line 389
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable noSkipBlocks defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function isSkipDuplicates() in line 247
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable skipDuplicates defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function isSkipLexicalErrors() in line 337
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable skipLexicalErrors defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function postContruct() in line 129
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses function getLanguage() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setLanguage(Language) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getLanguageFromString(String) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable DEFAULT_LANGUAGE defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getRendererName() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setRendererName(String) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getRenderer() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setRenderer(Renderer) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getRendererFromString(String) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getEncoding() defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setEncoding(String) in line 116
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setSourceEncoding(String) defined in net::sourceforge::pmd::AbstractConfiguration
   function setExcludes(List< File >) in line 365
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable excludes defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setFiles(List< File >) in line 349
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable files defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setHelp(boolean) in line 381
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable help defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setIgnoreAnnotations(boolean) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setIgnoreIdentifiers(boolean) in line 325
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreIdentifiers defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setIgnoreLiterals(boolean) in line 317
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreLiterals defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setLanguage(Language) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setMinimumTileSize(int) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable minimumTileSize defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setNonRecursive(boolean) in line 373
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nonRecursive defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setNoSkipBlocks(boolean) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable noSkipBlocks defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setRenderer(Renderer) in line 309
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable renderer defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setRendererEncoding(Renderer,String) in line 186
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable renderer defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable method defined in sample-matlab.m
      uses variable encoding defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable e defined in sample-matlab.m
   function setRendererName(String) in line 259
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rendererName defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setSkipBlocksPattern(String) in line 401
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable skipBlocksPattern defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setSkipDuplicates(boolean) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable skipDuplicates defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setSkipLexicalErrors(boolean) in line 341
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable skipLexicalErrors defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function setSystemProperties(CPDConfiguration) in line 209
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses function isIgnoreLiterals() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable IGNORE_LITERALS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses function isIgnoreIdentifiers() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable IGNORE_IDENTIFIERS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses function isIgnoreAnnotations() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable IGNORE_ANNOTATIONS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable OPTION_SKIP_BLOCKS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses function isNoSkipBlocks() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable OPTION_SKIP_BLOCKS_PATTERN defined in net::sourceforge::pmd::cpd::Tokenizer
      uses function getSkipBlocksPattern() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getLanguage() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setProperties(Properties) defined in net::sourceforge::pmd::cpd::Language
   function setURI(String) in line 357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::cpd::CPDConfiguration
   function sourceCodeFor(File) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceEncoding() defined in net::sourceforge::pmd::AbstractConfiguration
   function sourceCodeFor(Reader,String) in line 125
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function tokenizer() in line 267
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable language defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function getTokenizer() defined in net::sourceforge::pmd::cpd::Language
   function CPDConfiguration() in line 105
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function CPDConfiguration(int,Language,String) in line 109
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function setMinimumTileSize(int) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable minimumTileSize defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setLanguage(Language) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable language defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setEncoding(String) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable encoding defined in net::sourceforge::pmd::cpd::CPDConfiguration
   variable DEFAULT_LANGUAGE in line 36
      protection public
   variable DEFAULT_RENDERER in line 38
      protection public
   variable encoding in line 58
   variable excludes in line 83
   variable files in line 80
   variable help in line 92
   variable ignoreAnnotations in line 67
   variable ignoreIdentifiers in line 64
   variable ignoreLiterals in line 61
   variable language in line 41
   variable minimumTileSize in line 44
   variable nonRecursive in line 86
   variable noSkipBlocks in line 73
   variable renderer in line 56
   variable rendererName in line 50
   variable RENDERERS in line 153
   variable skipBlocksPattern in line 77
   variable skipDuplicates in line 47
   variable skipLexicalErrors in line 70
   variable uri in line 89
module net::sourceforge::pmd::cpd::CPDConfiguration::LanguageConverter
   inherits from com::beust::jcommander::IStringConverter
   function convert(String) in line 97
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEFAULT_LANGUAGE defined in net::sourceforge::pmd::cpd::CPDConfiguration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDListener.java
module net::sourceforge::pmd::cpd::CPDListener
   function addedFile(int,File) in line 16
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function phaseUpdate(int) in line 18
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable DONE in line 14
      protection public
   variable GROUPING in line 13
      protection public
   variable HASH in line 11
      protection public
   variable INIT in line 10
      protection public
   variable MATCH in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDNullListener.java
module net::sourceforge::pmd::cpd::CPDNullListener
   inherits from net::sourceforge::pmd::cpd::CPDListener
   function addedFile(int,File) in line 9
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function phaseUpdate(int) in line 12
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDTask.java
module net::sourceforge::pmd::cpd::CPDTask
   inherits from org::apache::tools::ant::Task
   function addFileset(FileSet) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filesets defined in net::sourceforge::pmd::cpd::CPDTask
   function analyzeCode(CPD) in line 140
      6 lines of code
      1 parameters
      1 conditional paths
      uses function go() defined in net::sourceforge::pmd::cpd::CPD
   function createLanguage() in line 96
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable ignoreLiterals defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable IGNORE_LITERALS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable ignoreIdentifiers defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable IGNORE_IDENTIFIERS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable IGNORE_ANNOTATIONS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable OPTION_SKIP_BLOCKS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable skipBlocks defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable OPTION_SKIP_BLOCKS_PATTERN defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable skipBlocksPattern defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable language defined in net::sourceforge::pmd::cpd::CPDTask
   function createRenderer() in line 147
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable format defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable TEXT_FORMAT defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable CSV_FORMAT defined in net::sourceforge::pmd::cpd::CPDTask
   function execute() in line 58
      protection public
      37 lines of code
      0 parameters
      2 conditional paths
      uses function validateFields() defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable minimumTokenCount defined in net::sourceforge::pmd::cpd::CPDTask
      uses function setMinimumTileSize(int) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setLanguage(Language) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function createLanguage() defined in net::sourceforge::pmd::cpd::CPDTask
      uses function setEncoding(String) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable encoding defined in net::sourceforge::pmd::cpd::CPDTask
      uses function setSkipDuplicates(boolean) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable skipDuplicateFiles defined in net::sourceforge::pmd::cpd::CPDTask
      uses function setSkipLexicalErrors(boolean) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable skipLexicalErrors defined in net::sourceforge::pmd::cpd::CPDTask
      uses function tokenizeFiles(CPD) defined in net::sourceforge::pmd::cpd::CPDTask
      uses function analyzeCode(CPD) defined in net::sourceforge::pmd::cpd::CPDTask
      uses function report(CPD) defined in net::sourceforge::pmd::cpd::CPDTask
   function report(CPD) in line 112
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable minimumTokenCount defined in net::sourceforge::pmd::cpd::CPDTask
      uses function createRenderer() defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable outputFile defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable encoding defined in net::sourceforge::pmd::cpd::CPDTask
      uses function report(String) defined in net::sourceforge::pmd::cpd::FileReporter
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::Renderer
   function setEncoding(String) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::cpd::CPDTask
   function setFormat(FormatAttribute) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIgnoreAnnotations(boolean) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIgnoreIdentifiers(boolean) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIgnoreLiterals(boolean) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLanguage(String) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::cpd::CPDTask
   function setMinimumTokenCount(int) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable minimumTokenCount defined in net::sourceforge::pmd::cpd::CPDTask
   function setOutputFile(File) in line 199
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable outputFile defined in net::sourceforge::pmd::cpd::CPDTask
   function setSkipBlocks(boolean) in line 215
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable skipBlocks defined in net::sourceforge::pmd::cpd::CPDTask
   function setSkipBlocksPattern(String) in line 219
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable skipBlocksPattern defined in net::sourceforge::pmd::cpd::CPDTask
   function setSkipDuplicateFiles(boolean) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable skipDuplicateFiles defined in net::sourceforge::pmd::cpd::CPDTask
   function setSkipLexicalErrors(boolean) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable skipLexicalErrors defined in net::sourceforge::pmd::cpd::CPDTask
   function tokenizeFiles(CPD) in line 128
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable filesets defined in net::sourceforge::pmd::cpd::CPDTask
   function validateFields() in line 156
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable minimumTokenCount defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable filesets defined in net::sourceforge::pmd::cpd::CPDTask
      uses variable supportedLanguages defined in net::sourceforge::pmd::cpd::LanguageFactory
      uses variable language defined in net::sourceforge::pmd::cpd::CPDTask
   variable CSV_FORMAT in line 42
   variable encoding in line 55
   variable filesets in line 56
   variable format in line 44
   variable ignoreAnnotations in line 49
   variable ignoreIdentifiers in line 48
   variable ignoreLiterals in line 47
   variable language in line 45
   variable minimumTokenCount in line 46
   variable outputFile in line 54
   variable skipBlocks in line 52
   variable skipBlocksPattern in line 53
   variable skipDuplicateFiles in line 51
   variable skipLexicalErrors in line 50
   variable TEXT_FORMAT in line 40
   variable XML_FORMAT in line 41
module net::sourceforge::pmd::cpd::CPDTask::FormatAttribute
   inherits from org::apache::tools::ant::types::EnumeratedAttribute
   function getValues() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable FORMATS defined in net::sourceforge::pmd::cpd::CPDTask::FormatAttribute
   variable FORMATS in line 224
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/CSVRenderer.java
module net::sourceforge::pmd::cpd::CSVRenderer
   inherits from net::sourceforge::pmd::cpd::Renderer
   function render(Iterator< Match >) in line 36
      protection public
      34 lines of code
      1 parameters
      7 conditional paths
      uses variable lineCountPerFile defined in net::sourceforge::pmd::cpd::CSVRenderer
      uses variable separator defined in net::sourceforge::pmd::cpd::CSVRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Match
      uses function getTokenCount() defined in net::sourceforge::pmd::cpd::Match
      uses function getMarkCount() defined in net::sourceforge::pmd::cpd::Match
      uses function iterator() defined in net::sourceforge::pmd::cpd::Match
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Mark
      uses function getFilename() defined in net::sourceforge::pmd::cpd::Mark
   function CSVRenderer() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_SEPARATOR defined in net::sourceforge::pmd::cpd::CSVRenderer
      uses variable DEFAULT_LINECOUNTPERFILE defined in net::sourceforge::pmd::cpd::CSVRenderer
   function CSVRenderer(boolean) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_SEPARATOR defined in net::sourceforge::pmd::cpd::CSVRenderer
      uses variable lineCountPerFile defined in net::sourceforge::pmd::cpd::CSVRenderer
   function CSVRenderer(char) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_LINECOUNTPERFILE defined in net::sourceforge::pmd::cpd::CSVRenderer
   function CSVRenderer(char,boolean) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable lineCountPerFile defined in net::sourceforge::pmd::cpd::CSVRenderer
   variable DEFAULT_LINECOUNTPERFILE in line 17
      protection public
   variable DEFAULT_SEPARATOR in line 16
      protection public
   variable lineCountPerFile in line 14
   variable separator in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/CSVRenderer.java
module net::sourceforge::pmd::renderers::CSVRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function activeColumns() in line 74
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable ALL_COLUMNS defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses function booleanPropertyFor(String,String) defined in net::sourceforge::pmd::renderers::CSVRenderer
   function booleanPropertyFor(String,String) in line 51
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable PROPERTY_DESCRIPTORS_BY_ID defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses variable f defined in sample-matlab.m
   function csvWriter() in line 89
      8 lines of code
      0 parameters
      2 conditional paths
      uses function activeColumns() defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses variable separator defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses variable cr defined in net::sourceforge::pmd::renderers::CSVRenderer
   function defaultFileExtension() in line 110
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function dysfunctionReason() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function activeColumns() defined in net::sourceforge::pmd::renderers::CSVRenderer
   function renderFileViolations(Iterator< RuleViolation >) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function csvWriter() defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function start() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function csvWriter() defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function CSVRenderer(ColumnDescriptor< RuleViolation >[],String,String) in line 63
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses variable separator defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses variable cr defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses function booleanPropertyFor(String,String) defined in net::sourceforge::pmd::renderers::CSVRenderer
   function CSVRenderer() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ALL_COLUMNS defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses variable DEFAULT_SEPARATOR defined in net::sourceforge::pmd::renderers::CSVRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
   variable ALL_COLUMNS in line 39
   variable cr in line 28
   variable csvWriter in line 30
   variable DEFAULT_SEPARATOR in line 32
   variable NAME in line 36
      protection public
   variable PROPERTY_DESCRIPTORS_BY_ID in line 34
   variable separator in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/CSVWithLinecountPerFileRenderer.java
module net::sourceforge::pmd::cpd::CSVWithLinecountPerFileRenderer
   inherits from net::sourceforge::pmd::cpd::CSVRenderer
   function CSVWithLinecountPerFileRenderer() in line 8
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/FileReporter.java
module net::sourceforge::pmd::cpd::FileReporter
   function report(String) in line 36
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable reportFile defined in net::sourceforge::pmd::cpd::FileReporter
      uses variable encoding defined in net::sourceforge::pmd::cpd::FileReporter
   function FileReporter(String) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::cpd::FileReporter
   function FileReporter(File) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportFile defined in net::sourceforge::pmd::cpd::FileReporter
   function FileReporter(File,String) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable reportFile defined in net::sourceforge::pmd::cpd::FileReporter
      uses variable encoding defined in net::sourceforge::pmd::cpd::FileReporter
   variable encoding in line 21
   variable reportFile in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/GridBagHelper.java
module net::sourceforge::pmd::cpd::GridBagHelper
   function add(Component) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function add(Component,int) in line 43
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
      uses function x(K+) defined in sample-matlab.m
      uses variable y defined in sample-matlab.m
   function addLabel(String) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function add(Component) defined in net::sourceforge::pmd::cpd::GridBagHelper
   function nextRow() in line 53
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable y defined in sample-matlab.m
      uses function x(K+) defined in sample-matlab.m
   function GridBagHelper(Container,double[]) in line 26
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/GUI.java
module net::sourceforge::pmd::cpd::GUI
   inherits from net::sourceforge::pmd::cpd::CPDListener
   function addedFile(int,File) in line 773
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable tokenizingFilesBar defined in net::sourceforge::pmd::cpd::GUI
   function addSaveOptionsTo(JMenu) in line 292
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable RENDERER_SETS defined in net::sourceforge::pmd::cpd::GUI
   function adjustLanguageControlsFor(LanguageConfig) in line 361
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreIdentifiersCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses function canIgnoreIdentifiers() defined in net::sourceforge::pmd::cpd::GUI::LanguageConfig
      uses variable ignoreLiteralsCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses function canIgnoreLiterals() defined in net::sourceforge::pmd::cpd::GUI::LanguageConfig
      uses variable ignoreAnnotationsCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses function canIgnoreAnnotations() defined in net::sourceforge::pmd::cpd::GUI::LanguageConfig
      uses variable extensionField defined in net::sourceforge::pmd::cpd::GUI
      uses function extensions() defined in net::sourceforge::pmd::cpd::GUI::LanguageConfig
      uses variable extensionLabel defined in net::sourceforge::pmd::cpd::GUI
   function copyMatchListSelectionsToClipboard() in line 472
      21 lines of code
      0 parameters
      4 conditional paths
      uses variable resultsTable defined in net::sourceforge::pmd::cpd::GUI
      uses variable r defined in sample-matlab.m
      uses variable c defined in sample-matlab.m
   function createTimer() in line 644
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable e defined in sample-matlab.m
      uses variable timeField defined in net::sourceforge::pmd::cpd::GUI
      uses function formatTime(long,long) defined in net::sourceforge::pmd::cpd::GUI
   function deleteMatchlistSelections() in line 494
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable resultsTable defined in net::sourceforge::pmd::cpd::GUI
      uses variable matches defined in net::sourceforge::pmd::cpd::GUI
   function formatTime(long,long) in line 661
      9 lines of code
      2 parameters
      3 conditional paths
   function getPhaseText(int) in line 756
      protection public
      16 lines of code
      1 parameters
      6 conditional paths
      uses variable INIT defined in net::sourceforge::pmd::cpd::CPDListener
      uses variable HASH defined in net::sourceforge::pmd::cpd::CPDListener
      uses variable MATCH defined in net::sourceforge::pmd::cpd::CPDListener
      uses variable GROUPING defined in net::sourceforge::pmd::cpd::CPDListener
      uses variable DONE defined in net::sourceforge::pmd::cpd::CPDListener
   function go() in line 574
      69 lines of code
      0 parameters
      7 conditional paths
      uses variable rootDirectoryField defined in net::sourceforge::pmd::cpd::GUI
      uses variable frame defined in net::sourceforge::pmd::cpd::GUI
      uses function setProgressControls(boolean) defined in net::sourceforge::pmd::cpd::GUI
      uses function setMinimumTileSize(int) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable minimumLengthField defined in net::sourceforge::pmd::cpd::GUI
      uses function setEncoding(String) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable encodingField defined in net::sourceforge::pmd::cpd::GUI
      uses function setIgnoreIdentifiers(boolean) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable ignoreIdentifiersCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses function setIgnoreLiterals(boolean) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable ignoreLiteralsCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses function setIgnoreAnnotations(boolean) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable ignoreAnnotationsCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses variable EXTENSION defined in net::sourceforge::pmd::cpd::LanguageFactory
      uses variable extensionField defined in net::sourceforge::pmd::cpd::GUI
      uses function languageConfigFor(String) defined in net::sourceforge::pmd::cpd::GUI
      uses variable languageBox defined in net::sourceforge::pmd::cpd::GUI
      uses function languageFor(Properties) defined in net::sourceforge::pmd::cpd::GUI::LanguageConfig
      uses function setLanguage(Language) defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses function setCpdListener(CPDListener) defined in net::sourceforge::pmd::cpd::CPD
      uses variable tokenizingFilesBar defined in net::sourceforge::pmd::cpd::GUI
      uses variable phaseLabel defined in net::sourceforge::pmd::cpd::GUI
      uses function isLegalPath(String,LanguageConfig) defined in net::sourceforge::pmd::cpd::GUI
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
      uses variable recurseCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses function addRecursively(File) defined in net::sourceforge::pmd::cpd::CPD
      uses function addAllInDirectory(File) defined in net::sourceforge::pmd::cpd::CPD
      uses variable t defined in sample-matlab.m
      uses function createTimer() defined in net::sourceforge::pmd::cpd::GUI
      uses function go() defined in net::sourceforge::pmd::cpd::CPD
      uses variable matches defined in net::sourceforge::pmd::cpd::GUI
      uses function getMatches() defined in net::sourceforge::pmd::cpd::CPD
      uses function setLabelFor(Match) defined in net::sourceforge::pmd::cpd::GUI
      uses function setListDataFrom(Iterator) defined in net::sourceforge::pmd::cpd::GUI
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::SimpleRenderer
      uses variable resultsTextArea defined in net::sourceforge::pmd::cpd::GUI
   function isLegalPath(String,LanguageConfig) in line 538
      9 lines of code
      2 parameters
      3 conditional paths
      uses function extensions() defined in net::sourceforge::pmd::cpd::GUI::LanguageConfig
   function languageConfigFor(String) in line 174
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable LANGUAGE_CONFIGS_BY_LABEL defined in net::sourceforge::pmd::cpd::GUI
   function main(String[]) in line 780
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function GUI() defined in net::sourceforge::pmd::cpd::GUI
   function makeMatchList() in line 506
      31 lines of code
      0 parameters
      2 conditional paths
      uses variable resultsTable defined in net::sourceforge::pmd::cpd::GUI
      uses variable e defined in sample-matlab.m
      uses function populateResultArea() defined in net::sourceforge::pmd::cpd::GUI
      uses function copyMatchListSelectionsToClipboard() defined in net::sourceforge::pmd::cpd::GUI
      uses variable COPY_KEY_STROKE defined in net::sourceforge::pmd::cpd::GUI
      uses function deleteMatchlistSelections() defined in net::sourceforge::pmd::cpd::GUI
      uses variable DELETE_KEY_STROKE defined in net::sourceforge::pmd::cpd::GUI
      uses variable matchColumns defined in net::sourceforge::pmd::cpd::GUI
      uses variable alignment defined in net::sourceforge::pmd::cpd::GUI::ColumnSpec
      uses function sortOnColumn(int) defined in net::sourceforge::pmd::cpd::GUI
   function makeProgressPanel() in line 431
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable progressPanel defined in net::sourceforge::pmd::cpd::GUI
      uses function addLabel(String) defined in net::sourceforge::pmd::cpd::GridBagHelper
      uses function add(Component) defined in net::sourceforge::pmd::cpd::GridBagHelper
      uses variable tokenizingFilesBar defined in net::sourceforge::pmd::cpd::GUI
      uses function nextRow() defined in net::sourceforge::pmd::cpd::GridBagHelper
      uses variable phaseLabel defined in net::sourceforge::pmd::cpd::GUI
      uses variable timeField defined in net::sourceforge::pmd::cpd::GUI
   function makeResultsPanel() in line 447
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable resultsTextArea defined in net::sourceforge::pmd::cpd::GUI
      uses function makeMatchList() defined in net::sourceforge::pmd::cpd::GUI
   function makeSettingsPanel(JButton,JButton,JButton) in line 371
      59 lines of code
      3 parameters
      2 conditional paths
      uses function addLabel(String) defined in net::sourceforge::pmd::cpd::GridBagHelper
      uses function add(Component) defined in net::sourceforge::pmd::cpd::GridBagHelper
      uses variable rootDirectoryField defined in net::sourceforge::pmd::cpd::GUI
      uses function nextRow() defined in net::sourceforge::pmd::cpd::GridBagHelper
      uses variable minimumLengthField defined in net::sourceforge::pmd::cpd::GUI
      uses variable LANGUAGE_SETS defined in net::sourceforge::pmd::cpd::GUI
      uses variable languageBox defined in net::sourceforge::pmd::cpd::GUI
      uses variable e defined in sample-matlab.m
      uses function adjustLanguageControlsFor(LanguageConfig) defined in net::sourceforge::pmd::cpd::GUI
      uses function languageConfigFor(String) defined in net::sourceforge::pmd::cpd::GUI
      uses variable recurseCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses variable extensionLabel defined in net::sourceforge::pmd::cpd::GUI
      uses variable extensionField defined in net::sourceforge::pmd::cpd::GUI
      uses variable ignoreLiteralsCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses variable ignoreIdentifiersCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses variable ignoreAnnotationsCheckbox defined in net::sourceforge::pmd::cpd::GUI
      uses variable goButton defined in net::sourceforge::pmd::cpd::GUI
      uses variable encodingField defined in net::sourceforge::pmd::cpd::GUI
   function phaseUpdate(int) in line 752
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable phaseLabel defined in net::sourceforge::pmd::cpd::GUI
      uses function getPhaseText(int) defined in net::sourceforge::pmd::cpd::GUI
   function populateResultArea() in line 460
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable resultsTable defined in net::sourceforge::pmd::cpd::GUI
      uses variable trimLeadingWhitespace defined in net::sourceforge::pmd::cpd::GUI
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::SimpleRenderer
      uses variable resultsTextArea defined in net::sourceforge::pmd::cpd::GUI
   function setLabelFor(Match) in line 548
      19 lines of code
      1 parameters
      3 conditional paths
      uses function getMarkCount() defined in net::sourceforge::pmd::cpd::Match
      uses function iterator() defined in net::sourceforge::pmd::cpd::Match
      uses function setLabel(String) defined in net::sourceforge::pmd::cpd::Match
   function setListDataFrom(Iterator) in line 732
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable resultsTable defined in net::sourceforge::pmd::cpd::GUI
      uses function tableModelFrom(final List< Match >) defined in net::sourceforge::pmd::cpd::GUI
      uses variable matches defined in net::sourceforge::pmd::cpd::GUI
      uses variable matchColumns defined in net::sourceforge::pmd::cpd::GUI
      uses variable width defined in net::sourceforge::pmd::cpd::GUI::ColumnSpec
   function setProgressControls(boolean) in line 568
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable progressPanel defined in net::sourceforge::pmd::cpd::GUI
      uses variable goButton defined in net::sourceforge::pmd::cpd::GUI
      uses variable cancelButton defined in net::sourceforge::pmd::cpd::GUI
   function sortOnColumn(int) in line 719
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable matchColumns defined in net::sourceforge::pmd::cpd::GUI
      uses variable sorter defined in net::sourceforge::pmd::cpd::GUI::ColumnSpec
      uses variable resultsTable defined in net::sourceforge::pmd::cpd::GUI
      uses function sortColumn() defined in net::sourceforge::pmd::cpd::GUI::SortingTableModel
      uses function sortDescending() defined in net::sourceforge::pmd::cpd::GUI::SortingTableModel
      uses function sort(Comparator< E >) defined in net::sourceforge::pmd::cpd::GUI::SortingTableModel
   function tableModelFrom(final List< Match >) in line 679
      39 lines of code
      1 parameters
      6 conditional paths
      uses function getLabel() defined in net::sourceforge::pmd::cpd::Match
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Match
      uses function getMarkCount() defined in net::sourceforge::pmd::cpd::Match
      uses variable matchColumns defined in net::sourceforge::pmd::cpd::GUI
      uses variable label defined in net::sourceforge::pmd::cpd::GUI::ColumnSpec
   function GUI() in line 303
      protection public
      57 lines of code
      0 parameters
      1 conditional paths
      uses variable frame defined in net::sourceforge::pmd::cpd::GUI
      uses variable VERSION defined in net::sourceforge::pmd::PMD
      uses variable timeField defined in net::sourceforge::pmd::cpd::GUI
      uses function addSaveOptionsTo(JMenu) defined in net::sourceforge::pmd::cpd::GUI
      uses variable e defined in sample-matlab.m
      uses variable trimLeadingWhitespace defined in net::sourceforge::pmd::cpd::GUI
      uses variable goButton defined in net::sourceforge::pmd::cpd::GUI
      uses variable cancelButton defined in net::sourceforge::pmd::cpd::GUI
      uses function makeSettingsPanel(JButton,JButton,JButton) defined in net::sourceforge::pmd::cpd::GUI
      uses variable progressPanel defined in net::sourceforge::pmd::cpd::GUI
      uses function makeProgressPanel() defined in net::sourceforge::pmd::cpd::GUI
      uses function makeResultsPanel() defined in net::sourceforge::pmd::cpd::GUI
      uses function adjustLanguageControlsFor(LanguageConfig) defined in net::sourceforge::pmd::cpd::GUI
      uses variable LANGUAGE_SETS defined in net::sourceforge::pmd::cpd::GUI
      uses function setProgressControls(boolean) defined in net::sourceforge::pmd::cpd::GUI
   variable cancelButton in line 285
   variable COPY_KEY_STROKE in line 141
   variable DEFAULT_CPD_MINIMUM_LENGTH in line 139
   variable DELETE_KEY_STROKE in line 142
   variable encodingField in line 271
   variable extensionField in line 281
   variable extensionLabel in line 282
   variable frame in line 287
   variable goButton in line 284
   variable ignoreAnnotationsCheckbox in line 279
   variable ignoreIdentifiersCheckbox in line 277
   variable ignoreLiteralsCheckbox in line 278
   variable LANGUAGE_CONFIGS_BY_LABEL in line 140
   variable LANGUAGE_SETS in line 91
   variable languageBox in line 280
   variable matchColumns in line 162
   variable matches in line 290
   variable minimumLengthField in line 270
   variable phaseLabel in line 273
   variable progressPanel in line 286
   variable recurseCheckbox in line 276
   variable RENDERER_SETS in line 76
   variable resultsTable in line 283
   variable resultsTextArea in line 275
   variable rootDirectoryField in line 269
   variable timeField in line 272
   variable tokenizingFilesBar in line 274
   variable trimLeadingWhitespace in line 288
module net::sourceforge::pmd::cpd::GUI::LanguageConfig
   abstract class
   function canIgnoreAnnotations() in line 87
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function extensions() defined in net::sourceforge::pmd::cpd::GUI::LanguageConfig
   function canIgnoreIdentifiers() in line 85
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function canIgnoreLiterals() in line 86
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function extensions() in line 88
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function languageFor(Properties) in line 84
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module net::sourceforge::pmd::cpd::GUI::ColumnSpec
   function alignment() in line 157
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function alignment() defined in net::sourceforge::pmd::cpd::GUI::ColumnSpec
   function label() in line 156
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function label() defined in net::sourceforge::pmd::cpd::GUI::ColumnSpec
   function sorter() in line 159
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function sorter() defined in net::sourceforge::pmd::cpd::GUI::ColumnSpec
   function width() in line 158
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function width() defined in net::sourceforge::pmd::cpd::GUI::ColumnSpec
   function ColumnSpec(String,int,int,Comparator< Match >) in line 150
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
   variable alignment in line 146
   variable label in line 145
   variable sorter in line 148
   variable width in line 147
module net::sourceforge::pmd::cpd::GUI::CancelListener
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module net::sourceforge::pmd::cpd::GUI::GoListener
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 185
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenizingFilesBar defined in net::sourceforge::pmd::cpd::GUI
      uses variable resultsTextArea defined in net::sourceforge::pmd::cpd::GUI
      uses variable phaseLabel defined in net::sourceforge::pmd::cpd::GUI
      uses variable timeField defined in net::sourceforge::pmd::cpd::GUI
      uses function go() defined in net::sourceforge::pmd::cpd::GUI
module net::sourceforge::pmd::cpd::GUI::SaveListener
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 207
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable frame defined in net::sourceforge::pmd::cpd::GUI
      uses variable f defined in sample-matlab.m
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::Renderer
      uses variable matches defined in net::sourceforge::pmd::cpd::GUI
      uses variable e defined in sample-matlab.m
   function error(String,Exception) in line 232
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable frame defined in net::sourceforge::pmd::cpd::GUI
   function SaveListener(Renderer) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module net::sourceforge::pmd::cpd::GUI::BrowseListener
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 242
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable rootDirectoryField defined in net::sourceforge::pmd::cpd::GUI
      uses variable frame defined in net::sourceforge::pmd::cpd::GUI
module net::sourceforge::pmd::cpd::GUI::AlignmentRenderer
   inherits from javax::swing::table::DefaultTableCellRenderer
   function getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int) in line 260
      protection public
      7 lines of code
      6 parameters
      1 conditional paths
   function AlignmentRenderer(int[]) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable alignments in line 254
module net::sourceforge::pmd::cpd::GUI::SortingTableModel
   inherits from javax::swing::table::TableModel
   function sort(Comparator< E >) in line 676
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function sortColumn() in line 672
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function sortColumn(int) in line 673
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function sortDescending() in line 674
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function sortDescending(boolean) in line 675
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/Language.java
module net::sourceforge::pmd::cpd::Language
   function getExtensions() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFileFilter() in line 17
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 11
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTerseName() in line 13
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTokenizer() in line 15
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setProperties(Properties) in line 19
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/Language.java
module net::sourceforge::pmd::lang::Language
   function getDefaultVersion() in line 96
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getExtensions() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRuleChainVisitorClass() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getShortName() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTerseName() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getVersion(String) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getVersions() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasExtension(String) in line 64
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function hasVersion(String) in line 80
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable LANGUAGE_MODULES_CLASS_NAMES_PROPERTY in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/LanguageFactory.java
module net::sourceforge::pmd::cpd::LanguageFactory
   function createLanguage(String) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createLanguage(String,Properties) in line 36
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable BY_EXTENSION defined in net::sourceforge::pmd::cpd::LanguageFactory
      uses variable instance defined in net::sourceforge::pmd::cpd::LanguageFactory
      uses function getLanguageByExtension(String) defined in net::sourceforge::pmd::cpd::LanguageFactory
      uses variable EXTENSION defined in net::sourceforge::pmd::cpd::LanguageFactory
      uses variable languages defined in net::sourceforge::pmd::cpd::LanguageFactory
      uses function languageAliases(String) defined in net::sourceforge::pmd::cpd::LanguageFactory
      uses function setProperties(Properties) defined in net::sourceforge::pmd::cpd::Language
   function getLanguageByExtension(String) in line 62
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable languages defined in net::sourceforge::pmd::cpd::LanguageFactory
   function languageAliases(String) in line 53
      8 lines of code
      1 parameters
      2 conditional paths
   function LanguageFactory() in line 25
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable languages defined in net::sourceforge::pmd::cpd::LanguageFactory
   variable BY_EXTENSION in line 14
      protection public
   variable EXTENSION in line 13
      protection public
   variable instance in line 16
   variable languages in line 23
   variable supportedLanguages in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/Mark.java
module net::sourceforge::pmd::cpd::Mark
   inherits from Comparable
   function compareTo(Mark) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getToken() defined in net::sourceforge::pmd::cpd::Mark
      uses function compareTo(TokenEntry) defined in net::sourceforge::pmd::cpd::TokenEntry
   function equals(Object) in line 56
      protection public
      20 lines of code
      1 parameters
      7 conditional paths
      uses function Mark(TokenEntry) defined in net::sourceforge::pmd::cpd::Mark
      uses variable token defined in net::sourceforge::pmd::cpd::Mark
      uses function equals(Object) defined in net::sourceforge::pmd::cpd::TokenEntry
   function getBeginLine() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::TokenEntry
   function getEndLine() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Mark
   function getFilename() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTokenSrcID() defined in net::sourceforge::pmd::cpd::TokenEntry
   function getLineCount() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lineCount defined in net::sourceforge::pmd::cpd::Mark
   function getSourceCodeSlice() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::Mark
   function getToken() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in net::sourceforge::pmd::cpd::Mark
   function hashCode() in line 48
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable token defined in net::sourceforge::pmd::cpd::Mark
      uses variable hashCode defined in net::sourceforge::pmd::cpd::TokenEntry
   function setLineCount(int) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lineCount defined in net::sourceforge::pmd::cpd::Mark
   function setSoureCodeSlice(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::Mark
   function Mark(TokenEntry) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable token defined in net::sourceforge::pmd::cpd::Mark
   variable code in line 9
   variable lineCount in line 8
   variable token in line 7
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/Match.java
module net::sourceforge::pmd::cpd::Match
   inherits from Comparable
   function addTokenEntry(TokenEntry) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable markSet defined in net::sourceforge::pmd::cpd::Match
   function compareTo(Match) in line 79
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getTokenCount() defined in net::sourceforge::pmd::cpd::Match
      uses function getFirstMark() defined in net::sourceforge::pmd::cpd::Match
      uses function compareTo(Mark) defined in net::sourceforge::pmd::cpd::Mark
   function getEndIndex() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMark(int) defined in net::sourceforge::pmd::cpd::Match
      uses function getToken() defined in net::sourceforge::pmd::cpd::Mark
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses function getTokenCount() defined in net::sourceforge::pmd::cpd::Match
   function getFirstMark() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMark(int) defined in net::sourceforge::pmd::cpd::Match
   function getLabel() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in net::sourceforge::pmd::cpd::Match
   function getLineCount() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMark(int) defined in net::sourceforge::pmd::cpd::Match
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Mark
   function getMark(int) in line 123
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable markSet defined in net::sourceforge::pmd::cpd::Match
   function getMarkCount() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable markSet defined in net::sourceforge::pmd::cpd::Match
   function getMarkSet() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable markSet defined in net::sourceforge::pmd::cpd::Match
   function getSecondMark() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMark(int) defined in net::sourceforge::pmd::cpd::Match
   function getSourceCodeSlice() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMark(int) defined in net::sourceforge::pmd::cpd::Match
      uses function getSourceCodeSlice() defined in net::sourceforge::pmd::cpd::Mark
   function getTokenCount() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenCount defined in net::sourceforge::pmd::cpd::Match
   function iterator() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable markSet defined in net::sourceforge::pmd::cpd::Match
   function setLabel(String) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable label defined in net::sourceforge::pmd::cpd::Match
   function setMarkSet(Set< Mark >) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable markSet defined in net::sourceforge::pmd::cpd::Match
   function toString() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable tokenCount defined in net::sourceforge::pmd::cpd::Match
      uses variable markSet defined in net::sourceforge::pmd::cpd::Match
   function Match(int,Mark,Mark) in line 49
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable markSet defined in net::sourceforge::pmd::cpd::Match
      uses variable tokenCount defined in net::sourceforge::pmd::cpd::Match
   function Match(int,TokenEntry,TokenEntry) in line 55
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable tokenCount defined in net::sourceforge::pmd::cpd::Match
   variable label in line 17
   variable LABEL_COMPARATOR in line 31
      protection public
   variable LENGTH_COMPARATOR in line 43
      protection public
   variable LINES_COMPARATOR in line 25
      protection public
   variable markSet in line 16
   variable MATCHES_COMPARATOR in line 19
      protection public
   variable tokenCount in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/MatchAlgorithm.java
module net::sourceforge::pmd::cpd::MatchAlgorithm
   function findMatches() in line 57
      protection public
      33 lines of code
      0 parameters
      5 conditional paths
      uses function phaseUpdate(int) defined in net::sourceforge::pmd::cpd::CPDListener
      uses variable HASH defined in net::sourceforge::pmd::cpd::CPDListener
      uses function hash() defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable cpdListener defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable MATCH defined in net::sourceforge::pmd::cpd::CPDListener
      uses function collect(List< TokenEntry >) defined in net::sourceforge::pmd::cpd::MatchCollector
      uses variable GROUPING defined in net::sourceforge::pmd::cpd::CPDListener
      uses function matches() defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function getMatches() defined in net::sourceforge::pmd::cpd::MatchCollector
      uses function getToken() defined in net::sourceforge::pmd::cpd::Mark
      uses variable tokens defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function getLineCount(TokenEntry,Match) defined in net::sourceforge::pmd::cpd::Tokens
      uses function setLineCount(int) defined in net::sourceforge::pmd::cpd::Mark
      uses variable source defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function getTokenSrcID() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable code defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function getSlice(int,int) defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function getEndLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function setSoureCodeSlice(String) defined in net::sourceforge::pmd::cpd::Mark
      uses variable DONE defined in net::sourceforge::pmd::cpd::CPDListener
   function getMinimumTileSize() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable min defined in net::sourceforge::pmd::cpd::MatchAlgorithm
   function hash() in line 92
      36 lines of code
      0 parameters
      7 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
      uses variable code defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable EOF defined in net::sourceforge::pmd::cpd::TokenEntry
      uses function tokenAt(int,TokenEntry) defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable min defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function getIdentifier() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable lastHash defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable MOD defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable lastMod defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function setHashCode(int) defined in net::sourceforge::pmd::cpd::TokenEntry
   function matches() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setListener(CPDListener) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function tokenAt(int,TokenEntry) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
   function MatchAlgorithm(Map< String, SourceCode >,Tokens,int) in line 26
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable min defined in net::sourceforge::pmd::cpd::MatchAlgorithm
   function MatchAlgorithm(Map< String, SourceCode >,Tokens,int,CPDListener) in line 30
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
      uses variable min defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable lastMod defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable MOD defined in net::sourceforge::pmd::cpd::MatchAlgorithm
   variable code in line 22
   variable cpdListener in line 23
   variable lastHash in line 16
   variable lastMod in line 17
   variable matches in line 19
   variable min in line 24
   variable MOD in line 15
   variable source in line 20
   variable tokens in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/MatchCollector.java
module net::sourceforge::pmd::cpd::MatchCollector
   function addNewMatch(TokenEntry,TokenEntry,int,Map< Integer, Match >) in line 71
      6 lines of code
      4 parameters
      1 conditional paths
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable matchList defined in net::sourceforge::pmd::cpd::MatchCollector
   function collect(List< TokenEntry >) in line 21
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses variable j defined in sample-matlab.m
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable ma defined in net::sourceforge::pmd::cpd::MatchCollector
      uses function getMinimumTileSize() defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function hasPreviousDupe(TokenEntry,TokenEntry) defined in net::sourceforge::pmd::cpd::MatchCollector
      uses function countDuplicateTokens(TokenEntry,TokenEntry) defined in net::sourceforge::pmd::cpd::MatchCollector
      uses function reportMatch(TokenEntry,TokenEntry,int) defined in net::sourceforge::pmd::cpd::MatchCollector
   function countDuplicateTokens(TokenEntry,TokenEntry) in line 91
      7 lines of code
      2 parameters
      2 conditional paths
      uses function matchEnded(TokenEntry,TokenEntry) defined in net::sourceforge::pmd::cpd::MatchCollector
      uses variable ma defined in net::sourceforge::pmd::cpd::MatchCollector
      uses function tokenAt(int,TokenEntry) defined in net::sourceforge::pmd::cpd::MatchAlgorithm
   function getMatches() in line 79
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable matchList defined in net::sourceforge::pmd::cpd::MatchCollector
   function hasPreviousDupe(TokenEntry,TokenEntry) in line 84
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses function matchEnded(TokenEntry,TokenEntry) defined in net::sourceforge::pmd::cpd::MatchCollector
      uses variable ma defined in net::sourceforge::pmd::cpd::MatchCollector
      uses function tokenAt(int,TokenEntry) defined in net::sourceforge::pmd::cpd::MatchAlgorithm
   function matchEnded(TokenEntry,TokenEntry) in line 99
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getIdentifier() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable EOF defined in net::sourceforge::pmd::cpd::TokenEntry
   function reportMatch(TokenEntry,TokenEntry,int) in line 49
      21 lines of code
      3 parameters
      5 conditional paths
      uses variable matchTree defined in net::sourceforge::pmd::cpd::MatchCollector
      uses function addNewMatch(TokenEntry,TokenEntry,int,Map< Integer, Match >) defined in net::sourceforge::pmd::cpd::MatchCollector
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses function addTokenEntry(TokenEntry) defined in net::sourceforge::pmd::cpd::Match
   function MatchCollector(MatchAlgorithm) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ma defined in net::sourceforge::pmd::cpd::MatchCollector
   variable ma in line 15
   variable matchList in line 13
   variable matchTree in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/Renderer.java
module net::sourceforge::pmd::cpd::Renderer
   function render(Iterator< Match >) in line 12
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/Renderer.java
module net::sourceforge::pmd::renderers::Renderer
   inherits from net::sourceforge::pmd::PropertySource
   function defaultFileExtension() in line 58
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function end() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function flush() in line 140
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDescription() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPropertyDefinitions() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getWriter() in line 91
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isShowSuppressedViolations() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function renderFileReport(Report) in line 131
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setDescription(String) in line 64
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setName(String) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setShowSuppressedViolations(boolean) in line 85
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setWriter(Writer) in line 97
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function start() in line 105
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function startFileAnalysis(DataSource) in line 118
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/ReportException.java
module net::sourceforge::pmd::cpd::ReportException
   inherits from Exception
   function ReportException(Throwable) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/SimpleRenderer.java
module net::sourceforge::pmd::cpd::SimpleRenderer
   inherits from net::sourceforge::pmd::cpd::Renderer
   function render(Iterator< Match >) in line 60
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function renderOn(StringBuilder,Match) defined in net::sourceforge::pmd::cpd::SimpleRenderer
      uses variable separator defined in net::sourceforge::pmd::cpd::SimpleRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function renderOn(StringBuilder,Match) in line 31
      27 lines of code
      2 parameters
      5 conditional paths
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Match
      uses function getTokenCount() defined in net::sourceforge::pmd::cpd::Match
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function iterator() defined in net::sourceforge::pmd::cpd::Match
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function getFilename() defined in net::sourceforge::pmd::cpd::Mark
      uses function getSourceCodeSlice() defined in net::sourceforge::pmd::cpd::Match
      uses variable trimLeadingWhitespace defined in net::sourceforge::pmd::cpd::SimpleRenderer
   function SimpleRenderer() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SimpleRenderer(boolean) in line 22
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_SEPARATOR defined in net::sourceforge::pmd::cpd::SimpleRenderer
      uses variable trimLeadingWhitespace defined in net::sourceforge::pmd::cpd::SimpleRenderer
   function SimpleRenderer(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable separator defined in net::sourceforge::pmd::cpd::SimpleRenderer
   variable DEFAULT_SEPARATOR in line 16
      protection public
   variable separator in line 13
   variable trimLeadingWhitespace in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/SourceCode.java
module net::sourceforge::pmd::cpd::SourceCode
   function getCode() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cl defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getCode() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function getCodeBuffer() in line 144
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable cl defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getCode() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getFileName() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cl defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function getSlice(int,int) in line 153
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable cl defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getCode() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function SourceCode(CodeLoader) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cl defined in net::sourceforge::pmd::cpd::SourceCode
   variable cl in line 134
module net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   abstract class
   function getCode() in line 25
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable c defined in sample-matlab.m
      uses variable code defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
      uses function load() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
      uses function getReader() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function getFileName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReader() in line 39
      1 lines of code
      0 parameters
      1 conditional paths
   function load() in line 41
      17 lines of code
      0 parameters
      3 conditional paths
      uses function getReader() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
      uses variable e defined in sample-matlab.m
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   variable code in line 23
module net::sourceforge::pmd::cpd::SourceCode::FileCodeLoader
   inherits from net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function getFileName() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReader() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FileCodeLoader(File,String) in line 64
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable encoding in line 62
   variable file in line 61
module net::sourceforge::pmd::cpd::SourceCode::StringCodeLoader
   inherits from net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function getFileName() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReader() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function StringCodeLoader(String) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function StringCodeLoader(String,String) in line 91
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   variable code in line 83
   variable DEFAULT_NAME in line 81
      protection public
   variable name in line 85
module net::sourceforge::pmd::cpd::SourceCode::ReaderCodeLoader
   inherits from net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function getFileName() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReader() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function ReaderCodeLoader(Reader) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   function ReaderCodeLoader(Reader,String) in line 118
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable code defined in net::sourceforge::pmd::cpd::SourceCode::CodeLoader
   variable code in line 110
   variable DEFAULT_NAME in line 108
      protection public
   variable name in line 112
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/TokenEntry.java
module net::sourceforge::pmd::cpd::TokenEntry
   inherits from Comparable
   function clearImages() in line 57
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable TOKENS defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable TOKEN_COUNT defined in net::sourceforge::pmd::cpd::TokenEntry
   function compareTo(TokenEntry) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
   function equals(Object) in line 107
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function TokenEntry() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable hashCode defined in net::sourceforge::pmd::cpd::TokenEntry
   function getBeginLine() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::cpd::TokenEntry
   function getEOF() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TOKEN_COUNT defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable EOF defined in net::sourceforge::pmd::cpd::TokenEntry
   function getIdentifier() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable identifier defined in net::sourceforge::pmd::cpd::TokenEntry
   function getIndex() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in net::sourceforge::pmd::cpd::TokenEntry
   function getTokenSrcID() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenSrcID defined in net::sourceforge::pmd::cpd::TokenEntry
   function hashCode() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setHashCode(int) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function hashCode() defined in net::sourceforge::pmd::cpd::TokenEntry
   function toString() in line 120
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable EOF defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable e defined in sample-matlab.m
      uses variable TOKENS defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable identifier defined in net::sourceforge::pmd::cpd::TokenEntry
   function TokenEntry() in line 35
      4 lines of code
      0 parameters
      1 conditional paths
   function TokenEntry(String,String,int) in line 40
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses variable TOKENS defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable tokenSrcID defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable beginLine defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable TOKEN_COUNT defined in net::sourceforge::pmd::cpd::TokenEntry
   variable beginLine in line 17
   variable EOF in line 14
      protection public
   variable hashCode in line 20
   variable identifier in line 19
   variable index in line 18
   variable TOKEN_COUNT in line 28
   variable TOKENS in line 22
   variable tokenSrcID in line 16
module net::sourceforge::pmd::cpd::TokenEntry::State
   function restore() in line 75
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TOKEN_COUNT defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable tokenCount defined in net::sourceforge::pmd::cpd::TokenEntry::State
      uses variable TOKENS defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable tokens defined in net::sourceforge::pmd::cpd::TokenEntry::State
      uses variable entries defined in net::sourceforge::pmd::cpd::TokenEntry::State
   function State(List< TokenEntry >) in line 70
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable TOKEN_COUNT defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable TOKENS defined in net::sourceforge::pmd::cpd::TokenEntry
      uses variable entries defined in net::sourceforge::pmd::cpd::TokenEntry::State
   variable entries in line 69
   variable tokenCount in line 67
   variable tokens in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/Tokenizer.java
module net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 30
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   variable DEFAULT_SKIP_BLOCKS_PATTERN in line 28
      protection public
   variable IGNORE_ANNOTATIONS in line 11
      protection public
   variable IGNORE_IDENTIFIERS in line 10
      protection public
   variable IGNORE_LITERALS in line 9
      protection public
   variable OPTION_SKIP_BLOCKS in line 18
      protection public
   variable OPTION_SKIP_BLOCKS_PATTERN in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/Tokens.java
module net::sourceforge::pmd::cpd::Tokens
   function add(TokenEntry) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function get(int) in line 22
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::Tokens
   function getLineCount(TokenEntry,Match) in line 30
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses function getTokenCount() defined in net::sourceforge::pmd::cpd::Match
      uses variable EOF defined in net::sourceforge::pmd::cpd::TokenEntry
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::TokenEntry
   function getTokens() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::Tokens
   function iterator() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::Tokens
   function size() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::Tokens
   variable tokens in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/VSRenderer.java
module net::sourceforge::pmd::cpd::VSRenderer
   inherits from net::sourceforge::pmd::cpd::Renderer
   function render(Iterator< Match >) in line 12
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses function getFilename() defined in net::sourceforge::pmd::cpd::Mark
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::Mark
      uses variable EOL defined in net::sourceforge::pmd::PMD
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/cpd/XMLRenderer.java
module net::sourceforge::pmd::cpd::XMLRenderer
   inherits from net::sourceforge::pmd::cpd::Renderer
   function addCodeSnippet(Document,Element,Match) in line 112
      9 lines of code
      3 parameters
      2 conditional paths
      uses function getSourceCodeSlice() defined in net::sourceforge::pmd::cpd::Match
   function addFilesToDuplicationElement(Document,Element,Match) in line 100
      11 lines of code
      3 parameters
      2 conditional paths
      uses function iterator() defined in net::sourceforge::pmd::cpd::Match
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function getFilename() defined in net::sourceforge::pmd::cpd::Mark
   function createDocument() in line 60
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function createDuplicationElement(Document,Match) in line 122
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Match
      uses function getTokenCount() defined in net::sourceforge::pmd::cpd::Match
   function getEncoding() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::cpd::XMLRenderer
   function render(Iterator< Match >) in line 86
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses function createDocument() defined in net::sourceforge::pmd::cpd::XMLRenderer
      uses function addCodeSnippet(Document,Element,Match) defined in net::sourceforge::pmd::cpd::XMLRenderer
      uses function addFilesToDuplicationElement(Document,Element,Match) defined in net::sourceforge::pmd::cpd::XMLRenderer
      uses function createDuplicationElement(Document,Match) defined in net::sourceforge::pmd::cpd::XMLRenderer
      uses function xmlDocToString(Document) defined in net::sourceforge::pmd::cpd::XMLRenderer
   function setEncoding(String) in line 48
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::cpd::XMLRenderer
   function xmlDocToString(Document) in line 70
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable encoding defined in net::sourceforge::pmd::cpd::XMLRenderer
      uses variable e defined in sample-matlab.m
   function XMLRenderer() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function XMLRenderer(String) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setEncoding(String) defined in net::sourceforge::pmd::cpd::XMLRenderer
      uses variable encoding defined in net::sourceforge::pmd::cpd::XMLRenderer
   variable encoding in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/XMLRenderer.java
module net::sourceforge::pmd::renderers::XMLRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function createTimestampAttr(StringBuilder) in line 163
      4 lines of code
      1 parameters
      1 conditional paths
   function createVersionAttr(StringBuilder) in line 159
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable VERSION defined in net::sourceforge::pmd::PMD
   function defaultFileExtension() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function end() in line 117
      protection public
      33 lines of code
      0 parameters
      4 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable errors defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable suppressed defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function maybeAdd(String,String,StringBuilder) in line 151
      7 lines of code
      3 parameters
      2 conditional paths
   function renderFileViolations(Iterator< RuleViolation >) in line 64
      protection public
      48 lines of code
      1 parameters
      5 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getRule() defined in net::sourceforge::pmd::RuleViolation
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getRuleSetName() defined in net::sourceforge::pmd::Rule
      uses function maybeAdd(String,String,StringBuilder) defined in net::sourceforge::pmd::renderers::XMLRenderer
      uses function getPackageName() defined in net::sourceforge::pmd::RuleViolation
      uses function getClassName() defined in net::sourceforge::pmd::RuleViolation
      uses function getMethodName() defined in net::sourceforge::pmd::RuleViolation
      uses function getVariableName() defined in net::sourceforge::pmd::RuleViolation
      uses function getExternalInfoUrl() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
   function start() in line 46
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable ENCODING defined in net::sourceforge::pmd::renderers::XMLRenderer
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function createVersionAttr(StringBuilder) defined in net::sourceforge::pmd::renderers::XMLRenderer
      uses function createTimestampAttr(StringBuilder) defined in net::sourceforge::pmd::renderers::XMLRenderer
   function XMLRenderer() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::XMLRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable ENCODING defined in net::sourceforge::pmd::renderers::XMLRenderer
   function XMLRenderer(String) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable ENCODING defined in net::sourceforge::pmd::renderers::XMLRenderer
   variable ENCODING in line 25
      protection public
   variable NAME in line 23
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/asm/PrintVisitor.java
module net::sourceforge::pmd::dcd::asm::PrintVisitor
   function println(String) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function println(int,String) in line 32
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable level defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
      uses variable INDENT defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
   function printlnIndent(String) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
   function PrintVisitor() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PrintVisitor(PrintVisitor) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable level defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
   function PrintVisitor(int) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable level defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
   variable INDENT in line 8
   variable level in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/asm/TypeSignatureVisitor.java
module net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   inherits from org::objectweb::asm::signature::SignatureVisitor
   function getFieldType() in line 72
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function popType() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable fieldType defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function getMethodParameterTypes() in line 88
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function popType() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable parameterTypes defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function getMethodReturnType() in line 80
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function popType() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable returnType defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function getType() in line 126
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable type defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable arrayDimensions defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function init() in line 65
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable typeType defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable FIELD_TYPE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable type defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable arrayDimensions defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable parameterTypes defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function popType() in line 104
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable typeType defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable NO_TYPE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable FIELD_TYPE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable fieldType defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function getType() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable RETURN_TYPE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable returnType defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable PARAMETER_TYPE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable parameterTypes defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable type defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable arrayDimensions defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function println(String) in line 45
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable p defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
   function printlnIndent(String) in line 49
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable p defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
   function pushType(int) in line 100
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitArrayType() in line 139
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable arrayDimensions defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitBaseType(char) in line 147
      protection public
      37 lines of code
      1 parameters
      11 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable type defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitClassBound() in line 185
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitClassType(String) in line 192
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitEnd() in line 201
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function popType() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitExceptionType() in line 208
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitFormalTypeParameter(String) in line 215
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitInnerClassType(String) in line 222
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitInterface() in line 229
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitInterfaceBound() in line 236
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitParameterType() in line 243
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function popType() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function pushType(int) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable PARAMETER_TYPE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitReturnType() in line 252
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function popType() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function pushType(int) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable RETURN_TYPE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitSuperclass() in line 261
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitTypeArgument() in line 268
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitTypeArgument(char) in line 274
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function visitTypeVariable(String) in line 282
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function TypeSignatureVisitor() in line 53
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable p defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function init() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function TypeSignatureVisitor(PrintVisitor) in line 59
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable p defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses function init() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   variable arrayDimensions in line 32
   variable FIELD_TYPE in line 19
   variable fieldType in line 35
   variable NO_TYPE in line 17
   variable p in line 43
   variable PARAMETER_TYPE in line 23
   variable parameterTypes in line 41
   variable RETURN_TYPE in line 21
   variable returnType in line 38
   variable TRACE in line 15
   variable type in line 29
   variable typeType in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/ClassLoaderUtil.java
module net::sourceforge::pmd::dcd::ClassLoaderUtil
   function fromInternalForm(String) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getClass(String) in line 28
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function getConstructor(Class<?>,String,Class<?>...) in line 116
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function getField(Class<?>,String) in line 38
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function myGetField(Class<?>,String) defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
      uses variable e defined in sample-matlab.m
   function getMethod(Class<?>,String,Class<?>...) in line 69
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function myGetMethod(Class<?>,String,Class<?>...) defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
      uses variable e defined in sample-matlab.m
   function getMethodSignature(String,Class<?>...) in line 124
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable CLINIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
      uses variable INIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
   function getParameterTypes(String...) in line 139
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getClass(String) defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
   function isOverridenMethod(Class<?>,Method,boolean) in line 147
      protection public
      22 lines of code
      3 parameters
      7 conditional paths
      uses variable method defined in sample-matlab.m
      uses variable e defined in sample-matlab.m
   function myGetField(Class<?>,String) in line 46
      22 lines of code
      2 parameters
      5 conditional paths
      uses variable e defined in sample-matlab.m
   function myGetMethod(Class<?>,String,Class<?>...) in line 77
      38 lines of code
      3 parameters
      6 conditional paths
      uses variable e defined in sample-matlab.m
      uses function getMethodSignature(String,Class<?>...) defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
   function toInternalForm(String) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable CLINIT in line 16
      protection public
   variable INIT in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/DCD.java
module net::sourceforge::pmd::dcd::DCD
   function dump(UsageGraph,boolean) in line 83
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function accept(NodeVisitor,Object) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
   function main(String[]) in line 91
      protection public
      82 lines of code
      1 parameters
      8 conditional paths
      uses variable files defined in sample-matlab.m
      uses function findFilesFrom(File,FilenameFilter,boolean) defined in net::sourceforge::pmd::util::FileFinder
      uses function index(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function dump(UsageGraph,boolean) defined in net::sourceforge::pmd::dcd::DCD
      uses function getUsageGraph() defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function report(UsageGraph,boolean) defined in net::sourceforge::pmd::dcd::DCD
   function report(UsageGraph,boolean) in line 87
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function accept(NodeVisitor,Object) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/DumpNodeVisitor.java
module net::sourceforge::pmd::dcd::DumpNodeVisitor
   inherits from net::sourceforge::pmd::dcd::graph::NodeVisitorAdapter
   function printMember(MemberNode) in line 101
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getUses() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function getUsers() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function toStringLong() defined in net::sourceforge::pmd::dcd::graph::MemberNode
   function visit(UsageGraph,Object) in line 20
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ClassNode,Object) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable data defined in sample-matlab.m
   function visit(FieldNode,Object) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function printMember(MemberNode) defined in net::sourceforge::pmd::dcd::DumpNodeVisitor
      uses variable data defined in sample-matlab.m
   function visit(ConstructorNode,Object) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function printMember(MemberNode) defined in net::sourceforge::pmd::dcd::DumpNodeVisitor
      uses variable data defined in sample-matlab.m
   function visit(MethodNode,Object) in line 64
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function printMember(MemberNode) defined in net::sourceforge::pmd::dcd::DumpNodeVisitor
      uses variable data defined in sample-matlab.m
   function visitConstructors(ClassNode,Object) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getConstructorNodes() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable data defined in sample-matlab.m
   function visitFields(ClassNode,Object) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getFieldNodes() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable data defined in sample-matlab.m
   function visitMethods(ClassNode,Object) in line 58
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getMethodNodes() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable data defined in sample-matlab.m
   function visitUse(MemberNode,Object) in line 78
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function toStringLong() defined in net::sourceforge::pmd::dcd::graph::MemberNode
   function visitUser(MemberNode,Object) in line 94
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function toStringLong() defined in net::sourceforge::pmd::dcd::graph::MemberNode
   function visitUsers(MemberNode,Object) in line 86
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getUsers() defined in net::sourceforge::pmd::dcd::graph::MemberNode
   function visitUses(MemberNode,Object) in line 70
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getUses() defined in net::sourceforge::pmd::dcd::graph::MemberNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/ClassNode.java
module net::sourceforge::pmd::dcd::graph::ClassNode
   inherits from net::sourceforge::pmd::dcd::graph::NodeVisitorAcceptor
   inherits from Comparable
   function accept(NodeVisitor,Object) in line 33
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function visitFields(ClassNode,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitor
      uses variable data defined in sample-matlab.m
      uses function visitConstructors(ClassNode,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitor
      uses function visitMethods(ClassNode,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitor
   function compareTo(ClassNode) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function defineConstructor(String,String) in line 67
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable constructorNodes defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function defineField(String,String) in line 53
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable fieldNodes defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function defineMethod(String,String) in line 82
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable methodNodes defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function equals(Object) in line 113
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function getConstructorNodes() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constructorNodes defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function getFieldNodes() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldNodes defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function getMethodNodes() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodNodes defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function getName() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function getType() in line 44
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable typeReference defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function hashCode() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function ClassNode(String) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::dcd::graph::ClassNode
   variable constructorNodes in line 25
   variable fieldNodes in line 23
   variable methodNodes in line 27
   variable name in line 19
   variable typeReference in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/report/ClassNode.java
module net::sourceforge::pmd::lang::dfa::report::ClassNode
   inherits from net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function equalsNode(AbstractReportNode) in line 19
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::dfa::report::ClassNode
   function getClassName() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::dfa::report::ClassNode
   function ClassNode(String) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::dfa::report::ClassNode
   variable className in line 9
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/ClassNodeComparator.java
module net::sourceforge::pmd::dcd::graph::ClassNodeComparator
   inherits from java::util::Comparator
   function compare(Object,Object) in line 19
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
   function ClassNodeComparator() in line 16
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 14
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/ConstructorNode.java
module net::sourceforge::pmd::dcd::graph::ConstructorNode
   inherits from MemberNode< ConstructorNode, Constructor<?> >
   function compareTo(ConstructorNode) in line 60
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getName() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function getMember() defined in net::sourceforge::pmd::dcd::graph::ConstructorNode
   function equals(Object) in line 80
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::dcd::graph::ConstructorNode
   function getMember() in line 35
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable CLINIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
      uses function getMethodParameterTypes() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function isInstanceInitializer() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
   function isStaticInitializer() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable CLINIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
   function toStringLong() in line 52
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable CLINIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
   function ConstructorNode(ClassNode,String,String) in line 22
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   variable constructorReference in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/FieldNode.java
module net::sourceforge::pmd::dcd::graph::FieldNode
   inherits from MemberNode< FieldNode, Field >
   function compareTo(FieldNode) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::dcd::graph::MemberNode
   function equals(Object) in line 37
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::dcd::graph::FieldNode
   function getMember() in line 24
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function FieldNode(ClassNode,String,String) in line 19
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   variable fieldReference in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/MemberNode.java
module net::sourceforge::pmd::dcd::graph::MemberNode
   inherits from net::sourceforge::pmd::dcd::graph::NodeVisitorAcceptor
   inherits from Comparable
   abstract class
   function accept(NodeVisitor,Object) in line 34
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function addUse(MemberNode) in line 54
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function addUser(MemberNode) in line 67
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function equals(S) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(String,String) in line 95
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getClassNode() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDesc() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMember() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUsers() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUses() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toStringLong() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MemberNode(ClassNode,String,String) in line 28
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable classNode in line 16
   variable decoration in line 26
   variable desc in line 20
   variable name in line 18
   variable users in line 24
   variable uses in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/MemberNodeComparator.java
module net::sourceforge::pmd::dcd::graph::MemberNodeComparator
   inherits from java::util::Comparator
   function compare(MemberNode,MemberNode) in line 19
      protection public
      23 lines of code
      2 parameters
      7 conditional paths
   function MemberNodeComparator() in line 16
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 14
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/MethodNode.java
module net::sourceforge::pmd::dcd::graph::MethodNode
   inherits from MemberNode< MethodNode, Method >
   function compareTo(MethodNode) in line 39
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getName() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function getMember() defined in net::sourceforge::pmd::dcd::graph::MethodNode
   function equals(Object) in line 59
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::dcd::graph::MethodNode
   function getMember() in line 27
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable method defined in sample-matlab.m
      uses function getMethodParameterTypes() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
   function MethodNode(ClassNode,String,String) in line 22
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   variable methodReference in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/NodeVisitor.java
module net::sourceforge::pmd::dcd::graph::NodeVisitor
   function visit(UsageGraph,Object) in line 11
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ClassNode,Object) in line 13
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(FieldNode,Object) in line 17
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ConstructorNode,Object) in line 21
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(MethodNode,Object) in line 25
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitConstructors(ClassNode,Object) in line 19
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitFields(ClassNode,Object) in line 15
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitMethods(ClassNode,Object) in line 23
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitUse(MemberNode,Object) in line 29
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitUser(MemberNode,Object) in line 33
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitUsers(MemberNode,Object) in line 31
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitUses(MemberNode,Object) in line 27
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/NodeVisitorAcceptor.java
module net::sourceforge::pmd::dcd::graph::NodeVisitorAcceptor
   function accept(NodeVisitor,Object) in line 11
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/NodeVisitorAdapter.java
module net::sourceforge::pmd::dcd::graph::NodeVisitorAdapter
   inherits from net::sourceforge::pmd::dcd::graph::NodeVisitor
   function visit(UsageGraph,Object) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function accept(NodeVisitor,Object) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses variable data defined in sample-matlab.m
   function visit(ClassNode,Object) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function accept(NodeVisitor,Object) defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable data defined in sample-matlab.m
   function visit(FieldNode,Object) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function accept(NodeVisitor,Object) defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses variable data defined in sample-matlab.m
   function visit(ConstructorNode,Object) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function accept(NodeVisitor,Object) defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses variable data defined in sample-matlab.m
   function visit(MethodNode,Object) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function accept(NodeVisitor,Object) defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses variable data defined in sample-matlab.m
   function visitConstructors(ClassNode,Object) in line 34
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getConstructorNodes() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses function visit(UsageGraph,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visitFields(ClassNode,Object) in line 23
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getFieldNodes() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses function visit(UsageGraph,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visitMethods(ClassNode,Object) in line 45
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodNodes() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses function visit(UsageGraph,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visitUse(MemberNode,Object) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visitUser(MemberNode,Object) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visitUsers(MemberNode,Object) in line 67
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getUsers() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function visitUser(MemberNode,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visitUses(MemberNode,Object) in line 56
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getUses() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function visitUse(MemberNode,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitorAdapter
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/UsageGraph.java
module net::sourceforge::pmd::dcd::graph::UsageGraph
   inherits from net::sourceforge::pmd::dcd::graph::NodeVisitorAcceptor
   function accept(NodeVisitor,Object) in line 57
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable classNodes defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function visit(UsageGraph,Object) defined in net::sourceforge::pmd::dcd::graph::NodeVisitor
      uses variable data defined in sample-matlab.m
   function checkClassName(String) in line 127
      6 lines of code
      1 parameters
      2 conditional paths
   function defineClass(String) in line 69
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function checkClassName(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses variable classNodes defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses variable INSTANCE defined in net::sourceforge::pmd::dcd::graph::ClassNodeComparator
   function defineConstructor(String,String,String) in line 87
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function defineClass(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function defineConstructor(String,String) defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function defineField(String,String,String) in line 82
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function defineClass(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function defineField(String,String) defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function defineMethod(String,String,String) in line 92
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function defineClass(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses variable CLINIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
      uses variable INIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
      uses function defineConstructor(String,String) defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses function defineMethod(String,String) defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function isClass(String) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkClassName(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses variable classNodes defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses variable INSTANCE defined in net::sourceforge::pmd::dcd::graph::ClassNodeComparator
   function usage(MemberNode,MemberNode) in line 122
      4 lines of code
      2 parameters
      1 conditional paths
      uses function addUser(MemberNode) defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function addUse(MemberNode) defined in net::sourceforge::pmd::dcd::graph::MemberNode
   function usageField(String,String,String,MemberNode) in line 101
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function checkClassName(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses variable classFilter defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function filter(T) defined in net::sourceforge::pmd::util::filter::Filter
      uses function defineField(String,String,String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function usage(MemberNode,MemberNode) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
   function usageMethod(String,String,String,MemberNode) in line 109
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses function checkClassName(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses variable classFilter defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function filter(T) defined in net::sourceforge::pmd::util::filter::Filter
      uses variable CLINIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
      uses variable INIT defined in net::sourceforge::pmd::dcd::ClassLoaderUtil
      uses function defineConstructor(String,String,String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function defineMethod(String,String,String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function usage(MemberNode,MemberNode) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
   function UsageGraph(Filter< String >) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classFilter defined in net::sourceforge::pmd::dcd::graph::UsageGraph
   variable classFilter in line 51
   variable classNodes in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/graph/UsageGraphBuilder.java
module net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function asList(int[]) in line 434
      10 lines of code
      1 parameters
      3 conditional paths
   function asList(Object[]) in line 445
      3 lines of code
      1 parameters
      1 conditional paths
   function getNewClassVisitor() in line 66
      3 lines of code
      0 parameters
      13 conditional paths
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function asList(int[]) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses variable INDEX defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function getFieldType() defined in net::sourceforge::pmd::dcd::asm::TypeSignatureVisitor
      uses variable usageGraph defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function defineField(String,String,String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function index(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function defineMethod(String,String,String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function getNewMethodVisitor(PrintVisitor,MemberNode) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function getNewMethodVisitor(PrintVisitor,MemberNode) in line 191
      3 lines of code
      2 parameters
      1 conditional paths
   function getResourceName(String) in line 426
      3 lines of code
      1 parameters
      1 conditional paths
   function getUsageGraph() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable usageGraph defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function index(String) in line 44
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function getResourceName(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses variable classFilter defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function filter(T) defined in net::sourceforge::pmd::util::filter::Filter
      uses variable usageGraph defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function isClass(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function defineClass(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
      uses function getNewClassVisitor() defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses variable e defined in sample-matlab.m
   function UsageGraphBuilder(Filter< String >) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classFilter defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   variable classFilter in line 37
   variable INDEX in line 34
   variable TRACE in line 33
   variable usageGraph in line 36
module net::sourceforge::pmd::dcd::graph::UsageGraphBuilder::MyClassVisitor
   inherits from org::objectweb::asm::ClassVisitor
   function println(String) in line 74
      3 lines of code
      1 parameters
      1 conditional paths
   function printlnIndent(String) in line 78
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(int,int,String,String,String,String[]) in line 89
      protection public
      12 lines of code
      6 parameters
      1 conditional paths
   function visitAnnotation(String,boolean) in line 102
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function visitAttribute(Attribute) in line 111
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visitEnd() in line 118
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function visitField(int,String,String,String,Object) in line 124
      protection public
      21 lines of code
      5 parameters
      1 conditional paths
   function visitInnerClass(String,String,String,int) in line 146
      protection public
      10 lines of code
      4 parameters
      1 conditional paths
   function visitMethod(int,String,String,String,String[]) in line 157
      protection public
      15 lines of code
      5 parameters
      1 conditional paths
   function visitOuterClass(String,String,String) in line 173
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function visitSource(String,String) in line 182
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function MyClassVisitor() in line 82
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable className in line 87
   variable p in line 72
module net::sourceforge::pmd::dcd::graph::UsageGraphBuilder::MyMethodVisitor
   inherits from org::objectweb::asm::MethodVisitor
   function println(String) in line 198
      3 lines of code
      1 parameters
      1 conditional paths
      uses function println(String) defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
   function printlnIndent(String) in line 202
      3 lines of code
      1 parameters
      1 conditional paths
      uses function printlnIndent(String) defined in net::sourceforge::pmd::dcd::asm::PrintVisitor
   function visitAnnotation(String,boolean) in line 214
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitAnnotationDefault() in line 223
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitAttribute(Attribute) in line 230
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitCode() in line 237
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitEnd() in line 243
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitFieldInsn(int,String,String,String) in line 249
      protection public
      13 lines of code
      4 parameters
      3 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses variable INDEX defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses variable usageGraph defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function usageField(String,String,String,MemberNode) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
   function visitFrame(int,int,Object[],int,Object[]) in line 263
      protection public
      10 lines of code
      5 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function asList(int[]) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitIincInsn(int,int) in line 274
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitInsn(int) in line 282
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitIntInsn(int,int) in line 289
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitJumpInsn(int,Label) in line 297
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitLabel(Label) in line 305
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitLdcInsn(Object) in line 312
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitLineNumber(int,Label) in line 319
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitLocalVariable(String,String,String,Label,Label,int) in line 327
      protection public
      11 lines of code
      6 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function index(String) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitLookupSwitchInsn(Label,int[],Label[]) in line 339
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function asList(int[]) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitMaxs(int,int) in line 348
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitMethodInsn(int,String,String,String,boolean) in line 356
      protection public
      14 lines of code
      5 parameters
      3 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses variable INDEX defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses variable usageGraph defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function usageMethod(String,String,String,MemberNode) defined in net::sourceforge::pmd::dcd::graph::UsageGraph
   function visitMultiANewArrayInsn(String,int) in line 371
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitParameterAnnotation(int,String,boolean) in line 379
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitTableSwitchInsn(int,int,Label,Label[]) in line 389
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
      uses function asList(int[]) defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitTryCatchBlock(Label,Label,Label,String) in line 399
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitTypeInsn(int,String) in line 409
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function visitVarInsn(int,int) in line 417
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::dcd::graph::UsageGraphBuilder
   function MyMethodVisitor(PrintVisitor,MemberNode) in line 208
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable p in line 196
   variable usingMemberNode in line 206
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/dcd/UsageNodeVisitor.java
module net::sourceforge::pmd::dcd::UsageNodeVisitor
   inherits from net::sourceforge::pmd::dcd::graph::NodeVisitorAdapter
   function ignore(String,ClassNode) in line 224
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in net::sourceforge::pmd::dcd::graph::ClassNode
   function ignore(String,MemberNode) in line 228
      3 lines of code
      2 parameters
      1 conditional paths
      uses function toStringLong() defined in net::sourceforge::pmd::dcd::graph::MemberNode
   function isMainMethod(MethodNode) in line 182
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in sample-matlab.m
      uses function getMember() defined in net::sourceforge::pmd::dcd::graph::MethodNode
   function visit(UsageGraph,Object) in line 112
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ClassNode,Object) in line 119
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable options defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function isIgnoreClassAnonymous() defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
      uses function getType() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses function ignore(String,ClassNode) defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function getName() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses variable data defined in sample-matlab.m
   function visit(FieldNode,Object) in line 133
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses function getUsers() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses variable options defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function isIgnoreFieldInlinable() defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
      uses function getMember() defined in net::sourceforge::pmd::dcd::graph::FieldNode
      uses function ignore(String,ClassNode) defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function toStringLong() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses variable data defined in sample-matlab.m
   function visit(ConstructorNode,Object) in line 154
      protection public
      27 lines of code
      2 parameters
      9 conditional paths
      uses function getUsers() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function isStaticInitializer() defined in net::sourceforge::pmd::dcd::graph::ConstructorNode
      uses variable options defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function isIgnoreConstructorStaticInitializer() defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
      uses function ignore(String,ClassNode) defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function isInstanceInitializer() defined in net::sourceforge::pmd::dcd::graph::ConstructorNode
      uses function getMember() defined in net::sourceforge::pmd::dcd::graph::ConstructorNode
      uses function isIgnoreConstructorAllPrivate() defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
      uses function isIgnoreConstructorSinglePrivateNoArg() defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
      uses function getClassNode() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function getConstructorNodes() defined in net::sourceforge::pmd::dcd::graph::ClassNode
      uses function toStringLong() defined in net::sourceforge::pmd::dcd::graph::ConstructorNode
      uses variable data defined in sample-matlab.m
   function visit(MethodNode,Object) in line 196
      protection public
      27 lines of code
      2 parameters
      9 conditional paths
      uses function getUsers() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses variable options defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function isIgnoreMethodAllOverride() defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
      uses function getClassNode() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses function getMember() defined in net::sourceforge::pmd::dcd::graph::MethodNode
      uses function ignore(String,ClassNode) defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function isIgnoreMethodJavaLangObjectOverride() defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
      uses function isIgnoreMethodMain() defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
      uses function isMainMethod(MethodNode) defined in net::sourceforge::pmd::dcd::UsageNodeVisitor
      uses function toStringLong() defined in net::sourceforge::pmd::dcd::graph::MemberNode
      uses variable data defined in sample-matlab.m
   variable options in line 110
module net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function isIgnoreClassAnonymous() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreClassAnonymous defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function isIgnoreConstructorAllPrivate() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreConstructorAllPrivate defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function isIgnoreConstructorSinglePrivateNoArg() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreConstructorSinglePrivateNoArg defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function isIgnoreConstructorStaticInitializer() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreConstructorStaticInitializer defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function isIgnoreFieldInlinable() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreFieldInlinable defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function isIgnoreMethodAllOverride() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreMethodAllOverride defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function isIgnoreMethodJavaLangObjectOverride() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreMethodJavaLangObjectOverride defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function isIgnoreMethodMain() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreMethodMain defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function setIgnoreClassAnonymous(boolean) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreClassAnonymous defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function setIgnoreConstructorAllPrivate(boolean) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreConstructorAllPrivate defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function setIgnoreConstructorSinglePrivateNoArg(boolean) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreConstructorSinglePrivateNoArg defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function setIgnoreConstructorStaticInitializer(boolean) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreConstructorStaticInitializer defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function setIgnoreFieldInlinable(boolean) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreFieldInlinable defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function setIgnoreMethodAllOverride(boolean) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreMethodAllOverride defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function setIgnoreMethodJavaLangObjectOverride(boolean) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreMethodJavaLangObjectOverride defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   function setIgnoreMethodMain(boolean) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreMethodMain defined in net::sourceforge::pmd::dcd::UsageNodeVisitor::Options
   variable ignoreClassAnonymous in line 28
   variable ignoreConstructorAllPrivate in line 34
   variable ignoreConstructorSinglePrivateNoArg in line 32
   variable ignoreConstructorStaticInitializer in line 30
   variable ignoreFieldInlinable in line 42
   variable ignoreMethodAllOverride in line 38
   variable ignoreMethodJavaLangObjectOverride in line 36
   variable ignoreMethodMain in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/AbstractLanguageVersionHandler.java
module net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   inherits from net::sourceforge::pmd::lang::LanguageVersionHandler
   abstract class
   function getDataFlowFacade() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DUMMY defined in net::sourceforge::pmd::lang::VisitorStarter
   function getDataFlowHandler() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DUMMY defined in net::sourceforge::pmd::lang::DataFlowHandler
   function getDefaultParserOptions() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDFAGraphRule() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDumpFacade(final Writer,final String,final boolean) in line 46
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable DUMMY defined in net::sourceforge::pmd::lang::VisitorStarter
   function getSymbolFacade() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DUMMY defined in net::sourceforge::pmd::lang::VisitorStarter
   function getSymbolFacade(ClassLoader) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DUMMY defined in net::sourceforge::pmd::lang::VisitorStarter
   function getTypeResolutionFacade(ClassLoader) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DUMMY defined in net::sourceforge::pmd::lang::VisitorStarter
   function getXPathHandler() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DUMMY defined in net::sourceforge::pmd::lang::XPathHandler
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/AbstractParser.java
module net::sourceforge::pmd::lang::AbstractParser
   inherits from net::sourceforge::pmd::lang::Parser
   abstract class
   function createTokenManager(Reader) in line 30
      1 lines of code
      1 parameters
      1 conditional paths
   function getParserOptions() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
   function getTokenManager(String,Reader) in line 24
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createTokenManager(Reader) defined in net::sourceforge::pmd::lang::AbstractParser
      uses function setFileName(String) defined in net::sourceforge::pmd::lang::TokenManager
   function AbstractParser(ParserOptions) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
   variable parserOptions in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/AbstractNode.java
module net::sourceforge::pmd::lang::ast::AbstractNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   abstract class
   function appendElement(org.w3c.dom.Node) in line 292
      19 lines of code
      1 parameters
      6 conditional paths
      uses function getElementName(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses function getAttributeAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getStringValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getChildAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses function AbstractNode(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function appendElement(org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function findChildNodesWithXPath(String) in line 372
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function findDescendantsOfType(Node,Class< T >,List< T >,boolean) in line 243
      17 lines of code
      4 parameters
      6 conditional paths
      uses function isFindBoundary() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getAsDocument() in line 280
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function appendElement(org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getBeginColumn() in line 128
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
   function getBeginLine() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getDataFlowNode() in line 160
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable dataFlowNode defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getEndColumn() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getEndLine() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getFirstDescendantOfType(Class< T >,Node) in line 333
      14 lines of code
      2 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getImage() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getNthParent(int) in line 181
      protection public
      13 lines of code
      1 parameters
      7 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function getUserData() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userData defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function hasDecendantOfAnyType(Class<?>...) in line 360
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function hasDescendantMatchingXPath(String) in line 379
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable e defined in sample-matlab.m
   function hasDescendantOfType(Class< T >) in line 351
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hasImageEqualTo(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isFindBoundary() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSingleLine() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable endLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAddChild(Node,int) in line 71
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtSetChildIndex(int) defined in net::sourceforge::pmd::lang::ast::Node
   function jjtClose() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtGetChild(int) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtGetChildIndex() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable childIndex defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtGetId() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function toString() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtGetNumChildren() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtGetParent() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtOpen() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtSetChildIndex(int) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable childIndex defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtSetParent(Node) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function setDataFlowNode(DataFlowNode) in line 170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dataFlowNode defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function setImage(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function setUserData(Object) in line 397
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userData defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testingOnly__setBeginColumn(int) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testingOnly__setBeginLine(int) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testingOnly__setEndColumn(int) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function testingOnly__setEndLine(int) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 106
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function AbstractNode(int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function AbstractNode(int,int,int,int,int) in line 42
      protection public
      8 lines of code
      5 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable endLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable endColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   variable beginColumn in line 33
   variable beginLine in line 31
   variable childIndex in line 27
   variable children in line 26
   variable dataFlowNode in line 35
   variable endColumn in line 34
   variable endLine in line 32
   variable id in line 28
   variable image in line 30
   variable parent in line 25
   variable userData in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/AbstractTokenManager.java
module net::sourceforge::pmd::lang::ast::AbstractTokenManager
   abstract class
   function getFileName() in line 24
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in net::sourceforge::pmd::lang::ast::AbstractTokenManager
   function getSuppressMap() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressMap defined in net::sourceforge::pmd::lang::ast::AbstractTokenManager
   function setFileName(String) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileName defined in net::sourceforge::pmd::lang::ast::AbstractTokenManager
   function setSuppressMarker(String) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable fileName in line 15
   variable suppressMap in line 17
   variable suppressMarker in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/Node.java
module net::sourceforge::pmd::lang::ast::Node
   function findChildNodesWithXPath(String) in line 159
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function findChildrenOfType(Class< T >) in line 107
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function findDescendantsOfType(Class< T >) in line 115
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function findDescendantsOfType(Class< T >,List< T >,boolean) in line 124
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getAsDocument() in line 175
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBeginColumn() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBeginLine() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDataFlowNode() in line 87
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEndColumn() in line 85
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEndLine() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFirstChildOfType(Class< T >) in line 134
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFirstDescendantOfType(Class< T >) in line 142
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getFirstParentOfType(Class< T >) in line 95
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getImage() in line 73
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNthParent(int) in line 93
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getParentsOfType(Class< T >) in line 97
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getUserData() in line 182
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasDescendantMatchingXPath(String) in line 167
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function hasDescendantOfType(Class< T >) in line 150
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function hasImageEqualTo(String) in line 77
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isFindBoundary() in line 91
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtAddChild(Node,int) in line 45
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function jjtClose() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtGetChild(int) in line 64
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function jjtGetChildIndex() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtGetId() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtGetNumChildren() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtGetParent() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtOpen() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtSetChildIndex(int) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function jjtSetParent(Node) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setDataFlowNode(DataFlowNode) in line 89
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setImage(String) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUserData(Object) in line 197
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/ParseException.java
module net::sourceforge::pmd::lang::ast::ParseException
   inherits from RuntimeException
   function ParseException() in line 8
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParseException(String) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ParseException(Throwable) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ParseException(String,Throwable) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/RootNode.java
module net::sourceforge::pmd::lang::ast::RootNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/AbstractASTXPathHandler.java
module net::sourceforge::pmd::lang::ast::xpath::AbstractASTXPathHandler
   inherits from net::sourceforge::pmd::lang::XPathHandler
   abstract class
   function getNavigator() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize(IndependentContext,Language,Class<?>) in line 18
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getTerseName() defined in net::sourceforge::pmd::lang::Language
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/Attribute.java
module net::sourceforge::pmd::lang::ast::xpath::Attribute
   function getName() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function getParent() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function getStringValue() in line 51
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable stringValue defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable value defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function getValue() in line 36
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable value defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable method defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable parent defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable EMPTY_OBJ_ARRAY defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function toString() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable parent defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function Attribute(Node,String,Method) in line 23
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable name defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function Attribute(Node,String,String) in line 29
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable name defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable value defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   variable EMPTY_OBJ_ARRAY in line 16
   variable method in line 19
   variable name in line 18
   variable parent in line 17
   variable stringValue in line 21
   variable value in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/AttributeAxisIterator.java
module net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
   inherits from java::util::Iterator
   function getNextAttribute() in line 90
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable methodWrappers defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses variable position defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses variable name defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator::MethodWrapper
      uses variable method defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator::MethodWrapper
   function hasNext() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currObj defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
   function isAttributeAccessor(Method) in line 98
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator::MethodWrapper
   function next() in line 73
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable currObj defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses function getNextAttribute() defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
   function remove() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AttributeAxisIterator(Node) in line 55
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable methodCache defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses function isAttributeAccessor(Method) defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses function MethodWrapper(Method) defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator::MethodWrapper
      uses function getNextAttribute() defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
   variable currObj in line 47
   variable methodCache in line 52
   variable methodWrappers in line 48
   variable node in line 50
   variable position in line 49
module net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator::MethodWrapper
   function truncateMethodName(String) in line 27
      18 lines of code
      1 parameters
      5 conditional paths
   function MethodWrapper(Method) in line 22
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function truncateMethodName(String) defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator::MethodWrapper
   variable method in line 19
      protection public
   variable name in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/saxon/AttributeAxisIterator.java
module net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeAxisIterator
   inherits from Navigator::BaseEnumeration
   function advance() in line 37
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable iterator defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeAxisIterator
   function getAnother() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function AttributeAxisIterator(ElementNode) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeAxisIterator
      uses variable startNodeInfo defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeAxisIterator
   function AttributeAxisIterator(ElementNode) in line 22
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable startNodeInfo defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeAxisIterator
      uses variable iterator defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeAxisIterator
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   variable iterator in line 16
   variable startNodeInfo in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/AttributeNode.java
module net::sourceforge::pmd::lang::ast::xpath::AttributeNode
   function getAttributeIterator() in line 13
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/saxon/AttributeNode.java
module net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeNode
   inherits from net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function atomize() in line 46
      protection public
      19 lines of code
      0 parameters
      6 conditional paths
      uses variable value defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeNode
      uses variable attribute defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeNode
      uses function getValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function compareOrder(NodeInfo) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getLocalPart() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attribute defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeNode
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function getNodeKind() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStringValueCS() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attribute defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeNode
      uses function getStringValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function getTypedValue() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function atomize() defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeNode
   function getURI() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AttributeNode(Attribute,int) in line 25
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable attribute defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeNode
      uses variable id defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AttributeNode
   variable attribute in line 21
   variable id in line 22
   variable value in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/DocumentNavigator.java
module net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
   inherits from org::jaxen::DefaultNavigator
   function getAttributeAxisIterator(Object) in line 116
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getAttributeName(Object) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAttributeNamespaceUri(Object) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAttributeQName(Object) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getAttributeStringValue(Object) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getChildAxisIterator(Object) in line 131
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function getCommentStringValue(Object) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDocumentNode(Object) in line 291
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function isDocument(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses function getParentNode(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
   function getElementName(Object) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getElementNamespaceUri(Object) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getElementQName(Object) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getElementName(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
   function getElementStringValue(Object) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFollowingAxisIterator(Object) in line 213
      protection public
      34 lines of code
      1 parameters
      6 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function getFollowingSiblingAxisIterator(Object) in line 171
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function getNamespacePrefix(Object) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNamespaceStringValue(Object) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getParentAxisIterator(Object) in line 152
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function isAttribute(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses function getParent((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable EMPTY_ITERATOR defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
   function getParentNode(Object) in line 104
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function getPrecedingAxisIterator(Object) in line 255
      protection public
      34 lines of code
      1 parameters
      6 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function getPrecedingSiblingAxisIterator(Object) in line 192
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function getTextStringValue(Object) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isAttribute(Object) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isComment(Object) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isDocument(Object) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isElement(Object) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isNamespace(Object) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isProcessingInstruction(Object) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isText(Object) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function parseXPath(String) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable EMPTY_ITERATOR in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/NodeIterator.java
module net::sourceforge::pmd::lang::ast::xpath::NodeIterator
   inherits from java::util::Iterator
   abstract class
   function getFirstChild(Node) in line 65
      7 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getFirstNode(Node) in line 39
      1 lines of code
      1 parameters
      1 conditional paths
   function getLastChild(Node) in line 73
      7 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getNextNode(Node) in line 41
      1 lines of code
      1 parameters
      1 conditional paths
   function getNextSibling(Node) in line 54
      10 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChildIndex() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getPreviousSibling(Node) in line 43
      10 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChildIndex() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function hasNext() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::NodeIterator
   function next() in line 26
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::NodeIterator
      uses function getNextNode(Node) defined in net::sourceforge::pmd::lang::ast::xpath::NodeIterator
   function remove() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFirstNode(Node) defined in net::sourceforge::pmd::lang::ast::xpath::NodeIterator
      uses function getNextNode(Node) defined in net::sourceforge::pmd::lang::ast::xpath::NodeIterator
   function NodeIterator(Node) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFirstNode(Node) defined in net::sourceforge::pmd::lang::ast::xpath::NodeIterator
   variable node in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/saxon/AbstractNodeInfo.java
module net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   inherits from net::sf::saxon::om::VirtualNode
   inherits from net::sf::saxon::om::SiblingCountingNode
   function atomize() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function compareOrder(NodeInfo) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function copy(Receiver,int,boolean,int) in line 96
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function createUnsupportedOperationException(String) in line 328
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 108
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function getUnderlyingNode() defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function generateId(FastStringBuffer) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getAttributeValue(int) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getBaseURI() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getColumnNumber() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getConfiguration() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getDeclaredNamespaces(int[]) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getDisplayName() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getDocumentNumber() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDocumentRoot() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getFingerprint() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getLineNumber() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getLocalPart() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getNameCode() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getNamePool() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getNodeKind() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getParent() in line 228
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getPrefix() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getRoot() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getSiblingPosition() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getStringValue() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getStringValueCS() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getSystemId() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getTypeAnnotation() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getTypedValue() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getUnderlyingNode() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getURI() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function hasChildNodes() in line 263
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function isId() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function isIdref() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function isNilled() in line 284
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function isSameNodeInfo(NodeInfo) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function iterateAxis(byte) in line 301
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function iterateAxis(byte,NodeTest) in line 313
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function iterateAxis(byte) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function setSystemId(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/saxon/DocumentNode.java
module net::sourceforge::pmd::lang::ast::xpath::saxon::DocumentNode
   inherits from net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   inherits from net::sf::saxon::om::DocumentInfo
   function getDocumentRoot() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNodeKind() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnparsedEntity(String) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function getUnparsedEntityNames() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function hasChildNodes() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterateAxis(byte) in line 83
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable rootNode defined in net::sourceforge::pmd::lang::ast::xpath::saxon::DocumentNode
   function selectID(String) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createUnsupportedOperationException(String) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function DocumentNode(Node) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable nodeToElementNode in line 32
      protection public
   variable rootNode in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/saxon/ElementNode.java
module net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   inherits from net::sourceforge::pmd::lang::ast::xpath::saxon::AbstractNodeInfo
   function compareOrder(NodeInfo) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetId() defined in net::sourceforge::pmd::lang::ast::Node
      uses function ElementNode(DocumentNode,IdGenerator,ElementNode,Node,int) defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   function getColumnNumber() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
   function getDocumentRoot() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable document defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   function getLineNumber() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function getLocalPart() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   function getNodeKind() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParent() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   function getSiblingPosition() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable siblingPosition defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   function getUnderlyingNode() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   function getURI() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasChildNodes() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   function iterateAxis(byte) in line 104
      protection public
      46 lines of code
      1 parameters
      18 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses variable parent defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses variable siblingPosition defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
   function ElementNode(DocumentNode,IdGenerator,ElementNode,Node,int) in line 29
      protection public
      17 lines of code
      5 parameters
      3 conditional paths
      uses variable document defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses variable parent defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses variable node defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses function getNextId() defined in net::sourceforge::pmd::lang::ast::xpath::saxon::IdGenerator
      uses variable siblingPosition defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable children defined in net::sourceforge::pmd::lang::ast::xpath::saxon::ElementNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable nodeToElementNode defined in net::sourceforge::pmd::lang::ast::xpath::saxon::DocumentNode
   variable children in line 27
   variable document in line 22
   variable id in line 25
   variable node in line 24
   variable parent in line 23
   variable siblingPosition in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/saxon/IdGenerator.java
module net::sourceforge::pmd::lang::ast::xpath::saxon::IdGenerator
   function getNextId() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable id in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/BaseLanguageModule.java
module net::sourceforge::pmd::lang::BaseLanguageModule
   inherits from net::sourceforge::pmd::lang::Language
   abstract class
   function addVersion(String,LanguageVersionHandler,boolean) in line 29
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable versions defined in net::sourceforge::pmd::lang::BaseLanguageModule
      uses variable defaultVersion defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function getDefaultVersion() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultVersion defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function getExtensions() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable extensions defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function getName() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function getRuleChainVisitorClass() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleChainVisitorClass defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function getShortName() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortName defined in net::sourceforge::pmd::lang::BaseLanguageModule
      uses variable name defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function getTerseName() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable terseName defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function getVersion(String) in line 80
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable versions defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function getVersions() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable versions defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function hasExtension(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable extensions defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function hasVersion(String) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable versions defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function toString() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::BaseLanguageModule
   function BaseLanguageModule(String,String,String,Class<?>,String...) in line 21
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::BaseLanguageModule
      uses variable shortName defined in net::sourceforge::pmd::lang::BaseLanguageModule
      uses variable terseName defined in net::sourceforge::pmd::lang::BaseLanguageModule
      uses variable ruleChainVisitorClass defined in net::sourceforge::pmd::lang::BaseLanguageModule
      uses variable extensions defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable defaultVersion in line 19
   variable extensions in line 17
   variable name in line 13
   variable ruleChainVisitorClass in line 16
   variable shortName in line 14
   variable terseName in line 15
   variable versions in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/DataFlowHandler.java
module net::sourceforge::pmd::lang::DataFlowHandler
   function createDataFlowNode(List< DataFlowNode >,Node) in line 22
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getLabelStatementNodeClass() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable DUMMY in line 13
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/AbstractDataFlowNode.java
module net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   inherits from net::sourceforge::pmd::lang::dfa::DataFlowNode
   abstract class
   function addPathToChild(DataFlowNode) in line 46
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function getChildren() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function getFlow() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dataFlow defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function getIndex() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLine() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable line defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function getNode() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function getParents() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parents defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function getVariableAccess() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable variableAccess defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function isType(int) in line 77
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable e defined in sample-matlab.m
   function removePathToChild(DataFlowNode) in line 55
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function reverseParentPathsTo(DataFlowNode) in line 61
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable parents defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses function removePathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function setType(int) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function setVariableAccess(List< VariableAccess >) in line 106
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable variableAccess defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function stringFromType(int) in line 137
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 119
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable type defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable c defined in sample-matlab.m
      uses function stringFromType(int) defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable node defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function AbstractDataFlowNode(List< DataFlowNode >) in line 29
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable dataFlow defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function AbstractDataFlowNode(List< DataFlowNode >,Node) in line 38
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable dataFlow defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable node defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses function setDataFlowNode(DataFlowNode) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   variable children in line 23
   variable dataFlow in line 26
   variable line in line 27
   variable node in line 20
   variable parents in line 22
   variable type in line 24
   variable variableAccess in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/DataFlowNode.java
module net::sourceforge::pmd::lang::dfa::DataFlowNode
   function addPathToChild(DataFlowNode) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getChildren() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFlow() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getIndex() in line 15
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLine() in line 13
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNode() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParents() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getVariableAccess() in line 11
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isType(int) in line 17
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removePathToChild(DataFlowNode) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reverseParentPathsTo(DataFlowNode) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setType(int) in line 19
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setVariableAccess(List< VariableAccess >) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/DFAGraphMethod.java
module net::sourceforge::pmd::lang::dfa::DFAGraphMethod
   inherits from net::sourceforge::pmd::lang::ast::Node
   function getName() in line 10
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/DFAGraphRule.java
module net::sourceforge::pmd::lang::dfa::DFAGraphRule
   inherits from net::sourceforge::pmd::Rule
   function getMethods() in line 11
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/Linker.java
module net::sourceforge::pmd::lang::dfa::Linker
   function computeDo(int,int) in line 252
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function computeFor(int,int) in line 263
      50 lines of code
      2 parameters
      9 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses function getType() defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses variable FOR_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_UPDATE defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_END defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function reverseParentPathsTo(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function removePathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function computeIf(int,int,int) in line 363
      27 lines of code
      3 parameters
      4 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function reverseParentPathsTo(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function computeIf(int,int) in line 391
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function computePaths() in line 34
      protection public
      174 lines of code
      0 parameters
      27 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable braceStack defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function run() defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses function getFirstIndex() defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses function getLastIndex() defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses function dump(String,List< StackObject >) defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getType() defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses variable IF_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function x(K+) defined in sample-matlab.m
      uses function computeIf(int,int,int) defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable WHILE_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function computeWhile(int,int) defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable SWITCH_START defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function computeSwitch(int,int) defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable FOR_INIT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_UPDATE defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function computeFor(int,int) defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable DO_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function computeDo(int,int) defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable y defined in sample-matlab.m
      uses variable continueBreakReturnStack defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses variable THROW_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable RETURN_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function removePathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable BREAK_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getNodeToBreakStatement(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CONTINUE_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function computeSwitch(int,int) in line 314
      34 lines of code
      2 parameters
      6 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getType() defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses variable SWITCH_LAST_DEFAULT_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function computeWhile(int,int) in line 349
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function reverseParentPathsTo(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function dump(String,List< StackObject >) in line 408
      8 lines of code
      2 parameters
      2 conditional paths
   function getNodeToBreakStatement(DataFlowNode) in line 209
      42 lines of code
      1 parameters
      8 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable DO_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_INIT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable WHILE_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable SWITCH_START defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable WHILE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable SWITCH_END defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_END defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable LABEL_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable dataFlowHandler defined in net::sourceforge::pmd::lang::dfa::Linker
      uses function getLabelStatementNodeClass() defined in net::sourceforge::pmd::lang::DataFlowHandler
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function removePathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function Linker(DataFlowHandler,List< StackObject >,List< StackObject >) in line 24
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable dataFlowHandler defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable braceStack defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable continueBreakReturnStack defined in net::sourceforge::pmd::lang::dfa::Linker
   variable braceStack in line 21
   variable CLASS_NAME in line 18
   variable continueBreakReturnStack in line 22
   variable dataFlowHandler in line 20
   variable LOGGER in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/LinkerException.java
module net::sourceforge::pmd::lang::dfa::LinkerException
   inherits from Exception
   function LinkerException() in line 11
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LinkerException(String) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/NodeType.java
module net::sourceforge::pmd::lang::dfa::NodeType
   function getTypeMap() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TYPE_MAP defined in net::sourceforge::pmd::lang::dfa::NodeType
   function stringFromType(int) in line 79
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable TYPE_MAP defined in net::sourceforge::pmd::lang::dfa::NodeType
   variable BREAK_STATEMENT in line 38
      protection public
   variable CASE_LAST_STATEMENT in line 24
      protection public
   variable CONTINUE_STATEMENT in line 39
      protection public
   variable DO_BEFORE_FIRST_STATEMENT in line 34
      protection public
   variable DO_EXPR in line 35
      protection public
   variable ELSE_LAST_STATEMENT in line 18
      protection public
   variable FOR_BEFORE_FIRST_STATEMENT in line 31
      protection public
   variable FOR_END in line 32
      protection public
   variable FOR_EXPR in line 29
      protection public
   variable FOR_INIT in line 28
      protection public
   variable FOR_UPDATE in line 30
      protection public
   variable IF_EXPR in line 15
      protection public
   variable IF_LAST_STATEMENT in line 16
      protection public
   variable IF_LAST_STATEMENT_WITHOUT_ELSE in line 17
      protection public
   variable LABEL_LAST_STATEMENT in line 42
      protection public
   variable LABEL_STATEMENT in line 41
      protection public
   variable RETURN_STATEMENT in line 37
      protection public
   variable SWITCH_END in line 26
      protection public
   variable SWITCH_LAST_DEFAULT_STATEMENT in line 25
      protection public
   variable SWITCH_START in line 23
      protection public
   variable THROW_STATEMENT in line 45
      protection public
   variable TYPE_MAP in line 48
   variable WHILE_EXPR in line 20
      protection public
   variable WHILE_LAST_STATEMENT in line 21
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/pathfinder/CurrentPath.java
module net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function addLast(DataFlowNode) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable list defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function getDoBranchNodeFromFirstDoStatement() in line 54
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function isFirstDoStatement() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable DO_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
   function getLast() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable list defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function getLength() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable list defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function isBranch() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function isDoBranchNode() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable DO_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
   function isEmpty() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable list defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function isEndNode() in line 68
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function isFirstDoStatement() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function isFirstDoStatement(DataFlowNode) in line 77
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable DO_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function iterator() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable list defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function removeLast() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable list defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function CurrentPath() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable list defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   variable list in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/pathfinder/DAAPathFinder.java
module net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function addCurrentChild() in line 124
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function isBranch() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses variable stack defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable currentChild defined in net::sourceforge::pmd::lang::dfa::pathfinder::PathElement
      uses function addLast(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function addLastChild() in line 113
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable stack defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function addLast(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function addNewPathElement(DefaultMutableTreeNode) in line 228
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addNode(DefaultMutableTreeNode,PathElement) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function addNewPseudoPathElement(DefaultMutableTreeNode,DataFlowNode) in line 235
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addNode(DefaultMutableTreeNode,PathElement) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function addNode(DefaultMutableTreeNode,PathElement) in line 285
      5 lines of code
      2 parameters
      1 conditional paths
   function addNodeToTree() in line 147
      58 lines of code
      0 parameters
      13 conditional paths
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function isFirstDoStatement() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses variable stack defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getDoBranchNodeFromFirstDoStatement() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function isNodeInLevel(DefaultMutableTreeNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function addRefPseudoPathElement(DefaultMutableTreeNode,PathElement) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getLastChildNode(DefaultMutableTreeNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function addNewPseudoPathElement(DefaultMutableTreeNode,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function isBranch() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function isDoBranchNode() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function equalsPseudoPathElementWithDoBranchNodeInLevel(DefaultMutableTreeNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getDoBranchNodeInLevel(DefaultMutableTreeNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function addNode(DefaultMutableTreeNode,PathElement) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function addNewPathElement(DefaultMutableTreeNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function addRefPseudoPathElement(DefaultMutableTreeNode,PathElement) in line 242
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addNode(DefaultMutableTreeNode,PathElement) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function countLoops() in line 311
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable stack defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable e defined in sample-matlab.m
   function equalsPseudoPathElementWithDoBranchNodeInLevel(DefaultMutableTreeNode) in line 246
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable DO_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function isPseudoPathElement() defined in net::sourceforge::pmd::lang::dfa::pathfinder::PathElement
      uses variable pseudoRef defined in net::sourceforge::pmd::lang::dfa::pathfinder::PathElement
   function getDoBranchNodeInLevel(DefaultMutableTreeNode) in line 266
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable DO_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable node defined in net::sourceforge::pmd::lang::dfa::pathfinder::PathElement
   function getLastChildNode(DefaultMutableTreeNode) in line 304
      6 lines of code
      1 parameters
      2 conditional paths
   function hasMoreChildren() in line 108
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable stack defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function incChild() in line 328
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function isNodeInLevel(DefaultMutableTreeNode) in line 291
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses variable node defined in net::sourceforge::pmd::lang::dfa::pathfinder::PathElement
   function phase1() in line 45
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function addLast(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses variable rootNode defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function phase2(boolean) defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable shim defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function execute(CurrentPath) defined in net::sourceforge::pmd::lang::dfa::pathfinder::Executable
      uses variable maxPaths defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function phase3() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function phase2(boolean) in line 61
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function isEndNode() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function isBranch() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function isFirstDoStatement() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function addNodeToTree() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function countLoops() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function addCurrentChild() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function addLastChild() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function phase3() in line 86
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable currentPath defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function isEmpty() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function isBranch() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function countLoops() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function hasMoreChildren() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function incChild() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function removeFromTree() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses function removeLast() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
   function removeFromTree() in line 206
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable stack defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable e defined in sample-matlab.m
   function run() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function phase1() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function DAAPathFinder(DataFlowNode,Executable) in line 26
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable rootNode defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable shim defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable MAX_PATHS defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function DAAPathFinder(DataFlowNode,Executable,int) in line 32
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable rootNode defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable shim defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
      uses variable maxPaths defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   variable currentPath in line 22
   variable MAX_PATHS in line 18
   variable maxPaths in line 24
   variable rootNode in line 20
   variable shim in line 21
   variable stack in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/pathfinder/Executable.java
module net::sourceforge::pmd::lang::dfa::pathfinder::Executable
   function execute(CurrentPath) in line 15
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/pathfinder/PathElement.java
module net::sourceforge::pmd::lang::dfa::pathfinder::PathElement
   function isPseudoPathElement() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pseudoRef defined in net::sourceforge::pmd::lang::dfa::pathfinder::PathElement
   variable currentChild in line 10
      protection public
   variable node in line 11
      protection public
   variable pseudoRef in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/report/AbstractReportNode.java
module net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   abstract class
   function accept(ReportVisitor) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ReportVisitor
   function add(AbstractReportNode) in line 74
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable childNodes defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses variable parentNode defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function addFirst(AbstractReportNode) in line 66
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable childNodes defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses variable parentNode defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function addNumberOfViolation(int) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numberOfViolations defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function childrenAccept(ReportVisitor) in line 92
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable childNodes defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function accept(ReportVisitor) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function equalsNode(AbstractReportNode) in line 22
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getChildAt(int) in line 103
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable childNodes defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function getChildCount() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable childNodes defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function getChildIndex(AbstractReportNode) in line 54
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable childNodes defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function getFirstChild() in line 27
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isLeaf() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function getNextSibling() in line 37
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable parentNode defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getChildIndex(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses variable childNodes defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function getNumberOfViolations() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numberOfViolations defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function getParent() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentNode defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function isLeaf() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable childNodes defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   variable childNodes in line 10
   variable numberOfViolations in line 17
   variable parentNode in line 11
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/report/PackageNode.java
module net::sourceforge::pmd::lang::dfa::report::PackageNode
   inherits from net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function equalsNode(AbstractReportNode) in line 18
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getPackageName() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageName defined in net::sourceforge::pmd::lang::dfa::report::PackageNode
   function PackageNode(String) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable packageName defined in net::sourceforge::pmd::lang::dfa::report::PackageNode
   variable packageName in line 8
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/report/ReportHTMLPrintVisitor.java
module net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
   inherits from net::sourceforge::pmd::lang::dfa::report::ReportVisitor
   function displayRuleViolation(RuleViolation) in line 53
      20 lines of code
      1 parameters
      3 conditional paths
      uses function renderViolationRow(StringBuilder,String,String) defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses function getRule() defined in net::sourceforge::pmd::RuleViolation
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses function getVariableName() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
   function renderClass(ClassNode) in line 160
      34 lines of code
      1 parameters
      2 conditional paths
      uses function getClassName() defined in net::sourceforge::pmd::lang::dfa::report::ClassNode
      uses variable classBuf defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function write(String,StringBuilder) defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses variable e defined in sample-matlab.m
      uses variable packageBuf defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses variable length defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses function getNumberOfViolations() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getParent() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function addNumberOfViolation(int) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function renderPackage(PackageNode) in line 141
      18 lines of code
      1 parameters
      2 conditional paths
      uses function getParent() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getPackageName() defined in net::sourceforge::pmd::lang::dfa::report::PackageNode
      uses function addNumberOfViolation(int) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getNumberOfViolations() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses variable packageBuf defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses variable length defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function renderViolation(ViolationNode) in line 131
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getParent() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function addNumberOfViolation(int) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getRuleViolation() defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
      uses variable classBuf defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses function getMethodName() defined in net::sourceforge::pmd::RuleViolation
      uses function displayRuleViolation(RuleViolation) defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
   function renderViolationRow(StringBuilder,String,String) in line 75
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(AbstractReportNode) in line 85
      protection public
      45 lines of code
      1 parameters
      7 conditional paths
      uses function getParent() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses variable packageBuf defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable length defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses function renderViolation(ViolationNode) defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses function renderClass(ClassNode) defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses function renderPackage(PackageNode) defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses function write(String,StringBuilder) defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses variable e defined in sample-matlab.m
   function write(String,StringBuilder) in line 44
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable baseDir defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
      uses variable FILE_SEPARATOR defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
   function ReportHTMLPrintVisitor(String) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable baseDir defined in net::sourceforge::pmd::lang::dfa::report::ReportHTMLPrintVisitor
   variable baseDir in line 33
   variable classBuf in line 31
   variable FILE_SEPARATOR in line 35
   variable length in line 32
   variable packageBuf in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/report/ReportTree.java
module net::sourceforge::pmd::lang::dfa::report::ReportTree
   inherits from Iterable
   function addRuleViolation(RuleViolation) in line 109
      protection public
      48 lines of code
      1 parameters
      8 conditional paths
      uses function getPackageName() defined in net::sourceforge::pmd::RuleViolation
      uses variable level defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses variable rootNode defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function isStringInLevel(String) defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function addFirst(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getClassName() defined in net::sourceforge::pmd::RuleViolation
      uses function equalsNodeInLevel(AbstractReportNode,AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function add(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function equalsNodeInLevel(AbstractReportNode,AbstractReportNode) in line 161
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable level defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function getChildCount() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getChildAt(int) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function equalsNode(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function getRootNode() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rootNode defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
   function isStringInLevel(String) in line 176
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable level defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function getChildCount() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getChildAt(int) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function iterator() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function size() in line 92
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function iterator() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
   variable level in line 13
   variable rootNode in line 12
module net::sourceforge::pmd::lang::dfa::report::ReportTree::TreeIterator
   inherits from java::util::Iterator
   function getNext() in line 53
      32 lines of code
      0 parameters
      7 conditional paths
      uses variable iterNode defined in net::sourceforge::pmd::lang::dfa::report::ReportTree::TreeIterator
      uses function isLeaf() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getNextSibling() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getParent() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses function getFirstChild() defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function hasNext() in line 24
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable hasNextFlag defined in net::sourceforge::pmd::lang::dfa::report::ReportTree::TreeIterator
      uses function getNext() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree::TreeIterator
   function next() in line 29
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable hasNextFlag defined in net::sourceforge::pmd::lang::dfa::report::ReportTree::TreeIterator
      uses function getNext() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree::TreeIterator
      uses variable iterNode defined in net::sourceforge::pmd::lang::dfa::report::ReportTree::TreeIterator
   function remove() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable hasNextFlag in line 18
   variable iterNode in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/report/ReportVisitor.java
module net::sourceforge::pmd::lang::dfa::report::ReportVisitor
   abstract class
   function visit(AbstractReportNode) in line 8
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function childrenAccept(ReportVisitor) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/report/ViolationNode.java
module net::sourceforge::pmd::lang::dfa::report::ViolationNode
   inherits from net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
   function equalsNode(AbstractReportNode) in line 20
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function ViolationNode(RuleViolation) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getRuleViolation() defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getVariableName() defined in net::sourceforge::pmd::RuleViolation
   function getRuleViolation() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleViolation defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
   function ViolationNode(RuleViolation) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable ruleViolation in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/SequenceChecker.java
module net::sourceforge::pmd::lang::dfa::SequenceChecker
   function getFirstIndex() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstIndex defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
   function getLastIndex() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastIndex defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
   function run() in line 170
      protection public
      83 lines of code
      0 parameters
      13 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses variable root defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses variable bracesList defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses function getType() defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses variable aktStatus defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function step(int) defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
      uses function isLastStep() defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
      uses function hasMoreSteps() defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
      uses variable firstIndex defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses variable lastIndex defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
   function SequenceChecker(List< StackObject >) in line 161
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable root defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
      uses variable bracesList defined in net::sourceforge::pmd::lang::dfa::SequenceChecker
   variable aktStatus in line 152
   variable bracesList in line 153
   variable firstIndex in line 155
   variable lastIndex in line 156
   variable LOGGER in line 22
   variable root in line 77
module net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
   function addStep(Status) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nextSteps defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
      uses variable type defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
   function hasMoreSteps() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isLastStep() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastStep defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
   function step(int) in line 55
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
      uses variable nextSteps defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
   function toString() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
      uses variable lastStep defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
   function Status(int) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
   function Status(int,boolean) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
      uses variable lastStep defined in net::sourceforge::pmd::lang::dfa::SequenceChecker::Status
   variable lastStep in line 34
   variable nextSteps in line 31
   variable ROOT in line 29
      protection public
   variable type in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/SequenceException.java
module net::sourceforge::pmd::lang::dfa::SequenceException
   inherits from Exception
   function SequenceException() in line 11
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SequenceException(String) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/StackObject.java
module net::sourceforge::pmd::lang::dfa::StackObject
   function getDataFlowNode() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::dfa::StackObject
   function getType() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::StackObject
   function toString() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses variable node defined in net::sourceforge::pmd::lang::dfa::StackObject
   function StackObject(int,DataFlowNode) in line 13
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::dfa::StackObject
      uses variable node defined in net::sourceforge::pmd::lang::dfa::StackObject
   variable node in line 11
   variable type in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/StartOrEndDataFlowNode.java
module net::sourceforge::pmd::lang::dfa::StartOrEndDataFlowNode
   inherits from net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function toString() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isStartNode defined in net::sourceforge::pmd::lang::dfa::StartOrEndDataFlowNode
   function StartOrEndDataFlowNode(List< DataFlowNode >,int,boolean) in line 13
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable dataFlow defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable line defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable isStartNode defined in net::sourceforge::pmd::lang::dfa::StartOrEndDataFlowNode
   variable isStartNode in line 11
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/Structure.java
module net::sourceforge::pmd::lang::dfa::Structure
   function createEndNode(int) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createNewNode(Node) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dataFlowHandler defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function createDataFlowNode(List< DataFlowNode >,Node) defined in net::sourceforge::pmd::lang::DataFlowHandler
      uses variable dataFlow defined in net::sourceforge::pmd::lang::dfa::Structure
   function createStartNode(int) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function dump() in line 103
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable continueBreakReturnStack defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable braceStack defined in net::sourceforge::pmd::lang::dfa::Structure
   function getBraceStack() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable braceStack defined in net::sourceforge::pmd::lang::dfa::Structure
   function getContinueBreakReturnStack() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable continueBreakReturnStack defined in net::sourceforge::pmd::lang::dfa::Structure
   function getFirst() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLast() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function pushOnStack(int,DataFlowNode) in line 67
      protection public
      23 lines of code
      2 parameters
      4 conditional paths
      uses variable RETURN_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable BREAK_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable CONTINUE_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable THROW_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable continueBreakReturnStack defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable braceStack defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function setType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function Structure(DataFlowHandler) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dataFlowHandler defined in net::sourceforge::pmd::lang::dfa::Structure
   variable braceStack in line 26
   variable continueBreakReturnStack in line 27
   variable dataFlow in line 25
   variable dataFlowHandler in line 24
   variable LOGGER in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/VariableAccess.java
module net::sourceforge::pmd::lang::dfa::VariableAccess
   function accessTypeMatches(int) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable accessType defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function getAccessType() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessType defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function getVariableName() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable variableName defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function isDefinition() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function isReference() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable REFERENCING defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function isUndefinition() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable UNDEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function toString() in line 52
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses function isDefinition() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses variable variableName defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function isReference() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function isUndefinition() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function VariableAccess(int,String) in line 19
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable accessType defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses variable variableName defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   variable accessType in line 16
   variable DEFINITION in line 12
      protection public
   variable REFERENCING in line 13
      protection public
   variable UNDEFINITION in line 14
      protection public
   variable variableName in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/dfa/VariableAccessException.java
module net::sourceforge::pmd::lang::dfa::VariableAccessException
   inherits from Exception
   function VariableAccessException() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function VariableAccessException(String) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/LanguageFilenameFilter.java
module net::sourceforge::pmd::lang::LanguageFilenameFilter
   inherits from java::io::FilenameFilter
   function accept(File,String) in line 43
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageFilenameFilter
   function toString() in line 61
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageFilenameFilter
   function LanguageFilenameFilter(Language) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function LanguageFilenameFilter(Set< Language >) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageFilenameFilter
   variable languages in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/LanguageRegistry.java
module net::sourceforge::pmd::lang::LanguageRegistry
   function commaSeparatedTerseNamesForLanguage(List< Language >) in line 107
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageRegistry
   function commaSeparatedTerseNamesForLanguageVersion(List< LanguageVersion >) in line 118
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function findAllVersions() in line 82
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function getLanguages() defined in net::sourceforge::pmd::lang::LanguageRegistry
   function findByExtension(String) in line 72
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageRegistry
      uses function getInstance() defined in net::sourceforge::pmd::lang::LanguageRegistry
   function findLanguageByTerseName(String) in line 46
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getInstance() defined in net::sourceforge::pmd::lang::LanguageRegistry
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageRegistry
   function findLanguageVersionByTerseName(String) in line 55
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function findLanguageByTerseName(String) defined in net::sourceforge::pmd::lang::LanguageRegistry
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function findWithRuleSupport() in line 97
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageRegistry
      uses function getInstance() defined in net::sourceforge::pmd::lang::LanguageRegistry
   function getDefaultLanguage() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguage(String) defined in net::sourceforge::pmd::lang::LanguageRegistry
   function getInstance() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in net::sourceforge::pmd::lang::LanguageRegistry
   function getLanguage(String) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getInstance() defined in net::sourceforge::pmd::lang::LanguageRegistry
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageRegistry
   function getLanguages() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getInstance() defined in net::sourceforge::pmd::lang::LanguageRegistry
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageRegistry
   function LanguageRegistry() in line 22
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable languages defined in net::sourceforge::pmd::lang::LanguageRegistry
   variable instance in line 18
   variable languages in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/LanguageVersion.java
module net::sourceforge::pmd::lang::LanguageVersion
   inherits from Comparable
   function compareTo(LanguageVersion) in line 58
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function getName() defined in net::sourceforge::pmd::lang::LanguageVersion
   function getLanguage() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::lang::LanguageVersion
   function getLanguageVersionHandler() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable languageVersionHandler defined in net::sourceforge::pmd::lang::LanguageVersion
   function getName() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable language defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getName() defined in net::sourceforge::pmd::lang::Language
   function getShortName() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable language defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getShortName() defined in net::sourceforge::pmd::lang::Language
   function getTerseName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable language defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getTerseName() defined in net::sourceforge::pmd::lang::Language
   function getVersion() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in net::sourceforge::pmd::lang::LanguageVersion
   function toString() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable version defined in net::sourceforge::pmd::lang::LanguageVersion
   function LanguageVersion(Language,String,LanguageVersionHandler) in line 12
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable version defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable languageVersionHandler defined in net::sourceforge::pmd::lang::LanguageVersion
   variable language in line 8
   variable languageVersionHandler in line 10
   variable version in line 9
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/LanguageVersionDiscoverer.java
module net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function getDefaultLanguageVersion(Language) in line 38
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable languageToLanguageVersion defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function getDefaultLanguageVersionForFile(File) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDefaultLanguageVersionForFile(String) in line 65
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getLanguagesForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function getDefaultLanguageVersion(Language) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function getExtension(String) in line 96
      8 lines of code
      1 parameters
      2 conditional paths
   function getLanguagesForFile(File) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getLanguagesForFile(String) in line 90
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getExtension(String) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function setDefaultLanguageVersion(LanguageVersion) in line 24
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable languageToLanguageVersion defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function getLanguage() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   variable languageToLanguageVersion in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/LanguageVersionHandler.java
module net::sourceforge::pmd::lang::LanguageVersionHandler
   function getDataFlowFacade() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDataFlowHandler() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDefaultParserOptions() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDFAGraphRule() in line 84
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDumpFacade(Writer,String,boolean) in line 82
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getParser(ParserOptions) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSymbolFacade() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSymbolFacade(ClassLoader) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getTypeResolutionFacade(ClassLoader) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getXPathHandler() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/Parser.java
module net::sourceforge::pmd::lang::Parser
   function canParse() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParserOptions() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSuppressMap() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTokenManager(String,Reader) in line 29
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function parse(String,Reader) in line 45
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/ParserOptions.java
module net::sourceforge::pmd::lang::ParserOptions
   function equals(Object) in line 24
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::lang::ParserOptions
      uses variable suppressMarker defined in net::sourceforge::pmd::lang::ParserOptions
   function getSuppressMarker() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressMarker defined in net::sourceforge::pmd::lang::ParserOptions
   function hashCode() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressMarker defined in net::sourceforge::pmd::lang::ParserOptions
   function setSuppressMarker(String) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable suppressMarker defined in net::sourceforge::pmd::lang::ParserOptions
   variable suppressMarker in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/AbstractDelegateRule.java
module net::sourceforge::pmd::lang::rule::AbstractDelegateRule
   inherits from net::sourceforge::pmd::Rule
   abstract class
   function addExample(String) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function addExample(String) defined in net::sourceforge::pmd::Rule
   function addRuleChainVisit(Class<?extends Node >) in line 202
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function addRuleChainVisit(Class<?extends Node >) defined in net::sourceforge::pmd::Rule
   function addRuleChainVisit(String) in line 206
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function addRuleChainVisit(Class<?extends Node >) defined in net::sourceforge::pmd::Rule
   function apply(List<?extends Node >,RuleContext) in line 214
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::Rule
   function definePropertyDescriptor(PropertyDescriptor<?>) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::PropertySource
   function dysfunctionReason() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function dysfunctionReason() defined in net::sourceforge::pmd::PropertySource
   function end(RuleContext) in line 218
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function end(RuleContext) defined in net::sourceforge::pmd::Rule
   function getDescription() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getDescription() defined in net::sourceforge::pmd::Rule
   function getExamples() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getExamples() defined in net::sourceforge::pmd::Rule
   function getExternalInfoUrl() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getExternalInfoUrl() defined in net::sourceforge::pmd::Rule
   function getLanguage() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getLanguage() defined in net::sourceforge::pmd::Rule
   function getMaximumLanguageVersion() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getMaximumLanguageVersion() defined in net::sourceforge::pmd::Rule
   function getMessage() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getMessage() defined in net::sourceforge::pmd::Rule
   function getMinimumLanguageVersion() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getMinimumLanguageVersion() defined in net::sourceforge::pmd::Rule
   function getName() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getName() defined in net::sourceforge::pmd::Rule
   function getParserOptions() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getParserOptions() defined in net::sourceforge::pmd::Rule
   function getPriority() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getPriority() defined in net::sourceforge::pmd::Rule
   function getPropertiesByPropertyDescriptor() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::PropertySource
   function getPropertyDescriptor(String) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
   function getPropertyDescriptors() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getPropertyDescriptors() defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
   function getRule() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
   function getRuleChainVisits() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getRuleChainVisits() defined in net::sourceforge::pmd::Rule
   function getRuleClass() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
   function getRuleSetName() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getRuleSetName() defined in net::sourceforge::pmd::Rule
   function getSince() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getSince() defined in net::sourceforge::pmd::Rule
   function hasDescriptor(PropertyDescriptor<?>) in line 225
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function hasDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::PropertySource
   function ignoredProperties() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function ignoredProperties() defined in net::sourceforge::pmd::PropertySource
   function isDeprecated() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function isDeprecated() defined in net::sourceforge::pmd::Rule
   function setDeprecated(boolean) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setDeprecated(boolean) defined in net::sourceforge::pmd::Rule
   function setDescription(String) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setDescription(String) defined in net::sourceforge::pmd::Rule
   function setExternalInfoUrl(String) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setExternalInfoUrl(String) defined in net::sourceforge::pmd::Rule
   function setLanguage(Language) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setLanguage(Language) defined in net::sourceforge::pmd::Rule
   function setMaximumLanguageVersion(LanguageVersion) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setMaximumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::Rule
   function setMessage(String) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setMessage(String) defined in net::sourceforge::pmd::Rule
   function setMinimumLanguageVersion(LanguageVersion) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setMinimumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::Rule
   function setName(String) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setName(String) defined in net::sourceforge::pmd::Rule
   function setPriority(RulePriority) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::Rule
   function setRule(Rule) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
   function setRuleClass(String) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setRuleClass(String) defined in net::sourceforge::pmd::Rule
   function setRuleSetName(String) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setRuleSetName(String) defined in net::sourceforge::pmd::Rule
   function setSince(String) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setSince(String) defined in net::sourceforge::pmd::Rule
   function setUsesDFA() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setUsesDFA() defined in net::sourceforge::pmd::Rule
   function setUsesTypeResolution() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setUsesTypeResolution() defined in net::sourceforge::pmd::Rule
   function start(RuleContext) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function start(RuleContext) defined in net::sourceforge::pmd::Rule
   function usesDFA() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function usesDFA() defined in net::sourceforge::pmd::Rule
   function usesRuleChain() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function usesRuleChain() defined in net::sourceforge::pmd::Rule
   function usesTypeResolution() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function usesTypeResolution() defined in net::sourceforge::pmd::Rule
   variable rule in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/AbstractRule.java
module net::sourceforge::pmd::lang::rule::AbstractRule
   inherits from net::sourceforge::pmd::AbstractPropertySource
   inherits from net::sourceforge::pmd::Rule
   abstract class
   function addExample(String) in line 237
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable examples defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function addRuleChainVisit(Class<?extends Node >) in line 323
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function addRuleChainVisit(String) in line 333
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable ruleChainVisits defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function addViolation(Object,Node) in line 356
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getRuleViolationFactory() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::RuleViolationFactory
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function addViolation(Object,Node,String) in line 365
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getRuleViolationFactory() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::RuleViolationFactory
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function addViolation(Object,Node,Object[]) in line 374
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getRuleViolationFactory() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::RuleViolationFactory
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function addViolationWithMessage(Object,Node,String) in line 383
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getRuleViolationFactory() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::RuleViolationFactory
      uses variable message defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function addViolationWithMessage(Object,Node,String,int,int) in line 392
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getRuleViolationFactory() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::RuleViolationFactory
      uses variable message defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function addViolationWithMessage(Object,Node,String,Object[]) in line 402
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getRuleViolationFactory() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::RuleViolationFactory
      uses variable message defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function copyExamples() in line 70
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable examples defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function copyRuleChainVisits() in line 76
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleChainVisits defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function deepCopyValuesTo(AbstractRule) in line 49
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable minimumLanguageVersion defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable maximumLanguageVersion defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable deprecated defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable since defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable ruleClass defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable ruleSetName defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable message defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable description defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable examples defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function copyExamples() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable externalInfoUrl defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable priority defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable propertyDescriptors defined in net::sourceforge::pmd::AbstractPropertySource
      uses function copyPropertyDescriptors() defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable propertyValuesByDescriptor defined in net::sourceforge::pmd::AbstractPropertySource
      uses function copyPropertyValues() defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable usesDFA defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable usesTypeResolution defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable ruleChainVisits defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function copyRuleChainVisits() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function end(RuleContext) in line 349
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 418
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::AbstractPropertySource
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::PropertySource
   function getDescription() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getExamples() in line 229
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable examples defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getExternalInfoUrl() in line 244
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable externalInfoUrl defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getLanguage() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getMaximumLanguageVersion() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maximumLanguageVersion defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getMessage() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getMinimumLanguageVersion() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minimumLanguageVersion defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getName() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getParserOptions() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getRuleChainVisits() in line 316
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleChainVisits defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getRuleClass() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleClass defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getRuleSetName() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleSetName defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getSince() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable since defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function hashCode() in line 442
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::AbstractPropertySource
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getPriority() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isDeprecated() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable deprecated defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setDeprecated(boolean) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable deprecated defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setDescription(String) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setExternalInfoUrl(String) in line 251
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable externalInfoUrl defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setLanguage(Language) in line 92
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable language defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setMaximumLanguageVersion(LanguageVersion) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maximumLanguageVersion defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setMessage(String) in line 208
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable message defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setMinimumLanguageVersion(LanguageVersion) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable minimumLanguageVersion defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setName(String) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setPriority(RulePriority) in line 265
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable priority defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setRuleClass(String) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ruleClass defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setRuleSetName(String) in line 194
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ruleSetName defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setSince(String) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable since defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setUsesDFA() in line 281
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function usesDFA() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setUsesTypeResolution() in line 295
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function usesTypeResolution() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function start(RuleContext) in line 342
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function usesDFA() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function usesRuleChain() in line 309
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getRuleChainVisits() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function usesTypeResolution() in line 302
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractRule() in line 44
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable VIOLATION_SUPPRESS_REGEX_DESCRIPTOR defined in net::sourceforge::pmd::Rule
      uses variable VIOLATION_SUPPRESS_XPATH_DESCRIPTOR defined in net::sourceforge::pmd::Rule
   variable deprecated in line 30
   variable description in line 36
   variable examples in line 37
   variable externalInfoUrl in line 38
   variable language in line 27
   variable maximumLanguageVersion in line 29
   variable message in line 35
   variable minimumLanguageVersion in line 28
   variable name in line 31
   variable priority in line 39
   variable ruleChainVisits in line 42
   variable ruleClass in line 33
   variable ruleSetName in line 34
   variable since in line 32
   variable usesDFA in line 40
   variable usesTypeResolution in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/AbstractRuleChainVisitor.java
module net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   inherits from net::sourceforge::pmd::lang::rule::RuleChainVisitor
   abstract class
   function add(RuleSet,Rule) in line 41
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable ruleSetRules defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function clear() in line 163
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable nodeNameToNodes defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNode(Node) in line 109
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable nodeNameToNodes defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNodes(List< Node >,RuleContext) in line 104
      1 lines of code
      2 parameters
      1 conditional paths
   function initialize() in line 124
      34 lines of code
      0 parameters
      7 conditional paths
      uses variable nodeNameToNodes defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses variable ruleSetRules defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses function usesRuleChain() defined in net::sourceforge::pmd::Rule
      uses function getRuleChainVisits() defined in net::sourceforge::pmd::Rule
   function visit(Rule,Node,RuleContext) in line 99
      1 lines of code
      3 parameters
      1 conditional paths
   function visitAll(List< Node >,RuleContext) in line 52
      protection public
      43 lines of code
      2 parameters
      8 conditional paths
      uses function initialize() defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses function clear() defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses function indexNodes(List< Node >,RuleContext) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses variable RuleChainVisit defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable ruleSetRules defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses function applies(File) defined in net::sourceforge::pmd::RuleSet
      uses function getSourceCodeFile() defined in net::sourceforge::pmd::RuleContext
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses variable j defined in sample-matlab.m
      uses variable nodeNameToNodes defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses function visit(Rule,Node,RuleContext) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses variable RuleChainRule defined in net::sourceforge::pmd::benchmark::Benchmark
   variable nodeNameToNodes in line 36
   variable ruleSetRules in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/AbstractRuleViolationFactory.java
module net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   inherits from net::sourceforge::pmd::lang::rule::RuleViolationFactory
   abstract class
   function addViolation(RuleContext,Rule,Node,String,Object[]) in line 30
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses function cleanup(String,Object[]) defined in net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function createRuleViolation(Rule,RuleContext,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function addViolation(RuleContext,Rule,Node,String,int,int,Object[]) in line 37
      protection public
      8 lines of code
      7 parameters
      1 conditional paths
      uses function cleanup(String,Object[]) defined in net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function createRuleViolation(Rule,RuleContext,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function cleanup(String,Object[]) in line 18
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable NO_ARGS defined in net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function createRuleViolation(Rule,RuleContext,Node,String) in line 46
      1 lines of code
      4 parameters
      1 conditional paths
   function createRuleViolation(Rule,RuleContext,Node,String,int,int) in line 48
      1 lines of code
      6 parameters
      1 conditional paths
   variable NO_ARGS in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/ImmutableLanguage.java
module net::sourceforge::pmd::lang::rule::ImmutableLanguage
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/ImportWrapper.java
module net::sourceforge::pmd::lang::rule::ImportWrapper
   function equals(Object) in line 47
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function ImportWrapper(String,String) defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses function getName() defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses function getFullName() defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function getFullName() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function getName() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function getNode() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function hashCode() in line 76
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function isStaticOnDemand() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isStaticDemand defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function matches(ImportWrapper) in line 64
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable isStaticDemand defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable allDemands defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses function getName() defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses function getFullName() defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function toString() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable isStaticDemand defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function ImportWrapper(String,String) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function ImportWrapper(String,String,Node) in line 24
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable node defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   function ImportWrapper(String,String,Node,Class<?>,boolean) in line 28
      protection public
      11 lines of code
      5 parameters
      4 conditional paths
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable node defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable isStaticDemand defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable allDemands defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable f defined in sample-matlab.m
   function ImportWrapper(String,String,Node,boolean) in line 40
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable fullname defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable name defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable node defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable isStaticDemand defined in net::sourceforge::pmd::lang::rule::ImportWrapper
   variable allDemands in line 18
   variable fullname in line 16
   variable isStaticDemand in line 17
   variable name in line 15
   variable node in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/MockRule.java
module net::sourceforge::pmd::lang::rule::MockRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   function apply(List<?extends Node >,RuleContext) in line 41
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function MockRule() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
   function MockRule(String,String,String,String,RulePriority) in line 28
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable description defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable message defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable ruleSetName defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable priority defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function MockRule(String,String,String,String) in line 33
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setDescription(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable description defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable message defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setRuleSetName(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable ruleSetName defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/ParametricRuleViolation.java
module net::sourceforge::pmd::lang::rule::ParametricRuleViolation
   inherits from net::sourceforge::pmd::RuleViolation
   function expandVariables(String) in line 72
      19 lines of code
      1 parameters
      1 conditional paths
   function getBeginColumn() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBeginLine() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDescription() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEndColumn() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEndLine() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFilename() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethodName() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPackageName() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRule() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVariableName() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVariableValue(String) in line 98
      14 lines of code
      1 parameters
      1 conditional paths
   function isSuppressed() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVariable(String) in line 92
      5 lines of code
      1 parameters
      1 conditional paths
   function setLines(int,int) in line 161
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function setSuppression(Rule,T) in line 55
      16 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParametricRuleViolation(Rule,RuleContext,T,String) in line 34
      protection public
      20 lines of code
      4 parameters
      1 conditional paths
   variable beginColumn in line 23
   variable beginLine in line 22
   variable className in line 29
   variable description in line 18
   variable endColumn in line 26
   variable endLine in line 25
   variable filename in line 20
   variable methodName in line 30
   variable packageName in line 28
   variable rule in line 17
   variable suppressed in line 19
   variable variableName in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/AbstractEnumeratedProperty.java
module net::sourceforge::pmd::lang::rule::properties::AbstractEnumeratedProperty
   inherits from net::sourceforge::pmd::lang::rule::properties::AbstractProperty
   abstract class
   function choiceFrom(String) in line 86
      7 lines of code
      1 parameters
      1 conditional paths
   function choices() in line 97
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function defaultAsString() in line 65
      4 lines of code
      0 parameters
      1 conditional paths
   function nonLegalValueMsgFor(Object) in line 76
      3 lines of code
      1 parameters
      1 conditional paths
   function selectionsIn(String[],int[],boolean) in line 50
      11 lines of code
      3 parameters
      1 conditional paths
   function AbstractEnumeratedProperty(String,String,String[],E[],int[],float,boolean) in line 33
      protection public
      8 lines of code
      7 parameters
      1 conditional paths
   variable choices in line 20
   variable choicesByLabel in line 16
   variable labelsByChoice in line 17
   variable orderedLabels in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/AbstractMultiNumericProperty.java
module net::sourceforge::pmd::lang::rule::properties::AbstractMultiNumericProperty
   inherits from net::sourceforge::pmd::lang::rule::properties::AbstractNumericProperty
   abstract class
   function defaultAsString() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
   function isMultiValue() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractMultiNumericProperty(String,String,Number,Number,T,float) in line 23
      4 lines of code
      6 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/AbstractMultiPackagedProperty.java
module net::sourceforge::pmd::lang::rule::properties::AbstractMultiPackagedProperty
   inherits from net::sourceforge::pmd::lang::rule::properties::AbstractPackagedProperty
   abstract class
   function defaultAsString() in line 41
      3 lines of code
      0 parameters
      1 conditional paths
   function isMultiValue() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractMultiPackagedProperty(String,String,T,String[],float) in line 24
      4 lines of code
      5 parameters
      1 conditional paths
   variable DELIMITER in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/AbstractNumericProperty.java
module net::sourceforge::pmd::lang::rule::properties::AbstractNumericProperty
   inherits from net::sourceforge::pmd::lang::rule::properties::AbstractScalarProperty
   inherits from net::sourceforge::pmd::NumericPropertyDescriptor
   abstract class
   function addAttributesTo(Map< String, String >) in line 111
      6 lines of code
      1 parameters
      1 conditional paths
   function defaultAsString() in line 65
      3 lines of code
      0 parameters
      1 conditional paths
   function lowerLimit() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function rangeString() in line 82
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function upperLimit() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueErrorFor(Object) in line 95
      10 lines of code
      1 parameters
      1 conditional paths
   function AbstractNumericProperty(String,String,Number,Number,T,float) in line 40
      11 lines of code
      6 parameters
      1 conditional paths
   variable lowerLimit in line 24
   variable NUMBER_FIELD_TYPES_BY_KEY in line 27
      protection public
   variable upperLimit in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/AbstractPackagedProperty.java
module net::sourceforge::pmd::lang::rule::properties::AbstractPackagedProperty
   inherits from net::sourceforge::pmd::lang::rule::properties::AbstractProperty
   abstract class
   function addAttributesTo(Map< String, String >) in line 58
      5 lines of code
      1 parameters
      1 conditional paths
   function checkValidPackages(Object,String[]) in line 92
      35 lines of code
      2 parameters
      1 conditional paths
   function delimitedPackageNames() in line 67
      16 lines of code
      0 parameters
      1 conditional paths
   function itemTypeName() in line 133
      1 lines of code
      0 parameters
      1 conditional paths
   function legalPackageNames() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function packageNameOf(Object) in line 169
      1 lines of code
      1 parameters
      1 conditional paths
   function packageNamesIn(Map< String, String >) in line 32
      4 lines of code
      1 parameters
      1 conditional paths
   function valueErrorFor(Object) in line 140
      23 lines of code
      1 parameters
      1 conditional paths
   function AbstractPackagedProperty(String,String,T,String[],float) in line 46
      8 lines of code
      5 parameters
      1 conditional paths
   variable legalPackageNames in line 25
   variable PACKAGE_NAME_DELIMITER in line 27
   variable PACKAGED_FIELD_TYPES_BY_KEY in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/AbstractProperty.java
module net::sourceforge::pmd::lang::rule::properties::AbstractProperty
   inherits from net::sourceforge::pmd::PropertyDescriptor
   abstract class
   function addAttributesTo(Map< String, String >) in line 414
      8 lines of code
      1 parameters
      1 conditional paths
   function areEqual(Object,Object) in line 387
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function asDelimitedString(T) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function asDelimitedString(T,char) in line 191
      protection public
      25 lines of code
      2 parameters
      1 conditional paths
   function asString(Object) in line 172
      3 lines of code
      1 parameters
      1 conditional paths
   function attributeValuesById() in line 404
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function checkNotEmpty(String,String) in line 71
      8 lines of code
      2 parameters
      1 conditional paths
   function checkPositive(float,String) in line 86
      6 lines of code
      2 parameters
      1 conditional paths
   function choices() in line 326
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function compareTo(PropertyDescriptor<?>) in line 220
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function defaultAsString() in line 373
      7 lines of code
      0 parameters
      1 conditional paths
   function defaultHasNullValue() in line 126
      17 lines of code
      0 parameters
      1 conditional paths
   function defaultValue() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function description() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function equals(Object) in line 341
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function errorFor(Object) in line 228
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 358
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isArray(Object) in line 279
      3 lines of code
      1 parameters
      1 conditional paths
   function isMultiValue() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRequired() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function multiValueDelimiter() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function name() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function preferredRowCount() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function propertyErrorFor(Rule) in line 315
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function typeErrorFor(Object) in line 287
      24 lines of code
      1 parameters
      1 conditional paths
   function uiOrder() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueErrorFor(Object) in line 241
      10 lines of code
      1 parameters
      1 conditional paths
   function valuesErrorFor(Object) in line 256
      18 lines of code
      1 parameters
      1 conditional paths
   function AbstractProperty(String,String,T,float) in line 43
      3 lines of code
      4 parameters
      1 conditional paths
   function AbstractProperty(String,String,T,float,char) in line 56
      8 lines of code
      5 parameters
      1 conditional paths
   variable DEFAULT_DELIMITER in line 35
      protection public
   variable DEFAULT_NUMERIC_DELIMITER in line 39
      protection public
   variable defaultValue in line 27
   variable description in line 26
   variable isRequired in line 28
   variable multiValueDelimiter in line 41
   variable name in line 25
   variable uiOrder in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/AbstractScalarProperty.java
module net::sourceforge::pmd::lang::rule::properties::AbstractScalarProperty
   inherits from net::sourceforge::pmd::lang::rule::properties::AbstractProperty
   abstract class
   function arrayFor(int) in line 39
      7 lines of code
      1 parameters
      1 conditional paths
   function createFrom(String) in line 33
      1 lines of code
      1 parameters
      1 conditional paths
   function valueFrom(String) in line 54
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function AbstractScalarProperty(String,String,T,float) in line 25
      3 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/BooleanMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::BooleanMultiProperty
   inherits from AbstractScalarProperty< Boolean[]>
   function arrayFor(int) in line 70
      3 lines of code
      1 parameters
      1 conditional paths
   function createFrom(String) in line 62
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultAsString() in line 77
      3 lines of code
      0 parameters
      1 conditional paths
   function isMultiValue() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function type() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BooleanMultiProperty(String,String,Boolean[],float) in line 35
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   variable FACTORY in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/BooleanProperty.java
module net::sourceforge::pmd::lang::rule::properties::BooleanProperty
   inherits from AbstractScalarProperty< Boolean >
   function createFrom(String) in line 73
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultAsString() in line 63
      3 lines of code
      0 parameters
      1 conditional paths
   function type() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BooleanProperty(String,String,Boolean,float) in line 35
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function BooleanProperty(String,String,String,float) in line 48
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   variable FACTORY in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/CharacterMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::CharacterMultiProperty
   inherits from AbstractProperty< Character[]>
   function isMultiValue() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function type() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 66
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function multiValueDelimiter() defined in AbstractProperty< Character[]>
   function CharacterMultiProperty(String,String,Character[],float,char) in line 39
      protection public
      12 lines of code
      5 parameters
      4 conditional paths
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/CharacterProperty.java
module net::sourceforge::pmd::lang::rule::properties::CharacterProperty
   inherits from AbstractProperty< Character >
   function charFrom(String) in line 56
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function defaultAsString() in line 87
      3 lines of code
      0 parameters
      1 conditional paths
      uses function defaultValue() defined in AbstractProperty< Character >
   function type() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function charFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::CharacterProperty
   function CharacterProperty(String,String,Character,float) in line 35
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function CharacterProperty(String,String,String,float) in line 48
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function charFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::CharacterProperty
   variable FACTORY in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/DoubleMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::DoubleMultiProperty
   inherits from AbstractMultiNumericProperty< Double[]>
   function arrayFor(int) in line 66
      3 lines of code
      1 parameters
      1 conditional paths
   function createFrom(String) in line 58
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DoubleMultiProperty(String,String,Double,Double,Double[],float) in line 41
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/DoubleProperty.java
module net::sourceforge::pmd::lang::rule::properties::DoubleProperty
   inherits from AbstractNumericProperty< Double >
   function createFrom(String) in line 83
      3 lines of code
      1 parameters
      1 conditional paths
      uses function doubleFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::DoubleProperty
   function doubleFrom(String) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DoubleProperty(String,String,Double,Double,Double,float) in line 40
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   function DoubleProperty(String,String,String,String,String,float) in line 56
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
      uses function doubleFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::DoubleProperty
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/EnumeratedMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::EnumeratedMultiProperty
   inherits from AbstractEnumeratedProperty< E, Object[]>
   function asDelimitedString(Object[]) in line 107
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function errorFor(Object) in line 73
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function isMultiValue() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function type() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 90
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function EnumeratedMultiProperty(String,String,String[],E[],int[],float) in line 45
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   variable FACTORY in line 24
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/EnumeratedProperty.java
module net::sourceforge::pmd::lang::rule::properties::EnumeratedProperty
   inherits from AbstractEnumeratedProperty< E, Object >
   function asDelimitedString(Object) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function errorFor(Object) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function EnumeratedProperty(String,String,String[],E[],int,float) in line 44
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   variable FACTORY in line 23
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/factories/BasicPropertyDescriptorFactory.java
module net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
   inherits from net::sourceforge::pmd::PropertyDescriptorFactory
   function booleanValuesIn(String,char) in line 122
      8 lines of code
      2 parameters
      2 conditional paths
   function charsIn(String,char) in line 131
      12 lines of code
      2 parameters
      3 conditional paths
   function choicesIn(Map< String, String >) in line 204
      3 lines of code
      1 parameters
      1 conditional paths
   function createWith(Map< String, String >) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function defaultValueIn(Map< String, String >) in line 87
      3 lines of code
      1 parameters
      1 conditional paths
   function delimiterIn(Map< String, String >) in line 216
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::AbstractProperty
   function delimiterIn(Map< String, String >,char) in line 220
      10 lines of code
      2 parameters
      3 conditional paths
   function descriptionIn(Map< String, String >) in line 83
      3 lines of code
      1 parameters
      1 conditional paths
   function doublesIn(String,char) in line 186
      13 lines of code
      2 parameters
      3 conditional paths
   function expectedFields() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldTypesByKey defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
   function expectedFieldTypesWith(String[],Boolean[]) in line 248
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable CORE_FIELD_TYPES_BY_KEY defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
   function floatsIn(String,char) in line 172
      13 lines of code
      2 parameters
      3 conditional paths
   function indexIn(Map< String, String >) in line 208
      3 lines of code
      1 parameters
      1 conditional paths
   function indiciesIn(Map< String, String >) in line 212
      3 lines of code
      1 parameters
      1 conditional paths
   function integersIn(String,char) in line 144
      13 lines of code
      2 parameters
      3 conditional paths
   function labelsIn(Map< String, String >) in line 200
      3 lines of code
      1 parameters
      1 conditional paths
   function legalPackageNamesIn(Map< String, String >,char) in line 240
      7 lines of code
      2 parameters
      2 conditional paths
   function longsIn(String,char) in line 158
      13 lines of code
      2 parameters
      3 conditional paths
   function maxValueIn(Map< String, String >) in line 102
      3 lines of code
      1 parameters
      1 conditional paths
   function minMaxFrom(Map< String, String >) in line 231
      8 lines of code
      1 parameters
      2 conditional paths
      uses function minValueIn(Map< String, String >) defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
      uses function maxValueIn(Map< String, String >) defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
   function minValueIn(Map< String, String >) in line 98
      3 lines of code
      1 parameters
      1 conditional paths
   function nameIn(Map< String, String >) in line 79
      3 lines of code
      1 parameters
      1 conditional paths
   function numericDefaultValueIn(Map< String, String >) in line 91
      6 lines of code
      1 parameters
      1 conditional paths
      uses function defaultValueIn(Map< String, String >) defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
   function valueType() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BasicPropertyDescriptorFactory(Class<?>) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function valueType() defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
      uses variable fieldTypesByKey defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
      uses variable CORE_FIELD_TYPES_BY_KEY defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
   function BasicPropertyDescriptorFactory(Class<?>,Map< String, Boolean >) in line 56
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function valueType() defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
      uses variable CORE_FIELD_TYPES_BY_KEY defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
      uses variable fieldTypesByKey defined in net::sourceforge::pmd::lang::rule::properties::factories::BasicPropertyDescriptorFactory
   variable CORE_FIELD_TYPES_BY_KEY in line 37
   variable fieldTypesByKey in line 35
   variable valueType in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/factories/PropertyDescriptorUtil.java
module net::sourceforge::pmd::lang::rule::properties::factories::PropertyDescriptorUtil
   function factoryFor(String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DESCRIPTOR_FACTORIES_BY_TYPE defined in net::sourceforge::pmd::lang::rule::properties::factories::PropertyDescriptorUtil
   function typeIdFor(Class<?>) in line 85
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable DESCRIPTOR_FACTORIES_BY_TYPE defined in net::sourceforge::pmd::lang::rule::properties::factories::PropertyDescriptorUtil
   variable COMPARATOR_BY_ORDER in line 41
      protection public
   variable DESCRIPTOR_FACTORIES_BY_TYPE in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/FileProperty.java
module net::sourceforge::pmd::lang::rule::properties::FileProperty
   inherits from AbstractProperty< File >
   function defaultAsString() in line 40
      4 lines of code
      0 parameters
      1 conditional paths
   function type() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function FileProperty(String,String,File,float) in line 26
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/FloatMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::FloatMultiProperty
   inherits from AbstractMultiNumericProperty< Float[]>
   function arrayFor(int) in line 72
      3 lines of code
      1 parameters
      1 conditional paths
   function createFrom(String) in line 62
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FloatMultiProperty(String,String,Float,Float,Float[],float) in line 43
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/FloatProperty.java
module net::sourceforge::pmd::lang::rule::properties::FloatProperty
   inherits from AbstractNumericProperty< Float >
   function createFrom(String) in line 84
      3 lines of code
      1 parameters
      1 conditional paths
      uses function floatFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::FloatProperty
   function floatFrom(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FloatProperty(String,String,Float,Float,Float,float) in line 41
      protection public
      3 lines of code
      6 parameters
      1 conditional paths
   function FloatProperty(String,String,String,String,String,float) in line 57
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
      uses function floatFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::FloatProperty
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/IntegerMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::IntegerMultiProperty
   inherits from AbstractMultiNumericProperty< Integer[]>
   function arrayFor(int) in line 67
      3 lines of code
      1 parameters
      1 conditional paths
   function createFrom(String) in line 59
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IntegerMultiProperty(String,String,Integer,Integer,Integer[],float) in line 42
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/IntegerProperty.java
module net::sourceforge::pmd::lang::rule::properties::IntegerProperty
   inherits from AbstractNumericProperty< Integer >
   function createFrom(String) in line 84
      3 lines of code
      1 parameters
      1 conditional paths
      uses function intFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::IntegerProperty
   function intFrom(String) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IntegerProperty(String,String,Integer,Integer,Integer,float) in line 41
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   function IntegerProperty(String,String,String,String,String,float) in line 59
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
      uses function intFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::IntegerProperty
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/LongMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::LongMultiProperty
   inherits from AbstractMultiNumericProperty< Long[]>
   function arrayFor(int) in line 69
      3 lines of code
      1 parameters
      1 conditional paths
   function createFrom(String) in line 59
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LongMultiProperty(String,String,Long,Long,Long[],float) in line 42
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/LongProperty.java
module net::sourceforge::pmd::lang::rule::properties::LongProperty
   inherits from AbstractNumericProperty< Long >
   function createFrom(String) in line 81
      3 lines of code
      1 parameters
      1 conditional paths
      uses function longFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::LongProperty
   function longFrom(String) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LongProperty(String,String,Long,Long,Long,float) in line 40
      protection public
      3 lines of code
      6 parameters
      1 conditional paths
   function LongProperty(String,String,String,String,String,float) in line 56
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
      uses function longFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::LongProperty
   variable FACTORY in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/MethodMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::MethodMultiProperty
   inherits from AbstractMultiPackagedProperty< Method[]>
   function asString(Object) in line 104
      3 lines of code
      1 parameters
      1 conditional paths
   function itemTypeName() in line 123
      3 lines of code
      0 parameters
      1 conditional paths
   function methodsFrom(String) in line 84
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable DELIMITER defined in AbstractMultiPackagedProperty< Method[]>
      uses variable CLASS_METHOD_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable METHOD_ARG_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function packageNameOf(Object) in line 113
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in sample-matlab.m
   function type() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function methodsFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::MethodMultiProperty
   function MethodMultiProperty(String,String,Method[],String[],float) in line 45
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
   function MethodMultiProperty(String,String,String,String[],float) in line 60
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function methodsFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::MethodMultiProperty
   function MethodMultiProperty(String,String,String,Map< String, String >,float) in line 75
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function methodsFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::MethodMultiProperty
   variable FACTORY in line 25
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/MethodProperty.java
module net::sourceforge::pmd::lang::rule::properties::MethodProperty
   inherits from AbstractPackagedProperty< Method >
   function asString(Object) in line 279
      3 lines of code
      1 parameters
      1 conditional paths
      uses function asStringFor(Method) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function asStringFor(Method) in line 60
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function asStringOn(Method,StringBuilder) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable method defined in sample-matlab.m
   function asStringOn(Method,StringBuilder) in line 93
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses variable method defined in sample-matlab.m
      uses function shortestNameFor(Class<?>) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable CLASS_METHOD_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable METHOD_GROUP_DELIMITERS defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses function serializedTypeIdOn(Class<?>,StringBuilder) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable METHOD_ARG_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function defaultAsString() in line 69
      3 lines of code
      0 parameters
      1 conditional paths
      uses function asStringFor(Method) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function itemTypeName() in line 298
      3 lines of code
      0 parameters
      1 conditional paths
   function methodFrom(String,char,char) in line 166
      protection public
      51 lines of code
      3 parameters
      9 conditional paths
      uses function type() defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable METHOD_GROUP_DELIMITERS defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable EMPTY_CLASS_ARRAY defined in net::sourceforge::pmd::util::ClassUtil
      uses function typeFor(String) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function methodFrom(String) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function methodFrom(String,char,char) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable CLASS_METHOD_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable METHOD_ARG_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function packageNameOf(Object) in line 288
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in sample-matlab.m
   function serializedTypeIdOn(Class<?>,StringBuilder) in line 77
      9 lines of code
      2 parameters
      2 conditional paths
      uses function type() defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses function shortestNameFor(Class<?>) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable ARRAY_FLAG defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function shortestNameFor(Class<?>) in line 48
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable TYPE_SHORTCUTS defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function type() in line 306
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function typeFor(String) in line 121
      23 lines of code
      1 parameters
      4 conditional paths
      uses function type() defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable ARRAY_FLAG defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function valueFrom(String) in line 316
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function methodFrom(String,char,char) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function MethodProperty(String,String,Method,String[],float) in line 236
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function legalPackageNames() defined in AbstractPackagedProperty< Method >
   function MethodProperty(String,String,String,String[],float) in line 251
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function methodFrom(String,char,char) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses function legalPackageNames() defined in AbstractPackagedProperty< Method >
   function MethodProperty(String,String,String,Map< String, String >,float) in line 266
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function methodFrom(String,char,char) defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses function packageNamesIn(Map< String, String >) defined in AbstractPackagedProperty< Method >
   variable ARRAY_FLAG in line 31
   variable CLASS_METHOD_DELIMITER in line 27
      protection public
   variable FACTORY in line 34
      protection public
   variable METHOD_ARG_DELIMITER in line 28
      protection public
   variable METHOD_GROUP_DELIMITERS in line 29
      protection public
   variable TYPE_SHORTCUTS in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/PropertyDescriptorFactory.java
module net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorFactory
   function checkDelimiter(String,String,String) in line 110
      6 lines of code
      3 parameters
      2 conditional paths
   function checkMinMax(String,String,String,String) in line 117
      10 lines of code
      4 parameters
      3 conditional paths
   function createPropertyDescriptor(String,String,String,String,String,String,String) in line 35
      protection public
      5 lines of code
      7 parameters
      1 conditional paths
      uses function createRawPropertyDescriptor(String,String,String,String,String,String,String) defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorFactory
   function createRawPropertyDescriptor(String,String,String,String,String,String,String) in line 41
      68 lines of code
      7 parameters
      19 conditional paths
      uses variable f defined in sample-matlab.m
      uses variable property defined in sample-matlab.m
      uses function checkDelimiter(String,String,String) defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorFactory
      uses function checkMinMax(String,String,String,String) defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorFactory
      uses variable d defined in sample-matlab.m
   function getPropertyDescriptorType(PropertyDescriptor<?>) in line 15
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function type() defined in net::sourceforge::pmd::PropertyDescriptor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/PropertyDescriptorFactory.java
module net::sourceforge::pmd::PropertyDescriptorFactory
   function createWith(Map< String, String >) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function expectedFields() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function valueType() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/PropertyDescriptorWrapper.java
module net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
   inherits from net::sourceforge::pmd::PropertyDescriptor
   function asDelimitedString(T) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function asDelimitedString(T) defined in net::sourceforge::pmd::PropertyDescriptor
   function attributeValuesById() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function attributeValuesById() defined in net::sourceforge::pmd::PropertyDescriptor
   function choices() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function choices() defined in net::sourceforge::pmd::PropertyDescriptor
   function compareTo(PropertyDescriptor<?>) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
   function defaultValue() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function defaultValue() defined in net::sourceforge::pmd::PropertyDescriptor
   function description() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function description() defined in net::sourceforge::pmd::PropertyDescriptor
   function equals(Object) in line 99
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getPropertyDescriptor() defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
   function errorFor(Object) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function errorFor(Object) defined in net::sourceforge::pmd::PropertyDescriptor
   function getPropertyDescriptor() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
   function hashCode() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPropertyDescriptor() defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
   function isMultiValue() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function isMultiValue() defined in net::sourceforge::pmd::PropertyDescriptor
   function isRequired() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function isRequired() defined in net::sourceforge::pmd::PropertyDescriptor
   function multiValueDelimiter() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function multiValueDelimiter() defined in net::sourceforge::pmd::PropertyDescriptor
   function name() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function name() defined in net::sourceforge::pmd::PropertyDescriptor
   function preferredRowCount() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function preferredRowCount() defined in net::sourceforge::pmd::PropertyDescriptor
   function propertyErrorFor(Rule) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function propertyErrorFor(Rule) defined in net::sourceforge::pmd::PropertyDescriptor
   function toString() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
   function type() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function type() defined in net::sourceforge::pmd::PropertyDescriptor
   function uiOrder() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function uiOrder() defined in net::sourceforge::pmd::PropertyDescriptor
   function valueFrom(String) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
      uses function valueFrom(String) defined in net::sourceforge::pmd::PropertyDescriptor
   function PropertyDescriptorWrapper(PropertyDescriptor< T >) in line 23
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyDescriptor defined in net::sourceforge::pmd::lang::rule::properties::PropertyDescriptorWrapper
   variable propertyDescriptor in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/StringMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::StringMultiProperty
   inherits from AbstractProperty< String[]>
   function checkDefaults(String[],char) in line 52
      12 lines of code
      2 parameters
      4 conditional paths
      uses function defaultValue() defined in AbstractProperty< String[]>
   function containsDelimiter(String) in line 86
      3 lines of code
      1 parameters
      1 conditional paths
      uses function multiValueDelimiter() defined in AbstractProperty< String[]>
   function illegalCharMsg() in line 93
      3 lines of code
      0 parameters
      1 conditional paths
      uses function multiValueDelimiter() defined in AbstractProperty< String[]>
   function isMultiValue() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function type() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueErrorFor(Object) in line 102
      15 lines of code
      1 parameters
      3 conditional paths
      uses function containsDelimiter(String) defined in net::sourceforge::pmd::lang::rule::properties::StringMultiProperty
      uses function illegalCharMsg() defined in net::sourceforge::pmd::lang::rule::properties::StringMultiProperty
   function valueFrom(String) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function multiValueDelimiter() defined in AbstractProperty< String[]>
   function StringMultiProperty(String,String,String[],float,char) in line 40
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses function checkDefaults(String[],char) defined in net::sourceforge::pmd::lang::rule::properties::StringMultiProperty
   variable FACTORY in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/StringProperty.java
module net::sourceforge::pmd::lang::rule::properties::StringProperty
   inherits from AbstractProperty< String >
   function defaultAsString() in line 41
      3 lines of code
      0 parameters
      1 conditional paths
      uses function defaultValue() defined in AbstractProperty< String >
   function type() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function StringProperty(String,String,String,float) in line 34
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   variable FACTORY in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/TypeMultiProperty.java
module net::sourceforge::pmd::lang::rule::properties::TypeMultiProperty
   inherits from AbstractMultiPackagedProperty< Class[]>
   function asString(Object) in line 123
      3 lines of code
      1 parameters
      1 conditional paths
   function itemTypeName() in line 114
      3 lines of code
      0 parameters
      1 conditional paths
   function packageNameOf(Object) in line 98
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function typesFrom(String) in line 83
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable DELIMITER defined in AbstractMultiPackagedProperty< Class[]>
   function valueFrom(String) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function typesFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::TypeMultiProperty
   function TypeMultiProperty(String,String,Class<?>[],String[],float) in line 42
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
   function TypeMultiProperty(String,String,String,String[],float) in line 58
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses function typesFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::TypeMultiProperty
   function TypeMultiProperty(String,String,String,Map< String, String >,float) in line 74
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function typesFrom(String) defined in net::sourceforge::pmd::lang::rule::properties::TypeMultiProperty
   variable FACTORY in line 22
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/properties/TypeProperty.java
module net::sourceforge::pmd::lang::rule::properties::TypeProperty
   inherits from AbstractPackagedProperty< Class >
   function asString(Object) in line 115
      3 lines of code
      1 parameters
      4 conditional paths
   function defaultAsString() in line 79
      3 lines of code
      0 parameters
      1 conditional paths
      uses function asString(Object) defined in net::sourceforge::pmd::lang::rule::properties::TypeProperty
   function itemTypeName() in line 106
      3 lines of code
      0 parameters
      1 conditional paths
   function packageNameOf(Object) in line 90
      3 lines of code
      1 parameters
      1 conditional paths
   function type() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueFrom(String) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function TypeProperty(String,String,Class<?>,String[],float) in line 43
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function legalPackageNames() defined in AbstractPackagedProperty< Class >
   function TypeProperty(String,String,String,String[],float) in line 57
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function legalPackageNames() defined in AbstractPackagedProperty< Class >
   function TypeProperty(String,String,String,Map< String, String >,float) in line 71
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function packageNamesIn(Map< String, String >) defined in AbstractPackagedProperty< Class >
   variable FACTORY in line 23
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleChainVisitor.java
module net::sourceforge::pmd::lang::rule::RuleChainVisitor
   function add(RuleSet,Rule) in line 24
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitAll(List< Node >,RuleContext) in line 33
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleReference.java
module net::sourceforge::pmd::lang::rule::RuleReference
   inherits from net::sourceforge::pmd::lang::rule::AbstractDelegateRule
   function addExample(String) in line 170
      protection public
      22 lines of code
      1 parameters
      3 conditional paths
      uses function contains(Collection< String >,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable examples defined in net::sourceforge::pmd::lang::rule::RuleReference
   function contains(Collection< String >,String) in line 280
      8 lines of code
      2 parameters
      3 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
   function definePropertyDescriptor(PropertyDescriptor<?>) in line 227
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getName() in line 130
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOriginalName() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOverriddenDescription() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenExamples() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable examples defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenExternalInfoUrl() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable externalInfoUrl defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenLanguage() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable language defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenMaximumLanguageVersion() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maximumLanguageVersion defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenMessage() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenMinimumLanguageVersion() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minimumLanguageVersion defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenName() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenPriority() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenPropertiesByPropertyDescriptor() in line 238
      protection public
      3 lines of code
      0 parameters
      3 conditional paths
      uses variable propertyValues defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getOverriddenPropertyDescriptors() in line 221
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable EMPTY_DESCRIPTORS defined in net::sourceforge::pmd::lang::rule::RuleReference
   function getRuleSetReference() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleSetReference defined in net::sourceforge::pmd::lang::rule::RuleReference
   function hasDescriptor(PropertyDescriptor<?>) in line 289
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyDescriptors defined in net::sourceforge::pmd::lang::rule::RuleReference
   function hasOverriddenProperty(PropertyDescriptor<?>) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable propertyValues defined in net::sourceforge::pmd::lang::rule::RuleReference
   function isDeprecated() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable deprecated defined in net::sourceforge::pmd::lang::rule::RuleReference
   function isOverriddenDeprecated() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable deprecated defined in net::sourceforge::pmd::lang::rule::RuleReference
   function isSame(String,String) in line 262
      3 lines of code
      2 parameters
      1 conditional paths
   function isSame(Object,Object) in line 267
      6 lines of code
      2 parameters
      2 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
   function isSame(Object[],Object[]) in line 276
      3 lines of code
      2 parameters
      1 conditional paths
   function setDeprecated(boolean) in line 106
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable deprecated defined in net::sourceforge::pmd::lang::rule::RuleReference
   function setDescription(String) in line 156
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable description defined in net::sourceforge::pmd::lang::rule::RuleReference
   function setExternalInfoUrl(String) in line 198
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable externalInfoUrl defined in net::sourceforge::pmd::lang::rule::RuleReference
   function setLanguage(Language) in line 59
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable language defined in net::sourceforge::pmd::lang::rule::RuleReference
   function setMaximumLanguageVersion(LanguageVersion) in line 87
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable maximumLanguageVersion defined in net::sourceforge::pmd::lang::rule::RuleReference
   function setMessage(String) in line 142
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable message defined in net::sourceforge::pmd::lang::rule::RuleReference
   function setMinimumLanguageVersion(LanguageVersion) in line 73
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable minimumLanguageVersion defined in net::sourceforge::pmd::lang::rule::RuleReference
   function setName(String) in line 121
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable name defined in net::sourceforge::pmd::lang::rule::RuleReference
   function setPriority(RulePriority) in line 212
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable priority defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function setRuleSetReference(RuleSetReference) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ruleSetReference defined in net::sourceforge::pmd::lang::rule::RuleReference
   function useDefaultValueFor(PropertyDescriptor<?>) in line 318
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function getRule() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function useDefaultValueFor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::PropertySource
      uses variable propertyValues defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable propertyDescriptors defined in net::sourceforge::pmd::lang::rule::RuleReference
   function usesDefaultValues() in line 298
      protection public
      19 lines of code
      0 parameters
      5 conditional paths
      uses function getOverriddenPropertyDescriptors() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function isSame(String,String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getRule() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function usesDefaultValues() defined in net::sourceforge::pmd::PropertySource
   function RuleReference() in line 50
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function RuleReference(Rule,RuleSetReference) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function setRule(Rule) defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses variable ruleSetReference defined in net::sourceforge::pmd::lang::rule::RuleReference
   variable deprecated in line 33
   variable description in line 38
   variable EMPTY_DESCRIPTORS in line 44
   variable examples in line 39
   variable externalInfoUrl in line 40
   variable language in line 30
   variable maximumLanguageVersion in line 32
   variable message in line 37
   variable minimumLanguageVersion in line 31
   variable name in line 34
   variable priority in line 41
   variable propertyDescriptors in line 35
   variable propertyValues in line 36
   variable ruleSetReference in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/RuleViolationFactory.java
module net::sourceforge::pmd::lang::rule::RuleViolationFactory
   function addViolation(RuleContext,Rule,Node,String,Object[]) in line 24
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function addViolation(RuleContext,Rule,Node,String,int,int,Object[]) in line 26
      protection public
      1 lines of code
      7 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/stat/StatisticalRule.java
module net::sourceforge::pmd::lang::rule::stat::StatisticalRule
   inherits from net::sourceforge::pmd::Rule
   function addDataPoint(DataPoint) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getViolationParameters(DataPoint) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable MINIMUM_DESCRIPTOR in line 22
      protection public
   variable SIGMA_DESCRIPTOR in line 21
      protection public
   variable TOP_SCORE_DESCRIPTOR in line 23
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/stat/StatisticalRuleHelper.java
module net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function addDataPoint(DataPoint) in line 44
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable count defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses variable total defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
      uses variable dataPoints defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function apply(RuleContext) in line 50
      protection public
      40 lines of code
      1 parameters
      7 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function getStdDev() defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function getMean() defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function applyMinimumValue(SortedSet< DataPoint >,double) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses variable dataPoints defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function applyTopScore(SortedSet< DataPoint >,int) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function makeViolations(RuleContext,Set< DataPoint >) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function addMetric(Metric) defined in net::sourceforge::pmd::Report
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable count defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses variable total defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function applyMinimumValue(SortedSet< DataPoint >,double) in line 112
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable DELTA defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function applyTopScore(SortedSet< DataPoint >,int) in line 124
      8 lines of code
      2 parameters
      2 conditional paths
   function getMean() in line 91
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable total defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses variable count defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function getStdDev() in line 95
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable dataPoints defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function getMean() defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function makeViolations(RuleContext,Set< DataPoint >) in line 133
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function StatisticalRuleHelper(AbstractRule) in line 37
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
   variable count in line 34
   variable dataPoints in line 32
   variable DELTA in line 28
      protection public
   variable rule in line 30
   variable total in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/xpath/AbstractXPathRuleQuery.java
module net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   inherits from net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
   abstract class
   function evaluate(Node,RuleContext) in line 84
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getRuleChainVisits() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleChainVisits defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
      uses function evaluate(Node,RuleContext) defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
      uses variable data defined in sample-matlab.m
   function isSupportedVersion(String) in line 65
      1 lines of code
      1 parameters
      1 conditional paths
   function setProperties(Map< PropertyDescriptor<?>, Object >) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable properties defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   function setVersion(String) in line 49
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isSupportedVersion(String) defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
      uses variable version defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   function setXPath(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable xpath defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   variable properties in line 32
   variable ruleChainVisits in line 37
   variable version in line 27
   variable xpath in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/xpath/JaxenXPathRuleQuery.java
module net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
   inherits from net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   function createXPath(String,Navigator) in line 213
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable xpath defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
      uses variable properties defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
      uses variable e defined in sample-matlab.m
   function evaluate(Node,RuleContext) in line 66
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function initializeXPathExpression(Navigator) defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses variable data defined in sample-matlab.m
      uses variable nodeNameToXPaths defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses variable AST_ROOT defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses variable xpath defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   function getRuleChainVisits() in line 89
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function initializeXPathExpression(Navigator) defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
   function indexXPath(XPath,String) in line 204
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable nodeNameToXPaths defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses variable xpath defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   function initializeXPathExpression(Navigator) in line 100
      103 lines of code
      1 parameters
      17 conditional paths
      uses variable initializationStatus defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses variable FULL defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery::InitializationStatus
      uses variable PARTIAL defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery::InitializationStatus
      uses variable LOG defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses variable nodeNameToXPaths defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses function createXPath(String,Navigator) defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses variable xpath defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
      uses function indexXPath(XPath,String) defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
      uses variable AST_ROOT defined in net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery
   function isSupportedVersion(String) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable XPATH_1_0 defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable version defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   variable AST_ROOT in line 51
   variable initializationStatus in line 48
   variable LOG in line 41
   variable nodeNameToXPaths in line 49
module net::sourceforge::pmd::lang::rule::xpath::JaxenXPathRuleQuery::InitializationStatus
   variable FULL in line 45
      protection public
   variable NONE in line 44
      protection public
   variable PARTIAL in line 44
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/xpath/SaxonXPathRuleQuery.java
module net::sourceforge::pmd::lang::rule::xpath::SaxonXPathRuleQuery
   inherits from net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
   function evaluate(Node,RuleContext) in line 57
      protection public
      62 lines of code
      2 parameters
      12 conditional paths
      uses function initializeXPathExpression() defined in net::sourceforge::pmd::lang::rule::xpath::SaxonXPathRuleQuery
      uses function getDocumentNode(Node) defined in net::sourceforge::pmd::lang::rule::xpath::SaxonXPathRuleQuery
      uses variable nodeToElementNode defined in net::sourceforge::pmd::lang::ast::xpath::saxon::DocumentNode
      uses variable xpathExpression defined in net::sourceforge::pmd::lang::rule::xpath::SaxonXPathRuleQuery
      uses variable xpathVariables defined in net::sourceforge::pmd::lang::rule::xpath::SaxonXPathRuleQuery
      uses variable e defined in sample-matlab.m
   function getDocumentNode(Node) in line 122
      23 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable CACHE defined in net::sourceforge::pmd::lang::rule::xpath::SaxonXPathRuleQuery
   function initializeXPathExpression() in line 146
      36 lines of code
      0 parameters
      6 conditional paths
      uses variable xpathExpression defined in net::sourceforge::pmd::lang::rule::xpath::SaxonXPathRuleQuery
      uses variable XPATH_1_0_COMPATIBILITY defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable version defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
      uses variable xpathVariables defined in net::sourceforge::pmd::lang::rule::xpath::SaxonXPathRuleQuery
      uses variable e defined in sample-matlab.m
   function isSupportedVersion(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable XPATH_1_0_COMPATIBILITY defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable version defined in net::sourceforge::pmd::lang::rule::xpath::AbstractXPathRuleQuery
      uses variable XPATH_2_0 defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
   variable CACHE in line 120
   variable xpathExpression in line 41
   variable xpathVariables in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/xpath/XPathRuleQuery.java
module net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
   function evaluate(Node,RuleContext) in line 72
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getRuleChainVisits() in line 64
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setProperties(Map< PropertyDescriptor<?>, Object >) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setVersion(String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setXPath(String) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable XPATH_1_0 in line 28
      protection public
   variable XPATH_1_0_COMPATIBILITY in line 33
      protection public
   variable XPATH_2_0 in line 38
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/XPathRule.java
module net::sourceforge::pmd::lang::rule::XPathRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   function apply(List<?extends Node >,RuleContext) in line 59
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function evaluate(Node,RuleContext) defined in net::sourceforge::pmd::lang::rule::XPathRule
   function dysfunctionReason() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasXPathExpression() defined in net::sourceforge::pmd::lang::rule::XPathRule
   function evaluate(Node,RuleContext) in line 72
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function init() defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable xpathRuleQuery defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses function evaluate(Node,RuleContext) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable data defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getRuleChainVisits() in line 84
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function init() defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable xpathRuleQuery defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses function getRuleChainVisits() defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
   function hasXPathExpression() in line 111
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable XPATH_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
   function init() in line 93
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable xpathRuleQuery defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable XPATH_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable VERSION_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses function setXPath(String) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function setVersion(String) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function setProperties(Map< PropertyDescriptor<?>, Object >) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::AbstractPropertySource
   function setVersion(String) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable VERSION_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
   function setXPath(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable XPATH_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
   function XPathRule() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable XPATH_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable VERSION_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
   function XPathRule(String) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function setXPath(String) defined in net::sourceforge::pmd::lang::rule::XPathRule
   variable VERSION_DESCRIPTOR in line 30
      protection public
   variable XPATH_DESCRIPTOR in line 29
      protection public
   variable xpathRuleQuery in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/symboltable/AbstractNameDeclaration.java
module net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   inherits from net::sourceforge::pmd::lang::symboltable::NameDeclaration
   abstract class
   function getImage() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function getName() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getNode() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getScope() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getScope() defined in net::sourceforge::pmd::lang::symboltable::ScopedNode
   function AbstractNameDeclaration(ScopedNode) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   variable node in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/symboltable/AbstractScope.java
module net::sourceforge::pmd::lang::symboltable::AbstractScope
   inherits from net::sourceforge::pmd::lang::symboltable::Scope
   abstract class
   function addDeclaration(NameDeclaration) in line 62
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
      uses variable nameDeclarations defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function getParent() defined in net::sourceforge::pmd::lang::symboltable::Scope
   function addNameOccurrence(NameOccurrence) in line 87
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
   function contains(NameOccurrence) in line 52
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable d defined in sample-matlab.m
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
   function getDeclarations() in line 33
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable nameDeclarations defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function getParent() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function setParent(Scope) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   variable nameDeclarations in line 19
   variable parent in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/symboltable/NameDeclaration.java
module net::sourceforge::pmd::lang::symboltable::NameDeclaration
   function getImage() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNode() in line 17
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getScope() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/symboltable/NameOccurrence.java
module net::sourceforge::pmd::lang::symboltable::NameOccurrence
   function getImage() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLocation() in line 16
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/symboltable/Scope.java
module net::sourceforge::pmd::lang::symboltable::Scope
   function addDeclaration(NameDeclaration) in line 67
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addNameOccurrence(NameOccurrence) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function contains(NameOccurrence) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getDeclarations() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDeclarations(Class< T >) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getEnclosingScope(Class< T >) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getParent() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setParent(Scope) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/symboltable/ScopedNode.java
module net::sourceforge::pmd::lang::symboltable::ScopedNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   function getScope() in line 13
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/TokenManager.java
module net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 10
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setFileName(String) in line 11
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/VisitorStarter.java
module net::sourceforge::pmd::lang::VisitorStarter
   function start(Node) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable DUMMY in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/xpath/Initializer.java
module net::sourceforge::pmd::lang::xpath::Initializer
   function initialize() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize(IndependentContext) in line 30
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getXPathHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function initialize() defined in net::sourceforge::pmd::lang::XPathHandler
      uses function initializeGlobal() defined in net::sourceforge::pmd::lang::xpath::Initializer
      uses function initializeLanguages() defined in net::sourceforge::pmd::lang::xpath::Initializer
   function initializeGlobal() in line 47
      3 lines of code
      0 parameters
      1 conditional paths
   function initializeLanguages() in line 51
      10 lines of code
      0 parameters
      4 conditional paths
      uses function getXPathHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function initialize() defined in net::sourceforge::pmd::lang::XPathHandler
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/xpath/MatchesFunction.java
module net::sourceforge::pmd::lang::xpath::MatchesFunction
   inherits from org::jaxen::Function
   function call(Context,List) in line 26
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses function getStringValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function matches(String,String...) in line 43
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function registerSelfInSimpleContext() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/xpath/PMDFunctions.java
module net::sourceforge::pmd::lang::xpath::PMDFunctions
   function matches(String,String) in line 7
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function matches(String,String,String) in line 11
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function matches(String,String,String,String) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
   function matches(String,String,String,String,String) in line 19
      protection public
      3 lines of code
      5 parameters
      1 conditional paths
   function matches(String,String,String,String,String,String) in line 23
      protection public
      4 lines of code
      6 parameters
      1 conditional paths
   function matches(String,String,String,String,String,String,String) in line 28
      protection public
      4 lines of code
      7 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/lang/XPathHandler.java
module net::sourceforge::pmd::lang::XPathHandler
   function getNavigator() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function initialize(IndependentContext) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable DUMMY in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/NumericPropertyDescriptor.java
module net::sourceforge::pmd::NumericPropertyDescriptor
   inherits from PropertyDescriptor< T >
   function lowerLimit() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function upperLimit() in line 20
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/PMD.java
module net::sourceforge::pmd::PMD
   function doPMD(PMDConfiguration) in line 216
      protection public
      55 lines of code
      1 parameters
      4 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses function getRuleSets() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getApplicableLanguages(PMDConfiguration,RuleSets) defined in net::sourceforge::pmd::PMD
      uses variable files defined in sample-matlab.m
      uses function getApplicableFiles(PMDConfiguration,Set< Language >) defined in net::sourceforge::pmd::PMD
      uses function createRenderer() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setWriter(Writer) defined in net::sourceforge::pmd::renderers::Renderer
      uses function getReportFile() defined in net::sourceforge::pmd::PMDConfiguration
      uses function start() defined in net::sourceforge::pmd::renderers::Renderer
      uses variable Reporting defined in net::sourceforge::pmd::benchmark::Benchmark
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function addListener(ReportListener) defined in net::sourceforge::pmd::Report
      uses function processFiles(PMDConfiguration,RuleSetFactory,Collection< File >,RuleContext,ProgressMonitor) defined in net::sourceforge::pmd::PMD
      uses function end() defined in net::sourceforge::pmd::renderers::Renderer
      uses function flush() defined in net::sourceforge::pmd::renderers::Renderer
      uses variable e defined in sample-matlab.m
      uses variable LOG defined in net::sourceforge::pmd::PMD
   function getApplicableFiles(PMDConfiguration,Set< Language >) in line 381
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable files defined in sample-matlab.m
      uses function internalGetApplicableFiles(PMDConfiguration,Set< Language >) defined in net::sourceforge::pmd::PMD
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses variable CollectFiles defined in net::sourceforge::pmd::benchmark::Benchmark
   function getApplicableLanguages(PMDConfiguration,RuleSets) in line 411
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses function getLanguageVersionDiscoverer() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
      uses function applies(File) defined in net::sourceforge::pmd::RuleSet
      uses variable LOG defined in net::sourceforge::pmd::PMD
      uses function getShortName() defined in net::sourceforge::pmd::lang::Language
      uses function getShortName() defined in net::sourceforge::pmd::lang::LanguageVersion
   function getConfiguration() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::PMD
   function getSourceCodeProcessor() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rulesetsFileProcessor defined in net::sourceforge::pmd::PMD
   function getURIDataSources(String) in line 69
      protection public
      35 lines of code
      1 parameters
      5 conditional paths
      uses variable LOG defined in net::sourceforge::pmd::PMD
      uses function getSourceObjectList() defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function getSourceCode(SourceObject) defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable e defined in sample-matlab.m
   function internalGetApplicableFiles(PMDConfiguration,Set< Language >) in line 389
      21 lines of code
      2 parameters
      4 conditional paths
      uses variable files defined in sample-matlab.m
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses function getInputPaths() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getInputUri() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getURIDataSources(String) defined in net::sourceforge::pmd::PMD
      uses variable LOG defined in net::sourceforge::pmd::PMD
   function main(String[]) in line 436
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function newRuleContext(String,File) in line 279
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function setSourceCodeFile(File) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
   function parserFor(LanguageVersion,PMDConfiguration) in line 117
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::lang::ParserOptions
      uses function getSuppressMarker() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function processFiles(PMDConfiguration,RuleSetFactory,Collection< File >,RuleContext,ProgressMonitor) in line 318
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
   function processFiles(final PMDConfiguration,final RuleSetFactory,final List< DataSource >,final RuleContext,final List< Renderer >) in line 341
      protection public
      16 lines of code
      5 parameters
      2 conditional paths
      uses function sortFiles(final PMDConfiguration,final List< DataSource >) defined in net::sourceforge::pmd::PMD
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses variable files defined in sample-matlab.m
      uses variable MT_SUPPORTED defined in net::sourceforge::pmd::util::SystemUtils
      uses function getThreads() defined in net::sourceforge::pmd::PMDConfiguration
      uses function processFiles(final RuleSetFactory,final List< DataSource >,final RuleContext,final List< Renderer >) defined in net::sourceforge::pmd::processor::MultiThreadProcessor
      uses function processFiles(RuleSetFactory,List< DataSource >,RuleContext,List< Renderer >) defined in net::sourceforge::pmd::processor::MonoThreadProcessor
   function removeBrokenRules(RuleSets) in line 157
      14 lines of code
      1 parameters
      3 conditional paths
      uses function removeDysfunctionalRules(Collection< Rule >) defined in net::sourceforge::pmd::RuleSets
      uses variable LOG defined in net::sourceforge::pmd::PMD
   function run(String[]) in line 446
      protection public
      39 lines of code
      1 parameters
      4 conditional paths
      uses function status(int,int) defined in net::sourceforge::pmd::PMD::ProgressMonitor
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses function isDebug() defined in net::sourceforge::pmd::cli::PMDParameters
      uses variable LOG defined in net::sourceforge::pmd::PMD
      uses function doPMD(PMDConfiguration) defined in net::sourceforge::pmd::PMD
      uses variable VIOLATIONS_FOUND defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses variable e defined in sample-matlab.m
      uses variable ERROR_STATUS defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses function close() defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
      uses function isBenchmark() defined in net::sourceforge::pmd::cli::PMDParameters
      uses variable TotalPMD defined in net::sourceforge::pmd::benchmark::Benchmark
      uses function generate(Set< RuleDuration >,PrintStream) defined in net::sourceforge::pmd::benchmark::TextReport
   function setupReport(RuleSets,RuleContext,String) in line 137
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses function removeBrokenRules(RuleSets) defined in net::sourceforge::pmd::PMD
      uses function addConfigError(RuleConfigurationError) defined in net::sourceforge::pmd::Report
   function sortFiles(final PMDConfiguration,final List< DataSource >) in line 358
      16 lines of code
      2 parameters
      2 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses function isStressTest() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable files defined in sample-matlab.m
      uses function isReportShortNames() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getInputPaths() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getNiceFileName(boolean,String) defined in net::sourceforge::pmd::util::datasource::DataSource
   function PMD() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMD(PMDConfiguration) in line 186
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::PMD
   variable configuration in line 106
   variable EOL in line 57
      protection public
   variable LOG in line 54
   variable rulesetsFileProcessor in line 108
   variable SUPPRESS_MARKER in line 60
      protection public
   variable VERSION in line 489
      protection public
module net::sourceforge::pmd::PMD::ProgressMonitor
   function status(int,int) in line 304
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/PMDConfiguration.java
module net::sourceforge::pmd::PMDConfiguration
   inherits from net::sourceforge::pmd::AbstractConfiguration
   function createRenderer() in line 352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createRenderer(boolean) in line 364
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable reportFormat defined in net::sourceforge::pmd::PMDConfiguration
      uses variable reportProperties defined in net::sourceforge::pmd::PMDConfiguration
      uses function setShowSuppressedViolations(boolean) defined in net::sourceforge::pmd::renderers::Renderer
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::PMDConfiguration
      uses function setWriter(Writer) defined in net::sourceforge::pmd::renderers::Renderer
      uses variable reportFile defined in net::sourceforge::pmd::PMDConfiguration
   function getClassLoader() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classLoader defined in net::sourceforge::pmd::PMDConfiguration
   function getInputPaths() in line 294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable inputPaths defined in net::sourceforge::pmd::PMDConfiguration
   function getInputUri() in line 313
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable inputUri defined in net::sourceforge::pmd::PMDConfiguration
   function getLanguageVersionDiscoverer() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable languageVersionDiscoverer defined in net::sourceforge::pmd::PMDConfiguration
   function getLanguageVersionOfFile(String) in line 242
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable languageVersionDiscoverer defined in net::sourceforge::pmd::PMDConfiguration
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function getDefaultLanguageVersion(Language) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function getMinimumPriority() in line 275
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minimumPriority defined in net::sourceforge::pmd::PMDConfiguration
   function getReportFile() in line 399
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reportFile defined in net::sourceforge::pmd::PMDConfiguration
   function getReportFormat() in line 378
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reportFormat defined in net::sourceforge::pmd::PMDConfiguration
   function getReportProperties() in line 438
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reportProperties defined in net::sourceforge::pmd::PMDConfiguration
   function getRuleSets() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::PMDConfiguration
   function getSuppressMarker() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressMarker defined in net::sourceforge::pmd::PMDConfiguration
   function getThreads() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable threads defined in net::sourceforge::pmd::PMDConfiguration
   function isBenchmark() in line 482
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable benchmark defined in net::sourceforge::pmd::PMDConfiguration
   function isReportShortNames() in line 332
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reportShortNames defined in net::sourceforge::pmd::PMDConfiguration
   function isShowSuppressedViolations() in line 418
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::PMDConfiguration
   function isStressTest() in line 460
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stressTest defined in net::sourceforge::pmd::PMDConfiguration
   function prependClasspath(String) in line 186
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable classLoader defined in net::sourceforge::pmd::PMDConfiguration
      uses function getClassLoader() defined in net::sourceforge::pmd::PMDConfiguration
   function setBenchmark(boolean) in line 493
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable benchmark defined in net::sourceforge::pmd::PMDConfiguration
   function setClassLoader(ClassLoader) in line 163
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable classLoader defined in net::sourceforge::pmd::PMDConfiguration
   function setDefaultLanguageVersion(LanguageVersion) in line 211
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setDefaultLanguageVersions(List< LanguageVersion >) defined in net::sourceforge::pmd::PMDConfiguration
   function setDefaultLanguageVersions(List< LanguageVersion >) in line 222
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable languageVersionDiscoverer defined in net::sourceforge::pmd::PMDConfiguration
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function setInputPaths(String) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inputPaths defined in net::sourceforge::pmd::PMDConfiguration
   function setInputUri(String) in line 323
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inputUri defined in net::sourceforge::pmd::PMDConfiguration
   function setMinimumPriority(RulePriority) in line 285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable minimumPriority defined in net::sourceforge::pmd::PMDConfiguration
   function setReportFile(String) in line 408
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportFile defined in net::sourceforge::pmd::PMDConfiguration
   function setReportFormat(String) in line 390
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportFormat defined in net::sourceforge::pmd::PMDConfiguration
   function setReportProperties(Properties) in line 448
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportProperties defined in net::sourceforge::pmd::PMDConfiguration
   function setReportShortNames(boolean) in line 342
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportShortNames defined in net::sourceforge::pmd::PMDConfiguration
   function setRuleSets(String) in line 266
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::PMDConfiguration
   function setShowSuppressedViolations(boolean) in line 429
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::PMDConfiguration
   function setStressTest(boolean) in line 471
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stressTest defined in net::sourceforge::pmd::PMDConfiguration
   function setSuppressMarker(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable suppressMarker defined in net::sourceforge::pmd::PMDConfiguration
   function setThreads(int) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable threads defined in net::sourceforge::pmd::PMDConfiguration
   variable benchmark in line 106
   variable classLoader in line 89
   variable inputPaths in line 95
   variable inputUri in line 96
   variable languageVersionDiscoverer in line 90
   variable minimumPriority in line 94
   variable reportFile in line 100
   variable reportFormat in line 99
   variable reportProperties in line 102
   variable reportShortNames in line 101
   variable ruleSets in line 93
   variable showSuppressedViolations in line 103
   variable stressTest in line 105
   variable suppressMarker in line 87
   variable threads in line 88
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/PMDException.java
module net::sourceforge::pmd::PMDException
   inherits from Exception
   function getSeverity() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable severity defined in net::sourceforge::pmd::PMDException
   function setSeverity(int) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable severity defined in net::sourceforge::pmd::PMDException
   function PMDException(String) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PMDException(String,Exception) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 16
   variable severity in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/processor/AbstractPMDProcessor.java
module net::sourceforge::pmd::processor::AbstractPMDProcessor
   abstract class
   function createRuleSets(RuleSetFactory) in line 53
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
      uses function getRuleSets() defined in net::sourceforge::pmd::PMDConfiguration
   function filenameFrom(DataSource) in line 46
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getNiceFileName(boolean,String) defined in net::sourceforge::pmd::util::datasource::DataSource
      uses variable configuration defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
      uses function isReportShortNames() defined in net::sourceforge::pmd::PMDConfiguration
      uses function getInputPaths() defined in net::sourceforge::pmd::PMDConfiguration
   function renderReports(final List< Renderer >,final Report) in line 31
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable Reporting defined in net::sourceforge::pmd::benchmark::Benchmark
   function AbstractPMDProcessor(PMDConfiguration) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
   variable configuration in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/processor/MonoThreadProcessor.java
module net::sourceforge::pmd::processor::MonoThreadProcessor
   inherits from net::sourceforge::pmd::processor::AbstractPMDProcessor
   function addError(Report,String,Exception,String) in line 81
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable LOG defined in net::sourceforge::pmd::processor::MonoThreadProcessor
      uses function addError(ProcessingError) defined in net::sourceforge::pmd::Report
   function processFiles(RuleSetFactory,List< DataSource >,RuleContext,List< Renderer >) in line 36
      protection public
      44 lines of code
      4 parameters
      6 conditional paths
      uses function createRuleSets(RuleSetFactory) defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
      uses variable configuration defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
      uses variable files defined in sample-matlab.m
      uses function filenameFrom(DataSource) defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
      uses variable LOG defined in net::sourceforge::pmd::processor::MonoThreadProcessor
      uses function getSourceCodeFilename() defined in net::sourceforge::pmd::RuleContext
      uses function start(RuleContext) defined in net::sourceforge::pmd::RuleSets
      uses variable r defined in sample-matlab.m
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function addError(ProcessingError) defined in net::sourceforge::pmd::Report
      uses function addError(Report,String,Exception,String) defined in net::sourceforge::pmd::processor::MonoThreadProcessor
      uses function end(RuleContext) defined in net::sourceforge::pmd::RuleSets
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
   function MonoThreadProcessor(PMDConfiguration) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
   variable LOG in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/processor/MultiThreadProcessor.java
module net::sourceforge::pmd::processor::MultiThreadProcessor
   inherits from net::sourceforge::pmd::processor::AbstractPMDProcessor
   function processFiles(final RuleSetFactory,final List< DataSource >,final RuleContext,final List< Renderer >) in line 35
      protection public
      27 lines of code
      4 parameters
      2 conditional paths
      uses function createRuleSets(RuleSetFactory) defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
      uses function start(RuleContext) defined in net::sourceforge::pmd::RuleSets
      uses variable configuration defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
      uses function getThreads() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable files defined in sample-matlab.m
      uses function filenameFrom(DataSource) defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
      uses variable r defined in sample-matlab.m
      uses function processReports(final List< Renderer >,List< Future< Report >>) defined in net::sourceforge::pmd::processor::MultiThreadProcessor
      uses function end(RuleContext) defined in net::sourceforge::pmd::RuleSets
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
   function processReports(final List< Renderer >,List< Future< Report >>) in line 63
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable t defined in sample-matlab.m
   function MultiThreadProcessor(final PMDConfiguration) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::processor::AbstractPMDProcessor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/processor/PmdRunnable.java
module net::sourceforge::pmd::processor::PmdRunnable
   inherits from net::sourceforge::pmd::PMD
   inherits from java::util::concurrent::Callable
   function addError(Report,Exception,String) in line 45
      6 lines of code
      3 parameters
      1 conditional paths
      uses function addError(ProcessingError) defined in net::sourceforge::pmd::Report
      uses variable fileName defined in net::sourceforge::pmd::processor::PmdRunnable
   function addErrorAndShutdown(Report,Exception,String) in line 52
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable LOG defined in net::sourceforge::pmd::processor::PmdRunnable
      uses variable e defined in sample-matlab.m
      uses function addError(Report,Exception,String) defined in net::sourceforge::pmd::processor::PmdRunnable
      uses variable fileName defined in net::sourceforge::pmd::processor::PmdRunnable
      uses variable executor defined in net::sourceforge::pmd::processor::PmdRunnable
   function call() in line 59
      protection public
      33 lines of code
      0 parameters
      5 conditional paths
      uses function getRuleContext() defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
      uses function getRuleSets(String) defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses function getRuleSets() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable fileName defined in net::sourceforge::pmd::processor::PmdRunnable
      uses variable LOG defined in net::sourceforge::pmd::processor::PmdRunnable
      uses function getSourceCodeFilename() defined in net::sourceforge::pmd::RuleContext
      uses variable r defined in sample-matlab.m
      uses variable renderers defined in net::sourceforge::pmd::processor::PmdRunnable
      uses variable dataSource defined in net::sourceforge::pmd::processor::PmdRunnable
      uses function getInputStream() defined in net::sourceforge::pmd::util::datasource::DataSource
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function getSourceCodeProcessor() defined in net::sourceforge::pmd::PMD
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function addError(Report,Exception,String) defined in net::sourceforge::pmd::processor::PmdRunnable
      uses function addErrorAndShutdown(Report,Exception,String) defined in net::sourceforge::pmd::processor::PmdRunnable
   function createThread(int,Runnable,RuleSetFactory,RuleContext) in line 129
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function PmdThread(int,Runnable,RuleSetFactory,RuleContext) defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
      uses variable r defined in sample-matlab.m
      uses variable ruleSetFactory defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
   function PmdRunnable(ExecutorService,PMDConfiguration,DataSource,String,List< Renderer >) in line 34
      protection public
      9 lines of code
      5 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::PMD
      uses variable executor defined in net::sourceforge::pmd::processor::PmdRunnable
      uses variable dataSource defined in net::sourceforge::pmd::processor::PmdRunnable
      uses variable fileName defined in net::sourceforge::pmd::processor::PmdRunnable
      uses variable renderers defined in net::sourceforge::pmd::processor::PmdRunnable
   variable dataSource in line 30
   variable executor in line 29
   variable fileName in line 31
   variable LOG in line 27
   variable renderers in line 32
module net::sourceforge::pmd::processor::PmdRunnable::PmdThread
   inherits from Thread
   function getRuleContext() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable context defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
   function getRuleSets(String) in line 112
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable rulesets defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
      uses variable ruleSetFactory defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable e defined in sample-matlab.m
   function toString() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
   function PmdThread(int,Runnable,RuleSetFactory,RuleContext) in line 95
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable id defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
      uses variable context defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
      uses variable ruleSetFactory defined in net::sourceforge::pmd::processor::PmdRunnable::PmdThread
   variable context in line 104
   variable id in line 103
   variable ruleSetFactory in line 106
   variable rulesets in line 105
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/processor/PmdThreadFactory.java
module net::sourceforge::pmd::processor::PmdThreadFactory
   inherits from java::util::concurrent::ThreadFactory
   function newThread(Runnable) in line 25
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable counter defined in net::sourceforge::pmd::processor::PmdThreadFactory
      uses variable r defined in sample-matlab.m
      uses variable ruleSetFactory defined in net::sourceforge::pmd::processor::PmdThreadFactory
      uses variable ctx defined in net::sourceforge::pmd::processor::PmdThreadFactory
      uses variable threadList defined in net::sourceforge::pmd::processor::PmdThreadFactory
   function PmdThreadFactory(RuleSetFactory,RuleContext) in line 20
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable ruleSetFactory defined in net::sourceforge::pmd::processor::PmdThreadFactory
      uses variable ctx defined in net::sourceforge::pmd::processor::PmdThreadFactory
   variable counter in line 18
   variable ctx in line 17
   variable ruleSetFactory in line 16
   variable threadList in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/PropertyDescriptorFields.java
module net::sourceforge::pmd::PropertyDescriptorFields
   variable DEFAULT_VALUE in line 30
      protection public
   variable DELIMITER in line 32
      protection public
   variable DESC in line 26
      protection public
   variable DESCRIPTION in line 24
      protection public
   variable LEGAL_PACKAGES in line 38
      protection public
   variable MAX in line 36
      protection public
   variable MIN in line 34
      protection public
   variable NAME in line 22
      protection public
   variable TYPE in line 20
      protection public
   variable VALUE in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/PropertySource.java
module net::sourceforge::pmd::PropertySource
   function definePropertyDescriptor(PropertyDescriptor<?>) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function dysfunctionReason() in line 109
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPropertiesByPropertyDescriptor() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProperty(PropertyDescriptor< T >) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPropertyDescriptor(String) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getPropertyDescriptors() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasDescriptor(PropertyDescriptor<?>) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function ignoredProperties() in line 100
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setProperty(PropertyDescriptor< T >,T) in line 59
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function useDefaultValueFor(PropertyDescriptor<?>) in line 91
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function usesDefaultValues() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/AbstractAccumulatingRenderer.java
module net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractRenderer
   abstract class
   function end() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function renderFileReport(Report) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function merge(Report) defined in net::sourceforge::pmd::Report
      uses variable report defined in net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
      uses function end() defined in net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
   function start() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable report defined in net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
   function startFileAnalysis(DataSource) in line 44
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function AbstractAccumulatingRenderer(String,String) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable description defined in net::sourceforge::pmd::renderers::AbstractRenderer
   variable report in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/AbstractIncrementingRenderer.java
module net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractRenderer
   abstract class
   function end() in line 83
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function renderFileReport(Report) in line 57
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function renderFileViolations(Iterator< RuleViolation >) defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable errors defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable suppressed defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function renderFileViolations(Iterator< RuleViolation >) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function start() in line 45
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function startFileAnalysis(DataSource) in line 51
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function AbstractIncrementingRenderer(String,String) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable description defined in net::sourceforge::pmd::renderers::AbstractRenderer
   variable errors in line 31
   variable suppressed in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/AbstractRenderer.java
module net::sourceforge::pmd::renderers::AbstractRenderer
   inherits from net::sourceforge::pmd::AbstractPropertySource
   inherits from net::sourceforge::pmd::renderers::Renderer
   abstract class
   function defineProperty(String,String) in line 81
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable description defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable propertyDefinitions defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function flush() in line 115
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function getDescription() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function getName() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function getPropertyDefinitions() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyDefinitions defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function getWriter() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function isShowSuppressedViolations() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function setDescription(String) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function setName(String) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function setShowSuppressedViolations(boolean) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function setWriter(Writer) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function AbstractRenderer(String,String) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable description defined in net::sourceforge::pmd::renderers::AbstractRenderer
   variable description in line 22
   variable name in line 21
   variable propertyDefinitions in line 26
   variable showSuppressedViolations in line 27
   variable writer in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/ColumnDescriptor.java
module net::sourceforge::pmd::renderers::ColumnDescriptor
   function ColumnDescriptor(String,String,Accessor< T >) in line 20
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable accessor in line 16
      protection public
   variable id in line 14
      protection public
   variable title in line 15
      protection public
module net::sourceforge::pmd::renderers::ColumnDescriptor::Accessor
   function get(int,T,String) in line 18
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/CSVWriter.java
module net::sourceforge::pmd::renderers::CSVWriter
   function quote(StringBuilder,String) in line 66
      6 lines of code
      2 parameters
      1 conditional paths
   function quoteAndCommify(StringBuilder,String) in line 73
      4 lines of code
      2 parameters
      1 conditional paths
   function writeData(Writer,Iterator< T >) in line 41
      protection public
      24 lines of code
      2 parameters
      1 conditional paths
   function writeTitles(Writer) in line 29
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function CSVWriter(List< ColumnDescriptor< T >>,String,String) in line 23
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable columns in line 21
   variable lineSeparator in line 20
   variable separator in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/EmacsRenderer.java
module net::sourceforge::pmd::renderers::EmacsRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function defaultFileExtension() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function renderFileViolations(Iterator< RuleViolation >) in line 31
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses variable EOL defined in net::sourceforge::pmd::renderers::EmacsRenderer
   function EmacsRenderer() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::EmacsRenderer
   variable EOL in line 19
   variable NAME in line 17
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java
module net::sourceforge::pmd::renderers::HTMLRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function defaultFileExtension() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function end() in line 96
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function glomProcessingErrors(Writer,List< Report.ProcessingError >) defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable errors defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function glomSuppressions(Writer,List< Report.SuppressedViolation >) defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable suppressed defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function glomProcessingErrors(Writer,List< Report.ProcessingError >) in line 138
      28 lines of code
      2 parameters
      4 conditional paths
      uses variable errors defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function glomRuleViolations(Writer,Iterator< RuleViolation >) in line 106
      31 lines of code
      2 parameters
      4 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable violationCount defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses function maybeWrap(String,String) defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses variable linePrefix defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses variable d defined in sample-matlab.m
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses function getRule() defined in net::sourceforge::pmd::RuleViolation
      uses function getExternalInfoUrl() defined in net::sourceforge::pmd::Rule
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function glomSuppressions(Writer,List< Report.SuppressedViolation >) in line 167
      33 lines of code
      2 parameters
      4 conditional paths
      uses variable suppressed defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function maybeWrap(String,String) in line 201
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable linkPrefix defined in net::sourceforge::pmd::renderers::HTMLRenderer
   function renderBody(Writer,Report) in line 53
      protection public
      16 lines of code
      2 parameters
      2 conditional paths
      uses variable linkPrefix defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable LINK_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable linePrefix defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable LINE_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function setWriter(Writer) defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function renderFileReport(Report) defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses function glomProcessingErrors(Writer,List< Report.ProcessingError >) defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable errors defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function glomSuppressions(Writer,List< Report.SuppressedViolation >) defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable suppressed defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function renderFileViolations(Iterator< RuleViolation >) in line 87
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function glomRuleViolations(Writer,Iterator< RuleViolation >) defined in net::sourceforge::pmd::renderers::HTMLRenderer
   function start() in line 74
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function HTMLRenderer() in line 37
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable LINK_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable LINE_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
   variable LINE_PREFIX in line 28
      protection public
   variable linePrefix in line 32
   variable LINK_PREFIX in line 29
      protection public
   variable linkPrefix in line 31
   variable NAME in line 26
      protection public
   variable violationCount in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/IDEAJRenderer.java
module net::sourceforge::pmd::renderers::IDEAJRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function defaultFileExtension() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFullyQualifiedClassName(String,SourcePath) in line 89
      5 lines of code
      2 parameters
      1 conditional paths
      uses function clipPath(String) defined in net::sourceforge::pmd::renderers::IDEAJRenderer::SourcePath
      uses variable fileName defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable FILE_SEPARATOR defined in net::sourceforge::pmd::renderers::IDEAJRenderer
   function getSimpleFileName(String) in line 95
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileName defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable FILE_SEPARATOR defined in net::sourceforge::pmd::renderers::IDEAJRenderer
   function renderDirectoy(Writer,Iterator< RuleViolation >) in line 61
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable SOURCE_PATH defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function getFullyQualifiedClassName(String,SourcePath) defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getSimpleFileName(String) defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function renderFile(Writer,Iterator< RuleViolation >) in line 76
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable classAndMethodName defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable fileName defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function renderFileViolations(Iterator< RuleViolation >) in line 47
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable classAndMethodName defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable CLASS_AND_METHOD_NAME defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable fileName defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable FILE_NAME defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function renderDirectoy(Writer,Iterator< RuleViolation >) defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses function renderFile(Writer,Iterator< RuleViolation >) defined in net::sourceforge::pmd::renderers::IDEAJRenderer
   function IDEAJRenderer() in line 34
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable FILE_NAME defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable SOURCE_PATH defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable CLASS_AND_METHOD_NAME defined in net::sourceforge::pmd::renderers::IDEAJRenderer
   variable CLASS_AND_METHOD_NAME in line 29
      protection public
   variable classAndMethodName in line 22
   variable FILE_NAME in line 27
      protection public
   variable FILE_SEPARATOR in line 31
   variable fileName in line 23
   variable NAME in line 25
      protection public
   variable PATH_SEPARATOR in line 32
   variable SOURCE_PATH in line 28
      protection public
module net::sourceforge::pmd::renderers::IDEAJRenderer::SourcePath
   function clipPath(String) in line 110
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable paths defined in net::sourceforge::pmd::renderers::IDEAJRenderer::SourcePath
   function SourcePath(String) in line 103
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable PATH_SEPARATOR defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable paths defined in net::sourceforge::pmd::renderers::IDEAJRenderer::SourcePath
   variable paths in line 101
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/RendererFactory.java
module net::sourceforge::pmd::renderers::RendererFactory
   function createRenderer(String,Properties) in line 50
      protection public
      40 lines of code
      2 parameters
      7 conditional paths
      uses function getRendererClass(String) defined in net::sourceforge::pmd::renderers::RendererFactory
      uses function getRendererConstructor(Class<?extends Renderer >) defined in net::sourceforge::pmd::renderers::RendererFactory
      uses variable LOG defined in net::sourceforge::pmd::renderers::RendererFactory
      uses function getPropertyDescriptors() defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses function valueFrom(String) defined in net::sourceforge::pmd::PropertyDescriptor
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable e defined in sample-matlab.m
      uses variable REPORT_FORMAT_TO_RENDERER defined in net::sourceforge::pmd::renderers::RendererFactory
      uses function getName() defined in net::sourceforge::pmd::renderers::Renderer
   function getRendererClass(String) in line 92
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable REPORT_FORMAT_TO_RENDERER defined in net::sourceforge::pmd::renderers::RendererFactory
      uses function getName() defined in net::sourceforge::pmd::renderers::Renderer
      uses variable e defined in sample-matlab.m
   function getRendererConstructor(Class<?extends Renderer >) in line 113
      30 lines of code
      1 parameters
      6 conditional paths
      uses variable e defined in sample-matlab.m
   variable LOG in line 24
   variable REPORT_FORMAT_TO_RENDERER in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/SummaryHTMLRenderer.java
module net::sourceforge::pmd::renderers::SummaryHTMLRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
   function defaultFileExtension() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function end() in line 36
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function renderSummary() defined in net::sourceforge::pmd::renderers::SummaryHTMLRenderer
      uses variable LINK_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable LINE_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses function setShowSuppressedViolations(boolean) defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable showSuppressedViolations defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function renderBody(Writer,Report) defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable report defined in net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
   function renderSummary() in line 56
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable report defined in net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
      uses function getSummary() defined in net::sourceforge::pmd::Report
   function SummaryHTMLRenderer() in line 18
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::SummaryHTMLRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable LINK_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable LINE_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
   variable NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/TextColorRenderer.java
module net::sourceforge::pmd::renderers::TextColorRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
   function defaultFileExtension() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function end() in line 108
      protection public
      58 lines of code
      0 parameters
      7 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function initializeColorsIfSupported() defined in net::sourceforge::pmd::renderers::TextColorRenderer
      uses variable report defined in net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
      uses function iterator() defined in net::sourceforge::pmd::Report
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getRelativePath(String) defined in net::sourceforge::pmd::renderers::TextColorRenderer
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getRule() defined in net::sourceforge::pmd::RuleViolation
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses function getLine(String,int) defined in net::sourceforge::pmd::renderers::TextColorRenderer
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getCountSummary() defined in net::sourceforge::pmd::Report
      uses variable errors defined in net::sourceforge::pmd::Report
      uses function getFile() defined in net::sourceforge::pmd::Report::ProcessingError
   function getLine(String,int) in line 174
      16 lines of code
      2 parameters
      3 conditional paths
      uses function getReader(String) defined in net::sourceforge::pmd::renderers::TextColorRenderer
   function getReader(String) in line 191
      3 lines of code
      1 parameters
      1 conditional paths
   function getRelativePath(String) in line 202
      30 lines of code
      1 parameters
      5 conditional paths
      uses variable pwd defined in net::sourceforge::pmd::renderers::TextColorRenderer
   function initializeColorsIfSupported() in line 88
      11 lines of code
      0 parameters
      2 conditional paths
      uses function isPropertyEnabled(String) defined in net::sourceforge::pmd::renderers::TextColorRenderer
      uses variable COLOR defined in net::sourceforge::pmd::renderers::TextColorRenderer
      uses variable SYSTEM_PROPERTY_PMD_COLOR defined in net::sourceforge::pmd::renderers::TextColorRenderer
   function isPropertyEnabled(String) in line 100
      3 lines of code
      1 parameters
      1 conditional paths
   function TextColorRenderer() in line 73
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::TextColorRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable COLOR defined in net::sourceforge::pmd::renderers::TextColorRenderer
   variable COLOR in line 57
      protection public
   variable colorReset in line 71
   variable cyan in line 68
   variable green in line 69
   variable NAME in line 55
      protection public
   variable pwd in line 63
   variable redBold in line 67
   variable SYSTEM_PROPERTY_PMD_COLOR in line 58
   variable whiteBold in line 66
   variable yellowBold in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/TextPadRenderer.java
module net::sourceforge::pmd::renderers::TextPadRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function defaultFileExtension() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function renderFileViolations(Iterator< RuleViolation >) in line 42
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getRule() defined in net::sourceforge::pmd::RuleViolation
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function TextPadRenderer() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::TextPadRenderer
   variable NAME in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/TextRenderer.java
module net::sourceforge::pmd::renderers::TextRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function defaultFileExtension() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function end() in line 57
      protection public
      22 lines of code
      0 parameters
      4 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable errors defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable suppressed defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function renderFileViolations(Iterator< RuleViolation >) in line 39
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function start() in line 32
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function TextRenderer() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::TextRenderer
   variable NAME in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/VBHTMLRenderer.java
module net::sourceforge::pmd::renderers::VBHTMLRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
   function defaultFileExtension() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function end() in line 89
      protection public
      27 lines of code
      0 parameters
      4 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable errors defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses function footer() defined in net::sourceforge::pmd::renderers::VBHTMLRenderer
   function footer() in line 137
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function header() in line 117
      19 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function renderFileViolations(Iterator< RuleViolation >) in line 40
      protection public
      44 lines of code
      1 parameters
      7 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
   function start() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function header() defined in net::sourceforge::pmd::renderers::VBHTMLRenderer
   function VBHTMLRenderer() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::VBHTMLRenderer
   variable NAME in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/XSLTRenderer.java
module net::sourceforge::pmd::renderers::XSLTRenderer
   inherits from net::sourceforge::pmd::renderers::XMLRenderer
   function defaultFileExtension() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function end() in line 115
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function getDocument(String) defined in net::sourceforge::pmd::renderers::XSLTRenderer
      uses function transform(Document) defined in net::sourceforge::pmd::renderers::XSLTRenderer
   function getDocument(String) in line 143
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function prepareTransformer(InputStream) in line 97
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
   function start() in line 61
      protection public
      30 lines of code
      0 parameters
      5 conditional paths
      uses variable XSLT_FILENAME defined in net::sourceforge::pmd::renderers::XSLTRenderer
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function setWriter(Writer) defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function prepareTransformer(InputStream) defined in net::sourceforge::pmd::renderers::XSLTRenderer
   function transform(Document) in line 132
      10 lines of code
      1 parameters
      2 conditional paths
      uses function setWriter(Writer) defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable transformer defined in net::sourceforge::pmd::renderers::XSLTRenderer
      uses variable e defined in sample-matlab.m
   function XSLTRenderer() in line 48
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable NAME defined in net::sourceforge::pmd::renderers::XSLTRenderer
      uses function setDescription(String) defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable XSLT_FILENAME defined in net::sourceforge::pmd::renderers::XSLTRenderer
   variable NAME in line 40
      protection public
   variable outputWriter in line 46
   variable transformer in line 44
   variable XSLT_FILENAME in line 42
      protection public
   variable xsltFilename in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/renderers/YAHTMLRenderer.java
module net::sourceforge::pmd::renderers::YAHTMLRenderer
   inherits from net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
   function defaultFileExtension() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function end() in line 34
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable OUTPUT_DIR defined in net::sourceforge::pmd::renderers::YAHTMLRenderer
      uses variable report defined in net::sourceforge::pmd::renderers::AbstractAccumulatingRenderer
      uses function getViolationTree() defined in net::sourceforge::pmd::Report
      uses function getRootNode() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function accept(ReportVisitor) defined in net::sourceforge::pmd::lang::dfa::report::AbstractReportNode
      uses variable writer defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function YAHTMLRenderer() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::renderers::YAHTMLRenderer
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable OUTPUT_DIR defined in net::sourceforge::pmd::renderers::YAHTMLRenderer
   variable NAME in line 18
      protection public
   variable OUTPUT_DIR in line 20
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/Report.java
module net::sourceforge::pmd::Report
   inherits from Iterable
   function addConfigError(RuleConfigurationError) in line 324
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function configErrors() defined in net::sourceforge::pmd::Report
   function addError(ProcessingError) in line 336
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function errors() defined in net::sourceforge::pmd::Report
   function addListener(ReportListener) in line 272
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::Report
   function addMetric(Metric) in line 312
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function metrics() defined in net::sourceforge::pmd::Report
      uses variable listeners defined in net::sourceforge::pmd::Report
   function addRuleViolation(RuleViolation) in line 285
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses variable linesToSuppress defined in net::sourceforge::pmd::Report
      uses variable suppressedRuleViolations defined in net::sourceforge::pmd::Report
      uses function isSuppressed() defined in net::sourceforge::pmd::RuleViolation
      uses variable violations defined in net::sourceforge::pmd::Report
      uses variable INSTANCE defined in net::sourceforge::pmd::RuleViolationComparator
      uses variable violationTree defined in net::sourceforge::pmd::Report
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses variable listeners defined in net::sourceforge::pmd::Report
   function addSynchronizedListeners(List< SynchronizedReportListener >) in line 508
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::Report
   function configErrors() in line 454
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createReport(RuleContext,String) in line 38
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses function addSynchronizedListeners(List< SynchronizedReportListener >) defined in net::sourceforge::pmd::Report
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function getSynchronizedListeners() defined in net::sourceforge::pmd::Report
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFile(File) defined in net::sourceforge::pmd::RuleContext
   function end() in line 491
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function errors() in line 445
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCountSummary() in line 234
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable violationTree defined in net::sourceforge::pmd::Report
      uses function keyFor(RuleViolation) defined in net::sourceforge::pmd::Report
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function getElapsedTimeInMillis() in line 495
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function end() defined in net::sourceforge::pmd::Report
      uses function start() defined in net::sourceforge::pmd::Report
   function getSummary() in line 254
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable violations defined in net::sourceforge::pmd::Report
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
   function getSuppressedRuleViolations() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressedRuleViolations defined in net::sourceforge::pmd::Report
   function getSynchronizedListeners() in line 499
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::Report
   function getViolationTree() in line 244
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violationTree defined in net::sourceforge::pmd::Report
   function hasConfigErrors() in line 412
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function configErrors() defined in net::sourceforge::pmd::Report
   function hasErrors() in line 402
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function errors() defined in net::sourceforge::pmd::Report
   function hasMetrics() in line 379
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function metrics() defined in net::sourceforge::pmd::Report
   function isEmpty() in line 392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violations defined in net::sourceforge::pmd::Report
      uses function hasErrors() defined in net::sourceforge::pmd::Report
   function iterator() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violations defined in net::sourceforge::pmd::Report
   function keyFor(RuleViolation) in line 224
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getPackageName() defined in net::sourceforge::pmd::RuleViolation
      uses function getClassName() defined in net::sourceforge::pmd::RuleViolation
   function merge(Report) in line 351
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable r defined in sample-matlab.m
      uses function addError(ProcessingError) defined in net::sourceforge::pmd::Report
      uses function addMetric(Metric) defined in net::sourceforge::pmd::Report
      uses variable violations defined in net::sourceforge::pmd::Report
      uses variable INSTANCE defined in net::sourceforge::pmd::RuleViolationComparator
      uses variable violationTree defined in net::sourceforge::pmd::Report
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses variable suppressedRuleViolations defined in net::sourceforge::pmd::Report
   function metrics() in line 388
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function size() in line 472
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violations defined in net::sourceforge::pmd::Report
   function start() in line 482
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suppress(Map< Integer, String >) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable linesToSuppress defined in net::sourceforge::pmd::Report
   function treeIsEmpty() in line 422
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violationTree defined in net::sourceforge::pmd::Report
      uses function iterator() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
   function treeIterator() in line 431
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violationTree defined in net::sourceforge::pmd::Report
      uses function iterator() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
   function treeSize() in line 463
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violationTree defined in net::sourceforge::pmd::Report
      uses function size() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
   variable configErrors in line 208
   variable end in line 211
   variable errors in line 207
   variable linesToSuppress in line 209
   variable listeners in line 206
   variable metrics in line 205
   variable start in line 210
   variable suppressedRuleViolations in line 213
   variable violations in line 204
   variable violationTree in line 200
module net::sourceforge::pmd::Report::ReadableDuration
   function getTime() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable duration defined in net::sourceforge::pmd::Report::ReadableDuration
   function ReadableDuration(long) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable duration defined in net::sourceforge::pmd::Report::ReadableDuration
   variable duration in line 54
module net::sourceforge::pmd::Report::RuleConfigurationError
   function issue() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function rule() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function RuleConfigurationError(Rule,String) in line 89
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable issue in line 81
   variable rule in line 80
module net::sourceforge::pmd::Report::ProcessingError
   function getFile() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMsg() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ProcessingError(String,String) in line 126
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable file in line 118
   variable msg in line 117
module net::sourceforge::pmd::Report::SuppressedViolation
   function getRuleViolation() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUserMessage() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suppressedByAnnotation() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suppressedByNOPMD() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SuppressedViolation(RuleViolation,boolean,String) in line 158
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable isNOPMD in line 145
   variable rv in line 144
   variable userMessage in line 146
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/ReportListener.java
module net::sourceforge::pmd::ReportListener
   function metricAdded(Metric) in line 23
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function ruleViolationAdded(RuleViolation) in line 17
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/Rule.java
module net::sourceforge::pmd::Rule
   inherits from net::sourceforge::pmd::PropertySource
   function addExample(String) in line 198
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addRuleChainVisit(Class<?extends Node >) in line 287
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addRuleChainVisit(String) in line 295
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function apply(List<?extends Node >,RuleContext) in line 311
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function end(RuleContext) in line 318
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 177
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getExamples() in line 191
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getExternalInfoUrl() in line 205
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLanguage() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMaximumLanguageVersion() in line 69
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMessage() in line 163
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMinimumLanguageVersion() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 104
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getParserOptions() in line 236
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 219
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRuleChainVisits() in line 280
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRuleClass() in line 133
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRuleSetName() in line 148
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSince() in line 119
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isDeprecated() in line 90
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setDeprecated(boolean) in line 97
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setDescription(String) in line 184
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setExternalInfoUrl(String) in line 212
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setLanguage(Language) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMaximumLanguageVersion(LanguageVersion) in line 76
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMessage(String) in line 170
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setMinimumLanguageVersion(LanguageVersion) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setName(String) in line 111
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setPriority(RulePriority) in line 226
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setRuleClass(String) in line 140
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setRuleSetName(String) in line 156
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSince(String) in line 126
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUsesDFA() in line 242
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setUsesTypeResolution() in line 256
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function start(RuleContext) in line 302
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function usesDFA() in line 250
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function usesRuleChain() in line 272
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function usesTypeResolution() in line 264
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable VIOLATION_SUPPRESS_REGEX_DESCRIPTOR in line 24
      protection public
   variable VIOLATION_SUPPRESS_XPATH_DESCRIPTOR in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleChain.java
module net::sourceforge::pmd::RuleChain
   function add(RuleSet) in line 31
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function add(RuleSet,Rule) in line 45
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getRuleChainVisitor(Language) defined in net::sourceforge::pmd::RuleChain
      uses function getLanguage() defined in net::sourceforge::pmd::Rule
      uses function add(RuleSet,Rule) defined in net::sourceforge::pmd::lang::rule::RuleChainVisitor
   function apply(List< Node >,RuleContext,Language) in line 63
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
      uses function getRuleChainVisitor(Language) defined in net::sourceforge::pmd::RuleChain
      uses function visitAll(List< Node >,RuleContext) defined in net::sourceforge::pmd::lang::rule::RuleChainVisitor
   function getRuleChainVisitor(Language) in line 71
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable languageToRuleChainVisitor defined in net::sourceforge::pmd::RuleChain
      uses function getRuleChainVisitorClass() defined in net::sourceforge::pmd::lang::Language
      uses variable e defined in sample-matlab.m
   variable languageToRuleChainVisitor in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleContext.java
module net::sourceforge::pmd::RuleContext
   function getAttribute(String) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getLanguageVersion() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable languageVersion defined in net::sourceforge::pmd::RuleContext
   function getReport() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable report defined in net::sourceforge::pmd::RuleContext
   function getSourceCodeFile() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceCodeFile defined in net::sourceforge::pmd::RuleContext
   function getSourceCodeFilename() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceCodeFilename defined in net::sourceforge::pmd::RuleContext
   function isIgnoreExceptions() in line 215
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreExceptions defined in net::sourceforge::pmd::RuleContext
   function removeAttribute(String) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setAttribute(String,Object) in line 140
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable attributes defined in net::sourceforge::pmd::RuleContext
   function setIgnoreExceptions(boolean) in line 205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreExceptions defined in net::sourceforge::pmd::RuleContext
   function setLanguageVersion(LanguageVersion) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable languageVersion defined in net::sourceforge::pmd::RuleContext
   function setReport(Report) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable report defined in net::sourceforge::pmd::RuleContext
   function setSourceCodeFile(File) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceCodeFile defined in net::sourceforge::pmd::RuleContext
   function setSourceCodeFilename(String) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function RuleContext() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attributes defined in net::sourceforge::pmd::RuleContext
   function RuleContext(RuleContext) in line 49
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable attributes defined in net::sourceforge::pmd::RuleContext
      uses function addSynchronizedListeners(List< SynchronizedReportListener >) defined in net::sourceforge::pmd::Report
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function getSynchronizedListeners() defined in net::sourceforge::pmd::Report
   variable attributes in line 35
   variable ignoreExceptions in line 36
   variable languageVersion in line 34
   variable report in line 31
   variable sourceCodeFile in line 32
   variable sourceCodeFilename in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RulePriority.java
module net::sourceforge::pmd::RulePriority
   function getName() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function valueOf(int) in line 74
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function RulePriority(int,String) in line 32
      4 lines of code
      2 parameters
      1 conditional paths
   variable HIGH in line 19
      protection public
   variable LOW in line 27
      protection public
   variable MEDIUM in line 23
      protection public
   variable MEDIUM_HIGH in line 21
      protection public
   variable MEDIUM_LOW in line 25
      protection public
   variable name in line 30
   variable priority in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleSet.java
module net::sourceforge::pmd::RuleSet
   function addExcludePattern(String) in line 417
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable excludePatterns defined in net::sourceforge::pmd::RuleSet
      uses function patternsChanged() defined in net::sourceforge::pmd::RuleSet
   function addExcludePatterns(Collection< String >) in line 431
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable excludePatterns defined in net::sourceforge::pmd::RuleSet
      uses function patternsChanged() defined in net::sourceforge::pmd::RuleSet
   function addIncludePattern(String) in line 462
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable includePatterns defined in net::sourceforge::pmd::RuleSet
      uses function patternsChanged() defined in net::sourceforge::pmd::RuleSet
   function addIncludePatterns(Collection< String >) in line 476
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable includePatterns defined in net::sourceforge::pmd::RuleSet
      uses function patternsChanged() defined in net::sourceforge::pmd::RuleSet
   function addRule(Rule) in line 81
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function addRuleByReference(String,Rule) in line 147
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses function setRuleSetFileName(String) defined in net::sourceforge::pmd::RuleSetReference
      uses function setRule(Rule) defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setRuleSetReference(RuleSetReference) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function addRuleIfNotExists(Rule) in line 123
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable rules defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getLanguage() defined in net::sourceforge::pmd::Rule
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
   function addRuleReplaceIfExists(Rule) in line 97
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable rules defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getLanguage() defined in net::sourceforge::pmd::Rule
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
   function addRuleSet(RuleSet) in line 218
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rules defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function addRuleSetByReference(RuleSet,boolean) in line 232
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function addRuleSetByReference(RuleSet,boolean,String...) in line 247
      protection public
      14 lines of code
      3 parameters
      4 conditional paths
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
      uses function setAllRules(boolean) defined in net::sourceforge::pmd::RuleSetReference
      uses function setExcludes(Set< String >) defined in net::sourceforge::pmd::RuleSetReference
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function applies(File) in line 273
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable filter defined in net::sourceforge::pmd::RuleSet
      uses variable includePatterns defined in net::sourceforge::pmd::RuleSet
      uses variable excludePatterns defined in net::sourceforge::pmd::RuleSet
      uses function filter(T) defined in net::sourceforge::pmd::util::filter::Filter
   function applies(Rule,LanguageVersion) in line 337
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getMinimumLanguageVersion() defined in net::sourceforge::pmd::Rule
      uses function getMaximumLanguageVersion() defined in net::sourceforge::pmd::Rule
      uses function getLanguage() defined in net::sourceforge::pmd::Rule
      uses function getLanguage() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function compareTo(LanguageVersion) defined in net::sourceforge::pmd::lang::LanguageVersion
   function apply(List<?extends Node >,RuleContext) in line 302
      protection public
      23 lines of code
      2 parameters
      6 conditional paths
      uses function start(RuleContext) defined in net::sourceforge::pmd::RuleSet
      uses variable rules defined in net::sourceforge::pmd::RuleSet
      uses function applies(File) defined in net::sourceforge::pmd::RuleSet
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses function end(RuleContext) defined in net::sourceforge::pmd::RuleSet
      uses variable Rule defined in net::sourceforge::pmd::benchmark::Benchmark
      uses variable e defined in sample-matlab.m
      uses function isIgnoreExceptions() defined in net::sourceforge::pmd::RuleContext
      uses variable LOG defined in net::sourceforge::pmd::RuleSet
      uses function getSourceCodeFilename() defined in net::sourceforge::pmd::RuleContext
   function createFor(String,Rule...) in line 56
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable name defined in net::sourceforge::pmd::RuleSet
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
   function end(RuleContext) in line 351
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function equals(Object) in line 366
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function getDescription() in line 400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in net::sourceforge::pmd::RuleSet
   function getExcludePatterns() in line 408
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable excludePatterns defined in net::sourceforge::pmd::RuleSet
   function getFileName() in line 384
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in net::sourceforge::pmd::RuleSet
   function getIncludePatterns() in line 453
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable includePatterns defined in net::sourceforge::pmd::RuleSet
   function getName() in line 392
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::RuleSet
   function getRuleByName(String) in line 203
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function getRules() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function hashCode() in line 380
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function patternsChanged() in line 498
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable filter defined in net::sourceforge::pmd::RuleSet
   function removeDysfunctionalRules(Collection< Rule >) in line 526
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable rules defined in net::sourceforge::pmd::RuleSet
      uses function dysfunctionReason() defined in net::sourceforge::pmd::PropertySource
   function setDescription(String) in line 404
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in net::sourceforge::pmd::RuleSet
   function setExcludePatterns(Collection< String >) in line 443
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable excludePatterns defined in net::sourceforge::pmd::RuleSet
      uses function patternsChanged() defined in net::sourceforge::pmd::RuleSet
   function setFileName(String) in line 388
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileName defined in net::sourceforge::pmd::RuleSet
   function setIncludePatterns(Collection< String >) in line 488
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable includePatterns defined in net::sourceforge::pmd::RuleSet
      uses function patternsChanged() defined in net::sourceforge::pmd::RuleSet
   function setName(String) in line 396
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::RuleSet
   function size() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function start(RuleContext) in line 289
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function usesDFA(Language) in line 183
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   function usesTypeResolution(Language) in line 510
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable rules defined in net::sourceforge::pmd::RuleSet
   variable description in line 41
   variable excludePatterns in line 44
   variable fileName in line 39
   variable filter in line 47
   variable includePatterns in line 45
   variable LOG in line 36
   variable name in line 40
   variable rules in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleSetFactory.java
module net::sourceforge::pmd::RuleSetFactory
   function classNotFoundProblem(Exception) in line 268
      4 lines of code
      1 parameters
      1 conditional paths
   function containsRule(RuleSetReferenceId,String) in line 598
      23 lines of code
      2 parameters
      5 conditional paths
      uses function getInputStream(ClassLoader) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable classLoader defined in net::sourceforge::pmd::RuleSetFactory
      uses variable e defined in sample-matlab.m
   function createRule(RuleSetReferenceId,boolean) in line 195
      9 lines of code
      2 parameters
      2 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function createRuleSet(String) in line 152
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function createRuleSet(RuleSetReferenceId) in line 170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function createRuleSet(RuleSetReferenceId,boolean) in line 174
      5 lines of code
      2 parameters
      1 conditional paths
      uses function parseRuleSetNode(RuleSetReferenceId,InputStream,boolean) defined in net::sourceforge::pmd::RuleSetFactory
   function createRuleSets(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createRuleSets(List< RuleSetReferenceId >) in line 131
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function addRuleSet(RuleSet) defined in net::sourceforge::pmd::RuleSets
   function getRegisteredRuleSets() in line 88
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleSetsIterator() defined in net::sourceforge::pmd::RuleSets
   function hasAttributeSetTrue(Element,String) in line 472
      3 lines of code
      2 parameters
      1 conditional paths
   function isElementNode(Node,String) in line 622
      3 lines of code
      2 parameters
      1 conditional paths
   function isRuleName(Element,String) in line 787
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getRuleName(final String) defined in net::sourceforge::pmd::RuleSetReferenceId
   function parsePropertiesNode(Rule,Node) in line 632
      8 lines of code
      2 parameters
      3 conditional paths
      uses function isElementNode(Node,String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function parsePropertyNodeBR(Rule,Node) defined in net::sourceforge::pmd::RuleSetFactory
   function parsePropertyNodeBR(Rule,Node) in line 705
      48 lines of code
      2 parameters
      7 conditional paths
      uses variable TYPE defined in net::sourceforge::pmd::PropertyDescriptorFields
      uses variable VALUE defined in net::sourceforge::pmd::PropertyDescriptorFields
      uses function valueFrom(Node) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable NAME defined in net::sourceforge::pmd::PropertyDescriptorFields
      uses function setValue(Rule,PropertyDescriptor,String) defined in net::sourceforge::pmd::RuleSetFactory
   function parseRuleNode(RuleSetReferenceId,RuleSet,Node,boolean) in line 283
      13 lines of code
      4 parameters
      3 conditional paths
      uses function parseRuleSetReferenceNode(RuleSetReferenceId,RuleSet,Element,String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function parseSingleRuleNode(RuleSetReferenceId,RuleSet,Node) defined in net::sourceforge::pmd::RuleSetFactory
      uses function parseRuleReferenceNode(RuleSetReferenceId,RuleSet,Node,String,boolean) defined in net::sourceforge::pmd::RuleSetFactory
   function parseRuleReferenceNode(RuleSetReferenceId,RuleSet,Node,String,boolean) in line 489
      101 lines of code
      5 parameters
      22 conditional paths
      uses function isRuleName(Element,String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function setClassLoader(ClassLoader) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable classLoader defined in net::sourceforge::pmd::RuleSetFactory
      uses function isExternal() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function containsRule(RuleSetReferenceId,String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleName(final String) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function createRule(RuleSetReferenceId,boolean) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable warnDeprecated defined in net::sourceforge::pmd::RuleSetFactory
      uses function isDeprecated() defined in net::sourceforge::pmd::Rule
      uses variable LOG defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleSetReference() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReference
      uses function getOriginalName() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setAllRules(boolean) defined in net::sourceforge::pmd::RuleSetReference
      uses function setRuleSetFileName(String) defined in net::sourceforge::pmd::RuleSetReference
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function setRuleSetReference(RuleSetReference) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setRule(Rule) defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setDeprecated(boolean) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setExternalInfoUrl(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setDescription(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function parseTextNode(Node) defined in net::sourceforge::pmd::RuleSetFactory
      uses function addExample(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function parsePropertiesNode(Rule,Node) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getName() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses variable minimumPriority defined in net::sourceforge::pmd::RuleSetFactory
      uses function isDeprecated() defined in net::sourceforge::pmd::lang::rule::RuleReference
   function parseRuleSetNode(RuleSetReferenceId,InputStream,boolean) in line 215
      52 lines of code
      3 parameters
      9 conditional paths
      uses function isExternal() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function setFileName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function setName(String) defined in net::sourceforge::pmd::RuleSet
      uses function setDescription(String) defined in net::sourceforge::pmd::RuleSet
      uses function parseTextNode(Node) defined in net::sourceforge::pmd::RuleSetFactory
      uses function addIncludePattern(String) defined in net::sourceforge::pmd::RuleSet
      uses function addExcludePattern(String) defined in net::sourceforge::pmd::RuleSet
      uses function parseRuleNode(RuleSetReferenceId,RuleSet,Node,boolean) defined in net::sourceforge::pmd::RuleSetFactory
      uses function classNotFoundProblem(Exception) defined in net::sourceforge::pmd::RuleSetFactory
   function parseRuleSetReferenceNode(RuleSetReferenceId,RuleSet,Element,String) in line 309
      43 lines of code
      4 parameters
      8 conditional paths
      uses function setAllRules(boolean) defined in net::sourceforge::pmd::RuleSetReference
      uses function setRuleSetFileName(String) defined in net::sourceforge::pmd::RuleSetReference
      uses function isElementNode(Node,String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function addExclude(String) defined in net::sourceforge::pmd::RuleSetReference
      uses function parseTextNode(Node) defined in net::sourceforge::pmd::RuleSetFactory
      uses function setClassLoader(ClassLoader) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable classLoader defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludes() defined in net::sourceforge::pmd::RuleSetReference
      uses variable minimumPriority defined in net::sourceforge::pmd::RuleSetFactory
      uses function setRuleSetReference(RuleSetReference) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setRule(Rule) defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::RuleReference
   function parseSingleRuleNode(RuleSetReferenceId,RuleSet,Node) in line 362
      109 lines of code
      3 parameters
      21 conditional paths
      uses function isRuleName(Element,String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable classLoader defined in net::sourceforge::pmd::RuleSetFactory
      uses function setName(String) defined in net::sourceforge::pmd::Rule
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function setLanguage(Language) defined in net::sourceforge::pmd::Rule
      uses function getLanguage() defined in net::sourceforge::pmd::Rule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getTerseName() defined in net::sourceforge::pmd::lang::Language
      uses function getVersions() defined in net::sourceforge::pmd::lang::Language
      uses function setMinimumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::Rule
      uses function setMaximumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::Rule
      uses function getMinimumLanguageVersion() defined in net::sourceforge::pmd::Rule
      uses function getMaximumLanguageVersion() defined in net::sourceforge::pmd::Rule
      uses function getTerseName() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function setSince(String) defined in net::sourceforge::pmd::Rule
      uses function setMessage(String) defined in net::sourceforge::pmd::Rule
      uses function setRuleSetName(String) defined in net::sourceforge::pmd::Rule
      uses function setExternalInfoUrl(String) defined in net::sourceforge::pmd::Rule
      uses function hasAttributeSetTrue(Element,String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function setUsesDFA() defined in net::sourceforge::pmd::Rule
      uses function setUsesTypeResolution() defined in net::sourceforge::pmd::Rule
      uses function setDescription(String) defined in net::sourceforge::pmd::Rule
      uses function parseTextNode(Node) defined in net::sourceforge::pmd::RuleSetFactory
      uses function addExample(String) defined in net::sourceforge::pmd::Rule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::Rule
      uses function parsePropertiesNode(Rule,Node) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses variable minimumPriority defined in net::sourceforge::pmd::RuleSetFactory
   function parseTextNode(Node) in line 760
      17 lines of code
      1 parameters
      4 conditional paths
   function setClassLoader(ClassLoader) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classLoader defined in net::sourceforge::pmd::RuleSetFactory
   function setMinimumPriority(RulePriority) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable minimumPriority defined in net::sourceforge::pmd::RuleSetFactory
   function setValue(Rule,PropertyDescriptor,String) in line 699
      4 lines of code
      3 parameters
      1 conditional paths
   function setWarnDeprecated(boolean) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable warnDeprecated defined in net::sourceforge::pmd::RuleSetFactory
   function valueFrom(Node) in line 641
      12 lines of code
      1 parameters
      3 conditional paths
      uses function isElementNode(Node,String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function parseTextNode(Node) defined in net::sourceforge::pmd::RuleSetFactory
   variable classLoader in line 49
   variable LOG in line 47
   variable minimumPriority in line 50
   variable warnDeprecated in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleSetNotFoundException.java
module net::sourceforge::pmd::RuleSetNotFoundException
   inherits from Exception
   function RuleSetNotFoundException(String) in line 7
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleSetReference.java
module net::sourceforge::pmd::RuleSetReference
   function addExclude(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExcludes() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable excludes defined in net::sourceforge::pmd::RuleSetReference
   function getRuleSetFileName() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleSetFileName defined in net::sourceforge::pmd::RuleSetReference
   function isAllRules() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allRules defined in net::sourceforge::pmd::RuleSetReference
   function setAllRules(boolean) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable allRules defined in net::sourceforge::pmd::RuleSetReference
   function setExcludes(Set< String >) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable excludes defined in net::sourceforge::pmd::RuleSetReference
   function setRuleSetFileName(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ruleSetFileName defined in net::sourceforge::pmd::RuleSetReference
   function RuleSetReference() in line 17
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function RuleSetReference(String) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ruleSetFileName defined in net::sourceforge::pmd::RuleSetReference
   variable allRules in line 14
   variable excludes in line 15
   variable ruleSetFileName in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleSetReferenceId.java
module net::sourceforge::pmd::RuleSetReferenceId
   function checkRulesetExists(String) in line 223
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in sample-matlab.m
   function getInputStream(ClassLoader) in line 400
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable externalRuleSetReferenceId defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable ruleSetFileName defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable ruleName defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function getInputStream(ClassLoader) defined in net::sourceforge::pmd::RuleSetReferenceId
   function getRuleName(final String) in line 277
      12 lines of code
      1 parameters
      3 conditional paths
   function getRuleName() in line 385
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleName defined in net::sourceforge::pmd::RuleSetReferenceId
   function getRuleSetFileName() in line 376
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleSetFileName defined in net::sourceforge::pmd::RuleSetReferenceId
   function isAllRules() in line 366
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allRules defined in net::sourceforge::pmd::RuleSetReferenceId
   function isExternal() in line 356
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable external defined in net::sourceforge::pmd::RuleSetReferenceId
   function isFullRuleSetName(String) in line 323
      4 lines of code
      1 parameters
      1 conditional paths
   function isHttpUrl(String) in line 290
      13 lines of code
      1 parameters
      3 conditional paths
   function isValidUrl(String) in line 304
      18 lines of code
      1 parameters
      4 conditional paths
      uses function isHttpUrl(String) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable TIMEOUT defined in net::sourceforge::pmd::util::ResourceLoader
      uses variable e defined in sample-matlab.m
   function parse(String) in line 335
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function RuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetReferenceId
   function resolveBuiltInRuleset(final String) in line 248
      20 lines of code
      1 parameters
      4 conditional paths
   function toString() in line 423
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable ruleSetFileName defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable allRules defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable ruleName defined in net::sourceforge::pmd::RuleSetReferenceId
   function RuleSetReferenceId(final String) in line 98
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function RuleSetReferenceId(final String,final RuleSetReferenceId) in line 118
      protection public
      97 lines of code
      2 parameters
      11 conditional paths
      uses variable externalRuleSetReferenceId defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function isExternal() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function isValidUrl(String) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable external defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable ruleSetFileName defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable allRules defined in net::sourceforge::pmd::RuleSetReferenceId
      uses variable ruleName defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function isFullRuleSetName(String) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function getRuleName() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function isHttpUrl(String) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function resolveBuiltInRuleset(final String) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function checkRulesetExists(String) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReferenceId
   variable allRules in line 88
   variable external in line 86
   variable externalRuleSetReferenceId in line 90
   variable ruleName in line 89
   variable ruleSetFileName in line 87
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleSets.java
module net::sourceforge::pmd::RuleSets
   function addRuleSet(RuleSet) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
      uses variable ruleChain defined in net::sourceforge::pmd::RuleSets
      uses function add(RuleSet) defined in net::sourceforge::pmd::RuleChain
   function applies(File) in line 93
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function apply(List< Node >,RuleContext,Language) in line 121
      protection public
      8 lines of code
      3 parameters
      3 conditional paths
      uses variable ruleChain defined in net::sourceforge::pmd::RuleSets
      uses function apply(List< Node >,RuleContext,Language) defined in net::sourceforge::pmd::RuleChain
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
      uses function getSourceCodeFile() defined in net::sourceforge::pmd::RuleContext
   function end(RuleContext) in line 133
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function getAllRules() in line 79
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function getAllRuleSets() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function getRuleByName(String) in line 165
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function getRuleSetsIterator() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function removeDysfunctionalRules(Collection< Rule >) in line 200
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function ruleCount() in line 178
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function start(RuleContext) in line 105
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function usesDFA(Language) in line 146
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function usesTypeResolution(Language) in line 186
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable ruleSets defined in net::sourceforge::pmd::RuleSets
   function RuleSets() in line 36
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function RuleSets(RuleSet) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addRuleSet(RuleSet) defined in net::sourceforge::pmd::RuleSets
   variable ruleChain in line 31
   variable ruleSets in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RulesetsFactoryUtils.java
module net::sourceforge::pmd::RulesetsFactoryUtils
   function getRulesetFactory(PMDConfiguration) in line 67
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getMinimumPriority() defined in net::sourceforge::pmd::PMDConfiguration
   function getRuleSets(String,RuleSetFactory) in line 27
      protection public
      18 lines of code
      2 parameters
      3 conditional paths
      uses function setWarnDeprecated(boolean) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function printRuleNamesInDebug(RuleSets) defined in net::sourceforge::pmd::RulesetsFactoryUtils
      uses function ruleCount() defined in net::sourceforge::pmd::RuleSets
      uses variable LOG defined in net::sourceforge::pmd::RulesetsFactoryUtils
   function getRuleSetsWithBenchmark(String,RuleSetFactory) in line 55
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getRuleSets(String,RuleSetFactory) defined in net::sourceforge::pmd::RulesetsFactoryUtils
      uses variable LoadRules defined in net::sourceforge::pmd::benchmark::Benchmark
   function printRuleNamesInDebug(RuleSets) in line 78
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable LOG defined in net::sourceforge::pmd::RulesetsFactoryUtils
      uses variable r defined in sample-matlab.m
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
   function RulesetsFactoryUtils() in line 16
      1 lines of code
      0 parameters
      1 conditional paths
   variable LOG in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleSetWriter.java
module net::sourceforge::pmd::RuleSetWriter
   function close() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outputStream defined in net::sourceforge::pmd::RuleSetWriter
   function createCDATASectionElement(String,String) in line 364
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable document defined in net::sourceforge::pmd::RuleSetWriter
      uses variable RULESET_NS_URI defined in net::sourceforge::pmd::RuleSetWriter
   function createDescriptionElement(String) in line 118
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createTextElement(String,String) defined in net::sourceforge::pmd::RuleSetWriter
   function createExampleElement(String) in line 140
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createCDATASectionElement(String,String) defined in net::sourceforge::pmd::RuleSetWriter
   function createExcludeElement(String) in line 134
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable document defined in net::sourceforge::pmd::RuleSetWriter
      uses variable RULESET_NS_URI defined in net::sourceforge::pmd::RuleSetWriter
   function createExcludePatternElement(String) in line 122
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createTextElement(String,String) defined in net::sourceforge::pmd::RuleSetWriter
   function createIncludePatternElement(String) in line 126
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createTextElement(String,String) defined in net::sourceforge::pmd::RuleSetWriter
   function createPriorityElement(RulePriority) in line 144
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createTextElement(String,String) defined in net::sourceforge::pmd::RuleSetWriter
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function createPropertiesElement() in line 148
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable document defined in net::sourceforge::pmd::RuleSetWriter
      uses variable RULESET_NS_URI defined in net::sourceforge::pmd::RuleSetWriter
   function createPropertiesElement(List< PropertyDescriptor<?>>,Map< PropertyDescriptor<?>, Object >) in line 257
      53 lines of code
      2 parameters
      13 conditional paths
      uses function createPropertiesElement() defined in net::sourceforge::pmd::RuleSetWriter
      uses function createPropertyDefinitionElementBR(PropertyDescriptor<?>) defined in net::sourceforge::pmd::RuleSetWriter
      uses function createPropertyValueElement(PropertyDescriptor,Object) defined in net::sourceforge::pmd::RuleSetWriter
   function createPropertyDefinitionElementBR(PropertyDescriptor<?>) in line 344
      12 lines of code
      1 parameters
      2 conditional paths
      uses function createPropertyValueElement(PropertyDescriptor,Object) defined in net::sourceforge::pmd::RuleSetWriter
      uses variable TYPE defined in net::sourceforge::pmd::PropertyDescriptorFields
   function createPropertyValueElement(PropertyDescriptor,Object) in line 311
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable document defined in net::sourceforge::pmd::RuleSetWriter
      uses variable RULESET_NS_URI defined in net::sourceforge::pmd::RuleSetWriter
      uses variable XPATH_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::properties::AbstractProperty
      uses function createCDATASectionElement(String,String) defined in net::sourceforge::pmd::RuleSetWriter
   function createRuleElement() in line 130
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable document defined in net::sourceforge::pmd::RuleSetWriter
      uses variable RULESET_NS_URI defined in net::sourceforge::pmd::RuleSetWriter
   function createRuleElement(Rule) in line 152
      40 lines of code
      1 parameters
      4 conditional paths
      uses function getRuleSetReference() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function isAllRules() defined in net::sourceforge::pmd::RuleSetReference
      uses variable ruleSetFileNames defined in net::sourceforge::pmd::RuleSetWriter
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReference
      uses function createRuleSetReferenceElement(RuleSetReference) defined in net::sourceforge::pmd::RuleSetWriter
      uses function getOverriddenLanguage() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenMinimumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenMaximumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function isOverriddenDeprecated() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenName() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getRule() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getOverriddenMessage() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenExternalInfoUrl() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenDescription() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenPriority() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenPropertyDescriptors() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenExamples() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function createSingleRuleElement(Language,LanguageVersion,LanguageVersion,Boolean,String,String,String,String,String,String,Boolean,Boolean,String,RulePriority,List< PropertyDescriptor<?>>,Map< PropertyDescriptor<?>, Object >,List< String >) defined in net::sourceforge::pmd::RuleSetWriter
      uses function getLanguage() defined in net::sourceforge::pmd::Rule
      uses function getMinimumLanguageVersion() defined in net::sourceforge::pmd::Rule
      uses function getMaximumLanguageVersion() defined in net::sourceforge::pmd::Rule
      uses function isDeprecated() defined in net::sourceforge::pmd::Rule
      uses function getSince() defined in net::sourceforge::pmd::Rule
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses function getExternalInfoUrl() defined in net::sourceforge::pmd::Rule
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
      uses function usesDFA() defined in net::sourceforge::pmd::Rule
      uses function usesTypeResolution() defined in net::sourceforge::pmd::Rule
      uses function getDescription() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPropertyDescriptors() defined in net::sourceforge::pmd::PropertySource
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::PropertySource
      uses function getExamples() defined in net::sourceforge::pmd::Rule
   function createRuleSetElement(RuleSet) in line 91
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable document defined in net::sourceforge::pmd::RuleSetWriter
      uses variable RULESET_NS_URI defined in net::sourceforge::pmd::RuleSetWriter
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function createDescriptionElement(String) defined in net::sourceforge::pmd::RuleSetWriter
      uses function getDescription() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function createExcludePatternElement(String) defined in net::sourceforge::pmd::RuleSetWriter
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function createIncludePatternElement(String) defined in net::sourceforge::pmd::RuleSetWriter
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function createRuleElement() defined in net::sourceforge::pmd::RuleSetWriter
   function createRuleSetReferenceElement(RuleSetReference) in line 246
      9 lines of code
      1 parameters
      2 conditional paths
      uses function createRuleElement() defined in net::sourceforge::pmd::RuleSetWriter
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReference
      uses function getExcludes() defined in net::sourceforge::pmd::RuleSetReference
      uses function createExcludeElement(String) defined in net::sourceforge::pmd::RuleSetWriter
   function createSingleRuleElement(Language,LanguageVersion,LanguageVersion,Boolean,String,String,String,String,String,String,Boolean,Boolean,String,RulePriority,List< PropertyDescriptor<?>>,Map< PropertyDescriptor<?>, Object >,List< String >) in line 199
      46 lines of code
      17 parameters
      9 conditional paths
      uses function createRuleElement() defined in net::sourceforge::pmd::RuleSetWriter
      uses function getTerseName() defined in net::sourceforge::pmd::lang::Language
      uses function getVersion() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function setIfNonNull(Object,Element,String) defined in net::sourceforge::pmd::RuleSetWriter
      uses function createDescriptionElement(String) defined in net::sourceforge::pmd::RuleSetWriter
      uses function createPriorityElement(RulePriority) defined in net::sourceforge::pmd::RuleSetWriter
      uses function createPropertiesElement() defined in net::sourceforge::pmd::RuleSetWriter
      uses function createExampleElement(String) defined in net::sourceforge::pmd::RuleSetWriter
   function createTextElement(String,String) in line 357
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable document defined in net::sourceforge::pmd::RuleSetWriter
      uses variable RULESET_NS_URI defined in net::sourceforge::pmd::RuleSetWriter
   function setIfNonNull(Object,Element,String) in line 193
      5 lines of code
      3 parameters
      2 conditional paths
   function write(RuleSet) in line 57
      protection public
      33 lines of code
      1 parameters
      3 conditional paths
      uses variable document defined in net::sourceforge::pmd::RuleSetWriter
      uses variable ruleSetFileNames defined in net::sourceforge::pmd::RuleSetWriter
      uses function createRuleSetElement(RuleSet) defined in net::sourceforge::pmd::RuleSetWriter
      uses variable outputStream defined in net::sourceforge::pmd::RuleSetWriter
      uses variable e defined in sample-matlab.m
   function RuleSetWriter(OutputStream) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable outputStream defined in net::sourceforge::pmd::RuleSetWriter
   variable document in line 46
   variable outputStream in line 45
   variable RULESET_NS_URI in line 43
      protection public
   variable ruleSetFileNames in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleViolation.java
module net::sourceforge::pmd::RuleViolation
   function getBeginColumn() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBeginLine() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 86
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDescription() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEndColumn() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getEndLine() in line 62
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFilename() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodName() in line 94
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPackageName() in line 78
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRule() in line 18
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getVariableName() in line 101
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSuppressed() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/RuleViolationComparator.java
module net::sourceforge::pmd::RuleViolationComparator
   inherits from java::util::Comparator
   function compare(final RuleViolation,final RuleViolation) in line 27
      protection public
      22 lines of code
      2 parameters
      7 conditional paths
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getRule() defined in net::sourceforge::pmd::RuleViolation
      uses function getName() defined in net::sourceforge::pmd::Rule
   function compare(final String,final String) in line 50
      10 lines of code
      2 parameters
      3 conditional paths
   function RuleViolationComparator() in line 24
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 22
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/SourceCodeProcessor.java
module net::sourceforge::pmd::SourceCodeProcessor
   function determineLanguage(RuleContext) in line 151
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses variable configuration defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function getLanguageVersionOfFile(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function getSourceCodeFilename() defined in net::sourceforge::pmd::RuleContext
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
   function parse(RuleContext,Reader,Parser) in line 89
      8 lines of code
      3 parameters
      1 conditional paths
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses function getSourceCodeFilename() defined in net::sourceforge::pmd::RuleContext
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function suppress(Map< Integer, String >) defined in net::sourceforge::pmd::Report
      uses function getSuppressMap() defined in net::sourceforge::pmd::lang::Parser
      uses variable Parser defined in net::sourceforge::pmd::benchmark::Benchmark
   function processSource(Reader,RuleSets,RuleContext) in line 133
      15 lines of code
      3 parameters
      1 conditional paths
      uses function getLanguageVersion() defined in net::sourceforge::pmd::RuleContext
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable configuration defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function parse(RuleContext,Reader,Parser) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function symbolFacade(Node,LanguageVersionHandler) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function getLanguage() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function usesDFA(LanguageVersion,Node,RuleSets,Language) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function usesTypeResolution(LanguageVersion,Node,RuleSets,Language) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function apply(List< Node >,RuleContext,Language) defined in net::sourceforge::pmd::RuleSets
   function processSourceCode(InputStream,RuleSets,RuleContext) in line 41
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function getSourceEncoding() defined in net::sourceforge::pmd::AbstractConfiguration
   function processSourceCode(Reader,RuleSets,RuleContext) in line 66
      protection public
      21 lines of code
      3 parameters
      3 conditional paths
      uses function determineLanguage(RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function processSource(Reader,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses variable e defined in sample-matlab.m
   function symbolFacade(Node,LanguageVersionHandler) in line 98
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getSymbolFacade() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses variable configuration defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function getClassLoader() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable SymbolTable defined in net::sourceforge::pmd::benchmark::Benchmark
   function usesDFA(LanguageVersion,Node,RuleSets,Language) in line 112
      10 lines of code
      4 parameters
      2 conditional paths
      uses function usesDFA(Language) defined in net::sourceforge::pmd::RuleSets
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDataFlowFacade() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function start(Node) defined in net::sourceforge::pmd::lang::VisitorStarter
      uses variable DFA defined in net::sourceforge::pmd::benchmark::Benchmark
   function usesTypeResolution(LanguageVersion,Node,RuleSets,Language) in line 123
      9 lines of code
      4 parameters
      2 conditional paths
      uses function usesTypeResolution(Language) defined in net::sourceforge::pmd::RuleSets
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getTypeResolutionFacade(ClassLoader) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses variable configuration defined in net::sourceforge::pmd::SourceCodeProcessor
      uses function getClassLoader() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable TypeResolution defined in net::sourceforge::pmd::benchmark::Benchmark
   function SourceCodeProcessor(PMDConfiguration) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable configuration defined in net::sourceforge::pmd::SourceCodeProcessor
   variable configuration in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/stat/DataPoint.java
module net::sourceforge::pmd::stat::DataPoint
   inherits from Comparable
   function compareTo(DataPoint) in line 39
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable score defined in net::sourceforge::pmd::stat::DataPoint
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
      uses variable random defined in net::sourceforge::pmd::stat::DataPoint
   function getMessage() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in net::sourceforge::pmd::stat::DataPoint
   function getNode() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::stat::DataPoint
   function getScore() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable score defined in net::sourceforge::pmd::stat::DataPoint
   function setMessage(String) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable message defined in net::sourceforge::pmd::stat::DataPoint
   function setNode(Node) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::stat::DataPoint
   function setScore(double) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable score defined in net::sourceforge::pmd::stat::DataPoint
   function DataPoint() in line 25
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::DataPoint
   variable message in line 20
   variable node in line 17
   variable random in line 18
   variable score in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/stat/Metric.java
module net::sourceforge::pmd::stat::Metric
   function getAverage() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mean defined in net::sourceforge::pmd::stat::Metric
   function getCount() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable count defined in net::sourceforge::pmd::stat::Metric
   function getHighValue() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable high defined in net::sourceforge::pmd::stat::Metric
   function getLowValue() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable low defined in net::sourceforge::pmd::stat::Metric
   function getMetricName() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable metricName defined in net::sourceforge::pmd::stat::Metric
   function getStandardDeviation() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stddev defined in net::sourceforge::pmd::stat::Metric
   function getTotal() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable total defined in net::sourceforge::pmd::stat::Metric
   function Metric(String,int,double,double,double,double,double) in line 30
      protection public
      9 lines of code
      7 parameters
      1 conditional paths
      uses variable low defined in net::sourceforge::pmd::stat::Metric
      uses variable high defined in net::sourceforge::pmd::stat::Metric
      uses variable mean defined in net::sourceforge::pmd::stat::Metric
      uses variable stddev defined in net::sourceforge::pmd::stat::Metric
      uses variable count defined in net::sourceforge::pmd::stat::Metric
      uses variable total defined in net::sourceforge::pmd::stat::Metric
   variable count in line 13
   variable high in line 16
   variable low in line 15
   variable mean in line 17
   variable metricName in line 12
   variable stddev in line 18
   variable total in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/SynchronizedReportListener.java
module net::sourceforge::pmd::SynchronizedReportListener
   inherits from net::sourceforge::pmd::ReportListener
   function metricAdded(Metric) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable wrapped defined in net::sourceforge::pmd::SynchronizedReportListener
      uses function metricAdded(Metric) defined in net::sourceforge::pmd::ReportListener
   function ruleViolationAdded(RuleViolation) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable wrapped defined in net::sourceforge::pmd::SynchronizedReportListener
      uses function ruleViolationAdded(RuleViolation) defined in net::sourceforge::pmd::ReportListener
   function SynchronizedReportListener(ReportListener) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable wrapped in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/ClasspathClassLoader.java
module net::sourceforge::pmd::util::ClasspathClassLoader
   inherits from java::net::URLClassLoader
   function addClasspathURLs(final List< URL >,final String) in line 51
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable LOG defined in net::sourceforge::pmd::util::ClasspathClassLoader
      uses function createURLFromPath(String) defined in net::sourceforge::pmd::util::ClasspathClassLoader
   function addFileURLs(List< URL >,URL) in line 60
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable LOG defined in net::sourceforge::pmd::util::ClasspathClassLoader
      uses function createURLFromPath(String) defined in net::sourceforge::pmd::util::ClasspathClassLoader
   function createURLFromPath(String) in line 78
      4 lines of code
      1 parameters
      1 conditional paths
   function initURLs(String) in line 36
      14 lines of code
      1 parameters
      3 conditional paths
      uses function addFileURLs(List< URL >,URL) defined in net::sourceforge::pmd::util::ClasspathClassLoader
      uses function addClasspathURLs(final List< URL >,final String) defined in net::sourceforge::pmd::util::ClasspathClassLoader
   function toString() in line 87
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getParent((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
   function ClasspathClassLoader(String,ClassLoader) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function initURLs(String) defined in net::sourceforge::pmd::util::ClasspathClassLoader
   variable LOG in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/ClassUtil.java
module net::sourceforge::pmd::util::ClassUtil
   function asMethodGroupsByTypeName(Method[]) in line 141
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function asShortestName(Class<?>) defined in net::sourceforge::pmd::util::ClassUtil
   function asShortestName(Class<?>) in line 91
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable SHORT_NAMES_BY_TYPE defined in net::sourceforge::pmd::util::ClassUtil
   function computeClassShortNames() in line 52
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable PRIMITIVE_TYPE_NAMES defined in net::sourceforge::pmd::util::ClassUtil
      uses function asInverseWithShortName() defined in net::sourceforge::pmd::util::TypeMap
      uses variable TYPES_BY_NAME defined in net::sourceforge::pmd::util::ClassUtil
   function getClassShortNames() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable SHORT_NAMES_BY_TYPE defined in net::sourceforge::pmd::util::ClassUtil
   function getPrimitiveTypeFor(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable PRIMITIVE_TYPE_NAMES defined in net::sourceforge::pmd::util::ClassUtil
      uses function typeFor(String) defined in net::sourceforge::pmd::util::TypeMap
   function getTypeFor(String) in line 70
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable TYPES_BY_NAME defined in net::sourceforge::pmd::util::ClassUtil
      uses function typeFor(String) defined in net::sourceforge::pmd::util::TypeMap
      uses variable PRIMITIVE_TYPE_NAMES defined in net::sourceforge::pmd::util::ClassUtil
   function methodFor(Class<?>,String,Class<?>[]) in line 119
      protection public
      15 lines of code
      3 parameters
      4 conditional paths
      uses variable method defined in sample-matlab.m
   function withoutPackageName(String) in line 104
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function ClassUtil() in line 23
      2 lines of code
      0 parameters
      1 conditional paths
   variable EMPTY_CLASS_ARRAY in line 21
      protection public
   variable PRIMITIVE_TYPE_NAMES in line 27
   variable SHORT_NAMES_BY_TYPE in line 34
   variable TYPES_BY_NAME in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/CollectionUtil.java
module net::sourceforge::pmd::util::CollectionUtil
   function addWithoutDuplicates(Collection< String >,Collection< String >) in line 46
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
   function addWithoutDuplicates(T[],T) in line 281
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
   function addWithoutDuplicates(T[],T[]) in line 303
      protection public
      15 lines of code
      2 parameters
      5 conditional paths
   function areEqual(Object,Object) in line 206
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
      uses function arraysAreEqual(Object,Object) defined in net::sourceforge::pmd::util::CollectionUtil
   function areSemanticEquals(T[],T[]) in line 253
      protection public
      17 lines of code
      2 parameters
      6 conditional paths
      uses function isEmpty(Object[]) defined in net::sourceforge::pmd::util::CollectionUtil
      uses function areEqual(Object,Object) defined in net::sourceforge::pmd::util::CollectionUtil
   function arraysAreEqual(Object,Object) in line 162
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function valuesAreTransitivelyEqual(Object[],Object[]) defined in net::sourceforge::pmd::util::CollectionUtil
   function asSet(T[]) in line 116
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getCollectionTypeFor(String) in line 67
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable COLLECTION_CLASSES_BY_NAMES defined in net::sourceforge::pmd::util::CollectionUtil
      uses function typeFor(String) defined in net::sourceforge::pmd::util::TypeMap
      uses variable COLLECTION_INTERFACES_BY_NAMES defined in net::sourceforge::pmd::util::CollectionUtil
   function invertedMapFrom(Map< K, V >) in line 146
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function isCollectionType(String,boolean) in line 84
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable COLLECTION_CLASSES_BY_NAMES defined in net::sourceforge::pmd::util::CollectionUtil
      uses function contains(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
      uses variable COLLECTION_INTERFACES_BY_NAMES defined in net::sourceforge::pmd::util::CollectionUtil
   function isCollectionType(Class<?>,boolean) in line 101
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable COLLECTION_CLASSES_BY_NAMES defined in net::sourceforge::pmd::util::CollectionUtil
      uses function contains(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
      uses variable COLLECTION_INTERFACES_BY_NAMES defined in net::sourceforge::pmd::util::CollectionUtil
   function isEmpty(Object[]) in line 228
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isNotEmpty(Object[]) in line 239
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isEmpty(Object[]) defined in net::sourceforge::pmd::util::CollectionUtil
   function mapFrom(K[],V[]) in line 129
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function valuesAreTransitivelyEqual(Object[],Object[]) in line 180
      protection public
      17 lines of code
      2 parameters
      6 conditional paths
      uses function areEqual(Object,Object) defined in net::sourceforge::pmd::util::CollectionUtil
   function CollectionUtil() in line 35
      2 lines of code
      0 parameters
      1 conditional paths
   variable COLLECTION_CLASSES_BY_NAMES in line 30
      protection public
   variable COLLECTION_INTERFACES_BY_NAMES in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/CompoundIterator.java
module net::sourceforge::pmd::util::CompoundIterator
   inherits from java::util::Iterator
   function getNextIterator() in line 61
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable index defined in net::sourceforge::pmd::util::CompoundIterator
      uses variable iterators defined in net::sourceforge::pmd::util::CompoundIterator
      uses function hasNext() defined in net::sourceforge::pmd::util::CompoundIterator
   function hasNext() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNextIterator() defined in net::sourceforge::pmd::util::CompoundIterator
   function next() in line 39
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getNextIterator() defined in net::sourceforge::pmd::util::CompoundIterator
   function remove() in line 51
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getNextIterator() defined in net::sourceforge::pmd::util::CompoundIterator
   function CompoundIterator(Iterator< T >...) in line 24
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable iterators defined in net::sourceforge::pmd::util::CompoundIterator
   variable index in line 18
   variable iterators in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/database/DBMSMetadata.java
module net::sourceforge::pmd::util::database::DBMSMetadata
   function getConnection() in line 96
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
      uses variable connection defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function getSourceCode(SourceObject) in line 218
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getSourceCode(String,String,String) in line 235
      protection public
      35 lines of code
      3 parameters
      3 conditional paths
      uses variable callableStatement defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable returnSourceCodeStatement defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable returnType defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function getConnection() defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function getSourceObjectList() in line 275
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses variable dburi defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function getLanguagesList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSchemasList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSourceCodeTypesList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSourceCodeNamesList() defined in net::sourceforge::pmd::util::database::DBURI
   function getSourceObjectList(List< String >,List< String >,List< String >,List< String >) in line 305
      protection public
      233 lines of code
      4 parameters
      19 conditional paths
      uses variable dburi defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function getLanguagesList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSchemasList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSourceCodeTypesList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSourceCodeNamesList() defined in net::sourceforge::pmd::util::database::DBURI
      uses variable returnSourceCodeObjectsStatement defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function getConnection() defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable connection defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function init(DBURI) in line 190
      20 lines of code
      1 parameters
      4 conditional paths
      uses function getDbType() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getProperties() defined in net::sourceforge::pmd::util::database::DBType
      uses variable GET_SOURCE_OBJECTS_STATEMENT defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable GET_SOURCE_CODE_STATEMENT defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable returnSourceCodeStatement defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable returnType defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function DBMSMetadata(Connection) in line 105
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
      uses variable connection defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable c defined in sample-matlab.m
   function DBMSMetadata(String,String,DBURI) in line 118
      protection public
      15 lines of code
      3 parameters
      2 conditional paths
      uses function init(DBURI) defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable connection defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function DBMSMetadata(Properties,DBURI) in line 144
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses function init(DBURI) defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable connection defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function DBMSMetadata(DBURI) in line 174
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function init(DBURI) defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses variable connection defined in net::sourceforge::pmd::util::database::DBMSMetadata
   variable callableStatement in line 81
   variable CLASS_NAME in line 35
   variable connection in line 66
   variable dburi in line 61
   variable GET_SOURCE_CODE_STATEMENT in line 56
   variable GET_SOURCE_OBJECTS_STATEMENT in line 48
   variable LOGGER in line 40
   variable returnSourceCodeObjectsStatement in line 71
   variable returnSourceCodeStatement in line 76
   variable returnType in line 88
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/database/DBType.java
module net::sourceforge::pmd::util::database::DBType
   function equals(Object) in line 280
      protection public
      58 lines of code
      1 parameters
      23 conditional paths
      uses function DBType(String) defined in net::sourceforge::pmd::util::database::DBType
      uses variable characterSet defined in net::sourceforge::pmd::util::database::DBType
      uses variable driverClass defined in net::sourceforge::pmd::util::database::DBType
      uses variable languages defined in net::sourceforge::pmd::util::database::DBType
      uses variable properties defined in net::sourceforge::pmd::util::database::DBType
      uses variable propertiesSource defined in net::sourceforge::pmd::util::database::DBType
      uses variable sourceCodeReturnType defined in net::sourceforge::pmd::util::database::DBType
      uses variable sourceCodeTypes defined in net::sourceforge::pmd::util::database::DBType
   function getCharacterSet() in line 349
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable characterSet defined in net::sourceforge::pmd::util::database::DBType
   function getDriverClass() in line 342
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable driverClass defined in net::sourceforge::pmd::util::database::DBType
   function getLanguages() in line 363
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable languages defined in net::sourceforge::pmd::util::database::DBType
   function getProperties() in line 134
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable properties defined in net::sourceforge::pmd::util::database::DBType
   function getPropertiesSource() in line 377
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertiesSource defined in net::sourceforge::pmd::util::database::DBType
   function getResourceBundleAsProperties(ResourceBundle) in line 256
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable properties defined in net::sourceforge::pmd::util::database::DBType
   function getSourceCodeReturnType() in line 370
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceCodeReturnType defined in net::sourceforge::pmd::util::database::DBType
   function getSourceCodeTypes() in line 356
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceCodeTypes defined in net::sourceforge::pmd::util::database::DBType
   function hashCode() in line 266
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable characterSet defined in net::sourceforge::pmd::util::database::DBType
      uses variable driverClass defined in net::sourceforge::pmd::util::database::DBType
      uses variable languages defined in net::sourceforge::pmd::util::database::DBType
      uses variable properties defined in net::sourceforge::pmd::util::database::DBType
      uses variable propertiesSource defined in net::sourceforge::pmd::util::database::DBType
      uses variable sourceCodeReturnType defined in net::sourceforge::pmd::util::database::DBType
      uses variable sourceCodeTypes defined in net::sourceforge::pmd::util::database::DBType
   function loadDBProperties(String) in line 154
      87 lines of code
      1 parameters
      11 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBType
      uses variable CLASS_NAME defined in net::sourceforge::pmd::util::database::DBType
      uses variable propertiesSource defined in net::sourceforge::pmd::util::database::DBType
      uses variable INTERNAL_SETTINGS defined in net::sourceforge::pmd::util::database::DBType
      uses function getResourceBundleAsProperties(ResourceBundle) defined in net::sourceforge::pmd::util::database::DBType
      uses function getPropertiesSource() defined in net::sourceforge::pmd::util::database::DBType
      uses function equals(Object) defined in net::sourceforge::pmd::util::database::DBType
      uses function setProperties(Properties) defined in net::sourceforge::pmd::util::database::DBType
   function setProperties(Properties) in line 384
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
      uses variable properties defined in net::sourceforge::pmd::util::database::DBType
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBType
   function toString() in line 417
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable CLASS_NAME defined in net::sourceforge::pmd::util::database::DBType
      uses variable propertiesSource defined in net::sourceforge::pmd::util::database::DBType
   function DBType(String) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable properties defined in net::sourceforge::pmd::util::database::DBType
      uses function loadDBProperties(String) defined in net::sourceforge::pmd::util::database::DBType
   function DBType(String,String) in line 101
      protection public
      32 lines of code
      2 parameters
      7 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBType
      uses variable properties defined in net::sourceforge::pmd::util::database::DBType
      uses function loadDBProperties(String) defined in net::sourceforge::pmd::util::database::DBType
   variable characterSet in line 75
   variable CLASS_NAME in line 23
   variable driverClass in line 72
   variable INTERNAL_SETTINGS in line 27
   variable languages in line 81
   variable LOGGER in line 25
   variable properties in line 69
   variable propertiesSource in line 64
   variable sourceCodeReturnType in line 84
   variable sourceCodeTypes in line 78
module net::sourceforge::pmd::util::database::DBType::property
   function getDescription() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPropertyName() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function property(String,String) in line 47
      4 lines of code
      2 parameters
      1 conditional paths
   variable CHARACTERSET in line 35
      protection public
   variable description in line 45
   variable DRIVER in line 34
      protection public
   variable GET_SOURCE_CODE_STATEMENT in line 41
      protection public
   variable LANGUAGES in line 36
      protection public
   variable name in line 44
   variable PASSWORD in line 34
      protection public
   variable RETURN_TYPE in line 42
      protection public
   variable SCHEMAS in line 37
      protection public
   variable SOURCE_NAMES in line 39
      protection public
   variable SOURCE_TYPES in line 38
      protection public
   variable USER in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/database/DBURI.java
module net::sourceforge::pmd::util::database::DBURI
   function getCharacterSet() in line 401
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable characterSet defined in net::sourceforge::pmd::util::database::DBURI
   function getDbType() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dbType defined in net::sourceforge::pmd::util::database::DBURI
   function getDriverClass() in line 393
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable driverClass defined in net::sourceforge::pmd::util::database::DBURI
   function getLanguagesList() in line 385
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable languagesList defined in net::sourceforge::pmd::util::database::DBURI
   function getParameterMap(URI) in line 277
      22 lines of code
      1 parameters
      7 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBURI
   function getParameters() in line 433
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameters defined in net::sourceforge::pmd::util::database::DBURI
   function getSchemasList() in line 361
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable schemasList defined in net::sourceforge::pmd::util::database::DBURI
   function getSourceCodeNamesList() in line 377
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceCodeNamesList defined in net::sourceforge::pmd::util::database::DBURI
   function getSourceCodeType() in line 409
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceCodeType defined in net::sourceforge::pmd::util::database::DBURI
   function getSourceCodeTypesList() in line 369
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceCodeTypesList defined in net::sourceforge::pmd::util::database::DBURI
   function getSubnamePrefix() in line 425
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable subnamePrefix defined in net::sourceforge::pmd::util::database::DBURI
   function getSubprotocol() in line 417
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable subprotocol defined in net::sourceforge::pmd::util::database::DBURI
   function getUri() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::util::database::DBURI
   function getURL() in line 444
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in net::sourceforge::pmd::util::database::DBURI
   function setCharacterSet(String) in line 405
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable characterSet defined in net::sourceforge::pmd::util::database::DBURI
   function setDbType(DBType) in line 357
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dbType defined in net::sourceforge::pmd::util::database::DBURI
   function setDriverClass(String) in line 397
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable driverClass defined in net::sourceforge::pmd::util::database::DBURI
   function setFields() in line 461
      101 lines of code
      0 parameters
      14 conditional paths
      uses variable url defined in net::sourceforge::pmd::util::database::DBURI
      uses function getURL() defined in net::sourceforge::pmd::util::database::DBURI
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBURI
      uses variable subprotocol defined in net::sourceforge::pmd::util::database::DBURI
      uses variable subnamePrefix defined in net::sourceforge::pmd::util::database::DBURI
      uses variable dbType defined in net::sourceforge::pmd::util::database::DBURI
      uses function getProperties() defined in net::sourceforge::pmd::util::database::DBType
      uses function getDriverClass() defined in net::sourceforge::pmd::util::database::DBType
      uses function getCharacterSet() defined in net::sourceforge::pmd::util::database::DBType
      uses function getLanguages() defined in net::sourceforge::pmd::util::database::DBType
      uses function getSourceCodeTypes() defined in net::sourceforge::pmd::util::database::DBType
      uses variable sourceCodeTypes defined in net::sourceforge::pmd::util::database::DBURI
      uses variable schemasList defined in net::sourceforge::pmd::util::database::DBURI
      uses variable sourceCodeNames defined in net::sourceforge::pmd::util::database::DBURI
      uses variable sourceCodeType defined in net::sourceforge::pmd::util::database::DBURI
      uses variable sourceCodeNamesList defined in net::sourceforge::pmd::util::database::DBURI
      uses variable languages defined in net::sourceforge::pmd::util::database::DBURI
      uses variable languagesList defined in net::sourceforge::pmd::util::database::DBURI
      uses variable sourceCodeTypesList defined in net::sourceforge::pmd::util::database::DBURI
   function setLanguagesList(List< String >) in line 389
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable languagesList defined in net::sourceforge::pmd::util::database::DBURI
   function setParameters(Map< String, String >) in line 437
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parameters defined in net::sourceforge::pmd::util::database::DBURI
   function setSchemasList(List< String >) in line 365
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable schemasList defined in net::sourceforge::pmd::util::database::DBURI
   function setSourceCodeNamesList(List< String >) in line 381
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceCodeNamesList defined in net::sourceforge::pmd::util::database::DBURI
   function setSourceCodeType(int) in line 413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceCodeType defined in net::sourceforge::pmd::util::database::DBURI
   function setSourceCodeTypesList(List< String >) in line 373
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceCodeTypesList defined in net::sourceforge::pmd::util::database::DBURI
   function setSubnamePrefix(String) in line 429
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable subnamePrefix defined in net::sourceforge::pmd::util::database::DBURI
   function setSubprotocol(String) in line 421
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable subprotocol defined in net::sourceforge::pmd::util::database::DBURI
   function setUri(URI) in line 349
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::util::database::DBURI
   function setURL(String) in line 451
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 564
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::util::database::DBURI
   function DBURI(String) in line 143
      protection public
      87 lines of code
      1 parameters
      8 conditional paths
      uses variable uri defined in net::sourceforge::pmd::util::database::DBURI
      uses variable url defined in net::sourceforge::pmd::util::database::DBURI
      uses variable LOGGER defined in net::sourceforge::pmd::util::database::DBURI
      uses function setFields() defined in net::sourceforge::pmd::util::database::DBURI
      uses variable parameters defined in net::sourceforge::pmd::util::database::DBURI
      uses function getParameterMap(URI) defined in net::sourceforge::pmd::util::database::DBURI
      uses variable characterSet defined in net::sourceforge::pmd::util::database::DBURI
      uses variable sourceCodeTypes defined in net::sourceforge::pmd::util::database::DBURI
      uses variable sourceCodeNames defined in net::sourceforge::pmd::util::database::DBURI
      uses variable languages defined in net::sourceforge::pmd::util::database::DBURI
      uses variable sourceCodeNamesList defined in net::sourceforge::pmd::util::database::DBURI
      uses variable languagesList defined in net::sourceforge::pmd::util::database::DBURI
      uses variable schemasList defined in net::sourceforge::pmd::util::database::DBURI
      uses variable sourceCodeTypesList defined in net::sourceforge::pmd::util::database::DBURI
      uses variable e defined in sample-matlab.m
   function DBURI(String,String,String,int,String,String,String) in line 263
      protection public
      6 lines of code
      7 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::util::database::DBURI
   variable characterSet in line 101
   variable CLASS_NAME in line 47
   variable dbType in line 66
   variable driverClass in line 98
   variable languages in line 110
   variable languagesList in line 95
   variable LOGGER in line 49
   variable parameters in line 83
   variable schemasList in line 86
   variable sourceCodeNames in line 107
   variable sourceCodeNamesList in line 92
   variable sourceCodeType in line 113
   variable sourceCodeTypes in line 104
   variable sourceCodeTypesList in line 89
   variable subnamePrefix in line 78
   variable subprotocol in line 73
   variable uri in line 64
   variable url in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/database/ResourceLoader.java
module net::sourceforge::pmd::util::database::ResourceLoader
   function getResourceStream(String) in line 14
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/ResourceLoader.java
module net::sourceforge::pmd::util::ResourceLoader
   function loadResourceAsStream(String) in line 45
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function loadResourceAsStream(String,ClassLoader) in line 61
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable TIMEOUT defined in net::sourceforge::pmd::util::ResourceLoader
   function ResourceLoader() in line 34
      2 lines of code
      0 parameters
      1 conditional paths
   variable TIMEOUT in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/database/ResourceResolver.java
module net::sourceforge::pmd::util::database::ResourceResolver
   inherits from javax::xml::transform::URIResolver
   function resolve(String,String) in line 14
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses function getResourceStream(String) defined in net::sourceforge::pmd::util::database::ResourceLoader
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/database/SourceObject.java
module net::sourceforge::pmd::util::database::SourceObject
   function getName() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPseudoFileName() in line 152
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getSchema() defined in net::sourceforge::pmd::util::database::SourceObject
      uses function getType() defined in net::sourceforge::pmd::util::database::SourceObject
      uses function getName() defined in net::sourceforge::pmd::util::database::SourceObject
      uses function getSuffixFromType() defined in net::sourceforge::pmd::util::database::SourceObject
   function getRevision() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSchema() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSuffixFromType() in line 121
      protection public
      25 lines of code
      0 parameters
      10 conditional paths
      uses variable LOG defined in net::sourceforge::pmd::util::database::SourceObject
      uses variable CLASS_NAME defined in net::sourceforge::pmd::util::database::SourceObject
   function getType() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setName(String) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRevision(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSchema(String) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setType(String) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 54
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getSchema() defined in net::sourceforge::pmd::util::database::SourceObject
      uses function getType() defined in net::sourceforge::pmd::util::database::SourceObject
      uses function getName() defined in net::sourceforge::pmd::util::database::SourceObject
      uses function getRevision() defined in net::sourceforge::pmd::util::database::SourceObject
   variable CLASS_NAME in line 15
   variable LOG in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/datasource/DataSource.java
module net::sourceforge::pmd::util::datasource::DataSource
   function getInputStream() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNiceFileName(boolean,String) in line 30
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/datasource/FileDataSource.java
module net::sourceforge::pmd::util::datasource::FileDataSource
   inherits from net::sourceforge::pmd::util::datasource::DataSource
   function getInputStream() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable file defined in net::sourceforge::pmd::util::datasource::FileDataSource
   function getNiceFileName(boolean,String) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function glomName(boolean,String,File) defined in net::sourceforge::pmd::util::datasource::FileDataSource
      uses variable file defined in net::sourceforge::pmd::util::datasource::FileDataSource
   function glomName(boolean,String,File) in line 36
      18 lines of code
      3 parameters
      5 conditional paths
      uses function trimAnyPathSep(String) defined in net::sourceforge::pmd::util::datasource::FileDataSource
      uses variable file defined in net::sourceforge::pmd::util::datasource::FileDataSource
      uses variable FILE_SEPARATOR defined in net::sourceforge::pmd::util::datasource::FileDataSource
      uses variable e defined in sample-matlab.m
   function trimAnyPathSep(String) in line 55
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable FILE_SEPARATOR defined in net::sourceforge::pmd::util::datasource::FileDataSource
   function FileDataSource(File) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable file defined in net::sourceforge::pmd::util::datasource::FileDataSource
   variable file in line 19
   variable FILE_SEPARATOR in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/datasource/ReaderDataSource.java
module net::sourceforge::pmd::util::datasource::ReaderDataSource
   inherits from net::sourceforge::pmd::util::datasource::DataSource
   function getDataSourceName() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dataSourceName defined in net::sourceforge::pmd::util::datasource::ReaderDataSource
   function getInputStream() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reader defined in net::sourceforge::pmd::util::datasource::ReaderDataSource
   function getNiceFileName(boolean,String) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getDataSourceName() defined in net::sourceforge::pmd::util::datasource::ReaderDataSource
   function setDataSourceName(String) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dataSourceName defined in net::sourceforge::pmd::util::datasource::ReaderDataSource
   function toString() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dataSourceName defined in net::sourceforge::pmd::util::datasource::ReaderDataSource
   function ReaderDataSource(Reader,String) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable reader defined in net::sourceforge::pmd::util::datasource::ReaderDataSource
      uses variable dataSourceName defined in net::sourceforge::pmd::util::datasource::ReaderDataSource
   variable dataSourceName in line 27
   variable reader in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/datasource/ZipDataSource.java
module net::sourceforge::pmd::util::datasource::ZipDataSource
   inherits from net::sourceforge::pmd::util::datasource::DataSource
   function getInputStream() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipFile defined in net::sourceforge::pmd::util::datasource::ZipDataSource
      uses variable zipEntry defined in net::sourceforge::pmd::util::datasource::ZipDataSource
   function getNiceFileName(boolean,String) in line 33
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable zipFile defined in net::sourceforge::pmd::util::datasource::ZipDataSource
      uses variable zipEntry defined in net::sourceforge::pmd::util::datasource::ZipDataSource
   function ZipDataSource(ZipFile,ZipEntry) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable zipFile defined in net::sourceforge::pmd::util::datasource::ZipDataSource
      uses variable zipEntry defined in net::sourceforge::pmd::util::datasource::ZipDataSource
   variable zipEntry in line 18
   variable zipFile in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/DateTimeUtil.java
module net::sourceforge::pmd::util::DateTimeUtil
   function asHoursMinutesSeconds(long) in line 19
      protection public
      34 lines of code
      1 parameters
      7 conditional paths
   function DateTimeUtil() in line 12
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/designer/CodeEditorTextPane.java
module net::sourceforge::pmd::util::designer::CodeEditorTextPane
   inherits from javax::swing::JTextPane
   inherits from net::sourceforge::pmd::util::designer::LineGetter
   function getLine(int) in line 17
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getLines() defined in net::sourceforge::pmd::util::designer::CodeEditorTextPane
   function getLines() in line 12
      4 lines of code
      0 parameters
      1 conditional paths
   function getPosition(String[],int,int) in line 25
      21 lines of code
      3 parameters
      5 conditional paths
   function select(Node) in line 47
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getLines() defined in net::sourceforge::pmd::util::designer::CodeEditorTextPane
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getPosition(String[],int,int) defined in net::sourceforge::pmd::util::designer::CodeEditorTextPane
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndColumn() defined in net::sourceforge::pmd::lang::ast::Node
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/designer/CreateXMLRulePanel.java
module net::sourceforge::pmd::util::designer::CreateXMLRulePanel
   inherits from javax::swing::JPanel
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 116
      protection public
      33 lines of code
      1 parameters
      2 conditional paths
      uses variable xpathQueryArea defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses function appendLn(StringBuilder,String) defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable rulenameField defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable rulemsgField defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable ruledescField defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable ruleXMLArea defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
   function appendLn(StringBuilder,String) in line 34
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function CreateXMLRulePanel(JTextArea,CodeEditorTextPane) in line 38
      protection public
      71 lines of code
      2 parameters
      1 conditional paths
      uses variable xpathQueryArea defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable rulenameField defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable rulemsgField defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable ruledescField defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
      uses variable ruleXMLArea defined in net::sourceforge::pmd::util::designer::CreateXMLRulePanel
   variable codeEditorPane in line 32
   variable ruledescField in line 29
   variable rulemsgField in line 28
   variable rulenameField in line 27
   variable ruleXMLArea in line 30
   variable xpathQueryArea in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/designer/Designer.java
module net::sourceforge::pmd::util::designer::Designer
   inherits from java::awt::datatransfer::ClipboardOwner
   function copyXmlToClipboard() in line 924
      6 lines of code
      0 parameters
      2 conditional paths
      uses function getXmlTreeCode() defined in net::sourceforge::pmd::util::designer::Designer
   function createASTPanel() in line 784
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable astTreeWidget defined in net::sourceforge::pmd::util::designer::Designer
      uses function createNoImageTreeCellRenderer() defined in net::sourceforge::pmd::util::designer::Designer
   function createCodeEditorPanel() in line 772
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses function makeTextComponentUndoable(JTextComponent) defined in net::sourceforge::pmd::util::designer::Designer
   function createGoButton() in line 848
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable e defined in sample-matlab.m
      uses function saveSettings() defined in net::sourceforge::pmd::util::designer::Designer
   function createMenuBar() in line 714
      35 lines of code
      0 parameters
      2 conditional paths
      uses function getSupportedLanguageVersions() defined in net::sourceforge::pmd::util::designer::Designer
      uses function getShortName() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable languageVersionMenuItems defined in net::sourceforge::pmd::util::designer::Designer
      uses function getDefaultLanguageVersionSelectionIndex() defined in net::sourceforge::pmd::util::designer::Designer
      uses variable e defined in sample-matlab.m
      uses function copyXmlToClipboard() defined in net::sourceforge::pmd::util::designer::Designer
      uses function createRuleXML() defined in net::sourceforge::pmd::util::designer::Designer
   function createNoImageTreeCellRenderer() in line 373
      7 lines of code
      0 parameters
      1 conditional paths
   function createRuleXML() in line 750
      21 lines of code
      0 parameters
      2 conditional paths
      uses variable xpathQueryArea defined in net::sourceforge::pmd::util::designer::Designer
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses variable e defined in sample-matlab.m
   function createSymbolTableResultPanel() in line 827
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable symbolTableTreeWidget defined in net::sourceforge::pmd::util::designer::Designer
      uses function createNoImageTreeCellRenderer() defined in net::sourceforge::pmd::util::designer::Designer
   function createXPathQueryPanel() in line 805
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable xpathQueryArea defined in net::sourceforge::pmd::util::designer::Designer
      uses function makeTextComponentUndoable(JTextComponent) defined in net::sourceforge::pmd::util::designer::Designer
      uses function createGoButton() defined in net::sourceforge::pmd::util::designer::Designer
      uses function createXPathVersionPanel() defined in net::sourceforge::pmd::util::designer::Designer
   function createXPathResultPanel() in line 793
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable xpathResults defined in net::sourceforge::pmd::util::designer::Designer
      uses variable xpathResultList defined in net::sourceforge::pmd::util::designer::Designer
   function createXPathVersionPanel() in line 832
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable VERSION_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable xpathVersionButtonGroup defined in net::sourceforge::pmd::util::designer::Designer
   function getCompilationUnit() in line 129
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::util::designer::Designer
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses function getSymbolFacade() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function start(Node) defined in net::sourceforge::pmd::lang::VisitorStarter
      uses function getTypeResolutionFacade(ClassLoader) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function getCompilationUnit(LanguageVersionHandler) in line 140
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCompilationUnit() defined in net::sourceforge::pmd::util::designer::Designer
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
   function getDefaultLanguageVersionSelectionIndex() in line 124
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getSupportedLanguageVersions() defined in net::sourceforge::pmd::util::designer::Designer
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function getLanguageVersion() in line 158
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSupportedLanguageVersions() defined in net::sourceforge::pmd::util::designer::Designer
      uses function selectedLanguageVersionIndex() defined in net::sourceforge::pmd::util::designer::Designer
   function getLanguageVersionHandler() in line 184
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguageVersion() defined in net::sourceforge::pmd::util::designer::Designer
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
   function getSupportedLanguageVersions() in line 144
      13 lines of code
      0 parameters
      4 conditional paths
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function canParse() defined in net::sourceforge::pmd::lang::Parser
   function getTextContext(Element) in line 1029
      10 lines of code
      1 parameters
      3 conditional paths
   function getXmlString(Node) in line 936
      12 lines of code
      1 parameters
      1 conditional paths
   function getXmlTreeCode() in line 904
      7 lines of code
      0 parameters
      4 conditional paths
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses function getCompilationUnit() defined in net::sourceforge::pmd::util::designer::Designer
      uses function getXmlString(Node) defined in net::sourceforge::pmd::util::designer::Designer
      uses variable e defined in sample-matlab.m
   function loadASTTreeData(TreeNode) in line 444
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable astTreeWidget defined in net::sourceforge::pmd::util::designer::Designer
      uses function expandAll(boolean) defined in net::sourceforge::pmd::util::designer::Designer::TreeWidget
   function loadSettings() in line 955
      34 lines of code
      0 parameters
      5 conditional paths
      uses variable SETTINGS_FILE_NAME defined in net::sourceforge::pmd::util::designer::Designer
      uses function getTextContext(Element) defined in net::sourceforge::pmd::util::designer::Designer
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::util::designer::Designer
      uses variable xpathQueryArea defined in net::sourceforge::pmd::util::designer::Designer
      uses variable e defined in sample-matlab.m
      uses variable xpathVersionButtonGroup defined in net::sourceforge::pmd::util::designer::Designer
   function loadSymbolTableTreeData(TreeNode) in line 450
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable symbolTableTreeWidget defined in net::sourceforge::pmd::util::designer::Designer
      uses function expandAll(boolean) defined in net::sourceforge::pmd::util::designer::Designer::TreeWidget
   function lostOwnership(Clipboard,Transferable) in line 949
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function main(String[]) in line 896
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Designer(String[]) defined in net::sourceforge::pmd::util::designer::Designer
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
   function makeTextComponentUndoable(JTextComponent) in line 862
      33 lines of code
      1 parameters
      5 conditional paths
      uses variable e defined in sample-matlab.m
   function saveSettings() in line 990
      38 lines of code
      0 parameters
      2 conditional paths
      uses function getLanguageVersion() defined in net::sourceforge::pmd::util::designer::Designer
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses variable xpathVersionButtonGroup defined in net::sourceforge::pmd::util::designer::Designer
      uses variable xpathQueryArea defined in net::sourceforge::pmd::util::designer::Designer
      uses variable SETTINGS_FILE_NAME defined in net::sourceforge::pmd::util::designer::Designer
      uses variable e defined in sample-matlab.m
   function selectedLanguageVersionIndex() in line 175
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable languageVersionMenuItems defined in net::sourceforge::pmd::util::designer::Designer
   function setLanguageVersion(LanguageVersion) in line 162
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getSupportedLanguageVersions() defined in net::sourceforge::pmd::util::designer::Designer
      uses variable languageVersionMenuItems defined in net::sourceforge::pmd::util::designer::Designer
   function Designer(String[]) in line 666
      protection public
      47 lines of code
      1 parameters
      2 conditional paths
      uses variable exitOnClose defined in net::sourceforge::pmd::util::designer::Designer
      uses variable xpathQueryArea defined in net::sourceforge::pmd::util::designer::Designer
      uses function createCodeEditorPanel() defined in net::sourceforge::pmd::util::designer::Designer
      uses function createXPathQueryPanel() defined in net::sourceforge::pmd::util::designer::Designer
      uses function createASTPanel() defined in net::sourceforge::pmd::util::designer::Designer
      uses function createSymbolTableResultPanel() defined in net::sourceforge::pmd::util::designer::Designer
      uses function createXPathResultPanel() defined in net::sourceforge::pmd::util::designer::Designer
      uses variable dfaPanel defined in net::sourceforge::pmd::util::designer::Designer
      uses function createMenuBar() defined in net::sourceforge::pmd::util::designer::Designer
      uses variable frame defined in net::sourceforge::pmd::util::designer::Designer
      uses function loadSettings() defined in net::sourceforge::pmd::util::designer::Designer
   variable astTreeWidget in line 656
   variable codeEditorPane in line 655
   variable dfaPanel in line 663
   variable exitOnClose in line 654
   variable frame in line 662
   variable languageVersionMenuItems in line 664
   variable SETTINGS_FILE_NAME in line 952
   variable symbolTableTreeWidget in line 661
   variable xpathQueryArea in line 659
   variable xpathResultList in line 658
   variable xpathResults in line 657
   variable xpathVersionButtonGroup in line 660
module net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   inherits from javax::swing::tree::TreeNode
   function children() in line 238
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function createKids() in line 203
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable item defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
      uses function ExceptionNode(Object) defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function getAllowsChildren() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChildAt(int) in line 230
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function getChildCount() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function getIndex(TreeNode) in line 253
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function getParent() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isLeaf() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function label() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable item defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function ExceptionNode(Object) in line 194
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable item defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
      uses function createKids() defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   variable item in line 191
   variable kids in line 192
module net::sourceforge::pmd::util::designer::Designer::ASTTreeNode
   inherits from javax::swing::tree::TreeNode
   function children() in line 308
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses function getChildCount() defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
      uses function getChildAt(int) defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
      uses variable e defined in sample-matlab.m
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function getAllowsChildren() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAttributes() in line 362
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getStringValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function getChildAt(int) in line 328
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getChildCount() in line 285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function getIndex(TreeNode) in line 339
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable kids defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function getParent() in line 297
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getScope() in line 301
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function getToolTipText() in line 356
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function label() defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
   function isLeaf() in line 293
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function label() in line 349
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::util::designer::Designer
      uses function getDumpFacade(Writer,String,boolean) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function start(Node) defined in net::sourceforge::pmd::lang::VisitorStarter
   function ASTTreeNode(Node) in line 271
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function ASTTreeNode(ASTTreeNode,Node) in line 280
      4 lines of code
      2 parameters
      1 conditional paths
   variable kids in line 269
   variable node in line 267
   variable parent in line 268
module net::sourceforge::pmd::util::designer::Designer::TreeWidget
   inherits from javax::swing::JTree
   function convertValueToText(Object,boolean,boolean,boolean,int,boolean) in line 393
      protection public
      13 lines of code
      6 parameters
      4 conditional paths
   function expandAll(boolean) in line 420
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function expandAll(TreePath,boolean) in line 425
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable e defined in sample-matlab.m
   function getToolTipText(MouseEvent) in line 408
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
   function TreeWidget(Object[]) in line 387
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 385
module net::sourceforge::pmd::util::designer::Designer::ShowListener
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 460
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getCompilationUnit() defined in net::sourceforge::pmd::util::designer::Designer
      uses function ExceptionNode(Object) defined in net::sourceforge::pmd::util::designer::Designer::ExceptionNode
      uses function loadASTTreeData(TreeNode) defined in net::sourceforge::pmd::util::designer::Designer
      uses function loadSymbolTableTreeData(TreeNode) defined in net::sourceforge::pmd::util::designer::Designer
module net::sourceforge::pmd::util::designer::Designer::DFAListener
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 475
      protection public
      30 lines of code
      1 parameters
      5 conditional paths
      uses function getLanguageVersion() defined in net::sourceforge::pmd::util::designer::Designer
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDFAGraphRule() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getLanguage() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getExtensions() defined in net::sourceforge::pmd::lang::Language
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses variable e defined in sample-matlab.m
      uses function getMethods() defined in net::sourceforge::pmd::lang::dfa::DFAGraphRule
      uses variable dfaPanel defined in net::sourceforge::pmd::util::designer::Designer
      uses function resetTo(List< DFAGraphMethod >,LineGetter) defined in net::sourceforge::pmd::util::designer::DFAPanel
module net::sourceforge::pmd::util::designer::Designer::XPathListener
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 508
      protection public
      42 lines of code
      1 parameters
      4 conditional paths
      uses variable xpathResults defined in net::sourceforge::pmd::util::designer::Designer
      uses variable xpathQueryArea defined in net::sourceforge::pmd::util::designer::Designer
      uses variable xpathResultList defined in net::sourceforge::pmd::util::designer::Designer
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses variable c defined in sample-matlab.m
      uses function getCompilationUnit() defined in net::sourceforge::pmd::util::designer::Designer
      uses variable data defined in sample-matlab.m
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getLanguageVersion() defined in net::sourceforge::pmd::util::designer::Designer
      uses function setXPath(String) defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses function setVersion(String) defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable xpathVersionButtonGroup defined in net::sourceforge::pmd::util::designer::Designer
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function apply(List< Node >,RuleContext,Language) defined in net::sourceforge::pmd::RuleSets
      uses function getLanguage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
module net::sourceforge::pmd::util::designer::Designer::SymbolTableListener
   inherits from javax::swing::event::TreeSelectionListener
   function valueChanged(TreeSelectionEvent) in line 553
      protection public
      43 lines of code
      1 parameters
      7 conditional paths
      uses variable e defined in sample-matlab.m
      uses function label() defined in net::sourceforge::pmd::util::designer::Designer::ASTTreeNode
      uses function getScope() defined in net::sourceforge::pmd::util::designer::Designer::ASTTreeNode
      uses function getParent() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getAttributes() defined in net::sourceforge::pmd::util::designer::Designer::ASTTreeNode
      uses function loadSymbolTableTreeData(TreeNode) defined in net::sourceforge::pmd::util::designer::Designer
module net::sourceforge::pmd::util::designer::Designer::CodeHighlightListener
   inherits from javax::swing::event::TreeSelectionListener
   function valueChanged(TreeSelectionEvent) in line 599
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses function select(Node) defined in net::sourceforge::pmd::util::designer::CodeEditorTextPane
      uses variable node defined in net::sourceforge::pmd::util::designer::Designer::ASTTreeNode
module net::sourceforge::pmd::util::designer::Designer::ASTListCellRenderer
   inherits from javax::swing::JLabel
   inherits from javax::swing::ListCellRenderer
   function getListCellRendererComponent(JList,Object,int,boolean,boolean) in line 612
      protection public
      28 lines of code
      5 parameters
      4 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable EOL defined in net::sourceforge::pmd::PMD
   variable serialVersionUID in line 610
module net::sourceforge::pmd::util::designer::Designer::ASTSelectionListener
   inherits from javax::swing::event::ListSelectionListener
   function valueChanged(ListSelectionEvent) in line 643
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable xpathResults defined in net::sourceforge::pmd::util::designer::Designer
      uses variable codeEditorPane defined in net::sourceforge::pmd::util::designer::Designer
      uses function select(Node) defined in net::sourceforge::pmd::util::designer::CodeEditorTextPane
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/designer/DFAPanel.java
module net::sourceforge::pmd::util::designer::DFAPanel
   inherits from javax::swing::JComponent
   inherits from javax::swing::event::ListSelectionListener
   function resetTo(List< DFAGraphMethod >,LineGetter) in line 309
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable dfaCanvas defined in net::sourceforge::pmd::util::designer::DFAPanel
      uses function setCode(LineGetter) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable lines defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable nodes defined in net::sourceforge::pmd::util::designer::DFAPanel
      uses variable nodeList defined in net::sourceforge::pmd::util::designer::DFAPanel
      uses function setMethod(Node) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   function valueChanged(ListSelectionEvent) in line 294
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable nodes defined in net::sourceforge::pmd::util::designer::DFAPanel
      uses variable nodeList defined in net::sourceforge::pmd::util::designer::DFAPanel
      uses variable dfaCanvas defined in net::sourceforge::pmd::util::designer::DFAPanel
      uses function setMethod(Node) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses function getNode() defined in net::sourceforge::pmd::util::designer::DFAPanel::ElementWrapper
   function DFAPanel() in line 270
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses variable nodeList defined in net::sourceforge::pmd::util::designer::DFAPanel
      uses variable nodes defined in net::sourceforge::pmd::util::designer::DFAPanel
      uses variable dfaCanvas defined in net::sourceforge::pmd::util::designer::DFAPanel
   variable dfaCanvas in line 266
   variable nodeList in line 267
   variable nodes in line 268
module net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   inherits from javax::swing::JPanel
   function addAccessLabel(StringBuffer,VariableAccess) in line 44
      15 lines of code
      2 parameters
      4 conditional paths
      uses function isDefinition() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function isReference() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function isUndefinition() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function getVariableName() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function childIndicesOf(DataFlowNode,String) in line 60
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable j defined in sample-matlab.m
   function computeDrawPos(int) in line 170
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable NODE_RADIUS defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   function deriveAccessLabels(List< DataFlowNode >) in line 77
      27 lines of code
      1 parameters
      5 conditional paths
      uses variable EMPTY_STRINGS defined in net::sourceforge::pmd::util::StringUtil
      uses function addAccessLabel(StringBuffer,VariableAccess) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable k defined in sample-matlab.m
   function drawArrow(Graphics,int,int,int) in line 175
      27 lines of code
      4 parameters
      5 conditional paths
      uses variable NODE_RADIUS defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable g defined in sample-matlab.m
      uses variable x defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable y defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   function drawMyLine(int,int,Graphics) in line 203
      44 lines of code
      3 parameters
      6 conditional paths
      uses function computeDrawPos(int) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable x defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable NODE_RADIUS defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable g defined in sample-matlab.m
      uses variable NODE_DIAMETER defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses function drawArrow(Graphics,int,int,int) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   function maxWidthOf(String[],FontMetrics) in line 105
      14 lines of code
      2 parameters
      3 conditional paths
   function paintComponent(Graphics) in line 121
      protection public
      40 lines of code
      1 parameters
      5 conditional paths
      uses variable g defined in sample-matlab.m
      uses variable node defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function deriveAccessLabels(List< DataFlowNode >) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses function maxWidthOf(String[],FontMetrics) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable y defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses function computeDrawPos(int) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable x defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable NODE_DIAMETER defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable lines defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses function getLine(int) defined in net::sourceforge::pmd::util::designer::LineGetter
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable NODE_RADIUS defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses variable j defined in sample-matlab.m
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function drawMyLine(int,int,Graphics) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
      uses function childIndicesOf(DataFlowNode,String) defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   function setCode(LineGetter) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setMethod(Node) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   variable lines in line 42
   variable node in line 38
   variable NODE_DIAMETER in line 36
   variable NODE_RADIUS in line 35
   variable x in line 40
   variable y in line 41
module net::sourceforge::pmd::util::designer::DFAPanel::ElementWrapper
   function getNode() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   function toString() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   function ElementWrapper(DFAGraphMethod) in line 252
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::designer::DFAPanel::DFACanvas
   variable node in line 250
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/designer/LineGetter.java
module net::sourceforge::pmd::util::designer::LineGetter
   function getLine(int) in line 7
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/EmptyIterator.java
module net::sourceforge::pmd::util::EmptyIterator
   inherits from java::util::Iterator
   function hasNext() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::util::EmptyIterator
   function next() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EmptyIterator() in line 25
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/FileFinder.java
module net::sourceforge::pmd::util::FileFinder
   function findFilesFrom(File,FilenameFilter,boolean) in line 19
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable filter defined in net::sourceforge::pmd::util::FileFinder
      uses variable files defined in sample-matlab.m
      uses function scanDirectory(File,List< File >,boolean) defined in net::sourceforge::pmd::util::FileFinder
   function scanDirectory(File,List< File >,boolean) in line 29
      16 lines of code
      3 parameters
      5 conditional paths
      uses variable filter defined in net::sourceforge::pmd::util::FileFinder
      uses variable FILE_SEP defined in net::sourceforge::pmd::util::FileFinder
   variable FILE_SEP in line 17
   variable filter in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/FileIterable.java
module net::sourceforge::pmd::util::FileIterable
   inherits from Iterable
   function finalize() in line 35
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable lineReader defined in net::sourceforge::pmd::util::FileIterable
      uses variable e defined in sample-matlab.m
   function iterator() in line 47
      protection public
      3 lines of code
      0 parameters
      4 conditional paths
      uses variable lineReader defined in net::sourceforge::pmd::util::FileIterable
      uses variable e defined in sample-matlab.m
   function FileIterable(File) in line 25
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable lineReader defined in net::sourceforge::pmd::util::FileIterable
      uses variable e defined in sample-matlab.m
   variable lineReader in line 23
module net::sourceforge::pmd::util::FileIterable::FileIterator
   inherits from java::util::Iterator
   function hasNext() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 59
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable hasNext in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/AbstractCompoundFilter.java
module net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   inherits from net::sourceforge::pmd::util::filter::Filter
   abstract class
   function addFilter(Filter< T >) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
      uses function filter(T) defined in net::sourceforge::pmd::util::filter::Filter
      uses function getOperator() defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function getFilters() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function getOperator() in line 43
      1 lines of code
      0 parameters
      1 conditional paths
   function setFilters(List< Filter< T >>) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function toString() in line 45
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
      uses function getOperator() defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function AbstractCompoundFilter() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function AbstractCompoundFilter(Filter< T >...) in line 24
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
      uses function filter(T) defined in net::sourceforge::pmd::util::filter::Filter
   variable filters in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/AbstractDelegateFilter.java
module net::sourceforge::pmd::util::filter::AbstractDelegateFilter
   inherits from net::sourceforge::pmd::util::filter::Filter
   abstract class
   function filter(T) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filter defined in net::sourceforge::pmd::util::filter::AbstractDelegateFilter
   function getFilter() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filter defined in net::sourceforge::pmd::util::filter::AbstractDelegateFilter
   function setFilter(Filter< T >) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filter defined in net::sourceforge::pmd::util::filter::AbstractDelegateFilter
   function toString() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filter defined in net::sourceforge::pmd::util::filter::AbstractDelegateFilter
   function AbstractDelegateFilter() in line 16
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function AbstractDelegateFilter(Filter< T >) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filter defined in net::sourceforge::pmd::util::filter::AbstractDelegateFilter
   variable filter in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/AndFilter.java
module net::sourceforge::pmd::util::filter::AndFilter
   inherits from net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function filter(T) in line 22
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function getOperator() in line 34
      3 lines of code
      0 parameters
      1 conditional paths
   function AndFilter() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AndFilter(Filter< T >...) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/DirectoryFilter.java
module net::sourceforge::pmd::util::filter::DirectoryFilter
   inherits from Filter< File >
   function filter(File) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DirectoryFilter() in line 14
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/FileExtensionFilter.java
module net::sourceforge::pmd::util::filter::FileExtensionFilter
   inherits from Filter< File >
   function filter(File) in line 32
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable extensions defined in net::sourceforge::pmd::util::filter::FileExtensionFilter
      uses variable ignoreCase defined in net::sourceforge::pmd::util::filter::FileExtensionFilter
   function FileExtensionFilter(String...) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable extensions defined in net::sourceforge::pmd::util::filter::FileExtensionFilter
   function FileExtensionFilter(boolean,String...) in line 22
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable extensions defined in net::sourceforge::pmd::util::filter::FileExtensionFilter
      uses variable ignoreCase defined in net::sourceforge::pmd::util::filter::FileExtensionFilter
   variable extensions in line 9
   variable ignoreCase in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/Filter.java
module net::sourceforge::pmd::util::filter::Filter
   function filter(T) in line 13
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/Filters.java
module net::sourceforge::pmd::util::filter::Filters
   function buildRegexFilterExcludeOverInclude(List< String >,List< String >) in line 151
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses function addFilter(Filter< T >) defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function buildRegexFilterIncludeOverExclude(List< String >,List< String >) in line 185
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses function addFilter(Filter< T >) defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function filter(Filter< T >,Collection< T >) in line 25
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function fromStringFilter(final Filter< String >) in line 92
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function filter(Filter< T >,Collection< T >) defined in net::sourceforge::pmd::util::filter::Filters
   function getDirectoryFilter() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::util::filter::DirectoryFilter
   function getFileExtensionFilter(String...) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFileExtensionOrDirectoryFilter(String...) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getFileExtensionFilter(String...) defined in net::sourceforge::pmd::util::filter::Filters
      uses function getDirectoryFilter() defined in net::sourceforge::pmd::util::filter::Filters
   function toFileFilter(final FilenameFilter) in line 126
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function filter(Filter< T >,Collection< T >) defined in net::sourceforge::pmd::util::filter::Filters
   function toFilenameFilter(final Filter< File >) in line 109
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function filter(Filter< T >,Collection< T >) defined in net::sourceforge::pmd::util::filter::Filters
   function toNormalizedFileFilter(final Filter< String >) in line 70
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function filter(Filter< T >,Collection< T >) defined in net::sourceforge::pmd::util::filter::Filters
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/NotFilter.java
module net::sourceforge::pmd::util::filter::NotFilter
   inherits from net::sourceforge::pmd::util::filter::AbstractDelegateFilter
   function filter(T) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function filter(T) defined in net::sourceforge::pmd::util::filter::NotFilter
   function NotFilter() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NotFilter(Filter< T >) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filter(T) defined in net::sourceforge::pmd::util::filter::NotFilter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/OrFilter.java
module net::sourceforge::pmd::util::filter::OrFilter
   inherits from net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function filter(T) in line 22
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
   function getOperator() in line 34
      3 lines of code
      0 parameters
      1 conditional paths
   function OrFilter() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function OrFilter(Filter< T >...) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in net::sourceforge::pmd::util::filter::AbstractCompoundFilter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/filter/RegexStringFilter.java
module net::sourceforge::pmd::util::filter::RegexStringFilter
   inherits from Filter< String >
   function filter(String) in line 75
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function getEndsWith() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endsWith defined in net::sourceforge::pmd::util::filter::RegexStringFilter
   function getRegex() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable regex defined in net::sourceforge::pmd::util::filter::RegexStringFilter
   function optimize() in line 56
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable ENDS_WITH defined in net::sourceforge::pmd::util::filter::RegexStringFilter
      uses variable e defined in sample-matlab.m
   function toString() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable regex defined in net::sourceforge::pmd::util::filter::RegexStringFilter
   function RegexStringFilter(String) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable regex defined in net::sourceforge::pmd::util::filter::RegexStringFilter
      uses function optimize() defined in net::sourceforge::pmd::util::filter::RegexStringFilter
   variable ENDS_WITH in line 36
   variable endsWith in line 41
   variable pattern in line 40
   variable regex in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/IOUtil.java
module net::sourceforge::pmd::util::IOUtil
   function createWriter() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createWriter(String) in line 27
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function createWriter() defined in net::sourceforge::pmd::util::IOUtil
      uses variable e defined in sample-matlab.m
   function skipBOM(Reader) in line 35
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
   function IOUtil() in line 20
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/log/AntLogHandler.java
module net::sourceforge::pmd::util::log::AntLogHandler
   inherits from java::util::logging::Handler
   function close() in line 57
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function flush() in line 60
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function publish(LogRecord) in line 30
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses variable project defined in net::sourceforge::pmd::util::log::AntLogHandler
      uses variable FORMATTER defined in net::sourceforge::pmd::util::log::AntLogHandler
   function AntLogHandler(Project) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in net::sourceforge::pmd::util::log::AntLogHandler
   variable FORMATTER in line 24
   variable project in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/log/ConsoleLogHandler.java
module net::sourceforge::pmd::util::log::ConsoleLogHandler
   inherits from java::util::logging::Handler
   function close() in line 35
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function flush() in line 38
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function publish(LogRecord) in line 22
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable FORMATTER defined in net::sourceforge::pmd::util::log::ConsoleLogHandler
   variable FORMATTER in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/log/PmdLogFormatter.java
module net::sourceforge::pmd::util::log::PmdLogFormatter
   inherits from java::util::logging::Formatter
   function format(LogRecord) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/log/ScopedLogHandlersManager.java
module net::sourceforge::pmd::util::log::ScopedLogHandlersManager
   function close() in line 41
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable newHandlers defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
      uses variable logger defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
      uses variable oldHandlers defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
      uses variable oldLogLevel defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
   function ScopedLogHandlersManager(Level,Handler...) in line 26
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable newHandlers defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
      uses variable logger defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
      uses variable PACKAGE_NAME defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
      uses variable oldHandlers defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
      uses variable oldLogLevel defined in net::sourceforge::pmd::util::log::ScopedLogHandlersManager
   variable logger in line 21
   variable newHandlers in line 24
   variable oldHandlers in line 23
   variable oldLogLevel in line 22
   variable PACKAGE_NAME in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/NumericConstants.java
module net::sourceforge::pmd::util::NumericConstants
   variable FLOAT_ZERO in line 12
      protection public
   variable ONE in line 10
      protection public
   variable ZERO in line 8
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/StringUtil.java
module net::sourceforge::pmd::util::StringUtil
   function appendXmlEscaped(StringBuilder,String) in line 193
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable SUPPORTS_UTF8 defined in net::sourceforge::pmd::util::StringUtil
   function appendXmlEscaped(StringBuilder,String,boolean) in line 241
      protection public
      23 lines of code
      3 parameters
      8 conditional paths
      uses variable c defined in sample-matlab.m
   function areSemanticEquals(String,String) in line 122
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function isEmpty(String) defined in net::sourceforge::pmd::util::StringUtil
   function asString(Object[],String) in line 531
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function asStringOn(StringBuffer,Iterator<?>,String) in line 352
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
   function asStringOn(StringBuilder,Object[],String) in line 374
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
   function escapeWhitespace(Object) in line 203
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function htmlEncode(String) in line 220
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function replaceString(final String,char,final String) defined in net::sourceforge::pmd::util::StringUtil
   function isAnyOf(String,String...) in line 51
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function isEmpty(String) in line 90
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
   function isNotEmpty(String) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isEmpty(String) defined in net::sourceforge::pmd::util::StringUtil
   function isSame(String,String,boolean,boolean,boolean) in line 503
      protection public
      19 lines of code
      5 parameters
      5 conditional paths
   function lengthOfShortestIn(String[]) in line 395
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
   function lpad(String,int) in line 476
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
   function maxCommonLeadingWhitespaceForAll(String[]) in line 422
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function lengthOfShortestIn(String[]) defined in net::sourceforge::pmd::util::StringUtil
   function replaceString(final String,char,final String) in line 141
      protection public
      18 lines of code
      3 parameters
      3 conditional paths
   function replaceString(final String,final String,final String) in line 167
      protection public
      18 lines of code
      3 parameters
      3 conditional paths
   function startsWithAny(String,String...) in line 33
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function substringsOf(String,char) in line 277
      protection public
      36 lines of code
      2 parameters
      7 conditional paths
      uses variable EMPTY_STRINGS defined in net::sourceforge::pmd::util::StringUtil
   function substringsOf(String,String) in line 321
      protection public
      22 lines of code
      2 parameters
      4 conditional paths
      uses variable EMPTY_STRINGS defined in net::sourceforge::pmd::util::StringUtil
   function trimStartOn(String[],int) in line 456
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
   function withoutPrefixes(String,String...) in line 70
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
   function StringUtil() in line 22
      2 lines of code
      0 parameters
      1 conditional paths
   variable EMPTY_STRINGS in line 18
      protection public
   variable SUPPORTS_UTF8 in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/SystemUtils.java
module net::sourceforge::pmd::util::SystemUtils
   function SystemUtils() in line 11
      3 lines of code
      0 parameters
      1 conditional paths
   variable MT_SUPPORTED in line 18
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/TypeMap.java
module net::sourceforge::pmd::util::TypeMap
   function add(Class<?>) in line 50
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable typesByName defined in net::sourceforge::pmd::util::TypeMap
   function add(Class<?>...) in line 100
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function add(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
   function asInverseWithShortName() in line 112
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable typesByName defined in net::sourceforge::pmd::util::TypeMap
      uses function storeShortest(Map< Class<?>, String >,Class<?>,String) defined in net::sourceforge::pmd::util::TypeMap
   function contains(Class<?>) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typesByName defined in net::sourceforge::pmd::util::TypeMap
   function contains(String) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typesByName defined in net::sourceforge::pmd::util::TypeMap
   function size() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typesByName defined in net::sourceforge::pmd::util::TypeMap
   function storeShortest(Map< Class<?>, String >,Class<?>,String) in line 142
      14 lines of code
      3 parameters
      3 conditional paths
   function typeFor(String) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typesByName defined in net::sourceforge::pmd::util::TypeMap
   function TypeMap(int) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typesByName defined in net::sourceforge::pmd::util::TypeMap
   function TypeMap(Class<?>...) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
   variable typesByName in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/UnaryFunction.java
module net::sourceforge::pmd::util::UnaryFunction
   function applyTo(E) in line 7
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/ActionCommands.java
module net::sourceforge::pmd::util::viewer::gui::ActionCommands
   variable COMPILE_ACTION in line 13
      protection public
   variable EVALUATE_ACTION in line 14
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/ASTPanel.java
module net::sourceforge::pmd::util::viewer::gui::ASTPanel
   inherits from javax::swing::JPanel
   inherits from net::sourceforge::pmd::util::viewer::model::ViewerModelListener
   inherits from javax::swing::event::TreeSelectionListener
   function init() in line 52
      19 lines of code
      0 parameters
      2 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::ASTPanel
      uses function addViewerModelListener(ViewerModelListener) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable tree defined in net::sourceforge::pmd::util::viewer::gui::ASTPanel
      uses variable e defined in sample-matlab.m
   function valueChanged(TreeSelectionEvent) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::ASTPanel
      uses function selectNode(Node,Object) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable e defined in sample-matlab.m
   function viewerModelChanged(ViewerModelEvent) in line 75
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable CODE_RECOMPILED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
      uses variable tree defined in net::sourceforge::pmd::util::viewer::gui::ASTPanel
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::ASTPanel
      uses function getRootNode() defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable NODE_SELECTED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function ASTPanel(ViewerModel) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::ASTPanel
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::ASTPanel
   variable model in line 39
   variable tree in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/EvaluationResultsPanel.java
module net::sourceforge::pmd::util::viewer::gui::EvaluationResultsPanel
   inherits from javax::swing::JPanel
   inherits from net::sourceforge::pmd::util::viewer::model::ViewerModelListener
   function init() in line 44
      16 lines of code
      0 parameters
      2 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::EvaluationResultsPanel
      uses function addViewerModelListener(ViewerModelListener) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable list defined in net::sourceforge::pmd::util::viewer::gui::EvaluationResultsPanel
      uses variable e defined in sample-matlab.m
      uses function selectNode(Node,Object) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
   function viewerModelChanged(ViewerModelEvent) in line 65
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable PATH_EXPRESSION_EVALUATED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
      uses variable list defined in net::sourceforge::pmd::util::viewer::gui::EvaluationResultsPanel
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::EvaluationResultsPanel
      uses function getLastEvaluationResults() defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable CODE_RECOMPILED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function EvaluationResultsPanel(ViewerModel) in line 36
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::EvaluationResultsPanel
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::EvaluationResultsPanel
   variable list in line 29
   variable model in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/MainFrame.java
module net::sourceforge::pmd::util::viewer::gui::MainFrame
   inherits from javax::swing::JFrame
   inherits from java::awt::event::ActionListener
   inherits from net::sourceforge::pmd::util::viewer::model::ViewerModelListener
   function actionPerformed(ActionEvent) in line 148
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable COMPILE_ACTION defined in net::sourceforge::pmd::util::viewer::gui::ActionCommands
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses function commitSource(String,LanguageVersion) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable sourcePanel defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses function getSourceCode() defined in net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
      uses function getLanguageVersion() defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses function setStatus(String) defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable EVALUATE_ACTION defined in net::sourceforge::pmd::util::viewer::gui::ActionCommands
      uses function evaluateXPathExpression(String,Object) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable xPathPanel defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses function getXPathExpression() defined in net::sourceforge::pmd::util::viewer::gui::XPathPanel
   function getLanguageVersion() in line 126
      18 lines of code
      0 parameters
      7 conditional paths
      uses variable jdk14MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses variable jdk13MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable jdk15MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable jdk16MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable jdk17MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable plsqlMenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function init() in line 61
      64 lines of code
      0 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses function addViewerModelListener(ViewerModelListener) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable sourcePanel defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable xPathPanel defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable d defined in sample-matlab.m
      uses variable COMPILE_ACTION defined in net::sourceforge::pmd::util::viewer::gui::ActionCommands
      uses variable evalBtn defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable EVALUATE_ACTION defined in net::sourceforge::pmd::util::viewer::gui::ActionCommands
      uses variable statusLbl defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable jdk13MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable jdk14MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable jdk15MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable jdk16MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable jdk17MenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable plsqlMenuItem defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
   function setStatus(String) in line 180
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable statusLbl defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
   function viewerModelChanged(ViewerModelEvent) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable evalBtn defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
      uses function hasCompiledTree() defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
   function MainFrame() in line 56
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable VERSION defined in net::sourceforge::pmd::PMD
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::MainFrame
   variable evalBtn in line 44
   variable jdk13MenuItem in line 46
   variable jdk14MenuItem in line 47
   variable jdk15MenuItem in line 48
   variable jdk16MenuItem in line 49
   variable jdk17MenuItem in line 50
   variable model in line 41
   variable plsqlMenuItem in line 51
   variable sourcePanel in line 42
   variable statusLbl in line 45
   variable xPathPanel in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/menu/ASTNodePopupMenu.java
module net::sourceforge::pmd::util::viewer::gui::menu::ASTNodePopupMenu
   inherits from javax::swing::JPopupMenu
   function init() in line 27
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::menu::ASTNodePopupMenu
      uses variable node defined in net::sourceforge::pmd::util::viewer::gui::menu::ASTNodePopupMenu
   function ASTNodePopupMenu(ViewerModel,Node) in line 21
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::menu::ASTNodePopupMenu
      uses variable node defined in net::sourceforge::pmd::util::viewer::gui::menu::ASTNodePopupMenu
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::menu::ASTNodePopupMenu
   variable model in line 18
   variable node in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/menu/AttributesSubMenu.java
module net::sourceforge::pmd::util::viewer::gui::menu::AttributesSubMenu
   inherits from javax::swing::JMenu
   function init() in line 36
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::viewer::gui::menu::AttributesSubMenu
      uses function hasNext() defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses function next() defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::menu::AttributesSubMenu
   function AttributesSubMenu(ViewerModel,Node) in line 29
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::viewer::gui::menu::AttributesSubMenu
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::menu::AttributesSubMenu
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::menu::AttributesSubMenu
   variable model in line 26
   variable node in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/menu/SimpleNodeSubMenu.java
module net::sourceforge::pmd::util::viewer::gui::menu::SimpleNodeSubMenu
   inherits from javax::swing::JMenu
   function init() in line 39
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::viewer::gui::menu::SimpleNodeSubMenu
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::menu::SimpleNodeSubMenu
   function SimpleNodeSubMenu(ViewerModel,Node) in line 32
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::viewer::gui::menu::SimpleNodeSubMenu
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::menu::SimpleNodeSubMenu
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::menu::SimpleNodeSubMenu
   variable model in line 23
   variable node in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/menu/XPathFragmentAddingItem.java
module net::sourceforge::pmd::util::viewer::gui::menu::XPathFragmentAddingItem
   inherits from javax::swing::JMenuItem
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::menu::XPathFragmentAddingItem
      uses function appendToXPathExpression(String,Object) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable fragment defined in net::sourceforge::pmd::util::viewer::gui::menu::XPathFragmentAddingItem
   function XPathFragmentAddingItem(String,ViewerModel,String) in line 31
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::menu::XPathFragmentAddingItem
      uses variable fragment defined in net::sourceforge::pmd::util::viewer::gui::menu::XPathFragmentAddingItem
   variable fragment in line 22
   variable model in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/ParseExceptionHandler.java
module net::sourceforge::pmd::util::viewer::gui::ParseExceptionHandler
   inherits from javax::swing::JDialog
   inherits from java::awt::event::ActionListener
   function actionPerformed(ActionEvent) in line 70
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable okBtn defined in net::sourceforge::pmd::util::viewer::gui::ParseExceptionHandler
   function init() in line 45
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable exc defined in net::sourceforge::pmd::util::viewer::gui::ParseExceptionHandler
      uses variable okBtn defined in net::sourceforge::pmd::util::viewer::gui::ParseExceptionHandler
      uses function getParent((null),(null)) defined in pmd-core/etc/xslt/sorttable.js
   function ParseExceptionHandler(JFrame,Exception) in line 39
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable exc defined in net::sourceforge::pmd::util::viewer::gui::ParseExceptionHandler
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::ParseExceptionHandler
   variable exc in line 30
   variable okBtn in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/SourceCodePanel.java
module net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
   inherits from javax::swing::JPanel
   inherits from net::sourceforge::pmd::util::viewer::model::ViewerModelListener
   function getSourceCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceCodeArea defined in net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
   function init() in line 44
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
      uses function addViewerModelListener(ViewerModelListener) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable sourceCodeArea defined in net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
   function viewerModelChanged(ViewerModelEvent) in line 64
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable NODE_SELECTED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
      uses variable sourceCodeArea defined in net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable HIGHLIGHT_COLOR defined in net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
   function SourceCodePanel(ViewerModel) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::SourceCodePanel
   variable HIGHLIGHT_COLOR in line 37
   variable model in line 34
   variable sourceCodeArea in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/gui/XPathPanel.java
module net::sourceforge::pmd::util::viewer::gui::XPathPanel
   inherits from javax::swing::JTabbedPane
   inherits from net::sourceforge::pmd::util::viewer::model::ViewerModelListener
   function getXPathExpression() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xPathArea defined in net::sourceforge::pmd::util::viewer::gui::XPathPanel
   function init() in line 41
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::XPathPanel
      uses function addViewerModelListener(ViewerModelListener) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable xPathArea defined in net::sourceforge::pmd::util::viewer::gui::XPathPanel
   function viewerModelChanged(ViewerModelEvent) in line 57
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable PATH_EXPRESSION_APPENDED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
      uses variable xPathArea defined in net::sourceforge::pmd::util::viewer::gui::XPathPanel
      uses variable CODE_RECOMPILED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function XPathPanel(ViewerModel) in line 35
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable model defined in net::sourceforge::pmd::util::viewer::gui::XPathPanel
      uses function init() defined in net::sourceforge::pmd::util::viewer::gui::XPathPanel
   variable model in line 27
   variable xPathArea in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/model/ASTModel.java
module net::sourceforge::pmd::util::viewer::model::ASTModel
   inherits from javax::swing::tree::TreeModel
   function addTreeModelListener(TreeModelListener) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::util::viewer::model::ASTModel
   function fireTreeModelEvent(TreeModelEvent) in line 103
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::util::viewer::model::ASTModel
      uses variable e defined in sample-matlab.m
   function getChild(Object,int) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getChildCount(Object) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getIndexOfChild(Object,Object) in line 56
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getRoot() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in net::sourceforge::pmd::util::viewer::model::ASTModel
   function isLeaf(Object) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeTreeModelListener(TreeModelListener) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::util::viewer::model::ASTModel
   function valueForPathChanged(TreePath,Object) in line 83
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ASTModel(Node) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable root defined in net::sourceforge::pmd::util::viewer::model::ASTModel
   variable listeners in line 28
   variable root in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/model/AttributeToolkit.java
module net::sourceforge::pmd::util::viewer::model::AttributeToolkit
   function constructPredicate(Attribute) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function formatValueForXPath(Attribute) defined in net::sourceforge::pmd::util::viewer::model::AttributeToolkit
   function formatValueForXPath(Attribute) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getStringValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/model/SimpleNodeTreeNodeAdapter.java
module net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   inherits from javax::swing::tree::TreeNode
   function checkChildren() in line 114
      8 lines of code
      0 parameters
      3 conditional paths
      uses function children() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses variable node defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function SimpleNodeTreeNodeAdapter(SimpleNodeTreeNodeAdapter,Node) defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function children() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllowsChildren() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getChildAt(int) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkChildren() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses function children() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   function getChildCount() in line 62
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function checkChildren() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses function children() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   function getIndex(TreeNode) in line 78
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkChildren() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses function children() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses variable node defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   function getParent() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   function getSimpleNode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   function isLeaf() in line 96
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function checkChildren() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses function children() defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   function toString() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   function SimpleNodeTreeNodeAdapter(SimpleNodeTreeNodeAdapter,Node) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
      uses variable node defined in net::sourceforge::pmd::util::viewer::model::SimpleNodeTreeNodeAdapter
   variable children in line 27
   variable node in line 26
   variable parent in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/model/ViewerModel.java
module net::sourceforge::pmd::util::viewer::model::ViewerModel
   function addViewerModelListener(ViewerModelListener) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
   function appendToXPathExpression(String,Object) in line 124
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function fireViewerModelEvent(ViewerModelEvent) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable PATH_EXPRESSION_APPENDED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function commitSource(String,LanguageVersion) in line 41
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses variable rootNode defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses function fireViewerModelEvent(ViewerModelEvent) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable CODE_RECOMPILED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function evaluateXPathExpression(String,Object) in line 64
      protection public
      32 lines of code
      2 parameters
      6 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable rootNode defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable evaluationResults defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable e defined in sample-matlab.m
      uses function fireViewerModelEvent(ViewerModelEvent) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable PATH_EXPRESSION_EVALUATED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function fireViewerModelEvent(ViewerModelEvent) in line 136
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable e defined in sample-matlab.m
   function getLastEvaluationResults() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable evaluationResults defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
   function getRootNode() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rootNode defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
   function hasCompiledTree() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rootNode defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
   function removeViewerModelListener(ViewerModelListener) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
   function selectNode(Node,Object) in line 114
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function fireViewerModelEvent(ViewerModelEvent) defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
      uses variable NODE_SELECTED defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function ViewerModel() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable listeners defined in net::sourceforge::pmd::util::viewer::model::ViewerModel
   variable evaluationResults in line 27
   variable listeners in line 25
   variable LOGGER in line 23
   variable rootNode in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/model/ViewerModelEvent.java
module net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function getParameter() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function getReason() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reason defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function getSource() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function ViewerModelEvent(Object,int) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
      uses variable reason defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   function ViewerModelEvent(Object,int,Object) in line 58
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable source defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
      uses variable reason defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
      uses variable parameter defined in net::sourceforge::pmd::util::viewer::model::ViewerModelEvent
   variable CODE_RECOMPILED in line 24
      protection public
   variable NODE_SELECTED in line 28
      protection public
   variable parameter in line 39
   variable PATH_EXPRESSION_APPENDED in line 32
      protection public
   variable PATH_EXPRESSION_EVALUATED in line 36
      protection public
   variable reason in line 38
   variable source in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/model/ViewerModelListener.java
module net::sourceforge::pmd::util::viewer::model::ViewerModelListener
   function viewerModelChanged(ViewerModelEvent) in line 13
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/util/NLS.java
module net::sourceforge::pmd::util::viewer::util::NLS
   function nls(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable BUNDLE defined in net::sourceforge::pmd::util::viewer::util::NLS
   variable BUNDLE in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/main/java/net/sourceforge/pmd/util/viewer/Viewer.java
module net::sourceforge::pmd::util::viewer::Viewer
   function main(String[]) in line 16
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cs/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-dist/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-fortran/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-go/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-php/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-ruby/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/site/markdown/index.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/AbstractRuleTest.java
module net::sourceforge::pmd::AbstractRuleTest
   function suite() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCreateRV() in line 63
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getRule() defined in net::sourceforge::pmd::RuleViolation
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses function getRuleSetName() defined in net::sourceforge::pmd::Rule
   function testCreateRV2() in line 80
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getRule() defined in net::sourceforge::pmd::RuleViolation
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
   function testEquals1() in line 130
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
   function testEquals10() in line 196
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function hashCode() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testEquals2() in line 136
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
   function testEquals3() in line 142
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function hashCode() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testEquals4() in line 150
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testEquals5() in line 156
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testEquals6() in line 163
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testEquals7() in line 171
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testEquals8() in line 179
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses variable xpath defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testEquals9() in line 188
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses variable xpath defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testRuleSuppress() in line 113
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function suppress(Map< Integer, String >) defined in net::sourceforge::pmd::Report
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function isEmpty() defined in net::sourceforge::pmd::Report
   function testRuleWithVariableInMessage() in line 95
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function MyRule() defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function getViolationTree() defined in net::sourceforge::pmd::Report
      uses function iterator() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
module net::sourceforge::pmd::AbstractRuleTest::MyRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   function apply(List<?extends Node >,RuleContext) in line 42
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function MyRule() in line 32
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable pd defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses variable xpath defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   variable pd in line 28
   variable xpath in line 30
module net::sourceforge::pmd::AbstractRuleTest::MyOtherRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   function apply(List<?extends Node >,RuleContext) in line 58
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function MyOtherRule() in line 49
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable pd defined in net::sourceforge::pmd::AbstractRuleTest::MyRule
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   variable pd in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/ant/CPDTaskTest.java
module net::sourceforge::pmd::ant::CPDTaskTest
   inherits from org::apache::tools::ant::BuildFileTest
   function setUp() in line 19
      4 lines of code
      0 parameters
      1 conditional paths
   function testBasic() in line 25
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/ant/FormatterTest.java
module net::sourceforge::pmd::ant::FormatterTest
   function testNull() in line 42
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
   function testType() in line 22
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses variable f defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/ant/PMDTaskTest.java
module net::sourceforge::pmd::ant::PMDTaskTest
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from org::apache::tools::ant::BuildFileTest
   function setUp() in line 12
      4 lines of code
      0 parameters
      1 conditional paths
   function testAbstractNames() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testAbstractNamesInNestedRuleset() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testBasic() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testClasspath() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCommaInRulesetfiles() in line 51
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testEcmascript() in line 15
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testExplicitRuleInRuleSet() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testFormatterWithNoToFileAttribute() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFormatterWithProperties() in line 28
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testInvalidLanguageVersion() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNestedRuleset() in line 21
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNoFormattersValidation() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNoRuleSets() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testRelativeRulesets() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testRelativeRulesetsInRulesetfiles() in line 65
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testXML() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/ant/PMDTaskTest.java
module net::sourceforge::pmd::ant::PMDTaskTest
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from org::apache::tools::ant::BuildFileTest
   function setUp() in line 12
      4 lines of code
      0 parameters
      1 conditional paths
   function testAbstractNames() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testAbstractNamesInNestedRuleset() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testBasic() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testClasspath() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCommaInRulesetfiles() in line 51
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testEcmascript() in line 15
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testExplicitRuleInRuleSet() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testFormatterWithNoToFileAttribute() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFormatterWithProperties() in line 28
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testInvalidLanguageVersion() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNestedRuleset() in line 21
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNoFormattersValidation() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNoRuleSets() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testRelativeRulesets() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testRelativeRulesetsInRulesetfiles() in line 65
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testXML() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/ant/PMDTaskTest.java
module net::sourceforge::pmd::ant::PMDTaskTest
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from org::apache::tools::ant::BuildFileTest
   function setUp() in line 12
      4 lines of code
      0 parameters
      1 conditional paths
   function testAbstractNames() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testAbstractNamesInNestedRuleset() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testBasic() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testClasspath() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCommaInRulesetfiles() in line 51
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testEcmascript() in line 15
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testExplicitRuleInRuleSet() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testFormatterWithNoToFileAttribute() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFormatterWithProperties() in line 28
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testInvalidLanguageVersion() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNestedRuleset() in line 21
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNoFormattersValidation() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNoRuleSets() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testRelativeRulesets() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testRelativeRulesetsInRulesetfiles() in line 65
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testXML() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/ant/PMDTaskTest.java
module net::sourceforge::pmd::ant::PMDTaskTest
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from org::apache::tools::ant::BuildFileTest
   function setUp() in line 12
      4 lines of code
      0 parameters
      1 conditional paths
   function testAbstractNames() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testAbstractNamesInNestedRuleset() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testBasic() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testClasspath() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCommaInRulesetfiles() in line 51
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testEcmascript() in line 15
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testExplicitRuleInRuleSet() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testFormatterWithNoToFileAttribute() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFormatterWithProperties() in line 28
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testInvalidLanguageVersion() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNestedRuleset() in line 21
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testNoFormattersValidation() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testNoRuleSets() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testRelativeRulesets() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testRelativeRulesetsInRulesetfiles() in line 65
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testXML() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function PMDTaskTest() in line 10
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cli/PMDCommandLineInterfaceTest.java
module net::sourceforge::pmd::cli::PMDCommandLineInterfaceTest
   function clearSystemProperties() in line 24
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_EXIT_AFTER_RUN defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses variable STATUS_CODE_PROPERTY defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function testMultipleProperties() in line 40
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getProperties() defined in net::sourceforge::pmd::cli::PMDParameters
   function testProperties() in line 30
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getProperties() defined in net::sourceforge::pmd::cli::PMDParameters
   function testSetStatusCodeOrExit_DoExit() in line 54
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable exit defined in net::sourceforge::pmd::cli::PMDCommandLineInterfaceTest
   function testSetStatusCodeOrExit_SetStatus() in line 61
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_EXIT_AFTER_RUN defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses variable STATUS_CODE_PROPERTY defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   variable exit in line 18
      protection public
   variable restoreSystemProperties in line 21
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/ConfigurationTest.java
module net::sourceforge::pmd::ConfigurationTest
   function suite() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBenchmark() in line 161
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function isBenchmark() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setBenchmark(boolean) defined in net::sourceforge::pmd::PMDConfiguration
   function testClassLoader() in line 39
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function getClassLoader() defined in net::sourceforge::pmd::PMDConfiguration
      uses function prependClasspath(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function setClassLoader(ClassLoader) defined in net::sourceforge::pmd::PMDConfiguration
   function testCreateRenderer() in line 104
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function setReportFormat(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function createRenderer() defined in net::sourceforge::pmd::PMDConfiguration
      uses function isShowSuppressedViolations() defined in net::sourceforge::pmd::renderers::Renderer
      uses function setShowSuppressedViolations(boolean) defined in net::sourceforge::pmd::PMDConfiguration
   function testDebug() in line 145
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function isDebug() defined in net::sourceforge::pmd::AbstractConfiguration
      uses function setDebug(boolean) defined in net::sourceforge::pmd::AbstractConfiguration
   function testInputPaths() in line 80
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getInputPaths() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setInputPaths(String) defined in net::sourceforge::pmd::PMDConfiguration
   function testMinimumPriority() in line 64
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable LOW defined in net::sourceforge::pmd::RulePriority
      uses function getMinimumPriority() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::PMDConfiguration
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
   function testReportFile() in line 118
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getReportFile() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setReportFile(String) defined in net::sourceforge::pmd::PMDConfiguration
   function testReportFormat() in line 96
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getReportFormat() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setReportFormat(String) defined in net::sourceforge::pmd::PMDConfiguration
   function testReportProperties() in line 134
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getReportProperties() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setReportProperties(Properties) defined in net::sourceforge::pmd::PMDConfiguration
   function testReportShortNames() in line 88
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function isReportShortNames() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setReportShortNames(boolean) defined in net::sourceforge::pmd::PMDConfiguration
   function testRuleSets() in line 56
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getRuleSets() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setRuleSets(String) defined in net::sourceforge::pmd::PMDConfiguration
   function testShowSuppressedViolations() in line 126
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function isShowSuppressedViolations() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setShowSuppressedViolations(boolean) defined in net::sourceforge::pmd::PMDConfiguration
   function testSourceEncoding() in line 72
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceEncoding() defined in net::sourceforge::pmd::AbstractConfiguration
      uses function setSourceEncoding(String) defined in net::sourceforge::pmd::AbstractConfiguration
   function testStressTest() in line 153
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function isStressTest() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setStressTest(boolean) defined in net::sourceforge::pmd::PMDConfiguration
   function testSuppressMarker() in line 23
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable SUPPRESS_MARKER defined in net::sourceforge::pmd::PMD
      uses function getSuppressMarker() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::PMDConfiguration
   function testThreads() in line 31
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getThreads() defined in net::sourceforge::pmd::PMDConfiguration
      uses function setThreads(int) defined in net::sourceforge::pmd::PMDConfiguration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/AnyTokenizerTest.java
module net::sourceforge::pmd::cpd::AnyTokenizerTest
   function suite() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testMultiLineMacros() in line 14
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::cpd::AnyTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::AnyTokenizer
   variable TEST1 in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/CPDConfigurationTest.java
module net::sourceforge::pmd::cpd::CPDConfigurationTest
   function testRenderers() in line 15
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable r defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/CpddummyLanguage.java
module net::sourceforge::pmd::cpd::CpddummyLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function CpddummyLanguage() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/CPDTest.java
module net::sourceforge::pmd::cpd::CPDTest
   function prepareSymLinks() in line 50
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable canTestSymLinks defined in net::sourceforge::pmd::cpd::CPDTest
      uses variable BASE_TEST_RESOURCE_PATH defined in net::sourceforge::pmd::cpd::CPDTest
   function setup() in line 31
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function postContruct() defined in net::sourceforge::pmd::cpd::CPDConfiguration
      uses variable cpd defined in net::sourceforge::pmd::cpd::CPDTest
      uses variable canTestSymLinks defined in net::sourceforge::pmd::cpd::CPDTest
      uses function prepareSymLinks() defined in net::sourceforge::pmd::cpd::CPDTest
   function testFileAddedAsSymlinkAndReal() in line 84
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable canTestSymLinks defined in net::sourceforge::pmd::cpd::CPDTest
      uses variable cpd defined in net::sourceforge::pmd::cpd::CPDTest
      uses function setCpdListener(CPDListener) defined in net::sourceforge::pmd::cpd::CPD
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
      uses variable BASE_TEST_RESOURCE_PATH defined in net::sourceforge::pmd::cpd::CPDTest
      uses function verify() defined in net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
   function testFileAddedWithRelativePath() in line 100
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable cpd defined in net::sourceforge::pmd::cpd::CPDTest
      uses function setCpdListener(CPDListener) defined in net::sourceforge::pmd::cpd::CPD
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
      uses variable BASE_TEST_RESOURCE_PATH defined in net::sourceforge::pmd::cpd::CPDTest
      uses function verify() defined in net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
   function testFileSectionWithBrokenSymlinks() in line 69
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable canTestSymLinks defined in net::sourceforge::pmd::cpd::CPDTest
      uses variable cpd defined in net::sourceforge::pmd::cpd::CPDTest
      uses function setCpdListener(CPDListener) defined in net::sourceforge::pmd::cpd::CPD
      uses function add(List< File >) defined in net::sourceforge::pmd::cpd::CPD
      uses variable BASE_TEST_RESOURCE_PATH defined in net::sourceforge::pmd::cpd::CPDTest
      uses function verify() defined in net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
   variable BASE_TEST_RESOURCE_PATH in line 18
   variable canTestSymLinks in line 28
   variable cpd in line 26
module net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
   inherits from net::sourceforge::pmd::cpd::CPDListener
   function addedFile(int,File) in line 118
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable files defined in net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
      uses variable expectedFilesCount defined in net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
   function phaseUpdate(int) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function verify() in line 127
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedFilesCount defined in net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
      uses variable files defined in net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
   function NoFileAssertListener(int) in line 114
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable expectedFilesCount defined in net::sourceforge::pmd::cpd::CPDTest::NoFileAssertListener
   variable expectedFilesCount in line 112
   variable files in line 113
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/CSVRendererTest.java
module net::sourceforge::pmd::cpd::CSVRendererTest
   function createMark(String,String,int,int,String) in line 35
      7 lines of code
      5 parameters
      1 conditional paths
      uses function setLineCount(int) defined in net::sourceforge::pmd::cpd::Mark
      uses function setSoureCodeSlice(String) defined in net::sourceforge::pmd::cpd::Mark
   function suite() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testLineCountPerFile() in line 18
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function createMark(String,String,int,int,String) defined in net::sourceforge::pmd::cpd::CSVRendererTest
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::Renderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/CSVRendererTest.java
module net::sourceforge::pmd::renderers::CSVRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function getExpected() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedError(ProcessingError) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedMultiple() in line 24
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 11
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/FileReporterTest.java
module net::sourceforge::pmd::cpd::FileReporterTest
   function readFile(File) in line 55
      19 lines of code
      1 parameters
      5 conditional paths
   function suite() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCreation() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testEmptyReport() in line 28
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function report(String) defined in net::sourceforge::pmd::cpd::FileReporter
   function testInvalidFile() in line 49
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function report(String) defined in net::sourceforge::pmd::cpd::FileReporter
   function testReport() in line 38
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function report(String) defined in net::sourceforge::pmd::cpd::FileReporter
      uses function readFile(File) defined in net::sourceforge::pmd::cpd::FileReporterTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/LanguageFactoryTest.java
module net::sourceforge::pmd::cpd::LanguageFactoryTest
   function testSimple() in line 12
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/MarkTest.java
module net::sourceforge::pmd::cpd::MarkTest
   function suite() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSimple() in line 13
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function setLineCount(int) defined in net::sourceforge::pmd::cpd::Mark
      uses function setSoureCodeSlice(String) defined in net::sourceforge::pmd::cpd::Mark
      uses function getToken() defined in net::sourceforge::pmd::cpd::Mark
      uses function getFilename() defined in net::sourceforge::pmd::cpd::Mark
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Mark
      uses function getEndLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function getSourceCodeSlice() defined in net::sourceforge::pmd::cpd::Mark
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/MatchTest.java
module net::sourceforge::pmd::cpd::MatchTest
   function createMark(String,String,int,int,String) in line 54
      7 lines of code
      5 parameters
      1 conditional paths
      uses function setLineCount(int) defined in net::sourceforge::pmd::cpd::Mark
      uses function setSoureCodeSlice(String) defined in net::sourceforge::pmd::cpd::Mark
   function suite() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCompareTo() in line 48
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function compareTo(Match) defined in net::sourceforge::pmd::cpd::Match
   function testSimple() in line 17
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
      uses function createMark(String,String,int,int,String) defined in net::sourceforge::pmd::cpd::MatchTest
      uses function getTokenCount() defined in net::sourceforge::pmd::cpd::Match
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Match
      uses function getSourceCodeSlice() defined in net::sourceforge::pmd::cpd::Match
      uses function iterator() defined in net::sourceforge::pmd::cpd::Match
      uses function getLineCount() defined in net::sourceforge::pmd::cpd::Mark
      uses function getSourceCodeSlice() defined in net::sourceforge::pmd::cpd::Mark
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/SourceCodeTest.java
module net::sourceforge::pmd::cpd::SourceCodeTest
   function testSimple() in line 23
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable SAMPLE_CODE defined in net::sourceforge::pmd::cpd::SourceCodeTest
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::Tokenizer
      uses function getSlice(int,int) defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable EOL defined in net::sourceforge::pmd::PMD
   variable SAMPLE_CODE in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/TokenEntryTest.java
module net::sourceforge::pmd::cpd::TokenEntryTest
   function suite() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSimple() in line 13
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses function getTokenSrcID() defined in net::sourceforge::pmd::cpd::TokenEntry
      uses function getIndex() defined in net::sourceforge::pmd::cpd::TokenEntry
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/cpd/XMLRendererTest.java
module net::sourceforge::pmd::cpd::XMLRendererTest
   function createMark(String,String,int,int,String) in line 127
      7 lines of code
      5 parameters
      1 conditional paths
      uses function setLineCount(int) defined in net::sourceforge::pmd::cpd::Mark
      uses function setSoureCodeSlice(String) defined in net::sourceforge::pmd::cpd::Mark
   function suite() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testRendererEncodedPath() in line 115
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function createMark(String,String,int,int,String) defined in net::sourceforge::pmd::cpd::XMLRendererTest
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::Renderer
   function testRenderWithMultipleMatch() in line 86
      protection public
      27 lines of code
      0 parameters
      2 conditional paths
      uses function createMark(String,String,int,int,String) defined in net::sourceforge::pmd::cpd::XMLRendererTest
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::Renderer
      uses variable ENCODING defined in net::sourceforge::pmd::cpd::XMLRendererTest
      uses variable e defined in sample-matlab.m
   function testWithNoDuplication() in line 31
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::Renderer
      uses variable ENCODING defined in net::sourceforge::pmd::cpd::XMLRendererTest
      uses variable e defined in sample-matlab.m
   function testWithOneDuplication() in line 49
      protection public
      35 lines of code
      0 parameters
      6 conditional paths
      uses function createMark(String,String,int,int,String) defined in net::sourceforge::pmd::cpd::XMLRendererTest
      uses function render(Iterator< Match >) defined in net::sourceforge::pmd::cpd::Renderer
      uses variable ENCODING defined in net::sourceforge::pmd::cpd::XMLRendererTest
      uses variable e defined in sample-matlab.m
   variable ENCODING in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/XMLRendererTest.java
module net::sourceforge::pmd::renderers::XMLRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function filter(String) in line 64
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getExpected() in line 17
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable VERSION defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 31
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable VERSION defined in net::sourceforge::pmd::PMD
   function getExpectedError(ProcessingError) in line 57
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable VERSION defined in net::sourceforge::pmd::PMD
   function getExpectedMultiple() in line 37
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable VERSION defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/FileSelectorTest.java
module net::sourceforge::pmd::FileSelectorTest
   function suite() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testUnwantedFile() in line 38
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function accept(File,String) defined in net::sourceforge::pmd::lang::LanguageFilenameFilter
   function testUnwantedJavaFile() in line 51
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function accept(File,String) defined in net::sourceforge::pmd::lang::LanguageFilenameFilter
   function testWantedFile() in line 24
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function accept(File,String) defined in net::sourceforge::pmd::lang::LanguageFilenameFilter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/FooRule.java
module net::sourceforge::pmd::FooRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   function apply(List<?extends Node >,RuleContext) in line 38
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function apply(Node,RuleContext) in line 44
      8 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::FooRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getDescription() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMessage() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRuleSetName() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 17
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable c defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTVariableDeclaratorId,Object) in line 25
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable c defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function FooRule() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function FooRule() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/FooRule.java
module net::sourceforge::pmd::FooRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   function apply(List<?extends Node >,RuleContext) in line 38
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function apply(Node,RuleContext) in line 44
      8 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::FooRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getDescription() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMessage() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRuleSetName() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 17
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable c defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTVariableDeclaratorId,Object) in line 25
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable c defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function FooRule() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function FooRule() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/jaxen/AttributeAxisIteratorTest.java
module net::sourceforge::pmd::jaxen::AttributeAxisIteratorTest
   function suite() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testRemove() in line 14
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function remove() defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/lang/ast/xpath/AttributeAxisIteratorTest.java
module net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIteratorTest
   function testAttributeAxisIterator() in line 23
      protection public
      20 lines of code
      0 parameters
      2 conditional paths
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasNext() defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses function next() defined in net::sourceforge::pmd::lang::ast::xpath::AttributeAxisIterator
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/jaxen/AttributeTest.java
module net::sourceforge::pmd::jaxen::AttributeTest
   function suite() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testConstructor() in line 17
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getStringValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getParent() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/jaxen/MatchesFunctionTest.java
module net::sourceforge::pmd::jaxen::MatchesFunctionTest
   function suite() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testMatch() in line 36
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function MyNode() defined in net::sourceforge::pmd::jaxen::MatchesFunctionTest::MyNode
      uses function setClassName(String) defined in net::sourceforge::pmd::jaxen::MatchesFunctionTest::MyNode
      uses function tryRegexp(MyNode,String) defined in net::sourceforge::pmd::jaxen::MatchesFunctionTest
   function testNoMatch() in line 43
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function MyNode() defined in net::sourceforge::pmd::jaxen::MatchesFunctionTest::MyNode
      uses function setClassName(String) defined in net::sourceforge::pmd::jaxen::MatchesFunctionTest::MyNode
      uses function tryRegexp(MyNode,String) defined in net::sourceforge::pmd::jaxen::MatchesFunctionTest
   function tryRegexp(MyNode,String) in line 51
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
module net::sourceforge::pmd::jaxen::MatchesFunctionTest::MyNode
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   function getClassName() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::jaxen::MatchesFunctionTest::MyNode
   function setClassName(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::jaxen::MatchesFunctionTest::MyNode
   function toString() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MyNode() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable className in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/lang/ast/DummyNode.java
module net::sourceforge::pmd::lang::ast::DummyNode
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   function toString() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DummyNode(int) in line 7
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/lang/ast/xpath/DocumentNavigatorTest.java
module net::sourceforge::pmd::lang::ast::xpath::DocumentNavigatorTest
   function getDocumentNode() in line 27
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses function getDocumentNode(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses variable e defined in sample-matlab.m
      uses function DummyRootNode(int) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigatorTest::DummyRootNode
      uses function DummyNode(int) defined in net::sourceforge::pmd::lang::ast::DummyNode
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtSetParent(Node) defined in net::sourceforge::pmd::lang::ast::Node
module net::sourceforge::pmd::lang::ast::xpath::DocumentNavigatorTest::DummyRootNode
   inherits from net::sourceforge::pmd::lang::ast::DummyNode
   inherits from net::sourceforge::pmd::lang::ast::RootNode
   function DummyRootNode(int) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/jaxen/DocumentNavigatorTest.java
module net::sourceforge::pmd::jaxen::DocumentNavigatorTest
   inherits from net::sourceforge::pmd::testframework::RuleTst
   function setUp() in line 78
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function suite() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testChildAxisIterator() in line 90
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getChildAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable compilationUnit defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function testDescendantAxisIterator() in line 114
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable statement defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable primaryExpression defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses variable primaryPrefix defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function testDescendantAxisIterator2() in line 133
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable primaryPrefix defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function testFollowingSiblingAxisIterator() in line 142
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getFollowingSiblingAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable primaryExpression defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function testFollowingSiblingAxisIterator2() in line 150
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getFollowingSiblingAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable primaryExpression defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function testParentAxisIterator() in line 99
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getParentAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable importDeclaration defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function testParentAxisIterator2() in line 107
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getParentAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable compilationUnit defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
   function testPrecedingSiblingAxisIterator() in line 157
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getPrecedingSiblingAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable primaryExpression defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function testPrecedingSiblingAxisIterator2() in line 165
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getPrecedingSiblingAxisIterator(Object) defined in net::sourceforge::pmd::lang::ast::xpath::DocumentNavigator
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable primaryExpression defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function testXPath() in line 172
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable statement defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
   function testXPath2() in line 179
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest
      uses variable importDeclaration defined in net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
   variable rule in line 38
   variable TEST in line 186
      protection public
module net::sourceforge::pmd::jaxen::DocumentNavigatorTest::TestRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTCompilationUnit,Object) in line 51
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 56
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTStatement,Object) in line 61
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryPrefix,Object) in line 66
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryExpression,Object) in line 71
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   variable compilationUnit in line 42
   variable importDeclaration in line 43
   variable primaryExpression in line 46
   variable primaryPrefix in line 45
   variable statement in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/lang/dfa/report/ViolationNodeTest.java
module net::sourceforge::pmd::lang::dfa::report::ViolationNodeTest
   function createViolationNode(final String,final int,final int,final int,final int,final String) in line 90
      11 lines of code
      6 parameters
      1 conditional paths
      uses function getFilename() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndLine() defined in net::sourceforge::pmd::RuleViolation
      uses function getBeginColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getEndColumn() defined in net::sourceforge::pmd::RuleViolation
      uses function getVariableName() defined in net::sourceforge::pmd::RuleViolation
   function testEqualsNodeWithTwoDifferentViolationsDifferentBeginColumn() in line 64
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createViolationNode(final String,final int,final int,final int,final int,final String) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNodeTest
      uses function equalsNode(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
   function testEqualsNodeWithTwoDifferentViolationsDifferentBeginLine() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createViolationNode(final String,final int,final int,final int,final int,final String) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNodeTest
      uses function equalsNode(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
   function testEqualsNodeWithTwoDifferentViolationsDifferentEndColumn() in line 74
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createViolationNode(final String,final int,final int,final int,final int,final String) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNodeTest
      uses function equalsNode(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
   function testEqualsNodeWithTwoDifferentViolationsDifferentEndLine() in line 54
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createViolationNode(final String,final int,final int,final int,final int,final String) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNodeTest
      uses function equalsNode(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
   function testEqualsNodeWithTwoDifferentViolationsDifferentFilename() in line 34
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createViolationNode(final String,final int,final int,final int,final int,final String) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNodeTest
      uses function equalsNode(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
   function testEqualsNodeWithTwoDifferentViolationsDifferentVariableName() in line 84
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createViolationNode(final String,final int,final int,final int,final int,final String) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNodeTest
      uses function equalsNode(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
   function testEqualsNodeWithTwoEqualViolations() in line 24
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createViolationNode(final String,final int,final int,final int,final int,final String) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNodeTest
      uses function equalsNode(AbstractReportNode) defined in net::sourceforge::pmd::lang::dfa::report::ViolationNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/lang/Dummy2LanguageModule.java
module net::sourceforge::pmd::lang::Dummy2LanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function Dummy2LanguageModule() in line 14
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::Dummy2LanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::Dummy2LanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 11
      protection public
   variable TERSE_NAME in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/lang/DummyLanguageModule.java
module net::sourceforge::pmd::lang::DummyLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function DummyLanguageModule() in line 32
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 29
      protection public
   variable TERSE_NAME in line 30
      protection public
module net::sourceforge::pmd::lang::DummyLanguageModule::DummyRuleChainVisitor
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNodes(List< Node >,RuleContext) in line 51
      10 lines of code
      2 parameters
      3 conditional paths
      uses function indexNode(Node) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function visit(Rule,Node,RuleContext) in line 47
      3 lines of code
      3 parameters
      1 conditional paths
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::Rule
module net::sourceforge::pmd::lang::DummyLanguageModule::Handler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getParser(ParserOptions) in line 70
      protection public
      24 lines of code
      1 parameters
      1 conditional paths
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getRuleViolationFactory() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module net::sourceforge::pmd::lang::DummyLanguageModule::RuleViolationFactory
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function createRuleViolation(Rule,RuleContext,Node,String) in line 98
      3 lines of code
      4 parameters
      1 conditional paths
   function createRuleViolation(Rule,RuleContext,Node,String,int,int) in line 102
      10 lines of code
      6 parameters
      1 conditional paths
      uses function setLines(int,int) defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/AbstractPropertyDescriptorTester.java
module net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   abstract class
   function createBadProperty(boolean) in line 77
      1 lines of code
      1 parameters
      1 conditional paths
   function createBadValue(int) in line 60
      1 lines of code
      1 parameters
      1 conditional paths
   function createProperty(boolean) in line 68
      1 lines of code
      1 parameters
      1 conditional paths
   function createValue(int) in line 51
      1 lines of code
      1 parameters
      1 conditional paths
   function filter(char[],char) in line 315
      14 lines of code
      2 parameters
      5 conditional paths
   function getMultiFactory() in line 83
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeName defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function getPropertyDescriptorValues() in line 87
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::PropertyDescriptorFields
      uses variable DESCRIPTION defined in net::sourceforge::pmd::PropertyDescriptorFields
      uses variable MIN defined in net::sourceforge::pmd::PropertyDescriptorFields
      uses variable MAX defined in net::sourceforge::pmd::PropertyDescriptorFields
   function getSingleFactory() in line 79
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeName defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function randomBool() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function randomChar(char[]) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function randomInt() defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function randomChoice(Object[]) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function randomInt() defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function randomDouble(double,double) in line 280
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function x(K+) defined in sample-matlab.m
   function randomFloat(float,float) in line 268
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function randomDouble(double,double) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function randomInt() in line 230
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function randomInt(int,int) in line 243
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function x(K+) defined in sample-matlab.m
   function randomString(int) in line 251
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable alphaChars defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function randomChar(char[]) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function testAsDelimitedString() in line 149
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function createValue(int) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses variable multiValueCount defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createProperty(boolean) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function asDelimitedString(T) defined in net::sourceforge::pmd::PropertyDescriptor
      uses function valueFrom(String) defined in net::sourceforge::pmd::PropertyDescriptor
   function testConstructors() in line 133
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function createProperty(boolean) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createBadProperty(boolean) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function testErrorFor() in line 175
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function createValue(int) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createProperty(boolean) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function errorFor(Object) defined in net::sourceforge::pmd::PropertyDescriptor
      uses variable multiValueCount defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function testErrorForBad() in line 194
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
      uses function createProperty(boolean) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createBadValue(int) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function errorFor(Object) defined in net::sourceforge::pmd::PropertyDescriptor
      uses variable multiValueCount defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function testFactoryMultiValueCustomDelimiter() in line 118
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function getMultiFactory() defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function getPropertyDescriptorValues() defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses variable allChars defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses variable DELIMITER defined in net::sourceforge::pmd::PropertyDescriptorFields
      uses function createWith(Map< String, String >) defined in net::sourceforge::pmd::PropertyDescriptorFactory
      uses function createValue(int) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses variable multiValueCount defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function asDelimitedString(T) defined in net::sourceforge::pmd::PropertyDescriptor
      uses function valueFrom(String) defined in net::sourceforge::pmd::PropertyDescriptor
   function testFactoryMultiValueDefaultDelimiter() in line 108
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getMultiFactory() defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createWith(Map< String, String >) defined in net::sourceforge::pmd::PropertyDescriptorFactory
      uses function getPropertyDescriptorValues() defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createValue(int) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses variable multiValueCount defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function asDelimitedString(T) defined in net::sourceforge::pmd::PropertyDescriptor
      uses function valueFrom(String) defined in net::sourceforge::pmd::PropertyDescriptor
   function testFactorySingleValue() in line 97
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getSingleFactory() defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createWith(Map< String, String >) defined in net::sourceforge::pmd::PropertyDescriptorFactory
      uses function getPropertyDescriptorValues() defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createValue(int) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function valueFrom(String) defined in net::sourceforge::pmd::PropertyDescriptor
      uses function asDelimitedString(T) defined in net::sourceforge::pmd::PropertyDescriptor
   function testType() in line 214
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function createProperty(boolean) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function type() defined in net::sourceforge::pmd::PropertyDescriptor
   function testValueFrom() in line 162
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function createValue(int) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function createProperty(boolean) defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
      uses function asDelimitedString(T) defined in net::sourceforge::pmd::PropertyDescriptor
      uses function valueFrom(String) defined in net::sourceforge::pmd::PropertyDescriptor
   function AbstractPropertyDescriptorTester(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeName defined in net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   variable allChars in line 43
      protection public
   variable alphaChars in line 41
      protection public
   variable alphaNumericChars in line 42
      protection public
   variable digitChars in line 40
      protection public
   variable multiValueCount in line 36
   variable punctuationChars in line 38
      protection public
   variable typeName in line 34
   variable whitespaceChars in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/BooleanPropertyTest.java
module net::sourceforge::pmd::properties::BooleanPropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 61
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
   function createBadValue(int) in line 40
      3 lines of code
      1 parameters
      1 conditional paths
   function createProperty(boolean) in line 50
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
   function createValue(int) in line 24
      10 lines of code
      1 parameters
      3 conditional paths
   function testErrorForBad() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BooleanPropertyTest() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/CharacterPropertyTest.java
module net::sourceforge::pmd::properties::CharacterPropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 83
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable delimiter defined in net::sourceforge::pmd::properties::CharacterPropertyTest
      uses variable f defined in sample-matlab.m
   function createBadValue(int) in line 48
      10 lines of code
      1 parameters
      3 conditional paths
   function createProperty(boolean) in line 69
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable delimiter defined in net::sourceforge::pmd::properties::CharacterPropertyTest
      uses variable f defined in sample-matlab.m
   function createValue(int) in line 31
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable charSet defined in net::sourceforge::pmd::properties::CharacterPropertyTest
   function testErrorForBad() in line 60
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function CharacterPropertyTest() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable charSet in line 19
   variable delimiter in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/DoublePropertyTest.java
module net::sourceforge::pmd::properties::DoublePropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 78
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::DoublePropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::DoublePropertyTest
      uses variable SHIFT defined in net::sourceforge::pmd::properties::DoublePropertyTest
      uses variable f defined in sample-matlab.m
   function createBadValue(int) in line 48
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::DoublePropertyTest
      uses variable SHIFT defined in net::sourceforge::pmd::properties::DoublePropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::DoublePropertyTest
   function createProperty(boolean) in line 66
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::DoublePropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::DoublePropertyTest
      uses variable d defined in sample-matlab.m
      uses variable f defined in sample-matlab.m
   function createValue(int) in line 31
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::DoublePropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::DoublePropertyTest
   function DoublePropertyTest() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable MAX in line 18
   variable MIN in line 17
   variable SHIFT in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/EnumeratedPropertyTest.java
module net::sourceforge::pmd::properties::EnumeratedPropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 86
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable keys defined in net::sourceforge::pmd::properties::EnumeratedPropertyTest
      uses variable values defined in net::sourceforge::pmd::properties::EnumeratedPropertyTest
      uses variable f defined in sample-matlab.m
   function createBadValue(int) in line 55
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable values defined in net::sourceforge::pmd::properties::EnumeratedPropertyTest
   function createProperty(boolean) in line 72
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable keys defined in net::sourceforge::pmd::properties::EnumeratedPropertyTest
      uses variable values defined in net::sourceforge::pmd::properties::EnumeratedPropertyTest
      uses variable f defined in sample-matlab.m
   function createValue(int) in line 37
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable values defined in net::sourceforge::pmd::properties::EnumeratedPropertyTest
   function testFactoryMultiValueCustomDelimiter() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFactoryMultiValueDefaultDelimiter() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFactorySingleValue() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EnumeratedPropertyTest() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable keys in line 22
   variable values in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/FloatPropertyTest.java
module net::sourceforge::pmd::properties::FloatPropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 85
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
   function createBadValue(int) in line 56
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::FloatPropertyTest
      uses variable SHIFT defined in net::sourceforge::pmd::properties::FloatPropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::FloatPropertyTest
   function createProperty(boolean) in line 73
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::FloatPropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::FloatPropertyTest
      uses variable f defined in sample-matlab.m
   function createValue(int) in line 39
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::FloatPropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::FloatPropertyTest
   function randomProperty(int,int,boolean) in line 21
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
   function FloatPropertyTest() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable MAX in line 18
   variable MIN in line 17
   variable SHIFT in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/IntegerPropertyTest.java
module net::sourceforge::pmd::properties::IntegerPropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 84
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::IntegerPropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::IntegerPropertyTest
      uses variable f defined in sample-matlab.m
   function createBadValue(int) in line 50
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::IntegerPropertyTest
      uses variable SHIFT defined in net::sourceforge::pmd::properties::IntegerPropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::IntegerPropertyTest
   function createProperty(boolean) in line 71
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::IntegerPropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::IntegerPropertyTest
      uses variable f defined in sample-matlab.m
   function createValue(int) in line 33
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable MIN defined in net::sourceforge::pmd::properties::IntegerPropertyTest
      uses variable MAX defined in net::sourceforge::pmd::properties::IntegerPropertyTest
   function testErrorForBad() in line 62
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function IntegerPropertyTest() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable MAX in line 20
   variable MIN in line 19
   variable SHIFT in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/MethodPropertyTest.java
module net::sourceforge::pmd::properties::MethodPropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 71
      8 lines of code
      1 parameters
      1 conditional paths
   function createBadValue(int) in line 81
      15 lines of code
      1 parameters
      3 conditional paths
   function createProperty(boolean) in line 98
      8 lines of code
      1 parameters
      1 conditional paths
   function createValue(int) in line 108
      15 lines of code
      1 parameters
      3 conditional paths
   function testAsMethodOn() in line 50
      protection public
      19 lines of code
      0 parameters
      3 conditional paths
      uses variable methodSignatures defined in net::sourceforge::pmd::properties::MethodPropertyTest
      uses variable CLASS_METHOD_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable METHOD_ARG_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function testAsStringOn() in line 38
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable method defined in sample-matlab.m
      uses variable methodSignatures defined in net::sourceforge::pmd::properties::MethodPropertyTest
      uses variable CLASS_METHOD_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
      uses variable METHOD_ARG_DELIMITER defined in net::sourceforge::pmd::lang::rule::properties::MethodProperty
   function MethodPropertyTest() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable methodSignatures in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/NonRuleWithAllPropertyTypes.java
module net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   function apply(List<?extends Node >,RuleContext) in line 116
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function NonRuleWithAllPropertyTypes() in line 93
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable singleStr defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiStr defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable singleInt defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiInt defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable singleLong defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiLong defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable singleBool defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiBool defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable singleChar defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiChar defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable singleFloat defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiFloat defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable singleType defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiType defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable enumType defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable singleMethod defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiMethod defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable multiEnumType defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
   variable enumType in line 86
      protection public
   variable multiBool in line 63
      protection public
   variable multiChar in line 68
      protection public
   variable multiEnumType in line 89
      protection public
   variable multiFloat in line 73
      protection public
   variable multiInt in line 54
      protection public
   variable multiLong in line 58
      protection public
   variable multiMethod in line 83
      protection public
   variable multiStr in line 49
      protection public
   variable multiType in line 78
      protection public
   variable singleBool in line 61
      protection public
   variable singleChar in line 66
      protection public
   variable singleFloat in line 71
      protection public
   variable singleInt in line 52
      protection public
   variable singleLong in line 57
      protection public
   variable singleMethod in line 81
      protection public
   variable singleStr in line 48
      protection public
   variable singleType in line 76
      protection public
   variable stringLength in line 43
   variable stringToLowerCase in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/PropertyAccessorTest.java
module net::sourceforge::pmd::properties::PropertyAccessorTest
   function setUpSingleRule() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::properties::PropertyAccessorTest
   function testBooleans() in line 43
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::properties::PropertyAccessorTest
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable singleBool defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable multiBool defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
   function testFloats() in line 54
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
   function testIntegers() in line 33
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::properties::PropertyAccessorTest
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable singleInt defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable multiInt defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
   function testStrings() in line 75
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::properties::PropertyAccessorTest
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable singleStr defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable multiStr defined in net::sourceforge::pmd::properties::NonRuleWithAllPropertyTypes
   variable rule in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/StringPropertyTest.java
module net::sourceforge::pmd::properties::StringPropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 101
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable delimiter defined in net::sourceforge::pmd::properties::StringPropertyTest
      uses variable f defined in sample-matlab.m
   function createBadValue(int) in line 48
      10 lines of code
      1 parameters
      3 conditional paths
   function createProperty(boolean) in line 90
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delimiter defined in net::sourceforge::pmd::properties::StringPropertyTest
      uses variable f defined in sample-matlab.m
   function createValue(int) in line 31
      10 lines of code
      1 parameters
      3 conditional paths
      uses function newString() defined in net::sourceforge::pmd::properties::StringPropertyTest
   function newString() in line 64
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable maxStringLength defined in net::sourceforge::pmd::properties::StringPropertyTest
      uses function randomCharIn(char[]) defined in net::sourceforge::pmd::properties::StringPropertyTest
      uses variable charSet defined in net::sourceforge::pmd::properties::StringPropertyTest
   function randomCharIn(char[]) in line 80
      3 lines of code
      1 parameters
      1 conditional paths
   function StringPropertyTest() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable charSet in line 19
   variable delimiter in line 18
   variable maxStringLength in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/properties/TypePropertyTest.java
module net::sourceforge::pmd::properties::TypePropertyTest
   inherits from net::sourceforge::pmd::properties::AbstractPropertyDescriptorTester
   function createBadProperty(boolean) in line 88
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable javaLangClasses defined in net::sourceforge::pmd::properties::TypePropertyTest
   function createBadValue(int) in line 58
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable javaUtilTypes defined in net::sourceforge::pmd::properties::TypePropertyTest
   function createProperty(boolean) in line 75
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable javaLangClasses defined in net::sourceforge::pmd::properties::TypePropertyTest
   function createValue(int) in line 41
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable javaLangClasses defined in net::sourceforge::pmd::properties::TypePropertyTest
   function TypePropertyTest() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable javaLangClasses in line 26
   variable javaUtilTypes in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/ReadableDurationTest.java
module net::sourceforge::pmd::ReadableDurationTest
   function data() in line 30
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function test() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTime() defined in net::sourceforge::pmd::Report::ReadableDuration
   function ReadableDurationTest(String,Integer) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable expected in line 22
   variable value in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/AbstractRendererTst.java
module net::sourceforge::pmd::renderers::AbstractRendererTst
   abstract class
   function filter(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExpected() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getExpectedEmpty() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getExpectedError(ProcessingError) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getExpectedMultiple() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRenderer() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function newRuleViolation(int) in line 56
      10 lines of code
      1 parameters
      1 conditional paths
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setEndLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setEndColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
   function reportOneViolation() in line 43
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function newRuleViolation(int) defined in net::sourceforge::pmd::renderers::AbstractRendererTst
   function reportTwoViolations() in line 49
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function newRuleViolation(int) defined in net::sourceforge::pmd::renderers::AbstractRendererTst
   function testError() in line 89
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addError(ProcessingError) defined in net::sourceforge::pmd::Report
      uses function getRenderer() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function filter(String) defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function getExpectedError(ProcessingError) defined in net::sourceforge::pmd::renderers::AbstractRendererTst
   function testNullPassedIn() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getRenderer() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function renderFileReport(Report) defined in net::sourceforge::pmd::renderers::Renderer
   function testRenderer() in line 68
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function reportOneViolation() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function getRenderer() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function filter(String) defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function getExpected() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
   function testRendererEmpty() in line 75
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getRenderer() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function filter(String) defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function getExpectedEmpty() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
   function testRendererMultiple() in line 82
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function reportTwoViolations() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function getRenderer() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function filter(String) defined in net::sourceforge::pmd::renderers::AbstractRendererTst
      uses function getExpectedMultiple() defined in net::sourceforge::pmd::renderers::AbstractRendererTst
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/EmacsRendererTest.java
module net::sourceforge::pmd::renderers::EmacsRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function getExpected() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpectedMultiple() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 8
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/HTMLRendererTest.java
module net::sourceforge::pmd::renderers::HTMLRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function getExpected() in line 14
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 26
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedError(ProcessingError) in line 50
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedMultiple() in line 34
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 9
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/IDEAJRendererTest.java
module net::sourceforge::pmd::renderers::IDEAJRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function getExpected() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpectedMultiple() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 7
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable SOURCE_PATH defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable CLASS_AND_METHOD_NAME defined in net::sourceforge::pmd::renderers::IDEAJRenderer
      uses variable FILE_NAME defined in net::sourceforge::pmd::renderers::IDEAJRenderer
   function suite() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/PapariTextRendererTest.java
module net::sourceforge::pmd::renderers::PapariTextRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function getExpected() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable naString defined in net::sourceforge::pmd::renderers::PapariTextRendererTest
   function getExpectedEmpty() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedError(ProcessingError) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedMultiple() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable naString defined in net::sourceforge::pmd::renderers::PapariTextRendererTest
   function getRenderer() in line 21
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable COLOR defined in net::sourceforge::pmd::renderers::TextColorRenderer
   function suite() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable naString in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/RenderersTests.java
module net::sourceforge::pmd::renderers::RenderersTests
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/SummaryHTMLRendererTest.java
module net::sourceforge::pmd::renderers::SummaryHTMLRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function createEmptyReportWithSuppression() in line 168
      12 lines of code
      0 parameters
      1 conditional paths
      uses function suppress(Map< Integer, String >) defined in net::sourceforge::pmd::Report
      uses function setLines(int,int) defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
   function getExpected() in line 33
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 58
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedError(ProcessingError) in line 104
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedMultiple() in line 77
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 25
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable LINK_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
      uses variable LINE_PREFIX defined in net::sourceforge::pmd::renderers::HTMLRenderer
   function testHideSuppressions() in line 160
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function createEmptyReportWithSuppression() defined in net::sourceforge::pmd::renderers::SummaryHTMLRendererTest
      uses function getRenderer() defined in net::sourceforge::pmd::renderers::SummaryHTMLRendererTest
      uses function setShowSuppressedViolations(boolean) defined in net::sourceforge::pmd::renderers::Renderer
      uses function getExpectedEmpty() defined in net::sourceforge::pmd::renderers::SummaryHTMLRendererTest
   function testShowSuppressions() in line 128
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function createEmptyReportWithSuppression() defined in net::sourceforge::pmd::renderers::SummaryHTMLRendererTest
      uses function getRenderer() defined in net::sourceforge::pmd::renderers::SummaryHTMLRendererTest
      uses function setShowSuppressedViolations(boolean) defined in net::sourceforge::pmd::renderers::Renderer
      uses variable EOL defined in net::sourceforge::pmd::PMD
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/TextPadRendererTest.java
module net::sourceforge::pmd::renderers::TextPadRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function getExpected() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpectedMultiple() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/TextRendererTest.java
module net::sourceforge::pmd::renderers::TextRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function getExpected() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpectedError(ProcessingError) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedMultiple() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 9
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/VBHTMLRendererTest.java
module net::sourceforge::pmd::renderers::VBHTMLRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function getExpected() in line 14
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 28
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedError(ProcessingError) in line 55
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedMultiple() in line 40
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getRenderer() in line 9
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/XSLTRendererTest.java
module net::sourceforge::pmd::renderers::XSLTRendererTest
   function testDefaultStylesheet() in line 21
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/renderers/YAHTMLRendererTest.java
module net::sourceforge::pmd::renderers::YAHTMLRendererTest
   inherits from net::sourceforge::pmd::renderers::AbstractRendererTst
   function cleanUp() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function deleteDirectory(File) defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
      uses variable outputDir defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
   function deleteDirectory(File) in line 34
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable f defined in sample-matlab.m
   function getExpected() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outputDir defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getExpectedEmpty() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getExpected() defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
   function getExpectedError(ProcessingError) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getExpected() defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
   function getExpectedMultiple() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getExpected() defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
   function getRenderer() in line 50
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable OUTPUT_DIR defined in net::sourceforge::pmd::renderers::YAHTMLRenderer
      uses variable outputDir defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
   function getTemporaryDirectory(String) in line 26
      7 lines of code
      1 parameters
      1 conditional paths
   function setUp() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outputDir defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
      uses function getTemporaryDirectory(String) defined in net::sourceforge::pmd::renderers::YAHTMLRendererTest
   function suite() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable outputDir in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/ReportTest.java
module net::sourceforge::pmd::ReportTest
   inherits from net::sourceforge::pmd::testframework::RuleTst
   inherits from net::sourceforge::pmd::testframework::RuleTst
   inherits from net::sourceforge::pmd::ReportListener
   function getNode(int,int) in line 167
      10 lines of code
      2 parameters
      1 conditional paths
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtSetParent(Node) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getNode(int,int,boolean) in line 178
      8 lines of code
      3 parameters
      2 conditional paths
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function metricAdded(Metric) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable metricSemaphore defined in net::sourceforge::pmd::ReportTest
   function render(Renderer,Report) in line 187
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function ruleViolationAdded(RuleViolation) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable violationSemaphore defined in net::sourceforge::pmd::ReportTest
   function testBasic() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
   function testExclusionsInReportWithAnnotations() in line 49
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST2 defined in net::sourceforge::pmd::ReportTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithAnnotationsFullName() in line 57
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST2_FULL defined in net::sourceforge::pmd::ReportTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithNOPMD() in line 65
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST3 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithNOPMDEcmascript() in line 21
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptRuleViolationFactory
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithRuleViolationSuppressRegex() in line 29
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable VIOLATION_SUPPRESS_REGEX_DESCRIPTOR defined in net::sourceforge::pmd::Rule
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithRuleViolationSuppressXPath() in line 39
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable VIOLATION_SUPPRESS_XPATH_DESCRIPTOR defined in net::sourceforge::pmd::Rule
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testListener() in line 103
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addListener(ReportListener) defined in net::sourceforge::pmd::Report
      uses variable violationSemaphore defined in net::sourceforge::pmd::ReportTest
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses variable metricSemaphore defined in net::sourceforge::pmd::ReportTest
      uses function addMetric(Metric) defined in net::sourceforge::pmd::Report
   function testMetric0() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testMetric1() in line 46
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testSortedReport_File() in line 69
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses function render(Renderer,Report) defined in net::sourceforge::pmd::ReportTest
   function testSortedReport_Line() in line 86
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses function render(Renderer,Report) defined in net::sourceforge::pmd::ReportTest
   function testSummary() in line 121
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
   function testTreeIterator() in line 141
      protection public
      25 lines of code
      0 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
   variable defaultLanguage in line 19
   variable metricSemaphore in line 29
   variable TEST1 in line 72
   variable TEST2 in line 75
   variable TEST2_FULL in line 78
   variable TEST3 in line 82
   variable violationSemaphore in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/ReportTest.java
module net::sourceforge::pmd::ReportTest
   inherits from net::sourceforge::pmd::testframework::RuleTst
   inherits from net::sourceforge::pmd::testframework::RuleTst
   inherits from net::sourceforge::pmd::ReportListener
   function getNode(int,int) in line 167
      10 lines of code
      2 parameters
      1 conditional paths
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtSetParent(Node) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getNode(int,int,boolean) in line 178
      8 lines of code
      3 parameters
      2 conditional paths
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function metricAdded(Metric) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable metricSemaphore defined in net::sourceforge::pmd::ReportTest
   function render(Renderer,Report) in line 187
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function ruleViolationAdded(RuleViolation) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable violationSemaphore defined in net::sourceforge::pmd::ReportTest
   function testBasic() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
   function testExclusionsInReportWithAnnotations() in line 49
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST2 defined in net::sourceforge::pmd::ReportTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithAnnotationsFullName() in line 57
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST2_FULL defined in net::sourceforge::pmd::ReportTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithNOPMD() in line 65
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST3 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithNOPMDEcmascript() in line 21
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptRuleViolationFactory
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithRuleViolationSuppressRegex() in line 29
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable VIOLATION_SUPPRESS_REGEX_DESCRIPTOR defined in net::sourceforge::pmd::Rule
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithRuleViolationSuppressXPath() in line 39
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable VIOLATION_SUPPRESS_XPATH_DESCRIPTOR defined in net::sourceforge::pmd::Rule
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testListener() in line 103
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addListener(ReportListener) defined in net::sourceforge::pmd::Report
      uses variable violationSemaphore defined in net::sourceforge::pmd::ReportTest
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses variable metricSemaphore defined in net::sourceforge::pmd::ReportTest
      uses function addMetric(Metric) defined in net::sourceforge::pmd::Report
   function testMetric0() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testMetric1() in line 46
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testSortedReport_File() in line 69
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses function render(Renderer,Report) defined in net::sourceforge::pmd::ReportTest
   function testSortedReport_Line() in line 86
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses function render(Renderer,Report) defined in net::sourceforge::pmd::ReportTest
   function testSummary() in line 121
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
   function testTreeIterator() in line 141
      protection public
      25 lines of code
      0 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
   variable defaultLanguage in line 19
   variable metricSemaphore in line 29
   variable TEST1 in line 72
   variable TEST2 in line 75
   variable TEST2_FULL in line 78
   variable TEST3 in line 82
   variable violationSemaphore in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/ReportTest.java
module net::sourceforge::pmd::ReportTest
   inherits from net::sourceforge::pmd::testframework::RuleTst
   inherits from net::sourceforge::pmd::testframework::RuleTst
   inherits from net::sourceforge::pmd::ReportListener
   function getNode(int,int) in line 167
      10 lines of code
      2 parameters
      1 conditional paths
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtSetParent(Node) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getNode(int,int,boolean) in line 178
      8 lines of code
      3 parameters
      2 conditional paths
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function metricAdded(Metric) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable metricSemaphore defined in net::sourceforge::pmd::ReportTest
   function render(Renderer,Report) in line 187
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function ruleViolationAdded(RuleViolation) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable violationSemaphore defined in net::sourceforge::pmd::ReportTest
   function testBasic() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
   function testExclusionsInReportWithAnnotations() in line 49
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST2 defined in net::sourceforge::pmd::ReportTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithAnnotationsFullName() in line 57
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST2_FULL defined in net::sourceforge::pmd::ReportTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithNOPMD() in line 65
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST3 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithNOPMDEcmascript() in line 21
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptRuleViolationFactory
      uses function addViolation(RuleContext,Rule,Node,String,Object[]) defined in net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithRuleViolationSuppressRegex() in line 29
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable VIOLATION_SUPPRESS_REGEX_DESCRIPTOR defined in net::sourceforge::pmd::Rule
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testExclusionsInReportWithRuleViolationSuppressXPath() in line 39
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable VIOLATION_SUPPRESS_XPATH_DESCRIPTOR defined in net::sourceforge::pmd::Rule
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ReportTest
      uses variable defaultLanguage defined in net::sourceforge::pmd::ReportTest
      uses function isEmpty() defined in net::sourceforge::pmd::Report
      uses function getSuppressedRuleViolations() defined in net::sourceforge::pmd::Report
   function testListener() in line 103
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addListener(ReportListener) defined in net::sourceforge::pmd::Report
      uses variable violationSemaphore defined in net::sourceforge::pmd::ReportTest
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses variable metricSemaphore defined in net::sourceforge::pmd::ReportTest
      uses function addMetric(Metric) defined in net::sourceforge::pmd::Report
   function testMetric0() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testMetric1() in line 46
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testSortedReport_File() in line 69
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses function render(Renderer,Report) defined in net::sourceforge::pmd::ReportTest
   function testSortedReport_Line() in line 86
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses function render(Renderer,Report) defined in net::sourceforge::pmd::ReportTest
   function testSummary() in line 121
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
   function testTreeIterator() in line 141
      protection public
      25 lines of code
      0 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getNode(int,int) defined in net::sourceforge::pmd::ReportTest
      uses function getMessage() defined in net::sourceforge::pmd::Rule
   variable defaultLanguage in line 19
   variable metricSemaphore in line 29
   variable TEST1 in line 72
   variable TEST2 in line 75
   variable TEST2_FULL in line 78
   variable TEST3 in line 82
   variable violationSemaphore in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/RuleContextTest.java
module net::sourceforge::pmd::RuleContextTest
   function suite() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAttributes() in line 48
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function getAttribute(String) defined in net::sourceforge::pmd::RuleContext
      uses function setAttribute(String,Object) defined in net::sourceforge::pmd::RuleContext
      uses function removeAttribute(String) defined in net::sourceforge::pmd::RuleContext
   function testReport() in line 22
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function size() defined in net::sourceforge::pmd::Report
      uses variable r defined in sample-matlab.m
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
   function testSharedAttributes() in line 66
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
      uses function setAttribute(String,Object) defined in net::sourceforge::pmd::RuleContext
      uses function getAttribute(String) defined in net::sourceforge::pmd::RuleContext
      uses function removeAttribute(String) defined in net::sourceforge::pmd::RuleContext
   function testSourceCodeFile() in line 40
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeFile() defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFile(File) defined in net::sourceforge::pmd::RuleContext
   function testSourceCodeFilename() in line 32
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeFilename() defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/RuleReferenceTest.java
module net::sourceforge::pmd::RuleReferenceTest
   function suite() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testNotOverride() in line 107
      protection public
      62 lines of code
      0 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function setMinimumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function setMaximumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setDescription(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addExample(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setExternalInfoUrl(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses function setRule(Rule) defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setMinimumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setMaximumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setDeprecated(boolean) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setDescription(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function addExample(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setExternalInfoUrl(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getLanguage() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenLanguage() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getMinimumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenMinimumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getMaximumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenMaximumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function isDeprecated() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function isOverriddenDeprecated() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getName() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenName() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenMessage() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getDescription() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenDescription() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getExamples() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenExamples() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getExternalInfoUrl() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenExternalInfoUrl() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getPriority() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenPriority() defined in net::sourceforge::pmd::lang::rule::RuleReference
   function testOverride() in line 31
      protection public
      74 lines of code
      0 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable NAME defined in net::sourceforge::pmd::lang::Dummy2LanguageModule
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setDescription(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addExample(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setExternalInfoUrl(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses function setRule(Rule) defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function setMinimumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function setMaximumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setDeprecated(boolean) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setDescription(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function addExample(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setExternalInfoUrl(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setPriority(RulePriority) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses function getLanguage() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenLanguage() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getMinimumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenMinimumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getMaximumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenMaximumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getRule() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function isDeprecated() defined in net::sourceforge::pmd::Rule
      uses function isDeprecated() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function isOverriddenDeprecated() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getName() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenName() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getPropertyDescriptors() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenPropertyDescriptors() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenMessage() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getDescription() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenDescription() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getExamples() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenExamples() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getExternalInfoUrl() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenExternalInfoUrl() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getPriority() defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getOverriddenPriority() defined in net::sourceforge::pmd::lang::rule::RuleReference
   function testRuleSetReference() in line 23
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setRuleSetReference(RuleSetReference) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getRuleSetReference() defined in net::sourceforge::pmd::lang::rule::RuleReference
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java
module net::sourceforge::pmd::RuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function countRule(RuleSets,String) in line 104
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
   function createRuleSetReferenceId(final String) in line 1052
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function loadFirstRule(String) in line 1040
      5 lines of code
      1 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function loadRuleSet(String) in line 1046
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testBug1202() in line 528
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testCreateEmptyRuleSet() in line 121
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function size() defined in net::sourceforge::pmd::RuleSet
   function testDFAFlag() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DFA defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testDirectDeprecatedRule() in line 461
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DIRECT_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testEmptyRuleSetFile() in line 548
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testExclusionOfUselessParantheses() in line 16
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testExtendedReferences() in line 54
      protection public
      49 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSets
      uses function countRule(RuleSets,String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable property defined in sample-matlab.m
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function testExternalReferenceOverride() in line 269
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   function testExternalReferences() in line 493
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EXTERNAL_REFERENCE_RULE_SET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
   function testFacadesOffByDefault() in line 258
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncludeExcludePatterns() in line 501
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCLUDE_EXCLUDE_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testIncorrectExternalRef() in line 403
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_MISPELLED_XREF defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectLanguage() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMaximumLanugageVersion() in line 449
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMinimumLanugageVersion() in line 437
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testInvertedMinimumMaximumLanugageVersions() in line 455
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testLanguage() in line 420
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function testMaximumLanugageVersion() in line 443
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMinimumLanugageVersion() in line 431
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMultipleRules() in line 138
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MULTIPLE_RULES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testNoRuleSetFileName() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testOverrideMessage() in line 391
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testOverrideMessageOneElem() in line 397
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testProps() in line 156
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PROPERTIES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable d defined in sample-matlab.m
   function testReferenceInternalToExternal() in line 316
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToExternalChain() in line 328
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternal() in line 289
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternalChain() in line 301
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferencePriority() in line 344
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable LOW defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testReferenceToDeprecatedRule() in line 467
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRefs() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleReferenceWithNameOverridden() in line 588
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetFileName() in line 30
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetNotFound() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testRuleSetReferencesADeprecatedRenamedRule() in line 238
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetReferenceWithDeprecatedRule() in line 478
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRuleSetWithDeprecatedButRenamedRule() in line 222
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetWithDeprecatedRule() in line 211
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testSetPriority() in line 409
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM_LOW defined in net::sourceforge::pmd::RulePriority
   function testSingleRule() in line 128
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testSingleRuleWithPriority() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PRIORITY defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDefaultDelimiter() in line 167
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDelimiter() in line 189
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testWrongRuleNameExcluded() in line 615
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testWrongRuleNameReferenced() in line 569
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testXPath() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   variable DEPRECATED_RULE_NAME in line 977
   variable DEPRECATED_RULE_RULESET_NAME in line 973
   variable DFA in line 1005
   variable DIRECT_DEPRECATED_RULE in line 956
   variable EMPTY_RULESET in line 757
   variable EXTERNAL_REFERENCE_RULE_SET in line 1031
   variable INCLUDE_EXCLUDE_RULESET in line 1013
   variable INCORRECT_LANGUAGE in line 846
   variable INCORRECT_MAXIMUM_LANGUAGE_VERSION in line 914
   variable INCORRECT_MINIMUM_LANGUAGE_VERSION in line 874
   variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS in line 934
   variable LANGUAGE in line 831
   variable MAXIMUM_LANGUAGE_VERSION in line 894
   variable MINIMUM_LANGUAGE_VERSION in line 854
   variable MULTIPLE_RULES in line 769
   variable PRIORITY in line 823
   variable PROPERTIES in line 780
   variable REF_INTERNAL_TO_EXTERNAL in line 725
   variable REF_INTERNAL_TO_EXTERNAL_CHAIN in line 740
   variable REF_INTERNAL_TO_INTERNAL in line 687
   variable REF_INTERNAL_TO_INTERNAL_CHAIN in line 705
   variable REF_MISPELLED_XREF in line 641
   variable REF_OVERRIDE in line 657
   variable REF_OVERRIDE_ORIGINAL_NAME in line 630
   variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM in line 648
   variable REFERENCE_TO_DEPRECATED_RULE in line 979
   variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE in line 992
   variable SINGLE_RULE in line 761
   variable XPATH in line 809
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java
module net::sourceforge::pmd::RuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function countRule(RuleSets,String) in line 104
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
   function createRuleSetReferenceId(final String) in line 1052
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function loadFirstRule(String) in line 1040
      5 lines of code
      1 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function loadRuleSet(String) in line 1046
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testBug1202() in line 528
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testCreateEmptyRuleSet() in line 121
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function size() defined in net::sourceforge::pmd::RuleSet
   function testDFAFlag() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DFA defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testDirectDeprecatedRule() in line 461
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DIRECT_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testEmptyRuleSetFile() in line 548
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testExclusionOfUselessParantheses() in line 16
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testExtendedReferences() in line 54
      protection public
      49 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSets
      uses function countRule(RuleSets,String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable property defined in sample-matlab.m
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function testExternalReferenceOverride() in line 269
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   function testExternalReferences() in line 493
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EXTERNAL_REFERENCE_RULE_SET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
   function testFacadesOffByDefault() in line 258
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncludeExcludePatterns() in line 501
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCLUDE_EXCLUDE_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testIncorrectExternalRef() in line 403
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_MISPELLED_XREF defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectLanguage() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMaximumLanugageVersion() in line 449
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMinimumLanugageVersion() in line 437
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testInvertedMinimumMaximumLanugageVersions() in line 455
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testLanguage() in line 420
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function testMaximumLanugageVersion() in line 443
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMinimumLanugageVersion() in line 431
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMultipleRules() in line 138
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MULTIPLE_RULES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testNoRuleSetFileName() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testOverrideMessage() in line 391
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testOverrideMessageOneElem() in line 397
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testProps() in line 156
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PROPERTIES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable d defined in sample-matlab.m
   function testReferenceInternalToExternal() in line 316
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToExternalChain() in line 328
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternal() in line 289
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternalChain() in line 301
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferencePriority() in line 344
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable LOW defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testReferenceToDeprecatedRule() in line 467
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRefs() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleReferenceWithNameOverridden() in line 588
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetFileName() in line 30
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetNotFound() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testRuleSetReferencesADeprecatedRenamedRule() in line 238
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetReferenceWithDeprecatedRule() in line 478
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRuleSetWithDeprecatedButRenamedRule() in line 222
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetWithDeprecatedRule() in line 211
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testSetPriority() in line 409
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM_LOW defined in net::sourceforge::pmd::RulePriority
   function testSingleRule() in line 128
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testSingleRuleWithPriority() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PRIORITY defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDefaultDelimiter() in line 167
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDelimiter() in line 189
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testWrongRuleNameExcluded() in line 615
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testWrongRuleNameReferenced() in line 569
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testXPath() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   variable DEPRECATED_RULE_NAME in line 977
   variable DEPRECATED_RULE_RULESET_NAME in line 973
   variable DFA in line 1005
   variable DIRECT_DEPRECATED_RULE in line 956
   variable EMPTY_RULESET in line 757
   variable EXTERNAL_REFERENCE_RULE_SET in line 1031
   variable INCLUDE_EXCLUDE_RULESET in line 1013
   variable INCORRECT_LANGUAGE in line 846
   variable INCORRECT_MAXIMUM_LANGUAGE_VERSION in line 914
   variable INCORRECT_MINIMUM_LANGUAGE_VERSION in line 874
   variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS in line 934
   variable LANGUAGE in line 831
   variable MAXIMUM_LANGUAGE_VERSION in line 894
   variable MINIMUM_LANGUAGE_VERSION in line 854
   variable MULTIPLE_RULES in line 769
   variable PRIORITY in line 823
   variable PROPERTIES in line 780
   variable REF_INTERNAL_TO_EXTERNAL in line 725
   variable REF_INTERNAL_TO_EXTERNAL_CHAIN in line 740
   variable REF_INTERNAL_TO_INTERNAL in line 687
   variable REF_INTERNAL_TO_INTERNAL_CHAIN in line 705
   variable REF_MISPELLED_XREF in line 641
   variable REF_OVERRIDE in line 657
   variable REF_OVERRIDE_ORIGINAL_NAME in line 630
   variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM in line 648
   variable REFERENCE_TO_DEPRECATED_RULE in line 979
   variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE in line 992
   variable SINGLE_RULE in line 761
   variable XPATH in line 809
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java
module net::sourceforge::pmd::RuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function countRule(RuleSets,String) in line 104
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
   function createRuleSetReferenceId(final String) in line 1052
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function loadFirstRule(String) in line 1040
      5 lines of code
      1 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function loadRuleSet(String) in line 1046
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testBug1202() in line 528
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testCreateEmptyRuleSet() in line 121
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function size() defined in net::sourceforge::pmd::RuleSet
   function testDFAFlag() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DFA defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testDirectDeprecatedRule() in line 461
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DIRECT_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testEmptyRuleSetFile() in line 548
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testExclusionOfUselessParantheses() in line 16
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testExtendedReferences() in line 54
      protection public
      49 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSets
      uses function countRule(RuleSets,String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable property defined in sample-matlab.m
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function testExternalReferenceOverride() in line 269
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   function testExternalReferences() in line 493
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EXTERNAL_REFERENCE_RULE_SET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
   function testFacadesOffByDefault() in line 258
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncludeExcludePatterns() in line 501
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCLUDE_EXCLUDE_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testIncorrectExternalRef() in line 403
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_MISPELLED_XREF defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectLanguage() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMaximumLanugageVersion() in line 449
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMinimumLanugageVersion() in line 437
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testInvertedMinimumMaximumLanugageVersions() in line 455
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testLanguage() in line 420
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function testMaximumLanugageVersion() in line 443
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMinimumLanugageVersion() in line 431
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMultipleRules() in line 138
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MULTIPLE_RULES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testNoRuleSetFileName() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testOverrideMessage() in line 391
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testOverrideMessageOneElem() in line 397
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testProps() in line 156
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PROPERTIES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable d defined in sample-matlab.m
   function testReferenceInternalToExternal() in line 316
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToExternalChain() in line 328
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternal() in line 289
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternalChain() in line 301
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferencePriority() in line 344
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable LOW defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testReferenceToDeprecatedRule() in line 467
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRefs() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleReferenceWithNameOverridden() in line 588
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetFileName() in line 30
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetNotFound() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testRuleSetReferencesADeprecatedRenamedRule() in line 238
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetReferenceWithDeprecatedRule() in line 478
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRuleSetWithDeprecatedButRenamedRule() in line 222
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetWithDeprecatedRule() in line 211
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testSetPriority() in line 409
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM_LOW defined in net::sourceforge::pmd::RulePriority
   function testSingleRule() in line 128
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testSingleRuleWithPriority() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PRIORITY defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDefaultDelimiter() in line 167
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDelimiter() in line 189
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testWrongRuleNameExcluded() in line 615
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testWrongRuleNameReferenced() in line 569
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testXPath() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   variable DEPRECATED_RULE_NAME in line 977
   variable DEPRECATED_RULE_RULESET_NAME in line 973
   variable DFA in line 1005
   variable DIRECT_DEPRECATED_RULE in line 956
   variable EMPTY_RULESET in line 757
   variable EXTERNAL_REFERENCE_RULE_SET in line 1031
   variable INCLUDE_EXCLUDE_RULESET in line 1013
   variable INCORRECT_LANGUAGE in line 846
   variable INCORRECT_MAXIMUM_LANGUAGE_VERSION in line 914
   variable INCORRECT_MINIMUM_LANGUAGE_VERSION in line 874
   variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS in line 934
   variable LANGUAGE in line 831
   variable MAXIMUM_LANGUAGE_VERSION in line 894
   variable MINIMUM_LANGUAGE_VERSION in line 854
   variable MULTIPLE_RULES in line 769
   variable PRIORITY in line 823
   variable PROPERTIES in line 780
   variable REF_INTERNAL_TO_EXTERNAL in line 725
   variable REF_INTERNAL_TO_EXTERNAL_CHAIN in line 740
   variable REF_INTERNAL_TO_INTERNAL in line 687
   variable REF_INTERNAL_TO_INTERNAL_CHAIN in line 705
   variable REF_MISPELLED_XREF in line 641
   variable REF_OVERRIDE in line 657
   variable REF_OVERRIDE_ORIGINAL_NAME in line 630
   variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM in line 648
   variable REFERENCE_TO_DEPRECATED_RULE in line 979
   variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE in line 992
   variable SINGLE_RULE in line 761
   variable XPATH in line 809
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java
module net::sourceforge::pmd::RuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function countRule(RuleSets,String) in line 104
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
   function createRuleSetReferenceId(final String) in line 1052
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function loadFirstRule(String) in line 1040
      5 lines of code
      1 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function loadRuleSet(String) in line 1046
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testBug1202() in line 528
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testCreateEmptyRuleSet() in line 121
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function size() defined in net::sourceforge::pmd::RuleSet
   function testDFAFlag() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DFA defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testDirectDeprecatedRule() in line 461
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DIRECT_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testEmptyRuleSetFile() in line 548
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testExclusionOfUselessParantheses() in line 16
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testExtendedReferences() in line 54
      protection public
      49 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSets
      uses function countRule(RuleSets,String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable property defined in sample-matlab.m
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function testExternalReferenceOverride() in line 269
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   function testExternalReferences() in line 493
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EXTERNAL_REFERENCE_RULE_SET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
   function testFacadesOffByDefault() in line 258
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncludeExcludePatterns() in line 501
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCLUDE_EXCLUDE_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testIncorrectExternalRef() in line 403
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_MISPELLED_XREF defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectLanguage() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMaximumLanugageVersion() in line 449
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMinimumLanugageVersion() in line 437
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testInvertedMinimumMaximumLanugageVersions() in line 455
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testLanguage() in line 420
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function testMaximumLanugageVersion() in line 443
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMinimumLanugageVersion() in line 431
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMultipleRules() in line 138
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MULTIPLE_RULES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testNoRuleSetFileName() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testOverrideMessage() in line 391
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testOverrideMessageOneElem() in line 397
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testProps() in line 156
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PROPERTIES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable d defined in sample-matlab.m
   function testReferenceInternalToExternal() in line 316
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToExternalChain() in line 328
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternal() in line 289
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternalChain() in line 301
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferencePriority() in line 344
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable LOW defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testReferenceToDeprecatedRule() in line 467
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRefs() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleReferenceWithNameOverridden() in line 588
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetFileName() in line 30
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetNotFound() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testRuleSetReferencesADeprecatedRenamedRule() in line 238
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetReferenceWithDeprecatedRule() in line 478
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRuleSetWithDeprecatedButRenamedRule() in line 222
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetWithDeprecatedRule() in line 211
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testSetPriority() in line 409
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM_LOW defined in net::sourceforge::pmd::RulePriority
   function testSingleRule() in line 128
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testSingleRuleWithPriority() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PRIORITY defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDefaultDelimiter() in line 167
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDelimiter() in line 189
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testWrongRuleNameExcluded() in line 615
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testWrongRuleNameReferenced() in line 569
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testXPath() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   variable DEPRECATED_RULE_NAME in line 977
   variable DEPRECATED_RULE_RULESET_NAME in line 973
   variable DFA in line 1005
   variable DIRECT_DEPRECATED_RULE in line 956
   variable EMPTY_RULESET in line 757
   variable EXTERNAL_REFERENCE_RULE_SET in line 1031
   variable INCLUDE_EXCLUDE_RULESET in line 1013
   variable INCORRECT_LANGUAGE in line 846
   variable INCORRECT_MAXIMUM_LANGUAGE_VERSION in line 914
   variable INCORRECT_MINIMUM_LANGUAGE_VERSION in line 874
   variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS in line 934
   variable LANGUAGE in line 831
   variable MAXIMUM_LANGUAGE_VERSION in line 894
   variable MINIMUM_LANGUAGE_VERSION in line 854
   variable MULTIPLE_RULES in line 769
   variable PRIORITY in line 823
   variable PROPERTIES in line 780
   variable REF_INTERNAL_TO_EXTERNAL in line 725
   variable REF_INTERNAL_TO_EXTERNAL_CHAIN in line 740
   variable REF_INTERNAL_TO_INTERNAL in line 687
   variable REF_INTERNAL_TO_INTERNAL_CHAIN in line 705
   variable REF_MISPELLED_XREF in line 641
   variable REF_OVERRIDE in line 657
   variable REF_OVERRIDE_ORIGINAL_NAME in line 630
   variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM in line 648
   variable REFERENCE_TO_DEPRECATED_RULE in line 979
   variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE in line 992
   variable SINGLE_RULE in line 761
   variable XPATH in line 809
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java
module net::sourceforge::pmd::RuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function countRule(RuleSets,String) in line 104
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
   function createRuleSetReferenceId(final String) in line 1052
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function loadFirstRule(String) in line 1040
      5 lines of code
      1 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function loadRuleSet(String) in line 1046
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testBug1202() in line 528
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testCreateEmptyRuleSet() in line 121
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function size() defined in net::sourceforge::pmd::RuleSet
   function testDFAFlag() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DFA defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testDirectDeprecatedRule() in line 461
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DIRECT_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testEmptyRuleSetFile() in line 548
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testExclusionOfUselessParantheses() in line 16
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testExtendedReferences() in line 54
      protection public
      49 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSets
      uses function countRule(RuleSets,String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable property defined in sample-matlab.m
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function testExternalReferenceOverride() in line 269
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   function testExternalReferences() in line 493
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EXTERNAL_REFERENCE_RULE_SET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
   function testFacadesOffByDefault() in line 258
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncludeExcludePatterns() in line 501
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCLUDE_EXCLUDE_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testIncorrectExternalRef() in line 403
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_MISPELLED_XREF defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectLanguage() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMaximumLanugageVersion() in line 449
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMinimumLanugageVersion() in line 437
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testInvertedMinimumMaximumLanugageVersions() in line 455
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testLanguage() in line 420
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function testMaximumLanugageVersion() in line 443
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMinimumLanugageVersion() in line 431
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMultipleRules() in line 138
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MULTIPLE_RULES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testNoRuleSetFileName() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testOverrideMessage() in line 391
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testOverrideMessageOneElem() in line 397
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testProps() in line 156
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PROPERTIES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable d defined in sample-matlab.m
   function testReferenceInternalToExternal() in line 316
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToExternalChain() in line 328
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternal() in line 289
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternalChain() in line 301
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferencePriority() in line 344
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable LOW defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testReferenceToDeprecatedRule() in line 467
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRefs() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleReferenceWithNameOverridden() in line 588
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetFileName() in line 30
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetNotFound() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testRuleSetReferencesADeprecatedRenamedRule() in line 238
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetReferenceWithDeprecatedRule() in line 478
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRuleSetWithDeprecatedButRenamedRule() in line 222
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetWithDeprecatedRule() in line 211
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testSetPriority() in line 409
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM_LOW defined in net::sourceforge::pmd::RulePriority
   function testSingleRule() in line 128
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testSingleRuleWithPriority() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PRIORITY defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDefaultDelimiter() in line 167
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDelimiter() in line 189
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testWrongRuleNameExcluded() in line 615
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testWrongRuleNameReferenced() in line 569
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testXPath() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   variable DEPRECATED_RULE_NAME in line 977
   variable DEPRECATED_RULE_RULESET_NAME in line 973
   variable DFA in line 1005
   variable DIRECT_DEPRECATED_RULE in line 956
   variable EMPTY_RULESET in line 757
   variable EXTERNAL_REFERENCE_RULE_SET in line 1031
   variable INCLUDE_EXCLUDE_RULESET in line 1013
   variable INCORRECT_LANGUAGE in line 846
   variable INCORRECT_MAXIMUM_LANGUAGE_VERSION in line 914
   variable INCORRECT_MINIMUM_LANGUAGE_VERSION in line 874
   variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS in line 934
   variable LANGUAGE in line 831
   variable MAXIMUM_LANGUAGE_VERSION in line 894
   variable MINIMUM_LANGUAGE_VERSION in line 854
   variable MULTIPLE_RULES in line 769
   variable PRIORITY in line 823
   variable PROPERTIES in line 780
   variable REF_INTERNAL_TO_EXTERNAL in line 725
   variable REF_INTERNAL_TO_EXTERNAL_CHAIN in line 740
   variable REF_INTERNAL_TO_INTERNAL in line 687
   variable REF_INTERNAL_TO_INTERNAL_CHAIN in line 705
   variable REF_MISPELLED_XREF in line 641
   variable REF_OVERRIDE in line 657
   variable REF_OVERRIDE_ORIGINAL_NAME in line 630
   variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM in line 648
   variable REFERENCE_TO_DEPRECATED_RULE in line 979
   variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE in line 992
   variable SINGLE_RULE in line 761
   variable XPATH in line 809
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java
module net::sourceforge::pmd::RuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function countRule(RuleSets,String) in line 104
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
   function createRuleSetReferenceId(final String) in line 1052
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function loadFirstRule(String) in line 1040
      5 lines of code
      1 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function loadRuleSet(String) in line 1046
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testBug1202() in line 528
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testCreateEmptyRuleSet() in line 121
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function size() defined in net::sourceforge::pmd::RuleSet
   function testDFAFlag() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DFA defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testDirectDeprecatedRule() in line 461
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DIRECT_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testEmptyRuleSetFile() in line 548
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testExclusionOfUselessParantheses() in line 16
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testExtendedReferences() in line 54
      protection public
      49 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSets
      uses function countRule(RuleSets,String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable property defined in sample-matlab.m
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function testExternalReferenceOverride() in line 269
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   function testExternalReferences() in line 493
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EXTERNAL_REFERENCE_RULE_SET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
   function testFacadesOffByDefault() in line 258
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncludeExcludePatterns() in line 501
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCLUDE_EXCLUDE_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testIncorrectExternalRef() in line 403
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_MISPELLED_XREF defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectLanguage() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMaximumLanugageVersion() in line 449
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMinimumLanugageVersion() in line 437
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testInvertedMinimumMaximumLanugageVersions() in line 455
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testLanguage() in line 420
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function testMaximumLanugageVersion() in line 443
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMinimumLanugageVersion() in line 431
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMultipleRules() in line 138
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MULTIPLE_RULES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testNoRuleSetFileName() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testOverrideMessage() in line 391
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testOverrideMessageOneElem() in line 397
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testProps() in line 156
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PROPERTIES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable d defined in sample-matlab.m
   function testReferenceInternalToExternal() in line 316
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToExternalChain() in line 328
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternal() in line 289
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternalChain() in line 301
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferencePriority() in line 344
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable LOW defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testReferenceToDeprecatedRule() in line 467
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRefs() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleReferenceWithNameOverridden() in line 588
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetFileName() in line 30
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetNotFound() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testRuleSetReferencesADeprecatedRenamedRule() in line 238
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetReferenceWithDeprecatedRule() in line 478
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRuleSetWithDeprecatedButRenamedRule() in line 222
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetWithDeprecatedRule() in line 211
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testSetPriority() in line 409
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM_LOW defined in net::sourceforge::pmd::RulePriority
   function testSingleRule() in line 128
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testSingleRuleWithPriority() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PRIORITY defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDefaultDelimiter() in line 167
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDelimiter() in line 189
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testWrongRuleNameExcluded() in line 615
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testWrongRuleNameReferenced() in line 569
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testXPath() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   variable DEPRECATED_RULE_NAME in line 977
   variable DEPRECATED_RULE_RULESET_NAME in line 973
   variable DFA in line 1005
   variable DIRECT_DEPRECATED_RULE in line 956
   variable EMPTY_RULESET in line 757
   variable EXTERNAL_REFERENCE_RULE_SET in line 1031
   variable INCLUDE_EXCLUDE_RULESET in line 1013
   variable INCORRECT_LANGUAGE in line 846
   variable INCORRECT_MAXIMUM_LANGUAGE_VERSION in line 914
   variable INCORRECT_MINIMUM_LANGUAGE_VERSION in line 874
   variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS in line 934
   variable LANGUAGE in line 831
   variable MAXIMUM_LANGUAGE_VERSION in line 894
   variable MINIMUM_LANGUAGE_VERSION in line 854
   variable MULTIPLE_RULES in line 769
   variable PRIORITY in line 823
   variable PROPERTIES in line 780
   variable REF_INTERNAL_TO_EXTERNAL in line 725
   variable REF_INTERNAL_TO_EXTERNAL_CHAIN in line 740
   variable REF_INTERNAL_TO_INTERNAL in line 687
   variable REF_INTERNAL_TO_INTERNAL_CHAIN in line 705
   variable REF_MISPELLED_XREF in line 641
   variable REF_OVERRIDE in line 657
   variable REF_OVERRIDE_ORIGINAL_NAME in line 630
   variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM in line 648
   variable REFERENCE_TO_DEPRECATED_RULE in line 979
   variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE in line 992
   variable SINGLE_RULE in line 761
   variable XPATH in line 809
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java
module net::sourceforge::pmd::RuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   inherits from net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function countRule(RuleSets,String) in line 104
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getAllRules() defined in net::sourceforge::pmd::RuleSets
   function createRuleSetReferenceId(final String) in line 1052
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function loadFirstRule(String) in line 1040
      5 lines of code
      1 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function loadRuleSet(String) in line 1046
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testBug1202() in line 528
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testCreateEmptyRuleSet() in line 121
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function size() defined in net::sourceforge::pmd::RuleSet
   function testDFAFlag() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DFA defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testDirectDeprecatedRule() in line 461
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DIRECT_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testEmptyRuleSetFile() in line 548
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testExclusionOfUselessParantheses() in line 16
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testExtendedReferences() in line 54
      protection public
      49 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSets
      uses function countRule(RuleSets,String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable property defined in sample-matlab.m
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::RulePriority
   function testExternalReferenceOverride() in line 269
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
   function testExternalReferences() in line 493
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EXTERNAL_REFERENCE_RULE_SET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
   function testFacadesOffByDefault() in line 258
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncludeExcludePatterns() in line 501
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCLUDE_EXCLUDE_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testIncorrectExternalRef() in line 403
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_MISPELLED_XREF defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectLanguage() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMaximumLanugageVersion() in line 449
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testIncorrectMinimumLanugageVersion() in line 437
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INCORRECT_MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testInvertedMinimumMaximumLanugageVersions() in line 455
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testLanguage() in line 420
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable LANGUAGE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
   function testMaximumLanugageVersion() in line 443
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MAXIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMinimumLanugageVersion() in line 431
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MINIMUM_LANGUAGE_VERSION defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testMultipleRules() in line 138
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MULTIPLE_RULES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testNoRuleSetFileName() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testOverrideMessage() in line 391
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testOverrideMessageOneElem() in line 397
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testProps() in line 156
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PROPERTIES defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable d defined in sample-matlab.m
   function testReferenceInternalToExternal() in line 316
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToExternalChain() in line 328
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternal() in line 289
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferenceInternalToInternalChain() in line 301
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testReferencePriority() in line 344
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable LOW defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REF_INTERNAL_TO_INTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable HIGH defined in net::sourceforge::pmd::RulePriority
      uses variable REF_INTERNAL_TO_EXTERNAL_CHAIN defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testReferenceToDeprecatedRule() in line 467
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRefs() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleReferenceWithNameOverridden() in line 588
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetFileName() in line 30
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable EMPTY_RULESET defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
   function testRuleSetNotFound() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testRuleSetReferencesADeprecatedRenamedRule() in line 238
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetReferenceWithDeprecatedRule() in line 478
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses variable DEPRECATED_RULE_NAME defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testRuleSetWithDeprecatedButRenamedRule() in line 222
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testRuleSetWithDeprecatedRule() in line 211
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testSetPriority() in line 409
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setMinimumPriority(RulePriority) defined in net::sourceforge::pmd::RuleSetFactory
      uses variable MEDIUM_HIGH defined in net::sourceforge::pmd::RulePriority
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable MEDIUM_LOW defined in net::sourceforge::pmd::RulePriority
   function testSingleRule() in line 128
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function loadRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable SINGLE_RULE defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses variable r defined in sample-matlab.m
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testSingleRuleWithPriority() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable MEDIUM defined in net::sourceforge::pmd::RulePriority
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable PRIORITY defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDefaultDelimiter() in line 167
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testStringMultiPropertyDelimiter() in line 189
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
   function testWrongRuleNameExcluded() in line 615
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testWrongRuleNameReferenced() in line 569
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function testXPath() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function loadFirstRule(String) defined in net::sourceforge::pmd::RuleSetFactoryTest
      uses variable XPATH defined in net::sourceforge::pmd::RuleSetFactoryTest
   variable DEPRECATED_RULE_NAME in line 977
   variable DEPRECATED_RULE_RULESET_NAME in line 973
   variable DFA in line 1005
   variable DIRECT_DEPRECATED_RULE in line 956
   variable EMPTY_RULESET in line 757
   variable EXTERNAL_REFERENCE_RULE_SET in line 1031
   variable INCLUDE_EXCLUDE_RULESET in line 1013
   variable INCORRECT_LANGUAGE in line 846
   variable INCORRECT_MAXIMUM_LANGUAGE_VERSION in line 914
   variable INCORRECT_MINIMUM_LANGUAGE_VERSION in line 874
   variable INVERTED_MINIMUM_MAXIMUM_LANGUAGE_VERSIONS in line 934
   variable LANGUAGE in line 831
   variable MAXIMUM_LANGUAGE_VERSION in line 894
   variable MINIMUM_LANGUAGE_VERSION in line 854
   variable MULTIPLE_RULES in line 769
   variable PRIORITY in line 823
   variable PROPERTIES in line 780
   variable REF_INTERNAL_TO_EXTERNAL in line 725
   variable REF_INTERNAL_TO_EXTERNAL_CHAIN in line 740
   variable REF_INTERNAL_TO_INTERNAL in line 687
   variable REF_INTERNAL_TO_INTERNAL_CHAIN in line 705
   variable REF_MISPELLED_XREF in line 641
   variable REF_OVERRIDE in line 657
   variable REF_OVERRIDE_ORIGINAL_NAME in line 630
   variable REF_OVERRIDE_ORIGINAL_NAME_ONE_ELEM in line 648
   variable REFERENCE_TO_DEPRECATED_RULE in line 979
   variable REFERENCE_TO_RULESET_WITH_DEPRECATED_RULE in line 992
   variable SINGLE_RULE in line 761
   variable XPATH in line 809
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/RuleSetReferenceIdTest.java
module net::sourceforge::pmd::RuleSetReferenceIdTest
   function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) in line 30
      10 lines of code
      6 parameters
      1 conditional paths
      uses function isExternal() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function isAllRules() defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function getRuleName(final String) defined in net::sourceforge::pmd::RuleSetReferenceId
      uses function toString() defined in net::sourceforge::pmd::RuleSetReferenceId
   function constructor_GivenHttpUrl_InputStream() in line 110
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses variable wireMockRule defined in net::sourceforge::pmd::RuleSetReferenceIdTest
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
      uses function getInputStream(ClassLoader) defined in net::sourceforge::pmd::RuleSetReferenceId
   function constructor_GivenHttpUrl_SingleRule_InputStream() in line 131
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses variable wireMockRule defined in net::sourceforge::pmd::RuleSetReferenceIdTest
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
      uses function getInputStream(ClassLoader) defined in net::sourceforge::pmd::RuleSetReferenceId
   function constructor_GivenHttpUrlId_SucceedsAndProcessesIdCorrectly() in line 97
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function suite() in line 310
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAbsolutePathRuleSet() in line 289
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testCommaInSingleId() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testEmptyRuleSet() in line 73
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testExternalWithExternal() in line 54
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testExternalWithInternal() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testFooRules() in line 297
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testFullRuleSetAndRule() in line 258
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testFullRuleSetURLAndRule() in line 266
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testInteralWithExternal() in line 66
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function testInternalRuleSetAndRule() in line 275
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testInternalWithExternalRuleSet() in line 81
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testInternalWithInternal() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testMixRuleSet() in line 224
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testMultipleFullRuleSet() in line 213
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testMultipleRulesWithSpaces() in line 180
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testMultipleSimpleRuleSet() in line 167
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testNullRulesetString() in line 305
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testOneFullRuleSet() in line 197
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testOneFullRuleSetURL() in line 205
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testOneReleaseRuleSet() in line 189
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testOneSimpleRuleSet() in line 158
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testRelativePathRuleSet() in line 282
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testSimpleRuleSetAndRule() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testUnknownAndSimpleRuleSet() in line 241
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   function testUnknownRuleSet() in line 234
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function assertRuleSetReferenceId(final boolean,final String,final boolean,final String,final String,final RuleSetReferenceId) defined in net::sourceforge::pmd::RuleSetReferenceIdTest
   variable wireMockRule in line 107
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/RuleSetTest.java
module net::sourceforge::pmd::RuleSetTest
   function makeCompilationUnits() in line 427
      9 lines of code
      0 parameters
      1 conditional paths
   function testAccessors() in line 55
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setFileName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getFileName() defined in net::sourceforge::pmd::RuleSet
      uses function setName(String) defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function setDescription(String) defined in net::sourceforge::pmd::RuleSet
      uses function getDescription() defined in net::sourceforge::pmd::RuleSet
   function testAddExcludePattern() in line 240
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addExcludePattern(String) defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testAddExcludePatterns() in line 253
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addExcludePattern(String) defined in net::sourceforge::pmd::RuleSet
      uses function addExcludePatterns(Collection< String >) defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testAddIncludePattern() in line 285
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addIncludePattern(String) defined in net::sourceforge::pmd::RuleSet
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testAddIncludePatterns() in line 296
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addIncludePattern(String) defined in net::sourceforge::pmd::RuleSet
      uses function addIncludePatterns(Collection< String >) defined in net::sourceforge::pmd::RuleSet
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testAddRuleSet() in line 101
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function addRuleSet(RuleSet) defined in net::sourceforge::pmd::RuleSet
      uses function size() defined in net::sourceforge::pmd::RuleSet
   function testAddRuleSetByReferenceAllRule() in line 120
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function setFileName(String) defined in net::sourceforge::pmd::RuleSet
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function addRuleSetByReference(RuleSet,boolean) defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleSetReference() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReference
      uses function isAllRules() defined in net::sourceforge::pmd::RuleSetReference
   function testAddRuleSetByReferenceBad() in line 111
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function addRuleSetByReference(RuleSet,boolean) defined in net::sourceforge::pmd::RuleSet
   function testAddRuleSetByReferenceSingleRule() in line 137
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function setFileName(String) defined in net::sourceforge::pmd::RuleSet
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function addRuleSetByReference(RuleSet,boolean) defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getRuleSetReference() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getRuleSetFileName() defined in net::sourceforge::pmd::RuleSetReference
      uses function isAllRules() defined in net::sourceforge::pmd::RuleSetReference
   function testApply0Rules() in line 154
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function verifyRuleSet(RuleSet,int,Set) defined in net::sourceforge::pmd::RuleSetTest
   function testEquals1() in line 160
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::RuleSet
   function testEquals2() in line 167
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::RuleSet
   function testEquals3() in line 173
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::RuleSet
      uses function equals(Object) defined in net::sourceforge::pmd::RuleSet
   function testEquals4() in line 180
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::RuleSet
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function hashCode() defined in net::sourceforge::pmd::RuleSet
   function testEquals5() in line 194
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::RuleSet
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function equals(Object) defined in net::sourceforge::pmd::RuleSet
   function testEquals6() in line 207
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::RuleSet
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function equals(Object) defined in net::sourceforge::pmd::RuleSet
   function testGetRuleByName() in line 66
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testGetRuleByName2() in line 74
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
   function testIncludeExcludeApplies() in line 326
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses function applies(File) defined in net::sourceforge::pmd::RuleSet
   function testIncludeExcludeMultipleRuleSetWithRuleChainApplies() in line 356
      protection public
      46 lines of code
      0 parameters
      1 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::RuleSet
      uses function setName(String) defined in net::sourceforge::pmd::Rule
      uses function setLanguage(Language) defined in net::sourceforge::pmd::Rule
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function addRuleChainVisit(Class<?extends Node >) defined in net::sourceforge::pmd::Rule
      uses function usesRuleChain() defined in net::sourceforge::pmd::Rule
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function addRuleSet(RuleSet) defined in net::sourceforge::pmd::RuleSets
      uses variable r defined in sample-matlab.m
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFile(File) defined in net::sourceforge::pmd::RuleContext
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function apply(List< Node >,RuleContext,Language) defined in net::sourceforge::pmd::RuleSets
      uses function makeCompilationUnits() defined in net::sourceforge::pmd::RuleSetTest
   function testIncludesRuleWithDFA() in line 45
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function setUsesDFA() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function usesDFA(Language) defined in net::sourceforge::pmd::RuleSet
   function testLanguageApplies() in line 220
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function setLanguage(Language) defined in net::sourceforge::pmd::Rule
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function applies(File) defined in net::sourceforge::pmd::RuleSet
      uses variable NAME defined in net::sourceforge::pmd::lang::Dummy2LanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function setMinimumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::Rule
      uses function setMaximumLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::Rule
   function testNoDFA() in line 36
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function usesDFA(Language) defined in net::sourceforge::pmd::RuleSet
   function testRuleList() in line 82
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in net::sourceforge::pmd::RuleSet
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
   function testSetExcludePatterns() in line 270
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function setExcludePatterns(Collection< String >) defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
   function testSetIncludePatterns() in line 311
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function setIncludePatterns(Collection< String >) defined in net::sourceforge::pmd::RuleSet
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
   function verifyRuleSet(RuleSet,int,Set) in line 403
      23 lines of code
      3 parameters
      3 conditional paths
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function makeCompilationUnits() defined in net::sourceforge::pmd::RuleSetTest
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function size() defined in net::sourceforge::pmd::Report
      uses function iterator() defined in net::sourceforge::pmd::Report
   variable javaCode in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/RuleSetWriterTest.java
module net::sourceforge::pmd::RuleSetWriterTest
   function cleanupStream() in line 37
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::RuleSetWriterTest
      uses function close() defined in net::sourceforge::pmd::RuleSetWriter
   function setupOutputStream() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in net::sourceforge::pmd::RuleSetWriterTest
      uses variable writer defined in net::sourceforge::pmd::RuleSetWriterTest
   function testRuleReferenceOverriddenName() in line 65
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function setRule(Rule) defined in net::sourceforge::pmd::lang::rule::AbstractDelegateRule
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSet
      uses function setRuleSetReference(RuleSetReference) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function setName(String) defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses variable writer defined in net::sourceforge::pmd::RuleSetWriterTest
      uses function write(RuleSet) defined in net::sourceforge::pmd::RuleSetWriter
      uses variable out defined in net::sourceforge::pmd::RuleSetWriterTest
   function testWrite() in line 48
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function addRuleSetByReference(RuleSet,boolean) defined in net::sourceforge::pmd::RuleSet
      uses variable writer defined in net::sourceforge::pmd::RuleSetWriterTest
      uses function write(RuleSet) defined in net::sourceforge::pmd::RuleSetWriter
      uses variable out defined in net::sourceforge::pmd::RuleSetWriterTest
   variable out in line 21
   variable writer in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/RuleViolationComparatorTest.java
module net::sourceforge::pmd::RuleViolationComparatorTest
   function createJavaRuleViolation(Rule,String,int,String,int,int,int) in line 71
      12 lines of code
      7 parameters
      1 conditional paths
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setEndLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setEndColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function suite() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testComparator() in line 26
      protection public
      44 lines of code
      0 parameters
      2 conditional paths
      uses function createJavaRuleViolation(Rule,String,int,String,int,int,int) defined in net::sourceforge::pmd::RuleViolationComparatorTest
      uses variable INSTANCE defined in net::sourceforge::pmd::RuleViolationComparator
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/RuleViolationTest.java
module net::sourceforge::pmd::RuleViolationTest
   function suite() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testComparatorWithDifferentFilenames() in line 49
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::RuleViolationComparator
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function compare(final RuleViolation,final RuleViolation) defined in net::sourceforge::pmd::RuleViolationComparator
   function testComparatorWithSameFileDifferentLines() in line 68
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::RuleViolationComparator
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function compare(final RuleViolation,final RuleViolation) defined in net::sourceforge::pmd::RuleViolationComparator
   function testComparatorWithSameFileSameLines() in line 87
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::RuleViolationComparator
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function compare(final RuleViolation,final RuleViolation) defined in net::sourceforge::pmd::RuleViolationComparator
   function testConstructor1() in line 20
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable r defined in sample-matlab.m
   function testConstructor2() in line 34
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable r defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/stat/MetricTest.java
module net::sourceforge::pmd::stat::MetricTest
   function suite() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testGetAverage() in line 73
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::MetricTest
      uses variable testName defined in net::sourceforge::pmd::stat::MetricTest
      uses function getAverage() defined in net::sourceforge::pmd::stat::Metric
   function testGetCount() in line 45
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::MetricTest
      uses variable testName defined in net::sourceforge::pmd::stat::MetricTest
      uses function getCount() defined in net::sourceforge::pmd::stat::Metric
   function testGetHighValue() in line 66
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::MetricTest
      uses variable testName defined in net::sourceforge::pmd::stat::MetricTest
      uses function getHighValue() defined in net::sourceforge::pmd::stat::Metric
   function testGetLowValue() in line 59
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::MetricTest
      uses variable testName defined in net::sourceforge::pmd::stat::MetricTest
      uses function getLowValue() defined in net::sourceforge::pmd::stat::Metric
   function testGetMetricName() in line 38
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable testName defined in net::sourceforge::pmd::stat::MetricTest
      uses function getMetricName() defined in net::sourceforge::pmd::stat::Metric
   function testGetStandardDeviation() in line 80
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::MetricTest
      uses variable testName defined in net::sourceforge::pmd::stat::MetricTest
      uses function getStandardDeviation() defined in net::sourceforge::pmd::stat::Metric
   function testGetTotal() in line 52
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::MetricTest
      uses variable testName defined in net::sourceforge::pmd::stat::MetricTest
      uses function getTotal() defined in net::sourceforge::pmd::stat::Metric
   variable random in line 35
   variable testName in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/stat/MockStatisticalRule.java
module net::sourceforge::pmd::stat::MockStatisticalRule
   inherits from net::sourceforge::pmd::FooRule
   inherits from net::sourceforge::pmd::lang::rule::stat::StatisticalRule
   function addDataPoint(DataPoint) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::stat::MockStatisticalRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function apply(List<?extends Node >,RuleContext) in line 47
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::stat::MockStatisticalRule
      uses function apply(RuleContext) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function getName() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getViolationParameters(DataPoint) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MockStatisticalRule() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::stat::MockStatisticalRule
   variable helper in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/stat/StatisticalRuleTest.java
module net::sourceforge::pmd::stat::StatisticalRuleTest
   function expectedMinimum(double) in line 233
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable d defined in sample-matlab.m
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function expectedSigma(double) in line 203
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable MEAN defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function expectedTopScore(int) in line 268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function makeReport(Rule) in line 851
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses variable testName defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable IUT defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::stat::MockStatisticalRule
   function randomMinimum() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function randomMinimum(int) in line 222
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable random defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function randomSigma() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function randomSigma(int) in line 190
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MEAN defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable random defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function randomTopScore() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function randomTopScore(double) in line 257
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable random defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function setUp() in line 109
      protection public
      48 lines of code
      0 parameters
      7 conditional paths
      uses variable IUT defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable testName defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable points defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::stat::MockStatisticalRule
   function suite() in line 865
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testExpectedMinimum() in line 239
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testM() in line 379
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testM1() in line 389
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testM2() in line 394
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testM3() in line 399
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testM4() in line 404
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testM5() in line 409
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMetrics() in line 163
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function makeReport(Rule) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable IUT defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable metrics defined in net::sourceforge::pmd::Report
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MEAN defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMS() in line 526
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMS1() in line 537
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMS2() in line 542
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMS3() in line 547
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMS4() in line 552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMS5() in line 557
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMT() in line 600
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MIN_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMT1() in line 611
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMT2() in line 616
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMT3() in line 621
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMT4() in line 626
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testMT5() in line 631
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testS() in line 308
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testS1() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testS2() in line 323
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testS3() in line 328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testS4() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testS5() in line 338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSingleDatapoint() in line 274
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses variable IUT defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses variable POINTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function testingOnly__setBeginLine(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function testingOnly__setBeginColumn(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::stat::MockStatisticalRule
      uses function makeReport(Rule) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function size() defined in net::sourceforge::pmd::Report
   function testSM() in line 488
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSM1() in line 500
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSM2() in line 505
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSM3() in line 510
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSM4() in line 515
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSM5() in line 520
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSMT() in line 676
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MIN_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSMT1() in line 690
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSMT2() in line 695
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSMT3() in line 700
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSMT4() in line 705
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSMT5() in line 710
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSMT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testST() in line 414
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MIN_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testST1() in line 426
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testST() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testST2() in line 431
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testST() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testST3() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testST() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testST4() in line 441
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testST() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testST5() in line 446
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testST() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSTM() in line 637
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSTM1() in line 651
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSTM2() in line 656
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSTM3() in line 661
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSTM4() in line 666
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testSTM5() in line 671
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testSTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testT() in line 344
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MIN_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testT1() in line 354
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testT2() in line 359
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testT3() in line 364
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testT4() in line 369
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testT5() in line 374
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testT() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTM() in line 563
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTM1() in line 574
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTM2() in line 579
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTM3() in line 584
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTM4() in line 589
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTM5() in line 594
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTMS() in line 763
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTMS1() in line 777
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTMS2() in line 782
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTMS3() in line 787
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTMS4() in line 792
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTMS5() in line 797
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTMS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTS() in line 451
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTS1() in line 463
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTS2() in line 468
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTS3() in line 473
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTS4() in line 478
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTS5() in line 483
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTS() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTSM() in line 719
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function randomTopScore() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function verifyResults(double,double,int,int,int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomSigma() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable MAX_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NUM_TESTS defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function randomMinimum() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTSM1() in line 734
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTSM2() in line 740
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTSM3() in line 746
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTSM4() in line 752
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function testTSM5() in line 758
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function testTSM() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   function verifyResults(double,double,int,int,int) in line 808
      protection public
      42 lines of code
      5 parameters
      9 conditional paths
      uses function setUp() defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable IUT defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function makeReport(Rule) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function size() defined in net::sourceforge::pmd::Report
      uses variable testName defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_SIGMA defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedSigma(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_MINIMUM defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedMinimum(double) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses variable NO_TOPSCORE defined in net::sourceforge::pmd::stat::StatisticalRuleTest
      uses function expectedTopScore(int) defined in net::sourceforge::pmd::stat::StatisticalRuleTest
   variable DELTA in line 105
      protection public
   variable IUT in line 89
   variable MAX_MINIMUM in line 93
      protection public
   variable MAX_SIGMA in line 95
      protection public
   variable MEAN in line 101
      protection public
   variable MIN_TOPSCORE in line 97
      protection public
   variable NO_MINIMUM in line 94
      protection public
   variable NO_SIGMA in line 96
      protection public
   variable NO_TOPSCORE in line 98
      protection public
   variable NUM_TESTS in line 103
      protection public
   variable POINTS in line 86
   variable points in line 88
   variable random in line 91
   variable SIGMA in line 102
      protection public
   variable testName in line 90
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/stat/StatTests.java
module net::sourceforge::pmd::stat::StatTests
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/CompoundListTest.java
module net::sourceforge::pmd::util::CompoundListTest
   function setUp() in line 25
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable l1 defined in net::sourceforge::pmd::util::CompoundListTest
      uses variable l2 defined in net::sourceforge::pmd::util::CompoundListTest
      uses variable iterator defined in net::sourceforge::pmd::util::CompoundListTest
   function suite() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testEmpty() in line 71
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in net::sourceforge::pmd::util::CompoundListTest
   function testEmptyBadNext() in line 77
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in net::sourceforge::pmd::util::CompoundListTest
   function testEmptyBadRemove() in line 83
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in net::sourceforge::pmd::util::CompoundListTest
   function testHappyPath() in line 37
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in net::sourceforge::pmd::util::CompoundListTest
      uses variable l1 defined in net::sourceforge::pmd::util::CompoundListTest
      uses variable l2 defined in net::sourceforge::pmd::util::CompoundListTest
   function testHappyPathRemove() in line 52
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in net::sourceforge::pmd::util::CompoundListTest
      uses variable l1 defined in net::sourceforge::pmd::util::CompoundListTest
      uses variable l2 defined in net::sourceforge::pmd::util::CompoundListTest
   variable iterator in line 22
   variable l1 in line 20
   variable l2 in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/database/DBMSMetadataTest.java
module net::sourceforge::pmd::util::database::DBMSMetadataTest
   function dumpResultSet(ResultSet,String) in line 77
      35 lines of code
      2 parameters
      5 conditional paths
   function getStringFromReader(Reader) in line 59
      14 lines of code
      1 parameters
      2 conditional paths
   function testGetConnection() in line 117
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses variable dbURI defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses function getDriverClass() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getURL() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getConnection() defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function testGetConnectionWithConnectionParameters() in line 141
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable dbURI5 defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses function getDriverClass() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getURL() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getParameters() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getConnection() defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function testGetSchemas() in line 207
      protection public
      43 lines of code
      0 parameters
      1 conditional paths
      uses variable dbURI4 defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses function getDriverClass() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getURL() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getConnection() defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function dumpResultSet(ResultSet,String) defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses function getParameters() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSchemasList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSourceCodeTypesList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSourceCodeNamesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetSourceCode() in line 164
      protection public
      38 lines of code
      0 parameters
      1 conditional paths
      uses variable dbURI defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses function getDriverClass() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getURL() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getDbType() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getProperties() defined in net::sourceforge::pmd::util::database::DBType
      uses function getSourceCodeReturnType() defined in net::sourceforge::pmd::util::database::DBType
      uses function getSourceCode(SourceObject) defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function getStringFromReader(Reader) defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
   function testGetSourceObjectList() in line 255
      protection public
      32 lines of code
      0 parameters
      2 conditional paths
      uses variable dbURI4 defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses function getDriverClass() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getURL() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getConnection() defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function getSourceObjectList() defined in net::sourceforge::pmd::util::database::DBMSMetadata
      uses function getParameters() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSchemasList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSourceCodeTypesList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSourceCodeNamesList() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getStringFromReader(Reader) defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses function getSourceCode(SourceObject) defined in net::sourceforge::pmd::util::database::DBMSMetadata
   function DBMSMetadataTest() in line 49
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable dbURI defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses variable dbURI4 defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses variable dbURI5 defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
      uses variable dbURIDefault defined in net::sourceforge::pmd::util::database::DBMSMetadataTest
   variable dbURI in line 44
   variable dbURI4 in line 45
   variable dbURI5 in line 46
   variable dbURIDefault in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/database/DBTypeTest.java
module net::sourceforge::pmd::util::database::DBTypeTest
   function setUp() in line 31
      protection public
      23 lines of code
      0 parameters
      3 conditional paths
      uses variable testProperties defined in net::sourceforge::pmd::util::database::DBTypeTest
      uses variable includeProperties defined in net::sourceforge::pmd::util::database::DBTypeTest
      uses variable absoluteFile defined in net::sourceforge::pmd::util::database::DBTypeTest
   function tearDown() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable testProperties defined in net::sourceforge::pmd::util::database::DBTypeTest
   function testAsProperties() in line 113
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable testProperties defined in net::sourceforge::pmd::util::database::DBTypeTest
   function testGetIncludeProperties() in line 96
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable includeProperties defined in net::sourceforge::pmd::util::database::DBTypeTest
      uses function getProperties() defined in net::sourceforge::pmd::util::database::DBType
   function testGetProperties() in line 79
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable testProperties defined in net::sourceforge::pmd::util::database::DBTypeTest
      uses function getProperties() defined in net::sourceforge::pmd::util::database::DBType
   function testGetPropertiesFromFile() in line 64
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable absoluteFile defined in net::sourceforge::pmd::util::database::DBTypeTest
      uses variable testProperties defined in net::sourceforge::pmd::util::database::DBTypeTest
      uses function getProperties() defined in net::sourceforge::pmd::util::database::DBType
   variable absoluteFile in line 25
   variable includeProperties in line 28
   variable testProperties in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/database/DBURITest.java
module net::sourceforge::pmd::util::database::DBURITest
   function testDefaultCharacterSet() in line 525
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getCharacterSet() defined in net::sourceforge::pmd::util::database::DBURI
   function testDefaultLanguagesList() in line 507
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguagesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testDefaultSchemasList() in line 541
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getSchemasList() defined in net::sourceforge::pmd::util::database::DBURI
   function testDefaultSourceCodeNamesList() in line 577
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeNamesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testDefaultSourceCodeTypesList() in line 559
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeTypesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testDump() in line 97
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getUri() defined in net::sourceforge::pmd::util::database::DBURI
   function testExplicitCharacterSet() in line 610
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getCharacterSet() defined in net::sourceforge::pmd::util::database::DBURI
   function testExplicitLanguagesList() in line 594
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguagesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testExplicitSchemasList() in line 624
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getSchemasList() defined in net::sourceforge::pmd::util::database::DBURI
   function testExplicitSourceCodeNamesList() in line 656
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeNamesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testExplicitSourceCodeTypesList() in line 640
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeTypesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetCharacterSet() in line 352
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getCharacterSet() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetDbType() in line 141
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getDbType() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetDbType2() in line 156
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getDbType() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetDriverClass() in line 303
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getDriverClass() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetLanguagesList() in line 274
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguagesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetParameters() in line 471
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function getParameters() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetSchemasList() in line 186
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function getSchemasList() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetSourceCodeNamesList() in line 245
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeNamesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetSourceCodeType() in line 381
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeType() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetSourceCodeTypesList() in line 216
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getSourceCodeTypesList() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetSubnamePrefix() in line 440
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getSubnamePrefix() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetSubprotocol() in line 410
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getSubprotocol() defined in net::sourceforge::pmd::util::database::DBURI
   function testGetThinDriverClass() in line 319
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function getDriverClass() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getDbType() defined in net::sourceforge::pmd::util::database::DBURI
      uses function getProperties() defined in net::sourceforge::pmd::util::database::DBType
   function testGetUri() in line 111
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function getUri() defined in net::sourceforge::pmd::util::database::DBURI
   function testSetCharacterSet() in line 367
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setCharacterSet(String) defined in net::sourceforge::pmd::util::database::DBURI
   function testSetDbType() in line 171
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setDbType(DBType) defined in net::sourceforge::pmd::util::database::DBURI
      uses function getDbType() defined in net::sourceforge::pmd::util::database::DBURI
   function testSetDriverClass() in line 338
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setDriverClass(String) defined in net::sourceforge::pmd::util::database::DBURI
   function testSetLanguagesList() in line 289
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setLanguagesList(List< String >) defined in net::sourceforge::pmd::util::database::DBURI
   function testSetParameters() in line 489
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function setParameters(Map< String, String >) defined in net::sourceforge::pmd::util::database::DBURI
      uses function getParameters() defined in net::sourceforge::pmd::util::database::DBURI
   function testSetSchemasList() in line 202
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setSchemasList(List< String >) defined in net::sourceforge::pmd::util::database::DBURI
   function testSetSourceCodeNamesList() in line 260
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setSourceCodeNamesList(List< String >) defined in net::sourceforge::pmd::util::database::DBURI
   function testSetSourceCodeType() in line 396
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setSourceCodeType(int) defined in net::sourceforge::pmd::util::database::DBURI
   function testSetSourceCodeTypesList() in line 231
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setSourceCodeTypesList(List< String >) defined in net::sourceforge::pmd::util::database::DBURI
   function testSetSubnamePrefix() in line 455
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setSubnamePrefix(String) defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSubnamePrefix() defined in net::sourceforge::pmd::util::database::DBURI
   function testSetSubprotocol() in line 424
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setSubprotocol(String) defined in net::sourceforge::pmd::util::database::DBURI
      uses function getSubprotocol() defined in net::sourceforge::pmd::util::database::DBURI
   function testSetUri() in line 126
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setUri(URI) defined in net::sourceforge::pmd::util::database::DBURI
      uses function getUri() defined in net::sourceforge::pmd::util::database::DBURI
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/database/ResourceLoaderTest.java
module net::sourceforge::pmd::util::database::ResourceLoaderTest
   function testGetResourceStream() in line 21
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceStream(String) defined in net::sourceforge::pmd::util::database::ResourceLoader
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/database/ResourceResolverTest.java
module net::sourceforge::pmd::util::database::ResourceResolverTest
   function testResolve() in line 21
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function resolve(String,String) defined in net::sourceforge::pmd::util::database::ResourceResolver
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/DateTimeUtilTest.java
module net::sourceforge::pmd::util::DateTimeUtilTest
   function suite() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testConversions() in line 22
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/designer/DesignerTest.java
module net::sourceforge::pmd::util::designer::DesignerTest
   function testCopyXmlToClipboard() in line 22
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getCompilationUnit() defined in net::sourceforge::pmd::util::designer::Designer
      uses variable NAME defined in net::sourceforge::pmd::lang::DummyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getXmlTreeCode() defined in net::sourceforge::pmd::util::designer::Designer
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/filter/RegexStringFilterTest.java
module net::sourceforge::pmd::util::filter::RegexStringFilterTest
   function suite() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testEndsWith() in line 67
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function verifyEndsWith(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
   function testFilterAbsoluteWithExtension() in line 15
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function verifyFilterFalse(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
      uses function verifyFilterTrue(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
   function testFilterAbsoluteWithoutExtension() in line 28
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function verifyFilterFalse(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
      uses function verifyFilterTrue(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
   function testFilterRelativeWithExtension() in line 41
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function verifyFilterTrue(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
      uses function verifyFilterFalse(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
   function testFilterRelativeWithoutExtension() in line 54
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function verifyFilterFalse(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
      uses function verifyFilterTrue(final String,final String,final String) defined in net::sourceforge::pmd::util::filter::RegexStringFilterTest
   function verifyEndsWith(final String,final String,final String) in line 106
      3 lines of code
      3 parameters
      1 conditional paths
   function verifyFilterFalse(final String,final String,final String) in line 102
      3 lines of code
      3 parameters
      1 conditional paths
   function verifyFilterTrue(final String,final String,final String) in line 98
      3 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/StringUtilTest.java
module net::sourceforge::pmd::util::StringUtilTest
   function suite() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testReplaceStringWithString() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testReplaceStringWithString2() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testReplaceWithMultipleChars() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testReplaceWithNull() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testReplaceWithOneChar() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testUTF8NotSupported() in line 44
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function testUTF8Supported() in line 52
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-core/src/test/java/net/sourceforge/pmd/util/TypeMapTest.java
module net::sourceforge::pmd::util::TypeMapTest
   function suite() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAddClassOfQ() in line 21
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function add(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
   function testContainsClassOfQ() in line 36
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function add(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
      uses function contains(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
   function testContainsString() in line 48
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function add(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
      uses function contains(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
   function testSize() in line 72
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function add(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
      uses function size() defined in net::sourceforge::pmd::util::TypeMap
   function testTypeFor() in line 59
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function add(Class<?>) defined in net::sourceforge::pmd::util::TypeMap
      uses function typeFor(String) defined in net::sourceforge::pmd::util::TypeMap
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/main/java/net/sourceforge/pmd/cpd/CPPLanguage.java
module net::sourceforge::pmd::cpd::CPPLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function setProperties(Properties) in line 24
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getTokenizer() defined in net::sourceforge::pmd::cpd::AbstractLanguage
   function CPPLanguage() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/main/java/net/sourceforge/pmd/cpd/CPPTokenizer.java
module net::sourceforge::pmd::cpd::CPPTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function maybeSkipBlocks(String) in line 83
      22 lines of code
      1 parameters
      6 conditional paths
      uses variable skipBlocks defined in net::sourceforge::pmd::cpd::CPPTokenizer
      uses variable skipBlocksStart defined in net::sourceforge::pmd::cpd::CPPTokenizer
      uses variable skipBlocksEnd defined in net::sourceforge::pmd::cpd::CPPTokenizer
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function setProperties(Properties) in line 38
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable skipBlocks defined in net::sourceforge::pmd::cpd::CPPTokenizer
      uses variable OPTION_SKIP_BLOCKS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable OPTION_SKIP_BLOCKS_PATTERN defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable DEFAULT_SKIP_BLOCKS_PATTERN defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable skipBlocksStart defined in net::sourceforge::pmd::cpd::CPPTokenizer
      uses variable skipBlocksEnd defined in net::sourceforge::pmd::cpd::CPPTokenizer
   function tokenize(SourceCode,Tokens) in line 53
      protection public
      29 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function maybeSkipBlocks(String) defined in net::sourceforge::pmd::cpd::CPPTokenizer
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getNextToken() defined in net::sourceforge::pmd::lang::TokenManager
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
      uses variable e defined in sample-matlab.m
   variable skipBlocks in line 28
   variable skipBlocksEnd in line 30
   variable skipBlocksStart in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/main/java/net/sourceforge/pmd/lang/cpp/ContinuationReader.java
module net::sourceforge::pmd::lang::cpp::ContinuationReader
   inherits from java::io::Reader
   function close() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable in defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
   function read(char[],int,int) in line 41
      protection public
      37 lines of code
      3 parameters
      9 conditional paths
      uses variable in defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
      uses variable EOF defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
      uses variable BACKSLASH defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
      uses variable CARRIAGE_RETURN defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
      uses variable LINE_FEED defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
   function ContinuationReader(Reader) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable in defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
   variable BACKSLASH in line 25
   variable CARRIAGE_RETURN in line 26
   variable EOF in line 24
   variable in in line 30
   variable LINE_FEED in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/main/java/net/sourceforge/pmd/lang/cpp/CppHandler.java
module net::sourceforge::pmd::lang::cpp::CppHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getParser(ParserOptions) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/main/java/net/sourceforge/pmd/lang/cpp/CppLanguageModule.java
module net::sourceforge::pmd::lang::cpp::CppLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function CppLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/main/java/net/sourceforge/pmd/lang/cpp/CppParser.java
module net::sourceforge::pmd::lang::cpp::CppParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTokenManager(Reader) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String,Reader) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function CppParser(ParserOptions) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/main/java/net/sourceforge/pmd/lang/cpp/CppTokenManager.java
module net::sourceforge::pmd::lang::cpp::CppTokenManager
   inherits from net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::cpp::CppTokenManager
   function setFileName(String) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function CppTokenManager(Reader) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::cpp::CppTokenManager
   variable tokenManager in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/test/java/net/sourceforge/pmd/cpd/CPPTokenizerTest.java
module net::sourceforge::pmd::cpd::CPPTokenizerTest
   function parse(String) in line 128
      3 lines of code
      1 parameters
      1 conditional paths
   function parse(String,boolean) in line 131
      3 lines of code
      2 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
   function parse(String,boolean,String) in line 134
      15 lines of code
      3 parameters
      2 conditional paths
      uses variable OPTION_SKIP_BLOCKS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable OPTION_SKIP_BLOCKS_PATTERN defined in net::sourceforge::pmd::cpd::Tokenizer
      uses function setProperties(Properties) defined in net::sourceforge::pmd::cpd::CPPTokenizer
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CPPTokenizer
   function suite() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAsmWithAtSign() in line 100
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable TEST7 defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testContinuation_InterToken() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable TEST6 defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testContinuation_IntraToken() in line 66
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable TEST5 defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testDollarSignInIdentifier() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable TEST2 defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
   function testDollarSignStartingIdentifier() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable TEST3 defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
   function testEmptyCharacter() in line 111
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testEOLCommentInPreprocessingDirective() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function testHexCharacter() in line 117
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testMultiLineMacros() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable TEST1 defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testTokenizerWithoutSkipBlocks() in line 92
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testTokenizerWithSkipBlocks() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testTokenizerWithSkipBlocksPattern() in line 85
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testUnicodeSupport() in line 26
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testUTFwithBOM() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testWhiteSpaceEscape() in line 123
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testWideCharacters() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
      uses variable TEST4 defined in net::sourceforge::pmd::cpd::CPPTokenizerTest
   variable TEST1 in line 150
   variable TEST2 in line 160
   variable TEST3 in line 163
   variable TEST4 in line 166
   variable TEST5 in line 169
   variable TEST6 in line 186
   variable TEST7 in line 196
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/test/java/net/sourceforge/pmd/lang/cpp/ContinuationReaderTest.java
module net::sourceforge::pmd::lang::cpp::ContinuationReaderTest
   function filter(String) in line 42
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable c defined in sample-matlab.m
      uses function read(char[],int,int) defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
      uses function close() defined in net::sourceforge::pmd::lang::cpp::ContinuationReader
   function testHappyPath() in line 15
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses function filter(String) defined in net::sourceforge::pmd::lang::cpp::ContinuationReaderTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-fortran/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-php/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-ruby/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/LanguageVersionTest.java
module net::sourceforge::pmd::LanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   inherits from net::sourceforge::pmd::AbstractLanguageVersionTest
   function data() in line 19
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cpp::CppLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function data() in line 22
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 17
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 14
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
   function LanguageVersionTest(String,String,String,LanguageVersion) in line 15
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable terseName defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable version defined in net::sourceforge::pmd::AbstractLanguageVersionTest
      uses variable expected defined in net::sourceforge::pmd::AbstractLanguageVersionTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cpp/src/test/resources/net/sourceforge/pmd/cpd/cpp/cpp_with_asm.cpp
module cpp_with_asm.cpp
   function main() in line 1
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cs/src/main/java/net/sourceforge/pmd/cpd/CsLanguage.java
module net::sourceforge::pmd::cpd::CsLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function CsLanguage() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cs/src/main/java/net/sourceforge/pmd/cpd/CsTokenizer.java
module net::sourceforge::pmd::cpd::CsTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 20
      protection public
      215 lines of code
      2 parameters
      52 conditional paths
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable c defined in sample-matlab.m
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable e defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cs/src/main/java/net/sourceforge/pmd/lang/cs/CsLanguageModule.java
module net::sourceforge::pmd::lang::cs::CsLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function CsLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::cs::CsLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::cs::CsLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-cs/src/test/java/net/sourceforge/pmd/cpd/CsTokenizerTest.java
module net::sourceforge::pmd::cpd::CsTokenizerTest
   function init() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
   function testCommentsIgnored1() in line 73
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testCommentsIgnored2() in line 79
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testCommentsIgnored3() in line 85
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testLineNumberAfterMultilineComment() in line 109
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
   function testLineNumberAfterMultilineString() in line 126
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
   function testMoreTokens() in line 91
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testOpenString() in line 66
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testSimpleClass() in line 27
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function testSimpleClassDuplicatedTokens() in line 33
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
   function testSimpleClassMethodMultipleLines() in line 44
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
   function testStrings() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::CsTokenizer
      uses function toSourceCode(String) defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses variable tokens defined in net::sourceforge::pmd::cpd::CsTokenizerTest
      uses function size() defined in net::sourceforge::pmd::cpd::Tokens
   function toSourceCode(String) in line 141
      3 lines of code
      1 parameters
      1 conditional paths
   variable tokenizer in line 16
   variable tokens in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-fortran/src/main/java/net/sourceforge/pmd/cpd/FortranLanguage.java
module net::sourceforge::pmd::cpd::FortranLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function FortranLanguage() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-fortran/src/main/java/net/sourceforge/pmd/cpd/FortranTokenizer.java
module net::sourceforge::pmd::cpd::FortranTokenizer
   inherits from net::sourceforge::pmd::cpd::AbstractTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function FortranTokenizer() in line 18
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable spanMultipleLinesString defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable stringToken defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable ignorableCharacter defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable ignorableStmt defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable oneLineCommentChar defined in net::sourceforge::pmd::cpd::AbstractTokenizer
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-fortran/src/main/java/net/sourceforge/pmd/lang/fortran/FortranLanguageModule.java
module net::sourceforge::pmd::lang::fortran::FortranLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function FortranLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::fortran::FortranLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-fortran/src/test/java/net/sourceforge/pmd/cpd/FortranTokenizerTest.java
module net::sourceforge::pmd::cpd::FortranTokenizerTest
   inherits from net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function buildTokenizer() in line 23
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable sourceCode defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function getSampleCode() in line 29
      protection public
      169 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function suite() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function tokenizeTest() in line 200
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedTokenCount defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-go/src/main/java/net/sourceforge/pmd/cpd/GoLanguage.java
module net::sourceforge::pmd::cpd::GoLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function GoLanguage() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-go/src/main/java/net/sourceforge/pmd/cpd/GoTokenizer.java
module net::sourceforge::pmd::cpd::GoTokenizer
   inherits from net::sourceforge::pmd::cpd::AbstractTokenizer
   function GoTokenizer() in line 18
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable stringToken defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable ignorableCharacter defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable ignorableStmt defined in net::sourceforge::pmd::cpd::AbstractTokenizer
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/cpd/JavaLanguage.java
module net::sourceforge::pmd::cpd::JavaLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function setProperties(Properties) in line 18
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::cpd::AbstractLanguage
      uses function getTokenizer() defined in net::sourceforge::pmd::cpd::AbstractLanguage
   function JavaLanguage() in line 9
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function JavaLanguage(Properties) in line 13
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function setProperties(Properties) defined in net::sourceforge::pmd::cpd::JavaLanguage
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/cpd/JavaTokenizer.java
module net::sourceforge::pmd::cpd::JavaTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function processToken(Tokens,String,Token) in line 57
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable ignoreLiterals defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses variable ignoreIdentifiers defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
   function setIgnoreAnnotations(boolean) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::cpd::JavaTokenizer
   function setIgnoreIdentifiers(boolean) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIgnoreLiterals(boolean) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProperties(Properties) in line 25
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses variable IGNORE_ANNOTATIONS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable ignoreLiterals defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses variable IGNORE_LITERALS defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable ignoreIdentifiers defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses variable IGNORE_IDENTIFIERS defined in net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 31
      protection public
      25 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getNextToken() defined in net::sourceforge::pmd::lang::TokenManager
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses function updateState(Token) defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses function isDiscarding() defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses function processToken(Tokens,String,Token) defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
   variable CPD_END in line 19
      protection public
   variable CPD_START in line 18
      protection public
   variable ignoreAnnotations in line 21
   variable ignoreIdentifiers in line 23
   variable ignoreLiterals in line 22
module net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
   function detectAnnotations(Token) in line 159
      protection public
      21 lines of code
      1 parameters
      8 conditional paths
      uses variable isAnnotation defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable nextTokenEndsAnnotation defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable annotationStack defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
   function isDiscarding() in line 154
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable discardingSemicolon defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable discardingKeywords defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable discardingAnnotations defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable discardingSuppressing defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
   function skipAnnotations() in line 146
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable discardingAnnotations defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable isAnnotation defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
   function skipCPDSuppression(Token) in line 135
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable isAnnotation defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable discardingSuppressing defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable CPD_START defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses variable CPD_END defined in net::sourceforge::pmd::cpd::JavaTokenizer
   function skipPackageAndImport(Token) in line 119
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable discardingKeywords defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
   function skipSemicolon(Token) in line 127
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable discardingSemicolon defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
   function updateState(Token) in line 108
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function detectAnnotations(Token) defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses function skipSemicolon(Token) defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses function skipPackageAndImport(Token) defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses function skipCPDSuppression(Token) defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
      uses function skipAnnotations() defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
   function TokenDiscarder(boolean) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::cpd::JavaTokenizer::TokenDiscarder
   variable annotationStack in line 96
   variable discardingAnnotations in line 101
   variable discardingKeywords in line 99
   variable discardingSemicolon in line 98
   variable discardingSuppressing in line 100
   variable ignoreAnnotations in line 102
   variable isAnnotation in line 94
   variable nextTokenEndsAnnotation in line 95
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/AbstractJavaHandler.java
module net::sourceforge::pmd::lang::java::AbstractJavaHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   abstract class
   function getDataFlowFacade() in line 58
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function initializeWith(DataFlowHandler,ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::java::AbstractJavaHandler
   function getDataFlowHandler() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDFAGraphRule() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDumpFacade(final Writer,final String,final boolean) in line 94
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function initializeWith(Writer,String,boolean,JavaNode) defined in net::sourceforge::pmd::lang::java::ast::DumpFacade
   function getRuleViolationFactory() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::java::rule::JavaRuleViolationFactory
   function getSymbolFacade() in line 67
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function initializeWith(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::symboltable::SymbolFacade
   function getSymbolFacade(final ClassLoader) in line 76
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function initializeWith(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::symboltable::SymbolFacade
   function getTypeResolutionFacade(final ClassLoader) in line 85
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function initializeWith(ClassLoader,ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::typeresolution::TypeResolutionFacade
   function getXPathHandler() in line 40
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/AbstractJavaParser.java
module net::sourceforge::pmd::lang::java::AbstractJavaParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   abstract class
   function canParse() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createJavaParser(Reader) in line 41
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::java::AbstractJavaParser
      uses function getParserOptions() defined in net::sourceforge::pmd::lang::AbstractParser
      uses function getSuppressMarker() defined in net::sourceforge::pmd::lang::ParserOptions
   function createTokenManager(Reader) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::java::AbstractJavaParser
   function parse(String,Reader) in line 54
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function createJavaParser(Reader) defined in net::sourceforge::pmd::lang::java::AbstractJavaParser
   function AbstractJavaParser(ParserOptions) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
   variable parser in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/AbstractJavaAccessNode.java
module net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   inherits from net::sourceforge::pmd::lang::java::ast::AccessNode
   abstract class
   function getModifiers() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable modifiers defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function isAbstract() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable ABSTRACT defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isDefault() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable DEFAULT defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isFinal() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable FINAL defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isModifier(int) in line 123
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modifiers defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function isNative() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable NATIVE defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isPackagePrivate() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isProtected() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function isPrivate() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable PRIVATE defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isProtected() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable PROTECTED defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isPublic() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable PUBLIC defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isStatic() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable STATIC defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isStrictfp() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable STRICTFP defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isSynchronized() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable SYNCHRONIZED defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isTransient() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable TRANSIENT defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function isVolatile() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isModifier(int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable VOLATILE defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setAbstract(boolean) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable ABSTRACT defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setDefault(boolean) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isDefault() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable DEFAULT defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setFinal(boolean) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable FINAL defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setModifier(boolean,int) in line 127
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable modifiers defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function setModifiers(int) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable modifiers defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function setNative(boolean) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable NATIVE defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setPrivate(boolean) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable PRIVATE defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setProtected(boolean) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isProtected() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable PROTECTED defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setPublic(boolean) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable PUBLIC defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setStatic(boolean) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable STATIC defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setStrictfp(boolean) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isStrictfp() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable STRICTFP defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setSynchronized(boolean) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isSynchronized() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable SYNCHRONIZED defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setTransient(boolean) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isTransient() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable TRANSIENT defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function setVolatile(boolean) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setModifier(boolean,int) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable VOLATILE defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function AbstractJavaAccessNode(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractJavaAccessNode(JavaParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   variable modifiers in line 8
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/AbstractJavaAccessTypeNode.java
module net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessTypeNode
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   inherits from net::sourceforge::pmd::lang::java::ast::TypeNode
   abstract class
   function getType() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessTypeNode
   function setType(Class<?>) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessTypeNode
   function AbstractJavaAccessTypeNode(int) in line 8
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractJavaAccessTypeNode(JavaParser,int) in line 12
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   variable type in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/AbstractJavaNode.java
module net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   inherits from net::sourceforge::pmd::lang::java::ast::JavaNode
   abstract class
   function childrenAccept(JavaParserVisitor,Object) in line 52
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function comment(Comment) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function comment() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function comment() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getScope() in line 61
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable scope defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses variable parent defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function jjtClose() in line 31
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable parser defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses variable endLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable endColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtOpen() in line 24
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable parser defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function setScope(Scope) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scope defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function toString() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function AbstractJavaNode(int) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractJavaNode(JavaParser,int) in line 19
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   variable comment in line 13
   variable parser in line 11
   variable scope in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/AbstractJavaTypeNode.java
module net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   inherits from net::sourceforge::pmd::lang::java::ast::TypeNode
   abstract class
   function getType() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function setType(Class<?>) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function AbstractJavaTypeNode(int) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractJavaTypeNode(JavaParser,int) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable type in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/AccessNode.java
module net::sourceforge::pmd::lang::java::ast::AccessNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   function getModifiers() in line 27
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isAbstract() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isDefault() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isFinal() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPackagePrivate() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPrivate() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isProtected() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPublic() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStrictfp() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isTransient() in line 63
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isVolatile() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAbstract(boolean) in line 45
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setDefault(boolean) in line 77
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setFinal(boolean) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setModifiers(int) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNative(boolean) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setPrivate(boolean) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProtected(boolean) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setPublic(boolean) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setStatic(boolean) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setStrictfp(boolean) in line 73
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSynchronized(boolean) in line 57
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setTransient(boolean) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setVolatile(boolean) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable ABSTRACT in line 17
      protection public
   variable DEFAULT in line 25
      protection public
   variable FINAL in line 19
      protection public
   variable NATIVE in line 21
      protection public
   variable PRIVATE in line 16
      protection public
   variable PROTECTED in line 15
      protection public
   variable PUBLIC in line 14
      protection public
   variable STATIC in line 18
      protection public
   variable STRICTFP in line 24
      protection public
   variable SYNCHRONIZED in line 20
      protection public
   variable TRANSIENT in line 22
      protection public
   variable VOLATILE in line 23
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAdditiveExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTAdditiveExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAdditiveExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAdditiveExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAllocationExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTAllocationExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAllocationExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAllocationExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAndExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTAndExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAndExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAndExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotation.java
module net::sourceforge::pmd::lang::java::ast::ASTAnnotation
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function checkAnnototation(Node,String,Rule) in line 42
      20 lines of code
      3 parameters
      5 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable serialRules defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotation
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses variable unusedRules defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotation
   function jjtAccept(JavaParserVisitor,Object) in line 67
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function suppresses(Rule) in line 29
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function checkAnnototation(Node,String,Rule) defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotation
   function ASTAnnotation(int) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAnnotation(JavaParser,int) in line 25
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialRules in line 19
   variable unusedRules in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotationMethodDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTAnnotationMethodDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function jjtAccept(JavaParserVisitor,Object) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAnnotationMethodDeclaration(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAnnotationMethodDeclaration(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeBody.java
module net::sourceforge::pmd::lang::java::ast::ASTAnnotationTypeBody
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAnnotationTypeBody(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAnnotationTypeBody(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTAnnotationTypeDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAnnotationTypeDeclaration(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAnnotationTypeDeclaration(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeMemberDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTAnnotationTypeMemberDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAnnotationTypeMemberDeclaration(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAnnotationTypeMemberDeclaration(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTArgumentList.java
module net::sourceforge::pmd::lang::java::ast::ASTArgumentList
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTArgumentList(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTArgumentList(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTArguments.java
module net::sourceforge::pmd::lang::java::ast::ASTArguments
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getArgumentCount() in line 18
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function jjtAccept(JavaParserVisitor,Object) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTArguments(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTArguments(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTArguments.java
module net::sourceforge::pmd::lang::plsql::ast::ASTArguments
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function getArgumentCount() in line 24
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function jjtAccept(PLSQLParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTArguments(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTArguments(PLSQLParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTArrayDimsAndInits.java
module net::sourceforge::pmd::lang::java::ast::ASTArrayDimsAndInits
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTArrayDimsAndInits(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTArrayDimsAndInits(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTArrayInitializer.java
module net::sourceforge::pmd::lang::java::ast::ASTArrayInitializer
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTArrayInitializer(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTArrayInitializer(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAssertStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTAssertStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAssertStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAssertStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAssignmentOperator.java
module net::sourceforge::pmd::lang::java::ast::ASTAssignmentOperator
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function isCompound() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setCompound() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isCompound() defined in net::sourceforge::pmd::lang::java::ast::ASTAssignmentOperator
   function ASTAssignmentOperator(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAssignmentOperator(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isCompound in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTBlock.java
module net::sourceforge::pmd::lang::java::ast::ASTBlock
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function containsComment() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setContainsComment() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTBlock(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTBlock(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable containsComment in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTBlock.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTBlock
   inherits from AbstractEcmascriptNode< Block >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTBlock(Block) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTBlockStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTBlockStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function isAllocation() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTBlockStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTBlockStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTBooleanLiteral.java
module net::sourceforge::pmd::lang::java::ast::ASTBooleanLiteral
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function isTrue() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setTrue() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTrue() defined in net::sourceforge::pmd::lang::java::ast::ASTBooleanLiteral
   function ASTBooleanLiteral(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTBooleanLiteral(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isTrue in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTBreakStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTBreakStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTBreakStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTBreakStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTBreakStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTBreakStatement
   inherits from AbstractEcmascriptNode< BreakStatement >
   function getLabel() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasLabel() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< BreakStatement >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTBreakStatement(BreakStatement) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTCastExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTCastExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function hasIntersectionTypes() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable intersectionTypes defined in net::sourceforge::pmd::lang::java::ast::ASTCastExpression
   function jjtAccept(JavaParserVisitor,Object) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setIntersectionTypes(boolean) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable intersectionTypes defined in net::sourceforge::pmd::lang::java::ast::ASTCastExpression
   function ASTCastExpression(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTCastExpression(JavaParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable intersectionTypes in line 9
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTCatchStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTCatchStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTCatchStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTCatchStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBody.java
module net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceBody
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTClassOrInterfaceBody(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTClassOrInterfaceBody(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBodyDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceBodyDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   inherits from net::sourceforge::pmd::lang::java::ast::CanSuppressWarnings
   function hasSuppressWarningsAnnotationFor(Rule) in line 25
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function suppresses(Rule) defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotation
   function isAnonymousInnerClass() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function isEnumChild() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function isFindBoundary() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isAnonymousInnerClass() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceBodyDeclaration
   function jjtAccept(JavaParserVisitor,Object) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTClassOrInterfaceBodyDeclaration(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTClassOrInterfaceBodyDeclaration(JavaParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessTypeNode
   function isFindBoundary() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isNested() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
   function isInterface() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isNested() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function jjtAccept(JavaParserVisitor,Object) in line 25
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setInterface() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTClassOrInterfaceDeclaration(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTClassOrInterfaceDeclaration(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isInterface in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType.java
module net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceType
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTClassOrInterfaceType(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTClassOrInterfaceType(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTCompilationUnit.java
module net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   inherits from net::sourceforge::pmd::lang::ast::RootNode
   function declarationsAreInDefaultPackage() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPackageDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   function getClassTypeResolver() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classTypeResolver defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   function getComments() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable comments defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   function getPackageDeclaration() in line 49
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setClassTypeResolver(ClassTypeResolver) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classTypeResolver defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   function setComments(List< Comment >) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comments defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   function ASTCompilationUnit(int) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTCompilationUnit(JavaParser,int) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable classTypeResolver in line 17
   variable comments in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTCompilationUnit.java
module net::sourceforge::pmd::lang::jsp::ast::ASTCompilationUnit
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   inherits from net::sourceforge::pmd::lang::ast::RootNode
   function jjtAccept(JspParserVisitor,Object) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTCompilationUnit(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTCompilationUnit(JspParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTConditionalAndExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTConditionalAndExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTConditionalAndExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTConditionalAndExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTConditionalExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function isTernary() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setTernary() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTernary() defined in net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
   function ASTConditionalExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTConditionalExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isTernary in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTConditionalExpression.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTConditionalExpression
   inherits from AbstractEcmascriptNode< ConditionalExpression >
   function getFalseExpression() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTestExpression() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTrueExpression() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTConditionalExpression(ConditionalExpression) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTConditionalOrExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTConditionalOrExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTConditionalOrExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTConditionalOrExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTConstructorDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTConstructorDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function containsComment() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterCount() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getParameters() defined in net::sourceforge::pmd::lang::java::ast::ASTConstructorDeclaration
      uses function getParameterCount() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameters
   function getParameters() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setContainsComment() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTConstructorDeclaration(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTConstructorDeclaration(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable containsComment in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTContinueStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTContinueStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTContinueStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTContinueStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTContinueStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTContinueStatement
   inherits from AbstractEcmascriptNode< ContinueStatement >
   function getLabel() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasLabel() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< ContinueStatement >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTContinueStatement(ContinueStatement) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTDefaultValue.java
module net::sourceforge::pmd::lang::java::ast::ASTDefaultValue
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTDefaultValue(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDefaultValue(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTDoStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTDoStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTDoStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDoStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEmptyStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTEmptyStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTEmptyStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTEmptyStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTEmptyStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTEmptyStatement
   inherits from AbstractEcmascriptNode< EmptyStatement >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTEmptyStatement(EmptyStatement) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEnumBody.java
module net::sourceforge::pmd::lang::java::ast::ASTEnumBody
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTEnumBody(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTEnumBody(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEnumConstant.java
module net::sourceforge::pmd::lang::java::ast::ASTEnumConstant
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTEnumConstant(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTEnumConstant(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTEnumDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTEnumDeclaration(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTEnumDeclaration(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEqualityExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTEqualityExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTEqualityExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTEqualityExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTExclusiveOrExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTExclusiveOrExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTExclusiveOrExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTExclusiveOrExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTExplicitConstructorInvocation.java
module net::sourceforge::pmd::lang::java::ast::ASTExplicitConstructorInvocation
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getArgumentCount() in line 25
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isSuper() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisOrSuper defined in net::sourceforge::pmd::lang::java::ast::ASTExplicitConstructorInvocation
   function isThis() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisOrSuper defined in net::sourceforge::pmd::lang::java::ast::ASTExplicitConstructorInvocation
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setIsSuper() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsThis() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTExplicitConstructorInvocation(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTExplicitConstructorInvocation(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable thisOrSuper in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTExtendsList.java
module net::sourceforge::pmd::lang::java::ast::ASTExtendsList
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTExtendsList(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTExtendsList(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessTypeNode
   inherits from net::sourceforge::pmd::lang::java::ast::Dimensionable
   function checkDecl() in line 112
      6 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function checkType() in line 105
      6 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getArrayDepth() in line 98
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isArray() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function checkType() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function checkDecl() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function getVariableName() in line 125
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isArray() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkType() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function checkDecl() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function isFinal() in line 55
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function isInterfaceMember() in line 86
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
   function isPackagePrivate() in line 71
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function isPrivate() in line 63
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function isProtected() in line 79
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function isPublic() in line 31
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function isStatic() in line 43
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function isSyntacticallyFinal() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSyntacticallyPublic() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSyntacticallyStatic() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTFieldDeclaration(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTFieldDeclaration(JavaParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFinallyStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTFinallyStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTFinallyStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTFinallyStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTForInit.java
module net::sourceforge::pmd::lang::java::ast::ASTForInit
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTForInit(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTForInit(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFormalParameter.java
module net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   inherits from net::sourceforge::pmd::lang::java::ast::Dimensionable
   inherits from net::sourceforge::pmd::lang::java::ast::CanSuppressWarnings
   function checkDecl() in line 80
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDecl() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function checkType() in line 67
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::ASTType
   function getArrayDepth() in line 51
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isArray() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
      uses function checkType() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
      uses function checkDecl() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function getDecl() in line 71
      8 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable c defined in sample-matlab.m
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function toString() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getTypeNode() in line 58
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function hasSuppressWarningsAnnotationFor(Rule) in line 35
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function suppresses(Rule) defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotation
   function isArray() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkType() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
      uses function checkDecl() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function isVarargs() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setVarargs() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isVarargs() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function ASTFormalParameter(int) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTFormalParameter(JavaParser,int) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isVarargs in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTFormalParameter.java
module net::sourceforge::pmd::lang::plsql::ast::ASTFormalParameter
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function getTypeNode() in line 24
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTFormalParameter(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTFormalParameter(PLSQLParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFormalParameters.java
module net::sourceforge::pmd::lang::java::ast::ASTFormalParameters
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getParameterCount() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTFormalParameters(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTFormalParameters(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTForStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTForStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTForStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTForStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTForUpdate.java
module net::sourceforge::pmd::lang::java::ast::ASTForUpdate
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTForUpdate(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTForUpdate(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTIfStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTIfStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function hasElse() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setHasElse() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTIfStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTIfStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable hasElse in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTIfStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTIfStatement
   inherits from AbstractEcmascriptNode< IfStatement >
   function getCondition() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getElse() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getThen() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasElse() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< IfStatement >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTIfStatement(IfStatement) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTIfStatement.java
module net::sourceforge::pmd::lang::plsql::ast::ASTIfStatement
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function hasElse() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(PLSQLParserVisitor,Object) in line 30
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setHasElse() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTIfStatement(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTIfStatement(PLSQLParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable hasElse in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTImplementsList.java
module net::sourceforge::pmd::lang::java::ast::ASTImplementsList
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTImplementsList(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTImplementsList(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTImportDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function getImportedName() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getImportedNameNode() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getPackage() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pkg defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
   function getPackageName() in line 46
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses function isImportOnDemand() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
   function isImportOnDemand() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setImportOnDemand() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isImportOnDemand() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
   function setPackage(Package) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setStatic() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
   function ASTImportDeclaration(int) in line 13
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTImportDeclaration(JavaParser,int) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isImportOnDemand in line 10
   variable isStatic in line 11
   variable pkg in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTInclusiveOrExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTInclusiveOrExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTInclusiveOrExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTInclusiveOrExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTInitializer.java
module net::sourceforge::pmd::lang::java::ast::ASTInitializer
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function isStatic() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setStatic() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTInitializer
   function ASTInitializer(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTInitializer(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isStatic in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTInstanceOfExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTInstanceOfExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTInstanceOfExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTInstanceOfExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLabeledStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTLabeledStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTLabeledStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTLabeledStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTLabeledStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTLabeledStatement
   inherits from AbstractEcmascriptNode< LabeledStatement >
   function getLabel(int) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumLabels() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< LabeledStatement >
   function getStatement() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTLabeledStatement(LabeledStatement) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLambdaExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTLambdaExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function jjtAccept(JavaParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTLambdaExpression(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTLambdaExpression(JavaParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLiteral.java
module net::sourceforge::pmd::lang::java::ast::ASTLiteral
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function isCharLiteral() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isChar defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function isDoubleLiteral() in line 80
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isFloat defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function isFloatLiteral() in line 65
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isFloat defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function isIntLiteral() in line 37
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isInt defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function isLongLiteral() in line 51
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isInt defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function isSingleCharacterStringLiteral() in line 113
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable isString defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable SINGLE_CHAR_ESCAPE_PATTERN defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function isStringLiteral() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isString defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function jjtAccept(JavaParserVisitor,Object) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setCharLiteral() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setFloatLiteral() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIntLiteral() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setStringLiteral() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTLiteral(int) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTLiteral(JavaParser,int) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isChar in line 14
   variable isFloat in line 13
   variable isInt in line 12
   variable isString in line 15
   variable SINGLE_CHAR_ESCAPE_PATTERN in line 129
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   inherits from net::sourceforge::pmd::lang::java::ast::Dimensionable
   inherits from net::sourceforge::pmd::lang::java::ast::CanSuppressWarnings
   function checkDecl() in line 65
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDecl() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function checkType() in line 57
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::ASTType
   function getArrayDepth() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkType() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
      uses function checkDecl() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
   function getDecl() in line 61
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getTypeNode() in line 48
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getVariableName() in line 75
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function hasSuppressWarningsAnnotationFor(Rule) in line 28
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function suppresses(Rule) defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotation
   function isArray() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkType() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
      uses function checkDecl() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
   function jjtAccept(JavaParserVisitor,Object) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTLocalVariableDeclaration(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTLocalVariableDeclaration(JavaParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMarkerAnnotation.java
module net::sourceforge::pmd::lang::java::ast::ASTMarkerAnnotation
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMarkerAnnotation(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMarkerAnnotation(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberSelector.java
module net::sourceforge::pmd::lang::java::ast::ASTMemberSelector
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMemberSelector(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMemberSelector(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberValue.java
module net::sourceforge::pmd::lang::java::ast::ASTMemberValue
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMemberValue(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMemberValue(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberValueArrayInitializer.java
module net::sourceforge::pmd::lang::java::ast::ASTMemberValueArrayInitializer
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMemberValueArrayInitializer(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMemberValueArrayInitializer(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberValuePair.java
module net::sourceforge::pmd::lang::java::ast::ASTMemberValuePair
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMemberValuePair(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMemberValuePair(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberValuePairs.java
module net::sourceforge::pmd::lang::java::ast::ASTMemberValuePairs
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMemberValuePairs(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMemberValuePairs(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   inherits from net::sourceforge::pmd::lang::dfa::DFAGraphMethod
   function getBlock() in line 82
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getMethodName() in line 33
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getName() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodName() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   function getResultType() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function getThrows() in line 92
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isAbstract() in line 62
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   function isInterfaceMember() in line 69
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
   function isPublic() in line 54
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   function isSyntacticallyAbstract() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSyntacticallyPublic() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVoid() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResultType() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isVoid() defined in net::sourceforge::pmd::lang::java::ast::ASTResultType
   function jjtAccept(JavaParserVisitor,Object) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMethodDeclaration(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMethodDeclaration(JavaParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTMethodDeclaration.java
module net::sourceforge::pmd::lang::plsql::ast::ASTMethodDeclaration
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::ExecutableCode
   function getMethodName() in line 31
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMethodDeclaration(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMethodDeclaration(PLSQLParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator.java
module net::sourceforge::pmd::lang::java::ast::ASTMethodDeclarator
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getParameterCount() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function jjtAccept(JavaParserVisitor,Object) in line 25
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMethodDeclarator(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMethodDeclarator(JavaParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTMethodDeclarator.java
module net::sourceforge::pmd::lang::plsql::ast::ASTMethodDeclarator
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function getParameterCount() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function jjtAccept(PLSQLParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMethodDeclarator(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMethodDeclarator(PLSQLParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMethodReference.java
module net::sourceforge::pmd::lang::java::ast::ASTMethodReference
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMethodReference(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMethodReference(JavaParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMultiplicativeExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTMultiplicativeExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMultiplicativeExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMultiplicativeExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTName.java
module net::sourceforge::pmd::lang::java::ast::ASTName
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function getNameDeclaration() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nd defined in net::sourceforge::pmd::lang::java::ast::ASTName
   function jjtAccept(JavaParserVisitor,Object) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setNameDeclaration(NameDeclaration) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nd defined in net::sourceforge::pmd::lang::java::ast::ASTName
   function ASTName(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTName(JavaParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable nd in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTName.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTName
   inherits from AbstractEcmascriptNode< Name >
   function getIdentifier() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< Name >
   function isFunctionCallName() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isFunctionNodeName() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function isFunctionNodeParameter() in line 49
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses function getNumParams() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNode
      uses function getParam(int) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNode
   function isGlobalName() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< Name >
   function isLocalName() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< Name >
   function isVariableDeclaration() in line 75
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTName(Name) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTName.java
module net::sourceforge::pmd::lang::plsql::ast::ASTName
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function getNameDeclaration() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nd defined in net::sourceforge::pmd::lang::plsql::ast::ASTName
   function jjtAccept(PLSQLParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setNameDeclaration(NameDeclaration) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nd defined in net::sourceforge::pmd::lang::plsql::ast::ASTName
   function ASTName(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTName(PLSQLParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable nd in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTNameList.java
module net::sourceforge::pmd::lang::java::ast::ASTNameList
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTNameList(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTNameList(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTNormalAnnotation.java
module net::sourceforge::pmd::lang::java::ast::ASTNormalAnnotation
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTNormalAnnotation(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTNormalAnnotation(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTNullLiteral.java
module net::sourceforge::pmd::lang::java::ast::ASTNullLiteral
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTNullLiteral(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTNullLiteral(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPackageDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTPackageDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getPackageNameImage() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTPackageDeclaration(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPackageDeclaration(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPostfixExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTPostfixExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTPostfixExpression(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPostfixExpression(JavaParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPreDecrementExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTPreDecrementExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTPreDecrementExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPreDecrementExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPreIncrementExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTPreIncrementExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTPreIncrementExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPreIncrementExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTPrimaryExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTPrimaryExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPrimaryExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPrimaryPrefix.java
module net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setUsesSuperModifier() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setUsesThisModifier() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function usesThisModifier() defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
   function usesSuperModifier() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function usesThisModifier() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTPrimaryPrefix(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPrimaryPrefix(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable usesSuperModifier in line 18
   variable usesThisModifier in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTPrimaryPrefix.java
module net::sourceforge::pmd::lang::plsql::ast::ASTPrimaryPrefix
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setUsesSelfModifier() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function usesSelfModifier() defined in net::sourceforge::pmd::lang::plsql::ast::ASTPrimaryPrefix
   function usesSelfModifier() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ASTPrimaryPrefix(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPrimaryPrefix(PLSQLParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable usesSelfModifier in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix.java
module net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getArgumentCount() in line 43
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isArguments() defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isArguments() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isArrayDereference() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setIsArguments() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsArrayDereference() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isArrayDereference() defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
   function ASTPrimarySuffix(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPrimarySuffix(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isArguments in line 17
   variable isArrayDereference in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTPrimarySuffix.java
module net::sourceforge::pmd::lang::plsql::ast::ASTPrimarySuffix
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function getArgumentCount() in line 50
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isArguments() defined in net::sourceforge::pmd::lang::plsql::ast::ASTPrimarySuffix
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isArguments() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isArrayDereference() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(PLSQLParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setIsArguments() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIsArrayDereference() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isArrayDereference() defined in net::sourceforge::pmd::lang::plsql::ast::ASTPrimarySuffix
   function ASTPrimarySuffix(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPrimarySuffix(PLSQLParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isArguments in line 24
   variable isArrayDereference in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPrimitiveType.java
module net::sourceforge::pmd::lang::java::ast::ASTPrimitiveType
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   inherits from net::sourceforge::pmd::lang::java::ast::Dimensionable
   function bumpArrayDepth() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTPrimitiveType
   function getArrayDepth() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTPrimitiveType
   function isArray() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTPrimitiveType
   function isBoolean() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 25
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTPrimitiveType(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPrimitiveType(JavaParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable arrayDepth in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTReferenceType.java
module net::sourceforge::pmd::lang::java::ast::ASTReferenceType
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   inherits from net::sourceforge::pmd::lang::java::ast::Dimensionable
   function bumpArrayDepth() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTReferenceType
   function getArrayDepth() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTReferenceType
   function isArray() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTReferenceType
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTReferenceType(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTReferenceType(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable arrayDepth in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTRelationalExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTRelationalExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTRelationalExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTRelationalExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTResource.java
module net::sourceforge::pmd::lang::java::ast::ASTResource
   inherits from net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function getDecl() in line 26
      9 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTResource(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTResource(JavaParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTResources.java
module net::sourceforge::pmd::lang::java::ast::ASTResources
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTResources(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTResources(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTResourceSpecification.java
module net::sourceforge::pmd::lang::java::ast::ASTResourceSpecification
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTResourceSpecification(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTResourceSpecification(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTResultType.java
module net::sourceforge::pmd::lang::java::ast::ASTResultType
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function isVoid() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function returnsArray() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isVoid() defined in net::sourceforge::pmd::lang::java::ast::ASTResultType
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function ASTResultType(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTResultType(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTReturnStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTReturnStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTReturnStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTReturnStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTReturnStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTReturnStatement
   inherits from AbstractEcmascriptNode< ReturnStatement >
   function hasResult() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< ReturnStatement >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTReturnStatement(ReturnStatement) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTRSIGNEDSHIFT.java
module net::sourceforge::pmd::lang::java::ast::ASTRSIGNEDSHIFT
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTRSIGNEDSHIFT(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTRSIGNEDSHIFT(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTRUNSIGNEDSHIFT.java
module net::sourceforge::pmd::lang::java::ast::ASTRUNSIGNEDSHIFT
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTRUNSIGNEDSHIFT(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTRUNSIGNEDSHIFT(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTShiftExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTShiftExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTShiftExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTShiftExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTSingleMemberAnnotation.java
module net::sourceforge::pmd::lang::java::ast::ASTSingleMemberAnnotation
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTSingleMemberAnnotation(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTSingleMemberAnnotation(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTStatementExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTStatementExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTStatementExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTStatementExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTStatementExpressionList.java
module net::sourceforge::pmd::lang::java::ast::ASTStatementExpressionList
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTStatementExpressionList(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTStatementExpressionList(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTSwitchLabel.java
module net::sourceforge::pmd::lang::java::ast::ASTSwitchLabel
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function isDefault() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setDefault() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isDefault() defined in net::sourceforge::pmd::lang::java::ast::ASTSwitchLabel
   function ASTSwitchLabel(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTSwitchLabel(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable isDefault in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTSwitchStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTSwitchStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTSwitchStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTSwitchStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTSwitchStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTSwitchStatement
   inherits from AbstractEcmascriptNode< SwitchStatement >
   function getExpression() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumCases() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< SwitchStatement >
   function getSwitchCase(int) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTSwitchStatement(SwitchStatement) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTSynchronizedStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTSynchronizedStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTSynchronizedStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTSynchronizedStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTThrowStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTThrowStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getFirstClassOrInterfaceTypeImage() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function jjtAccept(JavaParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTThrowStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTThrowStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTThrowStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTThrowStatement
   inherits from AbstractEcmascriptNode< ThrowStatement >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTThrowStatement(ThrowStatement) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTryStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTTryStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function getFinally() in line 35
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function hasFinally() in line 26
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(JavaParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTryStatement(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTryStatement(JavaParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTTryStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   inherits from AbstractEcmascriptNode< TryStatement >
   function getCatchClause(int) in line 37
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getNumCatchClause() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   function getFinallyBlock() in line 53
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function hasFinally() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   function getNumCatchClause() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< TryStatement >
   function getTryBlock() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasCatch() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumCatchClause() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   function hasFinally() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< TryStatement >
   function isCatch() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasCatch() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   function isFinally() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasFinally() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTTryStatement(TryStatement) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTType.java
module net::sourceforge::pmd::lang::java::ast::ASTType
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function getArrayDepth() in line 33
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getTypeImage() in line 25
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isArray() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::ASTType
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTType(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTType(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeArgument.java
module net::sourceforge::pmd::lang::java::ast::ASTTypeArgument
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTypeArgument(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTypeArgument(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeArguments.java
module net::sourceforge::pmd::lang::java::ast::ASTTypeArguments
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTypeArguments(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTypeArguments(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeBound.java
module net::sourceforge::pmd::lang::java::ast::ASTTypeBound
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTypeBound(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTypeBound(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeDeclaration.java
module net::sourceforge::pmd::lang::java::ast::ASTTypeDeclaration
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   inherits from net::sourceforge::pmd::lang::java::ast::CanSuppressWarnings
   function hasSuppressWarningsAnnotationFor(Rule) in line 20
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function suppresses(Rule) defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotation
   function jjtAccept(JavaParserVisitor,Object) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTypeDeclaration(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTypeDeclaration(JavaParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeParameter.java
module net::sourceforge::pmd::lang::java::ast::ASTTypeParameter
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTypeParameter(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTypeParameter(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeParameters.java
module net::sourceforge::pmd::lang::java::ast::ASTTypeParameters
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTypeParameters(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTypeParameters(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTUnaryExpression.java
module net::sourceforge::pmd::lang::java::ast::ASTUnaryExpression
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTUnaryExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTUnaryExpression(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTUnaryExpression.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTUnaryExpression
   inherits from AbstractEcmascriptNode< UnaryExpression >
   function getOperand() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isPostfix() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< UnaryExpression >
   function isPrefix() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< UnaryExpression >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTUnaryExpression(UnaryExpression) in line 11
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTUnaryExpressionNotPlusMinus.java
module net::sourceforge::pmd::lang::java::ast::ASTUnaryExpressionNotPlusMinus
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTUnaryExpressionNotPlusMinus(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTUnaryExpressionNotPlusMinus(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator.java
module net::sourceforge::pmd::lang::java::ast::ASTVariableDeclarator
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTVariableDeclarator(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTVariableDeclarator(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorId.java
module net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function bumpArrayDepth() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function findTypeNameNode(Node) in line 94
      9 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getArrayDepth() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function getNameDeclaration() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nameDeclaration defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function getTypeNameNode() in line 63
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function findTypeNameNode(Node) defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function getTypeNode() in line 79
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function getUsages() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable nameDeclaration defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function isArray() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function isExceptionBlockParameter() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function jjtAccept(JavaParserVisitor,Object) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setNameDeclaration(VariableNameDeclaration) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nameDeclaration defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function ASTVariableDeclaratorId(int) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTVariableDeclaratorId(JavaParser,int) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable arrayDepth in line 32
   variable nameDeclaration in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTVariableInitializer.java
module net::sourceforge::pmd::lang::java::ast::ASTVariableInitializer
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTVariableInitializer(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTVariableInitializer(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTVariableInitializer.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTVariableInitializer
   inherits from AbstractEcmascriptNode< VariableInitializer >
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::DestructuringNode
   function getInitializer() in line 24
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getTarget() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDestructuring() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< VariableInitializer >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTVariableInitializer(VariableInitializer) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTWhileStatement.java
module net::sourceforge::pmd::lang::java::ast::ASTWhileStatement
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTWhileStatement(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTWhileStatement(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTWildcardBounds.java
module net::sourceforge::pmd::lang::java::ast::ASTWildcardBounds
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function jjtAccept(JavaParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTWildcardBounds(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTWildcardBounds(JavaParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/CanSuppressWarnings.java
module net::sourceforge::pmd::lang::java::ast::CanSuppressWarnings
   function hasSuppressWarningsAnnotationFor(Rule) in line 9
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java
module net::sourceforge::pmd::lang::java::ast::Comment
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   abstract class
   function findJavadocs(String) in line 29
      16 lines of code
      1 parameters
      3 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable label defined in net::sourceforge::pmd::lang::java::javadoc::JavadocTag
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function toString() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function Comment(Token) in line 16
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable t defined in sample-matlab.m
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function findJavadocs(String) defined in net::sourceforge::pmd::lang::java::ast::Comment
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/main/java/org/sonar/plugins/scala/language/Comment.java
module org::sonar::plugins::scala::language::Comment
   function equals(Object) in line 99
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function Comment(String,CommentType) defined in org::sonar::plugins::scala::language::Comment
      uses variable type defined in org::sonar::plugins::scala::language::Comment
      uses variable lines defined in org::sonar::plugins::scala::language::Comment
   function getNumberOfBlankLines() in line 51
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable lines defined in org::sonar::plugins::scala::language::Comment
   function getNumberOfCommentedOutLinesOfCode() in line 70
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function isDocComment() defined in org::sonar::plugins::scala::language::Comment
      uses variable lines defined in org::sonar::plugins::scala::language::Comment
   function getNumberOfLines() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lines defined in org::sonar::plugins::scala::language::Comment
      uses function getNumberOfBlankLines() defined in org::sonar::plugins::scala::language::Comment
      uses function getNumberOfCommentedOutLinesOfCode() defined in org::sonar::plugins::scala::language::Comment
   function hashCode() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in org::sonar::plugins::scala::language::Comment
      uses variable lines defined in org::sonar::plugins::scala::language::Comment
   function isDocComment() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in org::sonar::plugins::scala::language::Comment
      uses variable DOC defined in org::sonar::plugins::scala::language::CommentType
   function isHeaderComment() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in org::sonar::plugins::scala::language::Comment
      uses enumvalue HEADER defined in org::sonar::plugins::scala::language::CommentType
   function toString() in line 109
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable lines defined in org::sonar::plugins::scala::language::Comment
      uses variable type defined in org::sonar::plugins::scala::language::Comment
      uses function getNumberOfLines() defined in org::sonar::plugins::scala::language::Comment
      uses function getNumberOfCommentedOutLinesOfCode() defined in org::sonar::plugins::scala::language::Comment
   function Comment(String,CommentType) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable lines defined in org::sonar::plugins::scala::language::Comment
      uses variable type defined in org::sonar::plugins::scala::language::Comment
   variable lines in line 40
   variable type in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/CommentUtil.java
module net::sourceforge::pmd::lang::java::ast::CommentUtil
   function javadocContentAfter(String,int) in line 40
      protection public
      24 lines of code
      2 parameters
      5 conditional paths
   function javadocTagsIn(String) in line 68
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable JAVADOC_TAG defined in net::sourceforge::pmd::lang::java::ast::CommentUtil
      uses variable JAVADOC_CACHE defined in net::sourceforge::pmd::lang::java::ast::CommentUtil
   function main(String[]) in line 164
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function javadocTagsIn(String) defined in net::sourceforge::pmd::lang::java::ast::CommentUtil
   function multiLinesIn(String) in line 88
      protection public
      40 lines of code
      1 parameters
      7 conditional paths
      uses variable CR defined in net::sourceforge::pmd::lang::java::ast::CommentUtil
   function trim(List< String >) in line 135
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
   function wordAfter(String,int) in line 24
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
   function CommentUtil() in line 19
      2 lines of code
      0 parameters
      1 conditional paths
   variable CR in line 22
   variable JAVADOC_CACHE in line 66
   variable JAVADOC_TAG in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Dimensionable.java
module net::sourceforge::pmd::lang::java::ast::Dimensionable
   function getArrayDepth() in line 9
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isArray() in line 7
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/DummyJavaNode.java
module net::sourceforge::pmd::lang::java::ast::DummyJavaNode
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function DummyJavaNode(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DummyJavaNode(JavaParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/DumpFacade.java
module net::sourceforge::pmd::lang::java::ast::DumpFacade
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   function collectModifiers(JavaNode,List< String >) in line 212
      42 lines of code
      2 parameters
      14 conditional paths
      uses function isPackagePrivate() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isProtected() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isSynchronized() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isStrictfp() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isTransient() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isDefault() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function dump(JavaNode,String) in line 38
      173 lines of code
      2 parameters
      54 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::java::ast::DumpFacade
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable usesSuperModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses variable isArrayDereference defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
      uses function collectModifiers(JavaNode,List< String >) defined in net::sourceforge::pmd::lang::java::ast::DumpFacade
      uses function isArray() defined in net::sourceforge::pmd::lang::java::ast::Dimensionable
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::Dimensionable
      uses function isCharLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isIntLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isFloatLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isDoubleLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isLongLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function initializeWith(Writer,String,boolean,JavaNode) in line 17
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::java::ast::DumpFacade
      uses variable recurse defined in net::sourceforge::pmd::lang::java::ast::DumpFacade
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::DumpFacade
      uses variable e defined in sample-matlab.m
   function visit(JavaNode,Object) in line 29
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function dump(JavaNode,String) defined in net::sourceforge::pmd::lang::java::ast::DumpFacade
      uses variable data defined in sample-matlab.m
      uses variable recurse defined in net::sourceforge::pmd::lang::java::ast::DumpFacade
   variable recurse in line 15
   variable writer in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/DumpFacade.java
module net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
   function dump(EcmascriptNode<?>,String) in line 42
      162 lines of code
      2 parameters
      55 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasSideEffects() defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptNode
   function initializeWith(Writer,String,boolean,EcmascriptNode<?>) in line 19
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
      uses variable recurse defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
      uses function dump(EcmascriptNode<?>,String) defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
      uses variable e defined in sample-matlab.m
   function visit(EcmascriptNode<?>,Object) in line 30
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function dump(EcmascriptNode<?>,String) defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
      uses variable data defined in sample-matlab.m
      uses variable recurse defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   variable recurse in line 17
   variable writer in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/DumpFacade.java
module net::sourceforge::pmd::lang::jsp::ast::DumpFacade
   inherits from net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
   function dump(Node,String) in line 40
      63 lines of code
      2 parameters
      13 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::jsp::ast::DumpFacade
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function initializeWith(Writer,String,boolean,JspNode) in line 19
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::jsp::ast::DumpFacade
      uses variable recurse defined in net::sourceforge::pmd::lang::jsp::ast::DumpFacade
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::DumpFacade
      uses variable e defined in sample-matlab.m
   function visit(JspNode,Object) in line 31
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function dump(Node,String) defined in net::sourceforge::pmd::lang::jsp::ast::DumpFacade
      uses variable data defined in sample-matlab.m
      uses variable recurse defined in net::sourceforge::pmd::lang::jsp::ast::DumpFacade
   variable recurse in line 17
   variable writer in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/DumpFacade.java
module net::sourceforge::pmd::lang::plsql::ast::DumpFacade
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
   function dump(PLSQLNode,String) in line 38
      66 lines of code
      2 parameters
      10 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::plsql::ast::DumpFacade
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable isArrayDereference defined in net::sourceforge::pmd::lang::plsql::ast::ASTPrimarySuffix
   function initializeWith(Writer,String,boolean,PLSQLNode) in line 17
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::plsql::ast::DumpFacade
      uses variable recurse defined in net::sourceforge::pmd::lang::plsql::ast::DumpFacade
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::DumpFacade
      uses variable e defined in sample-matlab.m
   function visit(PLSQLNode,Object) in line 29
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function dump(PLSQLNode,String) defined in net::sourceforge::pmd::lang::plsql::ast::DumpFacade
      uses variable data defined in sample-matlab.m
      uses variable recurse defined in net::sourceforge::pmd::lang::plsql::ast::DumpFacade
   variable recurse in line 15
   variable writer in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast/DumpFacade.java
module net::sourceforge::pmd::lang::xml::ast::DumpFacade
   function dump(XmlNode,String) in line 44
      48 lines of code
      2 parameters
      5 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::xml::ast::DumpFacade
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getAttributeIterator() defined in net::sourceforge::pmd::lang::ast::xpath::AttributeNode
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function initializeWith(Writer,String,boolean,XmlNode) in line 21
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable writer defined in net::sourceforge::pmd::lang::xml::ast::DumpFacade
      uses variable recurse defined in net::sourceforge::pmd::lang::xml::ast::DumpFacade
      uses function dump(XmlNode,String) defined in net::sourceforge::pmd::lang::xml::ast::DumpFacade
      uses variable e defined in sample-matlab.m
   function visit(XmlNode,Object) in line 32
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function dump(XmlNode,String) defined in net::sourceforge::pmd::lang::xml::ast::DumpFacade
      uses variable data defined in sample-matlab.m
      uses variable recurse defined in net::sourceforge::pmd::lang::xml::ast::DumpFacade
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   variable recurse in line 19
   variable writer in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/FormalComment.java
module net::sourceforge::pmd::lang::java::ast::FormalComment
   inherits from net::sourceforge::pmd::lang::java::ast::Comment
   function FormalComment(Token) in line 8
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/JavadocElement.java
module net::sourceforge::pmd::lang::java::ast::JavadocElement
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   function tag() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function tag() defined in net::sourceforge::pmd::lang::java::ast::JavadocElement
      uses variable label defined in net::sourceforge::pmd::lang::java::javadoc::JavadocTag
      uses variable description defined in net::sourceforge::pmd::lang::java::javadoc::JavadocTag
   function JavadocElement(int,int,int,int,JavadocTag) in line 13
      protection public
      5 lines of code
      5 parameters
      1 conditional paths
      uses function tag() defined in net::sourceforge::pmd::lang::java::ast::JavadocElement
   variable tag in line 11
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/JavaNode.java
module net::sourceforge::pmd::lang::java::ast::JavaNode
   inherits from net::sourceforge::pmd::lang::symboltable::ScopedNode
   function childrenAccept(JavaParserVisitor,Object) in line 19
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getScope() in line 21
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(JavaParserVisitor,Object) in line 14
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setScope(Scope) in line 23
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/JavaParserVisitorAdapter.java
module net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitor
   function visit(JavaNode,Object) in line 8
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function visit(ASTExtendsList,Object) in line 12
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTImplementsList,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeParameters,Object) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberSelector,Object) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeParameter,Object) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeBound,Object) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceBody,Object) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceBodyDeclaration,Object) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumBody,Object) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumConstant,Object) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTReferenceType,Object) in line 56
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceType,Object) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeArguments,Object) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeArgument,Object) in line 68
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTWildcardBounds,Object) in line 72
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotation,Object) in line 76
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNormalAnnotation,Object) in line 80
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMarkerAnnotation,Object) in line 84
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSingleMemberAnnotation,Object) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberValuePairs,Object) in line 92
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberValuePair,Object) in line 96
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberValue,Object) in line 100
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberValueArrayInitializer,Object) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeDeclaration,Object) in line 108
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeBody,Object) in line 112
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeMemberDeclaration,Object) in line 116
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationMethodDeclaration,Object) in line 119
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDefaultValue,Object) in line 123
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTRUNSIGNEDSHIFT,Object) in line 127
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTRSIGNEDSHIFT,Object) in line 131
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 135
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumDeclaration,Object) in line 139
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAssertStatement,Object) in line 143
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageDeclaration,Object) in line 147
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 151
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeDeclaration,Object) in line 155
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 159
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclarator,Object) in line 163
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclaratorId,Object) in line 167
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableInitializer,Object) in line 171
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayInitializer,Object) in line 175
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 179
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclarator,Object) in line 183
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameters,Object) in line 187
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameter,Object) in line 191
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTConstructorDeclaration,Object) in line 195
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTExplicitConstructorInvocation,Object) in line 199
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTInitializer,Object) in line 203
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTType,Object) in line 207
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimitiveType,Object) in line 211
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTResultType,Object) in line 215
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 219
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNameList,Object) in line 223
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTExpression,Object) in line 227
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAssignmentOperator,Object) in line 231
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 235
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalOrExpression,Object) in line 239
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalAndExpression,Object) in line 243
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTInclusiveOrExpression,Object) in line 247
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTExclusiveOrExpression,Object) in line 251
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAndExpression,Object) in line 255
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEqualityExpression,Object) in line 259
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTInstanceOfExpression,Object) in line 263
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTRelationalExpression,Object) in line 267
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTShiftExpression,Object) in line 271
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAdditiveExpression,Object) in line 275
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMultiplicativeExpression,Object) in line 279
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpression,Object) in line 283
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPreIncrementExpression,Object) in line 287
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPreDecrementExpression,Object) in line 291
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpressionNotPlusMinus,Object) in line 295
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPostfixExpression,Object) in line 299
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCastExpression,Object) in line 303
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryExpression,Object) in line 307
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryPrefix,Object) in line 311
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimarySuffix,Object) in line 315
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLiteral,Object) in line 319
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTBooleanLiteral,Object) in line 323
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNullLiteral,Object) in line 327
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArguments,Object) in line 331
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArgumentList,Object) in line 335
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAllocationExpression,Object) in line 339
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayDimsAndInits,Object) in line 343
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTStatement,Object) in line 347
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLabeledStatement,Object) in line 351
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTBlock,Object) in line 355
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTBlockStatement,Object) in line 359
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLocalVariableDeclaration,Object) in line 363
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEmptyStatement,Object) in line 367
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTStatementExpression,Object) in line 371
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 375
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchLabel,Object) in line 379
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 383
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 387
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDoStatement,Object) in line 391
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 395
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForInit,Object) in line 399
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTStatementExpressionList,Object) in line 403
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForUpdate,Object) in line 407
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTBreakStatement,Object) in line 411
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTContinueStatement,Object) in line 415
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 419
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTThrowStatement,Object) in line 423
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSynchronizedStatement,Object) in line 427
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTryStatement,Object) in line 431
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTResourceSpecification,Object) in line 434
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTResources,Object) in line 438
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTResource,Object) in line 442
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFinallyStatement,Object) in line 446
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCatchStatement,Object) in line 450
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLambdaExpression,Object) in line 454
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodReference,Object) in line 458
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/MultiLineComment.java
module net::sourceforge::pmd::lang::java::ast::MultiLineComment
   inherits from net::sourceforge::pmd::lang::java::ast::Comment
   function MultiLineComment(Token) in line 8
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/SingleLineComment.java
module net::sourceforge::pmd::lang::java::ast::SingleLineComment
   inherits from net::sourceforge::pmd::lang::java::ast::Comment
   function SingleLineComment(Token) in line 8
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/TypeNode.java
module net::sourceforge::pmd::lang::java::ast::TypeNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   function getType() in line 18
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setType(Class<?>) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa/DataFlowFacade.java
module net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   function initializeWith(DataFlowHandler,ASTCompilationUnit) in line 22
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable sbf defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses variable vav defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   function visit(ASTMethodDeclaration,Object) in line 28
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable sbf defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses function buildDataFlowFor(JavaNode) defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses variable vav defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses function compute(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
      uses variable data defined in sample-matlab.m
   function visit(ASTConstructorDeclaration,Object) in line 34
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable sbf defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses function buildDataFlowFor(JavaNode) defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses variable vav defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses function compute(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
      uses variable data defined in sample-matlab.m
   variable sbf in line 19
   variable vav in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/dfa/DataFlowFacade.java
module net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
   function initializeWith(DataFlowHandler,ASTInput) in line 31
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable sbf defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses variable vav defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function jjtAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::ASTInput
   function visit(ASTMethodDeclaration,Object) in line 37
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses variable CLASS_PATH defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses variable sbf defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function buildDataFlowFor(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable vav defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function compute(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
   function visit(ASTTriggerUnit,Object) in line 55
      protection public
      38 lines of code
      2 parameters
      5 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses variable CLASS_PATH defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses variable sbf defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function buildDataFlowFor(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable vav defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function compute(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
   function visit(ASTTriggerTimingPointSection,Object) in line 94
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses variable CLASS_PATH defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable sbf defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function buildDataFlowFor(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable vav defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function compute(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
      uses variable data defined in sample-matlab.m
   function visit(ASTProgramUnit,Object) in line 110
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses variable CLASS_PATH defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable sbf defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function buildDataFlowFor(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable vav defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function compute(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeMethod,Object) in line 126
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses variable CLASS_PATH defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable sbf defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function buildDataFlowFor(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable vav defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function compute(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
      uses variable data defined in sample-matlab.m
   variable CLASS_PATH in line 25
   variable LOGGER in line 26
   variable sbf in line 28
   variable vav in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa/JavaDataFlowNode.java
module net::sourceforge::pmd::lang::java::dfa::JavaDataFlowNode
   inherits from net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function toString() in line 20
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable node defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses function toString() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function JavaDataFlowNode(List< DataFlowNode >,Node) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dataFlow defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable node defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa/JavaDFAGraphRule.java
module net::sourceforge::pmd::lang::java::dfa::JavaDFAGraphRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   inherits from net::sourceforge::pmd::lang::dfa::DFAGraphRule
   function getMethods() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methods defined in net::sourceforge::pmd::lang::java::dfa::JavaDFAGraphRule
   function visit(ASTMethodDeclaration,Object) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable methods defined in net::sourceforge::pmd::lang::java::dfa::JavaDFAGraphRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable methods defined in net::sourceforge::pmd::lang::java::dfa::JavaDFAGraphRule
      uses variable data defined in sample-matlab.m
   function JavaDFAGraphRule() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable methods in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa/StatementAndBraceFinder.java
module net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   function addForExpressionNode(Node,Structure) in line 335
      41 lines of code
      2 parameters
      14 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable FOR_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
   function buildDataFlowFor(JavaNode) in line 55
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable dataFlowHandler defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function createStartNode(int) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function createEndNode(int) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function dump() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getBraceStack() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getContinueBreakReturnStack() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function computePaths() defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable e defined in sample-matlab.m
   function visit(ASTStatementExpression,Object) in line 80
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
   function visit(ASTVariableDeclarator,Object) in line 92
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
   function visit(ASTExpression,Object) in line 104
      protection public
      41 lines of code
      2 parameters
      12 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable IF_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable WHILE_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable SWITCH_START defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable DO_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTForInit,Object) in line 146
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable FOR_INIT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addForExpressionNode(Node,Structure) defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
   function visit(ASTLabeledStatement,Object) in line 160
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LABEL_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function visit(ASTForUpdate,Object) in line 169
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function addForExpressionNode(Node,Structure) defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable FOR_UPDATE defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTStatement,Object) in line 186
      protection public
      58 lines of code
      2 parameters
      18 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addForExpressionNode(Node,Structure) defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable FOR_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable DO_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable hasElse defined in net::sourceforge::pmd::lang::java::ast::ASTIfStatement
      uses variable IF_LAST_STATEMENT_WITHOUT_ELSE defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ELSE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable IF_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable WHILE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_END defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable LABEL_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTSwitchStatement,Object) in line 245
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable SWITCH_END defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTSwitchLabel,Object) in line 258
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable SWITCH_LAST_DEFAULT_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable CASE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTBreakStatement,Object) in line 278
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable BREAK_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTContinueStatement,Object) in line 292
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable CONTINUE_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTReturnStatement,Object) in line 305
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable RETURN_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTThrowStatement,Object) in line 318
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable THROW_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function StatementAndBraceFinder(DataFlowHandler) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dataFlowHandler defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
   variable dataFlow in line 49
   variable dataFlowHandler in line 48
   variable LOGGER in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/dfa/StatementAndBraceFinder.java
module net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
   function addForExpressionNode(Node,Structure) in line 748
      21 lines of code
      2 parameters
      5 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function buildDataFlowFor(PLSQLNode) in line 66
      protection public
      36 lines of code
      1 parameters
      5 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable dataFlowHandler defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createStartNode(int) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function jjtAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createEndNode(int) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function dump() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getBraceStack() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getContinueBreakReturnStack() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function computePaths() defined in net::sourceforge::pmd::lang::dfa::Linker
      uses variable e defined in sample-matlab.m
   function visit(ASTSqlStatement,Object) in line 103
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
   function visit(ASTEmbeddedSqlStatement,Object) in line 120
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
   function visit(ASTCloseStatement,Object) in line 137
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTOpenStatement,Object) in line 150
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTFetchStatement,Object) in line 163
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTPipelineStatement,Object) in line 176
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTVariableOrConstantDeclarator,Object) in line 191
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTExpression,Object) in line 204
      protection public
      81 lines of code
      2 parameters
      21 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable IF_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable WHILE_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable SWITCH_START defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable DO_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTLabelledStatement,Object) in line 286
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LABEL_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTLoopStatement,Object) in line 303
      protection public
      24 lines of code
      2 parameters
      5 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable DO_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
   function visit(ASTWhileStatement,Object) in line 335
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTStatement,Object) in line 356
      protection public
      108 lines of code
      2 parameters
      23 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function addForExpressionNode(Node,Structure) defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable FOR_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable DO_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable WHILE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_END defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable LABEL_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTUnlabelledStatement,Object) in line 465
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LABEL_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTCaseStatement,Object) in line 481
      protection public
      35 lines of code
      2 parameters
      5 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable SWITCH_START defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable SWITCH_END defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTCaseWhenClause,Object) in line 517
      protection public
      24 lines of code
      2 parameters
      4 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable CASE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable BREAK_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTIfStatement,Object) in line 542
      protection public
      68 lines of code
      2 parameters
      11 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable IF_LAST_STATEMENT_WITHOUT_ELSE defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ELSE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTElseClause,Object) in line 611
      protection public
      26 lines of code
      2 parameters
      5 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable IF_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses variable SWITCH_LAST_DEFAULT_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function visit(ASTElsifClause,Object) in line 638
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable IF_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTContinueStatement,Object) in line 661
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable CONTINUE_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTExitStatement,Object) in line 682
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable BREAK_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTGotoStatement,Object) in line 703
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable CONTINUE_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTReturnStatement,Object) in line 717
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable RETURN_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function visit(ASTRaiseStatement,Object) in line 731
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable dataFlow defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function pushOnStack(int,DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable THROW_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function getLast() defined in net::sourceforge::pmd::lang::dfa::Structure
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function StatementAndBraceFinder(DataFlowHandler) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dataFlowHandler defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   variable dataFlow in line 60
   variable dataFlowHandler in line 59
   variable LOGGER in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa/VariableAccessVisitor.java
module net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   function addAccess(JavaNameOccurrence,DataFlowNode) in line 101
      9 lines of code
      2 parameters
      3 conditional paths
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function addVariableAccess(Node,VariableAccess,List< DataFlowNode >) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable DEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function isOnRightHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable REFERENCING defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function addVariableAccess(Node,VariableAccess,List< DataFlowNode >) in line 117
      19 lines of code
      3 parameters
      5 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function setVariableAccess(List< VariableAccess >) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function collectDeclarations(DataFlowNode) in line 85
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function compute(ASTMethodDeclaration) in line 35
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function computeNow(Node) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
   function compute(ASTConstructorDeclaration) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function computeNow(Node) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
   function computeNow(Node) in line 45
      13 lines of code
      1 parameters
      1 conditional paths
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::Node
      uses function markUsages(DataFlowNode) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function setVariableAccess(List< VariableAccess >) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function markUsages(DataFlowNode) in line 59
      25 lines of code
      1 parameters
      6 conditional paths
      uses function collectDeclarations(DataFlowNode) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function addVariableAccess(Node,VariableAccess,List< DataFlowNode >) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses variable DEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable UNDEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function addAccess(JavaNameOccurrence,DataFlowNode) defined in net::sourceforge::pmd::lang::java::dfa::VariableAccessVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/dfa/VariableAccessVisitor.java
module net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
   function addAccess(NameOccurrence,DataFlowNode) in line 128
      10 lines of code
      2 parameters
      3 conditional paths
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function addVariableAccess(Node,VariableAccess,List< DataFlowNode >) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
      uses function getLocation() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable DEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function getImage() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function isOnRightHandSide() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable REFERENCING defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function addVariableAccess(Node,VariableAccess,List< DataFlowNode >) in line 145
      19 lines of code
      3 parameters
      5 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function setVariableAccess(List< VariableAccess >) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function collectDeclarations(DataFlowNode) in line 112
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function compute(ASTMethodDeclaration) in line 39
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function computeNow(Node) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
   function compute(ASTProgramUnit) in line 46
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function computeNow(Node) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
   function compute(ASTTypeMethod) in line 54
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function computeNow(Node) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
   function compute(ASTTriggerUnit) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function computeNow(Node) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
   function compute(ASTTriggerTimingPointSection) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function computeNow(Node) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
   function computeNow(Node) in line 72
      13 lines of code
      1 parameters
      1 conditional paths
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::Node
      uses function markUsages(DataFlowNode) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function setVariableAccess(List< VariableAccess >) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function markUsages(DataFlowNode) in line 86
      25 lines of code
      1 parameters
      6 conditional paths
      uses function collectDeclarations(DataFlowNode) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function addVariableAccess(Node,VariableAccess,List< DataFlowNode >) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
      uses variable DEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable UNDEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function addAccess(NameOccurrence,DataFlowNode) defined in net::sourceforge::pmd::lang::plsql::dfa::VariableAccessVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java13Handler.java
module net::sourceforge::pmd::lang::java::Java13Handler
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaHandler
   function getParser(ParserOptions) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java13Parser.java
module net::sourceforge::pmd::lang::java::Java13Parser
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaParser
   function createJavaParser(Reader) in line 24
      5 lines of code
      1 parameters
      1 conditional paths
   function Java13Parser(ParserOptions) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java14Handler.java
module net::sourceforge::pmd::lang::java::Java14Handler
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaHandler
   function getParser(ParserOptions) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java14Parser.java
module net::sourceforge::pmd::lang::java::Java14Parser
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaParser
   function createJavaParser(Reader) in line 24
      5 lines of code
      1 parameters
      1 conditional paths
   function Java14Parser(ParserOptions) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java15Handler.java
module net::sourceforge::pmd::lang::java::Java15Handler
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaHandler
   function getParser(ParserOptions) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java15Parser.java
module net::sourceforge::pmd::lang::java::Java15Parser
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaParser
   function createJavaParser(Reader) in line 24
      5 lines of code
      1 parameters
      1 conditional paths
   function Java15Parser(ParserOptions) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java16Handler.java
module net::sourceforge::pmd::lang::java::Java16Handler
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaHandler
   function getParser(ParserOptions) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java16Parser.java
module net::sourceforge::pmd::lang::java::Java16Parser
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaParser
   function createJavaParser(Reader) in line 22
      5 lines of code
      1 parameters
      1 conditional paths
   function Java16Parser(ParserOptions) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java17Handler.java
module net::sourceforge::pmd::lang::java::Java17Handler
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaHandler
   function getParser(ParserOptions) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java17Parser.java
module net::sourceforge::pmd::lang::java::Java17Parser
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaParser
   function createJavaParser(Reader) in line 22
      5 lines of code
      1 parameters
      1 conditional paths
   function Java17Parser(ParserOptions) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java18Handler.java
module net::sourceforge::pmd::lang::java::Java18Handler
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaHandler
   function getParser(ParserOptions) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/Java18Parser.java
module net::sourceforge::pmd::lang::java::Java18Parser
   inherits from net::sourceforge::pmd::lang::java::AbstractJavaParser
   function createJavaParser(Reader) in line 22
      5 lines of code
      1 parameters
      1 conditional paths
   function Java18Parser(ParserOptions) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaDataFlowHandler.java
module net::sourceforge::pmd::lang::java::JavaDataFlowHandler
   inherits from net::sourceforge::pmd::lang::DataFlowHandler
   function createDataFlowNode(List< DataFlowNode >,Node) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getLabelStatementNodeClass() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/javadoc/JavadocTag.java
module net::sourceforge::pmd::lang::java::javadoc::JavadocTag
   function allTagIds() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TAGS_BY_ID defined in net::sourceforge::pmd::lang::java::javadoc::JavadocTag
   function tagFor(String) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable TAGS_BY_ID defined in net::sourceforge::pmd::lang::java::javadoc::JavadocTag
   function JavadocTag(String,String) in line 38
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable label defined in net::sourceforge::pmd::lang::java::javadoc::JavadocTag
      uses variable description defined in net::sourceforge::pmd::lang::java::javadoc::JavadocTag
      uses variable TAGS_BY_ID defined in net::sourceforge::pmd::lang::java::javadoc::JavadocTag
   variable AUTHOR in line 17
      protection public
   variable DEPRECATED in line 20
      protection public
   variable description in line 13
      protection public
   variable label in line 12
      protection public
   variable PARAM in line 21
      protection public
   variable RETURN in line 23
      protection public
   variable SEE in line 24
      protection public
   variable SINCE in line 18
      protection public
   variable TAGS_BY_ID in line 15
   variable THROWS in line 22
      protection public
   variable VERSION in line 19
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaLanguageModule.java
module net::sourceforge::pmd::lang::java::JavaLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function JavaLanguageModule() in line 14
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 11
      protection public
   variable TERSE_NAME in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaTokenManager.java
module net::sourceforge::pmd::lang::java::JavaTokenManager
   inherits from net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::java::JavaTokenManager
   function setFileName(String) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::java::JavaTokenManager
   function JavaTokenManager(Reader) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::java::JavaTokenManager
   variable tokenManager in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/AbstractInefficientZeroCheck.java
module net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   abstract class
   function appliesToClassName(String) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function checkComparison(String,Node,int) in line 146
      7 lines of code
      3 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getComparisonTargets() defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function checkNodeAndReport(Object,Node,Node) in line 87
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getComparisonTargets() defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isCompare(Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function getComparisonTargets() in line 38
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getFirstChildOrThis(Node) in line 128
      6 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isCompare(Node) in line 104
      8 lines of code
      1 parameters
      3 conditional paths
      uses function isLiteralLeftHand(Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses function checkComparison(String,Node,int) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses variable inverse defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isLiteralRightHand(Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
   function isLiteral(Node,int) in line 121
      6 lines of code
      2 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstChildOrThis(Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
   function isLiteralLeftHand(Node) in line 113
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isLiteral(Node,int) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
   function isLiteralRightHand(Node) in line 117
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isLiteral(Node,int) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
   function isTargetMethod(JavaNameOccurrence) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visit(ASTVariableDeclaratorId,Object) in line 57
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function getTypeNameNode() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function appliesToClassName(String) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses variable data defined in sample-matlab.m
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function isTargetMethod(JavaNameOccurrence) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function checkNodeAndReport(Object,Node,Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
   variable inverse in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/AbstractJavaRule.java
module net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitor
   inherits from net::sourceforge::pmd::lang::rule::ImmutableLanguage
   abstract class
   function apply(List<?extends Node >,RuleContext) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visitAll(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getDeclaringType(Node) in line 42
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable c defined in sample-matlab.m
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function importsPackage(ASTCompilationUnit,String) in line 54
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function isQualifiedName(Node) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function isSuppressed(Node) in line 64
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(JavaNode,Object) in line 73
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function visit(ASTExtendsList,Object) in line 78
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 82
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTImplementsList,Object) in line 86
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeParameters,Object) in line 90
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberSelector,Object) in line 94
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeParameter,Object) in line 98
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeBound,Object) in line 102
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceBody,Object) in line 106
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceBodyDeclaration,Object) in line 110
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumBody,Object) in line 114
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumConstant,Object) in line 118
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReferenceType,Object) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceType,Object) in line 126
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeArguments,Object) in line 130
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeArgument,Object) in line 134
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWildcardBounds,Object) in line 138
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotation,Object) in line 142
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNormalAnnotation,Object) in line 146
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMarkerAnnotation,Object) in line 150
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSingleMemberAnnotation,Object) in line 154
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberValuePairs,Object) in line 158
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberValuePair,Object) in line 162
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberValue,Object) in line 166
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMemberValueArrayInitializer,Object) in line 170
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeDeclaration,Object) in line 174
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeBody,Object) in line 178
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeMemberDeclaration,Object) in line 182
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationMethodDeclaration,Object) in line 186
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDefaultValue,Object) in line 190
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTRUNSIGNEDSHIFT,Object) in line 194
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTRSIGNEDSHIFT,Object) in line 198
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 202
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumDeclaration,Object) in line 206
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAssertStatement,Object) in line 210
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageDeclaration,Object) in line 214
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 218
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeDeclaration,Object) in line 222
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 226
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclarator,Object) in line 230
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclaratorId,Object) in line 234
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableInitializer,Object) in line 238
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayInitializer,Object) in line 242
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 246
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclarator,Object) in line 250
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameters,Object) in line 254
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameter,Object) in line 258
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConstructorDeclaration,Object) in line 262
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExplicitConstructorInvocation,Object) in line 266
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTInitializer,Object) in line 270
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTType,Object) in line 274
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimitiveType,Object) in line 278
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTResultType,Object) in line 282
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 286
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNameList,Object) in line 290
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExpression,Object) in line 294
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAssignmentOperator,Object) in line 298
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 302
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalOrExpression,Object) in line 306
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalAndExpression,Object) in line 310
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTInclusiveOrExpression,Object) in line 314
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExclusiveOrExpression,Object) in line 318
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAndExpression,Object) in line 322
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEqualityExpression,Object) in line 326
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTInstanceOfExpression,Object) in line 330
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTRelationalExpression,Object) in line 334
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTShiftExpression,Object) in line 338
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAdditiveExpression,Object) in line 342
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMultiplicativeExpression,Object) in line 346
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpression,Object) in line 350
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPreIncrementExpression,Object) in line 354
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPreDecrementExpression,Object) in line 358
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpressionNotPlusMinus,Object) in line 362
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPostfixExpression,Object) in line 366
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCastExpression,Object) in line 370
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryExpression,Object) in line 374
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryPrefix,Object) in line 378
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimarySuffix,Object) in line 382
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLiteral,Object) in line 386
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBooleanLiteral,Object) in line 390
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNullLiteral,Object) in line 394
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArguments,Object) in line 398
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArgumentList,Object) in line 402
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAllocationExpression,Object) in line 406
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayDimsAndInits,Object) in line 410
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTStatement,Object) in line 414
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLabeledStatement,Object) in line 418
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBlock,Object) in line 422
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBlockStatement,Object) in line 426
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLocalVariableDeclaration,Object) in line 430
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEmptyStatement,Object) in line 434
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTStatementExpression,Object) in line 438
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 442
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchLabel,Object) in line 446
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 450
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 454
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDoStatement,Object) in line 458
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 462
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForInit,Object) in line 466
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTStatementExpressionList,Object) in line 470
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForUpdate,Object) in line 474
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBreakStatement,Object) in line 478
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTContinueStatement,Object) in line 482
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 486
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTThrowStatement,Object) in line 490
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSynchronizedStatement,Object) in line 494
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTryStatement,Object) in line 498
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFinallyStatement,Object) in line 502
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCatchStatement,Object) in line 506
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTResourceSpecification,Object) in line 510
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTResources,Object) in line 514
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTResource,Object) in line 518
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLambdaExpression,Object) in line 522
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodReference,Object) in line 526
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable data defined in sample-matlab.m
   function visitAll(List<?extends Node >,RuleContext) in line 28
      6 lines of code
      2 parameters
      2 conditional paths
      uses function visit(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function AbstractJavaRule() in line 18
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/AbstractPoorMethodCall.java
module net::sourceforge::pmd::lang::java::rule::AbstractPoorMethodCall
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   abstract class
   function isNotedMethod(NameOccurrence) in line 61
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function methodNames() defined in net::sourceforge::pmd::lang::java::rule::AbstractPoorMethodCall
   function isViolationArgument(Node) in line 52
      1 lines of code
      1 parameters
      1 conditional paths
   function methodNames() in line 43
      1 lines of code
      0 parameters
      1 conditional paths
   function targetTypename() in line 35
      1 lines of code
      0 parameters
      1 conditional paths
   function visit(ASTVariableDeclaratorId,Object) in line 86
      protection public
      26 lines of code
      2 parameters
      8 conditional paths
      uses function targetTypename() defined in net::sourceforge::pmd::lang::java::rule::AbstractPoorMethodCall
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses variable data defined in sample-matlab.m
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function isNotedMethod(NameOccurrence) defined in net::sourceforge::pmd::lang::java::rule::AbstractPoorMethodCall
      uses function getNameForWhichThisIsAQualifier() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isViolationArgument(Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractPoorMethodCall
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/AbstractStatisticalJavaRule.java
module net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   inherits from net::sourceforge::pmd::lang::rule::stat::StatisticalRule
   abstract class
   function addDataPoint(DataPoint) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function apply(List<?extends Node >,RuleContext) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
      uses function apply(RuleContext) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function getViolationParameters(DataPoint) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable helper in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/AvoidBranchingStatementAsLastInLoopRule.java
module net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function check(EnumeratedMultiProperty< String >,Node,Object) in line 67
      17 lines of code
      3 parameters
      7 conditional paths
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasPropertyValue(EnumeratedMultiProperty< String >,String) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable property defined in sample-matlab.m
      uses variable CHECK_FOR defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable data defined in sample-matlab.m
      uses variable CHECK_WHILE defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable CHECK_DO defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
   function checksNothing() in line 95
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable CHECK_BREAK_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable CHECK_CONTINUE_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable CHECK_RETURN_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
   function dysfunctionReason() in line 106
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function checksNothing() defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
   function hasPropertyValue(EnumeratedMultiProperty< String >,String) in line 85
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable property defined in sample-matlab.m
   function visit(ASTBreakStatement,Object) in line 49
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function check(EnumeratedMultiProperty< String >,Node,Object) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable CHECK_BREAK_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
   function visit(ASTContinueStatement,Object) in line 58
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function check(EnumeratedMultiProperty< String >,Node,Object) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable CHECK_CONTINUE_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 63
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function check(EnumeratedMultiProperty< String >,Node,Object) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable CHECK_RETURN_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable data defined in sample-matlab.m
   function AvoidBranchingStatementAsLastInLoopRule() in line 38
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable CHECK_BREAK_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable CHECK_CONTINUE_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses variable CHECK_RETURN_LOOP_TYPES defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidBranchingStatementAsLastInLoopRule
      uses function addRuleChainVisit(Class<?extends Node >) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   variable ALL_LOOP_TYPES_DEFAULTS in line 26
   variable ALL_LOOP_TYPES_LABELS in line 24
   variable ALL_LOOP_TYPES_VALUES in line 25
   variable CHECK_BREAK_LOOP_TYPES in line 28
      protection public
   variable CHECK_CONTINUE_LOOP_TYPES in line 31
      protection public
   variable CHECK_DO in line 21
      protection public
   variable CHECK_FOR in line 20
      protection public
   variable CHECK_RETURN_LOOP_TYPES in line 34
      protection public
   variable CHECK_WHILE in line 22
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/AvoidMultipleUnaryOperatorsRule.java
module net::sourceforge::pmd::lang::java::rule::basic::AvoidMultipleUnaryOperatorsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkUnaryDescendent(Node,Object) in line 33
      37 lines of code
      2 parameters
      9 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpression,Object) in line 22
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkUnaryDescendent(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidMultipleUnaryOperatorsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpressionNotPlusMinus,Object) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkUnaryDescendent(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidMultipleUnaryOperatorsRule
      uses variable data defined in sample-matlab.m
   function AvoidMultipleUnaryOperatorsRule() in line 16
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/AvoidUsingHardCodedIPRule.java
module net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function dysfunctionReason() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasChosenAddressTypes() defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
   function hasChosenAddressTypes() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable CHECK_ADDRESS_TYPES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
   function isHexCharacter(char) in line 87
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isLatinDigit(char) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable c defined in sample-matlab.m
   function isIPv4(final char,final String) in line 91
      23 lines of code
      2 parameters
      5 conditional paths
      uses function isLatinDigit(char) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable IPV4_PATTERN defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
   function isIPv6(final char,String,final boolean,final boolean) in line 115
      78 lines of code
      4 parameters
      15 conditional paths
      uses function isHexCharacter(char) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable IPV6_PATTERN defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable e defined in sample-matlab.m
      uses function isIPv4(final char,final String) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable checkIPv4MappedIPv6 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable checkIPv6 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
   function isLatinDigit(char) in line 83
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 46
      protection public
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable checkIPv4 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable checkIPv6 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable checkIPv4MappedIPv6 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable CHECK_ADDRESS_TYPES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable IPV4 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable IPV6 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable IPV4_MAPPED_IPV6 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLiteral,Object) in line 63
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable checkIPv4 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses function isIPv4(final char,final String) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses function isIPv6(final char,String,final boolean,final boolean) defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable checkIPv6 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses variable checkIPv4MappedIPv6 defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function AvoidUsingHardCodedIPRule() in line 38
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable CHECK_ADDRESS_TYPES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingHardCodedIPRule
      uses function addRuleChainVisit(Class<?extends Node >) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   variable CHECK_ADDRESS_TYPES_DESCRIPTOR in line 20
      protection public
   variable checkIPv4 in line 34
   variable checkIPv4MappedIPv6 in line 36
   variable checkIPv6 in line 35
   variable IPV4 in line 16
      protection public
   variable IPV4_MAPPED_IPV6 in line 18
      protection public
   variable IPV4_PATTERN in line 31
   variable IPV4_REGEXP in line 25
   variable IPV6 in line 17
      protection public
   variable IPV6_PATTERN in line 32
   variable IPV6_REGEXP in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/AvoidUsingOctalValuesRule.java
module net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingOctalValuesRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTLiteral,Object) in line 26
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable STRICT_METHODS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingOctalValuesRule
      uses variable STRICT_OCTAL_PATTERN defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingOctalValuesRule
      uses variable OCTAL_PATTERN defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingOctalValuesRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function AvoidUsingOctalValuesRule() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable STRICT_METHODS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::basic::AvoidUsingOctalValuesRule
   variable OCTAL_PATTERN in line 14
      protection public
   variable STRICT_METHODS_DESCRIPTOR in line 18
   variable STRICT_OCTAL_PATTERN in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/BigIntegerInstantiationRule.java
module net::sourceforge::pmd::lang::java::rule::basic::BigIntegerInstantiationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTAllocationExpression,Object) in line 28
      protection public
      31 lines of code
      2 parameters
      7 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::ast::ASTArguments
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/BooleanInstantiationRule.java
module net::sourceforge::pmd::lang::java::rule::basic::BooleanInstantiationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTCompilationUnit,Object) in line 42
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable customBoolean defined in net::sourceforge::pmd::lang::java::rule::basic::BooleanInstantiationRule
      uses variable data defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 50
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable customBoolean defined in net::sourceforge::pmd::lang::java::rule::basic::BooleanInstantiationRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAllocationExpression,Object) in line 60
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable customBoolean defined in net::sourceforge::pmd::lang::java::rule::basic::BooleanInstantiationRule
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTPrimaryPrefix,Object) in line 75
      protection public
      33 lines of code
      2 parameters
      8 conditional paths
      uses variable customBoolean defined in net::sourceforge::pmd::lang::java::rule::basic::BooleanInstantiationRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   variable customBoolean in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/BrokenNullCheckRule.java
module net::sourceforge::pmd::lang::java::rule::basic::BrokenNullCheckRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkForViolations(ASTIfStatement,Object,Node) in line 46
      52 lines of code
      3 parameters
      11 conditional paths
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function findNullCompareExpression(ASTEqualityExpression) defined in net::sourceforge::pmd::lang::java::rule::basic::BrokenNullCheckRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function primaryExpressionsAreEqual(ASTPrimaryExpression,ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::basic::BrokenNullCheckRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function findExpressionNames(Node,List< String >) in line 128
      27 lines of code
      2 parameters
      9 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function findNullCompareExpression(ASTEqualityExpression) in line 156
      13 lines of code
      1 parameters
      4 conditional paths
   function primaryExpressionsAreEqual(ASTPrimaryExpression,ASTPrimaryExpression) in line 99
      24 lines of code
      2 parameters
      4 conditional paths
      uses function findExpressionNames(Node,List< String >) defined in net::sourceforge::pmd::lang::java::rule::basic::BrokenNullCheckRule
   function visit(ASTIfStatement,Object) in line 29
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function checkForViolations(ASTIfStatement,Object,Node) defined in net::sourceforge::pmd::lang::java::rule::basic::BrokenNullCheckRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/CheckResultSetRule.java
module net::sourceforge::pmd::lang::java::rule::basic::CheckResultSetRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getResultSetVariableName(String) in line 78
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable method defined in sample-matlab.m
      uses variable methods defined in net::sourceforge::pmd::lang::java::rule::basic::CheckResultSetRule
   function visit(ASTMethodDeclaration,Object) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable resultSetVariables defined in net::sourceforge::pmd::lang::java::rule::basic::CheckResultSetRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLocalVariableDeclaration,Object) in line 47
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable resultSetVariables defined in net::sourceforge::pmd::lang::java::rule::basic::CheckResultSetRule
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 66
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getResultSetVariableName(String) defined in net::sourceforge::pmd::lang::java::rule::basic::CheckResultSetRule
      uses variable resultSetVariables defined in net::sourceforge::pmd::lang::java::rule::basic::CheckResultSetRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   variable methods in line 32
   variable resultSetVariables in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/CheckSkipResultRule.java
module net::sourceforge::pmd::lang::java::rule::basic::CheckSkipResultRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTVariableDeclaratorId,Object) in line 23
      protection public
      37 lines of code
      2 parameters
      8 conditional paths
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses variable data defined in sample-matlab.m
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getNameForWhichThisIsAQualifier() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/DoubleCheckedLockingRule.java
module net::sourceforge::pmd::lang::java::rule::basic::DoubleCheckedLockingRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function findNonVariableStmt(String,ASTPrimaryExpression,ASTPrimaryExpression) in line 176
      9 lines of code
      3 parameters
      3 conditional paths
      uses function matchName(ASTPrimaryExpression,String) defined in net::sourceforge::pmd::lang::java::rule::basic::DoubleCheckedLockingRule
   function getNameFromPrimaryPrefix(ASTPrimaryPrefix) in line 197
      6 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function ifVerify(ASTIfStatement,String) in line 145
      18 lines of code
      2 parameters
      6 conditional paths
      uses function findNonVariableStmt(String,ASTPrimaryExpression,ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::basic::DoubleCheckedLockingRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function matchName(ASTPrimaryExpression,String) in line 186
      10 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getNameFromPrimaryPrefix(ASTPrimaryPrefix) defined in net::sourceforge::pmd::lang::java::rule::basic::DoubleCheckedLockingRule
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 53
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 61
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 71
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function isVolatile() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 82
      protection public
      62 lines of code
      2 parameters
      16 conditional paths
      uses function getResultType() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isVoid() defined in net::sourceforge::pmd::lang::java::ast::ASTResultType
      uses variable data defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getNameFromPrimaryPrefix(ASTPrimaryPrefix) defined in net::sourceforge::pmd::lang::java::rule::basic::DoubleCheckedLockingRule
      uses function ifVerify(ASTIfStatement,String) defined in net::sourceforge::pmd::lang::java::rule::basic::DoubleCheckedLockingRule
      uses function matchName(ASTPrimaryExpression,String) defined in net::sourceforge::pmd::lang::java::rule::basic::DoubleCheckedLockingRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   variable volatileFields in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/basic/OverrideBothEqualsAndHashcodeRule.java
module net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 28
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
      uses variable implementsComparable defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
      uses variable containsEquals defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
      uses variable containsHashCode defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
      uses variable nodeFound defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTImplementsList,Object) in line 45
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable implementsComparable defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclarator,Object) in line 60
      protection public
      32 lines of code
      2 parameters
      8 conditional paths
      uses variable implementsComparable defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
      uses variable data defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function findChildrenOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable containsHashCode defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
      uses variable nodeFound defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
      uses variable containsEquals defined in net::sourceforge::pmd::lang::java::rule::basic::OverrideBothEqualsAndHashcodeRule
   variable containsEquals in line 21
   variable containsHashCode in line 23
   variable implementsComparable in line 19
   variable nodeFound in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/AbstractNcssCountRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   abstract class
   function countNodeChildren(Node,Object) in line 80
      9 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
   function visit(JavaNode,Object) in line 50
      protection public
      21 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   function visit(ASTForStatement,Object) in line 91
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDoStatement,Object) in line 96
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 101
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
      uses variable hasElse defined in net::sourceforge::pmd::lang::java::ast::ASTIfStatement
   function visit(ASTWhileStatement,Object) in line 113
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBreakStatement,Object) in line 118
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTCatchStatement,Object) in line 123
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTContinueStatement,Object) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTFinallyStatement,Object) in line 133
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 138
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 143
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSynchronizedStatement,Object) in line 148
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTThrowStatement,Object) in line 153
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTStatementExpression,Object) in line 158
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTLabeledStatement,Object) in line 169
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLocalVariableDeclaration,Object) in line 174
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchLabel,Object) in line 191
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function AbstractNcssCountRule(Class<?>) in line 45
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeClass defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
   variable nodeClass in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/AbstractNcssCountRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
   abstract class
   function countNodeChildren(Node,Object) in line 101
      9 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
   function getViolationParameters(DataPoint) in line 209
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(PLSQLNode,Object) in line 54
      protection public
      36 lines of code
      2 parameters
      6 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable data defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable nodeClass defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(ASTForStatement,Object) in line 112
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLoopStatement,Object) in line 117
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 122
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElsifClause,Object) in line 130
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElseClause,Object) in line 138
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 146
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExitStatement,Object) in line 151
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTExceptionHandler,Object) in line 156
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTContinueStatement,Object) in line 161
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTGotoStatement,Object) in line 166
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTReturnStatement,Object) in line 171
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseStatement,Object) in line 176
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTRaiseStatement,Object) in line 181
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTExpression,Object) in line 186
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTLabelledStatement,Object) in line 197
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseWhenClause,Object) in line 204
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function AbstractNcssCountRule(Class<?>) in line 46
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable nodeClass defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
   variable LOGGER in line 36
   variable nodeClass in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/CyclomaticComplexityRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::CyclomaticComplexityRule
   inherits from net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   function visit(ASTIfStatement,Object) in line 23
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   function visit(ASTForStatement,Object) in line 32
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   function visit(ASTDoStatement,Object) in line 41
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   function visit(ASTSwitchStatement,Object) in line 50
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   function visit(ASTWhileStatement,Object) in line 59
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   function visit(ASTConditionalExpression,Object) in line 68
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable isTernary defined in net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/CyclomaticComplexityRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
   function visit(ASTInput,Object) in line 90
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable reportLevel defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable REPORT_LEVEL_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable showClassesComplexity defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable SHOW_CLASSES_COMPLEXITY_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable showMethodsComplexity defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable SHOW_METHODS_COMPLEXITY_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTElsifClause,Object) in line 102
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 115
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExceptionHandler,Object) in line 128
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 137
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLoopStatement,Object) in line 150
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseStatement,Object) in line 163
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function bumpDecisionPoints() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseWhenClause,Object) in line 176
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function bumpDecisionPoints() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 187
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalOrExpression,Object) in line 200
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageSpecification,Object) in line 205
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeSpecification,Object) in line 213
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageBody,Object) in line 221
      protection public
      25 lines of code
      2 parameters
      4 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses function getComplexityAverage() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable showClassesComplexity defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable reportLevel defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTTriggerUnit,Object) in line 248
      protection public
      25 lines of code
      2 parameters
      4 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses function getComplexityAverage() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable showClassesComplexity defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable reportLevel defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTProgramUnit,Object) in line 275
      protection public
      56 lines of code
      2 parameters
      8 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses function getComplexityAverage() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable showMethodsComplexity defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable methodCount defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function bumpDecisionPoints() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable reportLevel defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTTypeMethod,Object) in line 333
      protection public
      49 lines of code
      2 parameters
      8 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses function getComplexityAverage() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable showMethodsComplexity defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable methodCount defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function bumpDecisionPoints() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable reportLevel defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTTriggerTimingPointSection,Object) in line 385
      protection public
      39 lines of code
      2 parameters
      7 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable entryStack defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses function getComplexityAverage() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable showMethodsComplexity defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable methodCount defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function bumpDecisionPoints() defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable reportLevel defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function CyclomaticComplexityRule() in line 83
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable REPORT_LEVEL_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable SHOW_CLASSES_COMPLEXITY_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
      uses variable SHOW_METHODS_COMPLEXITY_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule
   variable CLASS_NAME in line 42
   variable entryStack in line 81
   variable LOGGER in line 41
   variable REPORT_LEVEL_DESCRIPTOR in line 44
      protection public
   variable reportLevel in line 53
   variable SHOW_CLASSES_COMPLEXITY_DESCRIPTOR in line 47
      protection public
   variable SHOW_METHODS_COMPLEXITY_DESCRIPTOR in line 50
      protection public
   variable showClassesComplexity in line 54
   variable showMethodsComplexity in line 55
module net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
   function bumpDecisionPoints() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
   function bumpDecisionPoints(int) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
   function getComplexityAverage() in line 75
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable methodCount defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
   function Entry(Node) in line 63
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CyclomaticComplexityRule::Entry
   variable decisionPoints in line 59
   variable highestDecisionPoints in line 60
      protection public
   variable methodCount in line 61
      protection public
   variable node in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/ExcessiveClassLengthRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::ExcessiveClassLengthRule
   inherits from net::sourceforge::pmd::lang::java::rule::design::ExcessiveLengthRule
   function ExcessiveClassLengthRule() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/ExcessiveMethodLengthRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::ExcessiveMethodLengthRule
   inherits from net::sourceforge::pmd::lang::java::rule::design::ExcessiveLengthRule
   function ExcessiveMethodLengthRule() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/ExcessiveMethodLengthRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::ExcessiveMethodLengthRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
   function ExcessiveMethodLengthRule() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/ExcessiveParameterListRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::ExcessiveParameterListRule
   inherits from net::sourceforge::pmd::lang::java::rule::design::ExcessiveNodeCountRule
   function visit(ASTFormalParameter,Object) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function ExcessiveParameterListRule() in line 18
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/ExcessiveParameterListRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::ExcessiveParameterListRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveNodeCountRule
   function visit(ASTFormalParameter,Object) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function ExcessiveParameterListRule() in line 18
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/ExcessivePublicCountRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::ExcessivePublicCountRule
   inherits from net::sourceforge::pmd::lang::java::rule::design::ExcessiveNodeCountRule
   function getTallyOnAccessType(AccessNode) in line 58
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTMethodDeclarator,Object) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getTallyOnAccessType(AccessNode) defined in net::sourceforge::pmd::lang::java::rule::codesize::ExcessivePublicCountRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTFieldDeclaration,Object) in line 45
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
      uses function getTallyOnAccessType(AccessNode) defined in net::sourceforge::pmd::lang::java::rule::codesize::ExcessivePublicCountRule
   function ExcessivePublicCountRule() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/ModifiedCyclomaticComplexityRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::ModifiedCyclomaticComplexityRule
   inherits from net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   function visit(ASTSwitchStatement,Object) in line 23
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/NcssConstructorCountRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::NcssConstructorCountRule
   inherits from net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
   function getViolationParameters(DataPoint) in line 31
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::stat::DataPoint
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(ASTExplicitConstructorInvocation,Object) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function NcssConstructorCountRule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/NcssMethodCountRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::NcssMethodCountRule
   inherits from net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
   function getViolationParameters(DataPoint) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::stat::DataPoint
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(ASTMethodDeclaration,Object) in line 25
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function NcssMethodCountRule() in line 19
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/NcssMethodCountRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::NcssMethodCountRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
   function getViolationParameters(DataPoint) in line 30
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::stat::DataPoint
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(ExecutableCode,Object) in line 25
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function NcssMethodCountRule() in line 19
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/NcssTypeCountRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::NcssTypeCountRule
   inherits from net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
   function getViolationParameters(DataPoint) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 34
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function isNested() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
   function visit(ASTConstructorDeclaration,Object) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExplicitConstructorInvocation,Object) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function visit(ASTEnumDeclaration,Object) in line 54
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 68
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTInitializer,Object) in line 73
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::codesize::AbstractNcssCountRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 78
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function NcssTypeCountRule() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/StdCyclomaticComplexityRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTCompilationUnit,Object) in line 86
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable reportLevel defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable REPORT_LEVEL_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable showClassesComplexity defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable SHOW_CLASSES_COMPLEXITY_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable showMethodsComplexity defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable SHOW_METHODS_COMPLEXITY_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 95
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTCatchStatement,Object) in line 102
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 109
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTDoStatement,Object) in line 116
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 123
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable isDefault defined in net::sourceforge::pmd::lang::java::ast::ASTSwitchLabel
      uses function bumpDecisionPoints() defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 146
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 153
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 162
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable showClassesComplexity defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses function getComplexityAverage() defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable reportLevel defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTMethodDeclaration,Object) in line 184
      protection public
      31 lines of code
      2 parameters
      6 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses function isSuppressed(Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable methodCount defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses function bumpDecisionPoints() defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable showMethodsComplexity defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable reportLevel defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTEnumDeclaration,Object) in line 217
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses function getComplexityAverage() defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable reportLevel defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTConstructorDeclaration,Object) in line 233
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses variable entryStack defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses function Entry(Node) defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable data defined in sample-matlab.m
      uses function isSuppressed(Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable methodCount defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable highestDecisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable showMethodsComplexity defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable reportLevel defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function StdCyclomaticComplexityRule() in line 79
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable REPORT_LEVEL_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable SHOW_CLASSES_COMPLEXITY_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
      uses variable SHOW_METHODS_COMPLEXITY_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule
   variable entryStack in line 77
   variable REPORT_LEVEL_DESCRIPTOR in line 40
      protection public
   variable reportLevel in line 49
   variable SHOW_CLASSES_COMPLEXITY_DESCRIPTOR in line 43
      protection public
   variable SHOW_METHODS_COMPLEXITY_DESCRIPTOR in line 46
      protection public
   variable showClassesComplexity in line 50
   variable showMethodsComplexity in line 51
module net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
   function bumpDecisionPoints() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
   function bumpDecisionPoints(int) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
   function getComplexityAverage() in line 71
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable methodCount defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
      uses variable decisionPoints defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
   function Entry(Node) in line 59
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::codesize::StdCyclomaticComplexityRule::Entry
   variable decisionPoints in line 55
   variable highestDecisionPoints in line 56
      protection public
   variable methodCount in line 57
      protection public
   variable node in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codesize/TooManyFieldsRule.java
module net::sourceforge::pmd::lang::java::rule::codesize::TooManyFieldsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function bumpCounterFor(ASTClassOrInterfaceDeclaration) in line 64
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable stats defined in net::sourceforge::pmd::lang::java::rule::codesize::TooManyFieldsRule
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
      uses variable nodes defined in net::sourceforge::pmd::lang::java::rule::codesize::TooManyFieldsRule
   function visit(ASTCompilationUnit,Object) in line 36
      protection public
      27 lines of code
      2 parameters
      6 conditional paths
      uses variable MAX_FIELDS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::codesize::TooManyFieldsRule
      uses variable stats defined in net::sourceforge::pmd::lang::java::rule::codesize::TooManyFieldsRule
      uses variable nodes defined in net::sourceforge::pmd::lang::java::rule::codesize::TooManyFieldsRule
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses function bumpCounterFor(ASTClassOrInterfaceDeclaration) defined in net::sourceforge::pmd::lang::java::rule::codesize::TooManyFieldsRule
      uses variable k defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function TooManyFieldsRule() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable MAX_FIELDS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::codesize::TooManyFieldsRule
   variable DEFAULT_MAXFIELDS in line 21
   variable MAX_FIELDS_DESCRIPTOR in line 26
   variable nodes in line 24
   variable stats in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/TooManyFieldsRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
   function bumpCounterFor(PLSQLNode) in line 83
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable stats defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
      uses variable nodes defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
   function visit(ASTInput,Object) in line 35
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable stats defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses variable nodes defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageSpecification,Object) in line 44
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable MAX_FIELDS_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses function bumpCounterFor(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses variable k defined in sample-matlab.m
      uses variable stats defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses variable nodes defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeSpecification,Object) in line 64
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable MAX_FIELDS_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses function bumpCounterFor(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses variable k defined in sample-matlab.m
      uses variable stats defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses variable nodes defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function TooManyFieldsRule() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable MAX_FIELDS_DESCRIPTOR defined in net::sourceforge::pmd::lang::plsql::rule::codesize::TooManyFieldsRule
   variable DEFAULT_MAXFIELDS in line 22
   variable MAX_FIELDS_DESCRIPTOR in line 27
   variable nodes in line 25
   variable stats in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/comments/AbstractCommentRule.java
module net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   abstract class
   function addDeclarations(SortedMap< Integer, Node >,List<?extends Node >) in line 222
      5 lines of code
      2 parameters
      2 conditional paths
   function assignCommentsToDeclarations(ASTCompilationUnit) in line 154
      26 lines of code
      1 parameters
      6 conditional paths
      uses function orderedCommentsAndDeclarations(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
      uses function isCommentNotWithin(FormalComment,Node,Node) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
      uses function isCommentBefore(FormalComment,Node) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
      uses function comment(Comment) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function asSingleString(List< String >) in line 84
      12 lines of code
      1 parameters
      3 conditional paths
   function filteredCommentIn(Comment) in line 58
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function singleLineIn(String) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
      uses function multiLinesIn(String) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
      uses function formalLinesIn(String) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   function formalLinesIn(String) in line 127
      26 lines of code
      1 parameters
      5 conditional paths
      uses function asSingleString(List< String >) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   function isCommentBefore(FormalComment,Node) in line 192
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
   function isCommentNotWithin(FormalComment,Node,Node) in line 181
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getEndColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function multiLinesIn(String) in line 97
      29 lines of code
      1 parameters
      5 conditional paths
      uses function end(RuleContext) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function start(RuleContext) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function asSingleString(List< String >) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   function orderedCommentsAndDeclarations(ASTCompilationUnit) in line 197
      24 lines of code
      1 parameters
      1 conditional paths
      uses function addDeclarations(SortedMap< Integer, Node >,List<?extends Node >) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
      uses function getComments() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   function singleLineIn(String) in line 75
      8 lines of code
      1 parameters
      2 conditional paths
   function tagsIndicesIn(String) in line 39
      18 lines of code
      1 parameters
      3 conditional paths
   function AbstractCommentRule() in line 36
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/comments/CodeInCommentsRule.java
module net::sourceforge::pmd::lang::java::rule::comments::CodeInCommentsRule
   inherits from net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/comments/CommentContentRule.java
module net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
   inherits from net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   function dysfunctionReason() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasDissallowedTerms() defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
   function end(RuleContext) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function errorMsgFor(List< String >) in line 119
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function hasDissallowedTerms() in line 154
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable DISSALLOWED_TERMS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
   function ignoredProperties() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable WORDS_ARE_REGEX_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable NON_REGEX_PROPERTIES defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
   function illegalTermsIn(Comment) in line 93
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable currentBadWords defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses function filteredCommentIn(Comment) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
      uses variable caseSensitive defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable originalBadWords defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
   function start(RuleContext) in line 66
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable wordsAreRegex defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable WORDS_ARE_REGEX_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable originalBadWords defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable DISSALLOWED_TERMS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable caseSensitive defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable CASE_SENSITIVE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable currentBadWords defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
   function visit(ASTCompilationUnit,Object) in line 135
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable currentBadWords defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses function start(RuleContext) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses function getComments() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
      uses function illegalTermsIn(Comment) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function errorMsgFor(List< String >) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
   function CommentContentRule() in line 56
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable WORDS_ARE_REGEX_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable CASE_SENSITIVE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
      uses variable DISSALLOWED_TERMS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentContentRule
   variable BAD_WORDS in line 38
   variable CASE_SENSITIVE_DESCRIPTOR in line 44
      protection public
   variable caseSensitive in line 32
   variable currentBadWords in line 35
   variable DISSALLOWED_TERMS_DESCRIPTOR in line 47
      protection public
   variable NON_REGEX_PROPERTIES in line 50
   variable originalBadWords in line 34
   variable WORDS_ARE_REGEX_DESCRIPTOR in line 40
      protection public
   variable wordsAreRegex in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/comments/CommentRequiredRule.java
module net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
   inherits from net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   function allCommentsAreIgnored() in line 225
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable HEADER_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable FIELD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable PUB_METHOD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable PROT_METHOD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
   function checkComment(AbstractJavaAccessNode,Object) in line 120
      44 lines of code
      2 parameters
      11 conditional paths
      uses function getCommentRequirement(String) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable PUB_METHOD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable PROT_METHOD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function comment(Comment) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isProtected() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function dysfunctionReason() in line 237
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function allCommentsAreIgnored() defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
   function getCommentRequirement(String) in line 70
      11 lines of code
      1 parameters
      4 conditional paths
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 83
      protection public
      24 lines of code
      2 parameters
      5 conditional paths
      uses function getCommentRequirement(String) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable HEADER_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses function comment(Comment) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTConstructorDeclaration,Object) in line 109
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkComment(AbstractJavaAccessNode,Object) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 115
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkComment(AbstractJavaAccessNode,Object) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 166
      protection public
      24 lines of code
      2 parameters
      5 conditional paths
      uses function getCommentRequirement(String) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable FIELD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses function comment(Comment) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTEnumDeclaration,Object) in line 192
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses function getCommentRequirement(String) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable ENUM_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses function comment(Comment) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTCompilationUnit,Object) in line 219
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function assignCommentsToDeclarations(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
      uses variable data defined in sample-matlab.m
   function CommentRequiredRule() in line 62
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable HEADER_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable FIELD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable PUB_METHOD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable PROT_METHOD_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
      uses variable ENUM_CMT_REQUIREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule
   variable ENUM_CMT_REQUIREMENT_DESCRIPTOR in line 58
      protection public
   variable FIELD_CMT_REQUIREMENT_DESCRIPTOR in line 46
      protection public
   variable HEADER_CMT_REQUIREMENT_DESCRIPTOR in line 42
      protection public
   variable PROT_METHOD_CMT_REQUIREMENT_DESCRIPTOR in line 54
      protection public
   variable PUB_METHOD_CMT_REQUIREMENT_DESCRIPTOR in line 50
      protection public
module net::sourceforge::pmd::lang::java::rule::comments::CommentRequiredRule::CommentRequirement
   function labels() in line 32
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function CommentRequirement(String) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable Ignored in line 24
      protection public
   variable label in line 26
   variable Required in line 24
      protection public
   variable Unwanted in line 24
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/comments/CommentSizeRule.java
module net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
   inherits from net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   function hasRealText(String) in line 32
      8 lines of code
      1 parameters
      2 conditional paths
   function hasTooManyLines(Comment) in line 41
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable CR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
      uses function start(RuleContext) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function hasRealText(String) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
      uses function end(RuleContext) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable MAX_LINES defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
   function overLengthLineIndicesIn(Comment) in line 69
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable MAX_LINE_LENGTH defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable CR defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function withoutCommentMarkup(String) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
   function visit(ASTCompilationUnit,Object) in line 89
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses function getComments() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
      uses function hasTooManyLines(Comment) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function overLengthLineIndicesIn(Comment) defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
   function withoutCommentMarkup(String) in line 64
      4 lines of code
      1 parameters
      1 conditional paths
   function CommentSizeRule() in line 27
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable MAX_LINES defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
      uses variable MAX_LINE_LENGTH defined in net::sourceforge::pmd::lang::java::rule::comments::CommentSizeRule
   variable CR in line 25
   variable MAX_LINE_LENGTH in line 22
      protection public
   variable MAX_LINES in line 21
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/comments/HeaderCommentsRule.java
module net::sourceforge::pmd::lang::java::rule::comments::HeaderCommentsRule
   inherits from net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   function visit(ASTCompilationUnit,Object) in line 64
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function HeaderCommentsRule() in line 57
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable REQUIRED_TERMS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::HeaderCommentsRule
      uses variable REQUIRED_TAGS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::HeaderCommentsRule
      uses variable HEADER_PLACEMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::comments::HeaderCommentsRule
   variable HEADER_PLACEMENT_DESCRIPTOR in line 49
      protection public
   variable REQUIRED_TAGS in line 19
   variable REQUIRED_TAGS_DESCRIPTOR in line 24
      protection public
   variable REQUIRED_TERMS_DESCRIPTOR in line 21
      protection public
   variable REQUIRED_WORKDS in line 18
module net::sourceforge::pmd::lang::java::rule::comments::HeaderCommentsRule::RequiredHeaderPlacement
   function labels() in line 39
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function RequiredHeaderPlacement(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable Anywhere in line 31
      protection public
   variable BeforeImportStatements in line 29
      protection public
   variable BeforePackageDeclaration in line 28
      protection public
   variable BeforeTypeDeclaration in line 30
      protection public
   variable label in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/comments/JavadocRule.java
module net::sourceforge::pmd::lang::java::rule::comments::JavadocRule
   inherits from net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/controversial/AssignmentInOperandRule.java
module net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function allowsAllAssignments() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable ALLOW_IF_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses variable ALLOW_FOR_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses variable ALLOW_WHILE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses variable ALLOW_INCREMENT_DECREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
   function dysfunctionReason() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function allowsAllAssignments() defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
   function visit(ASTExpression,Object) in line 47
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ALLOW_IF_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses variable ALLOW_WHILE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable ALLOW_FOR_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ALLOW_INCREMENT_DECREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses function hasDecendantOfAnyType(Class<?>...) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function AssignmentInOperandRule() in line 39
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable ALLOW_IF_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses variable ALLOW_FOR_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses variable ALLOW_WHILE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
      uses variable ALLOW_INCREMENT_DECREMENT_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::AssignmentInOperandRule
   variable ALLOW_FOR_DESCRIPTOR in line 28
   variable ALLOW_IF_DESCRIPTOR in line 25
   variable ALLOW_INCREMENT_DECREMENT_DESCRIPTOR in line 34
   variable ALLOW_WHILE_DESCRIPTOR in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/controversial/DaaRuleViolation.java
module net::sourceforge::pmd::lang::java::rule::controversial::DaaRuleViolation
   inherits from net::sourceforge::pmd::lang::java::rule::JavaRuleViolation
   function getType() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::java::rule::controversial::DaaRuleViolation
   function getVariableName() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable variableName defined in net::sourceforge::pmd::lang::java::rule::controversial::DaaRuleViolation
   function DaaRuleViolation(Rule,RuleContext,Node,String,String,String,int,int) in line 24
      protection public
      6 lines of code
      8 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function setLines(int,int) defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses variable beginLine defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses variable endLine defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses variable type defined in net::sourceforge::pmd::lang::java::rule::controversial::DaaRuleViolation
   variable type in line 22
   variable variableName in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/controversial/DataflowAnomalyAnalysisRule.java
module net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   inherits from net::sourceforge::pmd::lang::dfa::pathfinder::Executable
   function addDaaViolation(Object,Node,String,String,int,int) in line 134
      13 lines of code
      6 parameters
      3 conditional paths
      uses function maxNumberOfViolationsReached() defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses function violationAlreadyExists(String,String,int,int) defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
      uses variable data defined in sample-matlab.m
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses variable daaRuleViolations defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable currentRuleViolationCount defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
   function checkVariableAccess(DataFlowNode,VariableAccess,final Usage) in line 114
      16 lines of code
      3 parameters
      4 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function accessTypeMatches(int) defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses variable accessType defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
      uses function isDefinition() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function addDaaViolation(Object,Node,String,String,int,int) defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable rc defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses function getVariableName() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses variable UNDEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function isReference() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses variable DEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function isUndefinition() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function execute(CurrentPath) in line 83
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses function maxNumberOfViolationsReached() defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses function iterator() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function getVariableAccess() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function checkVariableAccess(DataFlowNode,VariableAccess,final Usage) defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses function Usage(int,DataFlowNode) defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
   function maxNumberOfViolationsReached() in line 154
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentRuleViolationCount defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable maxRuleViolations defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
   function violationAlreadyExists(String,String,int,int) in line 168
      9 lines of code
      4 parameters
      3 conditional paths
      uses variable daaRuleViolations defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 64
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable maxRuleViolations defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable MAX_VIOLATIONS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable currentRuleViolationCount defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 70
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses variable rc defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable data defined in sample-matlab.m
      uses variable daaRuleViolations defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable MAX_PATH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses function run() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   function DataflowAnomalyAnalysisRule() in line 59
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable MAX_PATH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
      uses variable MAX_VIOLATIONS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule
   variable currentRuleViolationCount in line 35
   variable daaRuleViolations in line 33
   variable MAX_PATH_DESCRIPTOR in line 37
   variable MAX_VIOLATIONS_DESCRIPTOR in line 42
   variable maxRuleViolations in line 34
   variable rc in line 32
module net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
   function toString() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessType defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function Usage(int,DataFlowNode) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable accessType defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::controversial::DataflowAnomalyAnalysisRule::Usage
   variable accessType in line 46
      protection public
   variable node in line 47
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/controversial/DontImportSunRule.java
module net::sourceforge::pmd::lang::java::rule::controversial::DontImportSunRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTImportDeclaration,Object) in line 11
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/controversial/NullAssignmentRule.java
module net::sourceforge::pmd::lang::java::rule::controversial::NullAssignmentRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isAssignmentToFinalField(ASTStatementExpression) in line 50
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isBadTernary(ASTConditionalExpression) in line 57
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTernary defined in net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTNullLiteral,Object) in line 23
      protection public
      26 lines of code
      2 parameters
      8 conditional paths
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isAssignmentToFinalField(ASTStatementExpression) defined in net::sourceforge::pmd::lang::java::rule::controversial::NullAssignmentRule
      uses variable data defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function isBadTernary(ASTConditionalExpression) defined in net::sourceforge::pmd::lang::java::rule::controversial::NullAssignmentRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/controversial/OnlyOneReturnRule.java
module net::sourceforge::pmd::lang::java::rule::controversial::OnlyOneReturnRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function filterLambdaExpressions(List< ASTReturnStatement >) in line 58
      9 lines of code
      1 parameters
      3 conditional paths
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 20
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 28
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses variable data defined in sample-matlab.m
      uses function filterLambdaExpressions(List< ASTReturnStatement >) defined in net::sourceforge::pmd::lang::java::rule::controversial::OnlyOneReturnRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/controversial/SuspiciousOctalEscapeRule.java
module net::sourceforge::pmd::lang::java::rule::controversial::SuspiciousOctalEscapeRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isDecimal(char) in line 78
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
   function isOctal(char) in line 74
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
   function visit(ASTLiteral,Object) in line 12
      protection public
      61 lines of code
      2 parameters
      14 conditional paths
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isOctal(char) defined in net::sourceforge::pmd::lang::java::rule::controversial::SuspiciousOctalEscapeRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function isDecimal(char) defined in net::sourceforge::pmd::lang::java::rule::controversial::SuspiciousOctalEscapeRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/coupling/CouplingBetweenObjectsRule.java
module net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkVariableType(Node,String) in line 133
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getParentsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getClassName() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function filterTypes(String) defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses variable couplingCount defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses variable typesFoundSoFar defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
   function filterPrimitivesAndWrappers(String) in line 162
      12 lines of code
      1 parameters
      1 conditional paths
   function filterTypes(String) in line 154
      3 lines of code
      1 parameters
      1 conditional paths
      uses function filterPrimitivesAndWrappers(String) defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
   function handleASTTypeChildren(Node) in line 117
      9 lines of code
      1 parameters
      3 conditional paths
      uses function x(K+) defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function checkVariableType(Node,String) defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTCompilationUnit,Object) in line 48
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable typesFoundSoFar defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses variable couplingCount defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses function childrenAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses variable data defined in sample-matlab.m
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 62
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTResultType,Object) in line 70
      protection public
      16 lines of code
      2 parameters
      5 conditional paths
      uses function x(K+) defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function checkVariableType(Node,String) defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
   function visit(ASTLocalVariableDeclaration,Object) in line 88
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function handleASTTypeChildren(Node) defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameter,Object) in line 94
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function handleASTTypeChildren(Node) defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 100
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function x(K+) defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function checkVariableType(Node,String) defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
   function CouplingBetweenObjectsRule() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingBetweenObjectsRule
   variable couplingCount in line 36
   variable THRESHOLD_DESCRIPTOR in line 39
   variable typesFoundSoFar in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/coupling/ExcessiveImportsRule.java
module net::sourceforge::pmd::lang::java::rule::coupling::ExcessiveImportsRule
   inherits from net::sourceforge::pmd::lang::java::rule::design::ExcessiveNodeCountRule
   function visit(ASTImportDeclaration,Object) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function ExcessiveImportsRule() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/coupling/LawOfDemeterRule.java
module net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function addViolations(List< MethodCall >,RuleContext) in line 67
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable method defined in sample-matlab.m
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTMethodDeclaration,Object) in line 58
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function createMethodCalls(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function addViolations(List< MethodCall >,RuleContext) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule
      uses variable data defined in sample-matlab.m
   variable REASON_METHOD_CHAIN_CALLS in line 49
   variable REASON_OBJECT_NOT_CREATED_LOCALLY in line 50
   variable REASON_STATIC_ACCESS in line 51
module net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function analyze(ASTPrimaryPrefix) in line 198
      26 lines of code
      1 parameters
      5 conditional paths
      uses variable baseName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable methodName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable THIS defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses variable usesSuperModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses variable SUPER defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function analyze(ASTPrimarySuffix) in line 225
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable baseName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable METHOD_CALL_CHAIN defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable methodName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function checkViolation() in line 230
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable violation defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable violationReason defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable SCOPE_LOCAL defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseScope defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function determineLastAssignment() defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable allocation defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::Assignment
      uses variable iterator defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::Assignment
      uses variable forLoop defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::Assignment
      uses variable REASON_OBJECT_NOT_CREATED_LOCALLY defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule
      uses variable SCOPE_METHOD_CHAINING defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable REASON_METHOD_CHAIN_CALLS defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule
      uses variable SCOPE_STATIC_CHAIN defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable REASON_STATIC_ACCESS defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule
   function createMethodCalls(ASTPrimaryExpression) in line 128
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function isNotAConstructorCall(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function isNotLiteral(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function hasSuffixesWithArguments(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function MethodCall(ASTPrimaryExpression,ASTPrimaryPrefix) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function isNotBuilder() defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function findSuffixesWithoutArguments(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function determineLastAssignment() in line 308
      32 lines of code
      0 parameters
      6 conditional paths
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable baseName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function isIterator() defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function isFactory(ASTVariableDeclarator) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function isForLoop(ASTVariableDeclarator) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable SIMPLE_ASSIGNMENT_OPERATOR defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function determineType() in line 252
      33 lines of code
      0 parameters
      8 conditional paths
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses variable baseScope defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable SCOPE_LOCAL defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function findInLocalScope(String,Scope) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable SCOPE_METHOD defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function determineTypeOfVariable(String,Set< VariableNameDeclaration >) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable SCOPE_CLASS defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable SCOPE_METHOD_CHAINING defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable THIS defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable SUPER defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseTypeName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseType defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable METHOD_CALL_CHAIN defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable SCOPE_STATIC_CHAIN defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function determineTypeOfVariable(String,Set< VariableNameDeclaration >) in line 297
      10 lines of code
      2 parameters
      3 conditional paths
   function findInLocalScope(String,Scope) in line 286
      10 lines of code
      2 parameters
      2 conditional paths
      uses function determineTypeOfVariable(String,Set< VariableNameDeclaration >) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getParent() defined in net::sourceforge::pmd::lang::symboltable::Scope
   function findSuffixesWithoutArguments(ASTPrimaryExpression) in line 166
      12 lines of code
      1 parameters
      4 conditional paths
      uses function hasRealPrefix(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function getExpression() in line 364
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function getViolationReason() in line 372
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violationReason defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function hasRealPrefix(ASTPrimaryExpression) in line 179
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses variable usesSuperModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
   function hasSuffixesWithArguments(ASTPrimaryExpression) in line 184
      13 lines of code
      1 parameters
      4 conditional paths
      uses function hasRealPrefix(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function isFactory(ASTVariableDeclarator) in line 349
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isForLoop(ASTVariableDeclarator) in line 360
      3 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function isIterator() in line 341
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable baseType defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseTypeName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function isNotAConstructorCall(ASTPrimaryExpression) in line 147
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isNotBuilder() in line 159
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable baseType defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseTypeName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function isNotLiteral(ASTPrimaryExpression) in line 151
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isViolation() in line 368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable violation defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function toString() in line 377
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable baseName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable methodName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseTypeName defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseType defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable baseScope defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable violation defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses variable violationReason defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function MethodCall(ASTPrimaryExpression,ASTPrimaryPrefix) in line 103
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function analyze(ASTPrimaryPrefix) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function determineType() defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function checkViolation() defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   function MethodCall(ASTPrimaryExpression,ASTPrimarySuffix) in line 114
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable expression defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function analyze(ASTPrimaryPrefix) defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function determineType() defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
      uses function checkViolation() defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::MethodCall
   variable baseName in line 92
   variable baseScope in line 94
   variable baseType in line 96
   variable baseTypeName in line 95
   variable expression in line 91
   variable METHOD_CALL_CHAIN in line 81
   variable methodName in line 93
   variable SCOPE_CLASS in line 84
   variable SCOPE_LOCAL in line 86
   variable SCOPE_METHOD in line 85
   variable SCOPE_METHOD_CHAINING in line 83
   variable SCOPE_STATIC_CHAIN in line 87
   variable SIMPLE_ASSIGNMENT_OPERATOR in line 82
   variable SUPER in line 88
   variable THIS in line 89
   variable violation in line 97
   variable violationReason in line 98
module net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::Assignment
   inherits from Comparable
   function compareTo(Assignment) in line 411
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable line defined in net::sourceforge::pmd::lang::java::rule::coupling::LawOfDemeterRule::Assignment
   function toString() in line 406
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function Assignment(int,boolean,boolean,boolean) in line 398
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
   variable allocation in line 394
   variable forLoop in line 396
   variable iterator in line 395
   variable line in line 393
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/coupling/LooseCouplingRule.java
module net::sourceforge::pmd::lang::java::rule::coupling::LooseCouplingRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function methodHasOverride(Node) in line 40
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable method defined in sample-matlab.m
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTClassOrInterfaceType,Object) in line 28
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function methodHasOverride(Node) defined in net::sourceforge::pmd::lang::java::rule::coupling::LooseCouplingRule
      uses variable data defined in sample-matlab.m
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/coupling/LoosePackageCouplingRule.java
module net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checksNothing() in line 132
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable PACKAGES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
      uses variable CLASSES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
   function dysfunctionReason() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checksNothing() defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
   function getRestrictedPackages() in line 111
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable restrictedPackages defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
   function isAllowedClass(ASTImportDeclaration) in line 121
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable CLASSES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
   function isContainingPackage(String,String) in line 116
      4 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTCompilationUnit,Object) in line 62
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses variable PACKAGES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
      uses variable restrictedPackages defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageDeclaration,Object) in line 74
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getPackageNameImage() defined in net::sourceforge::pmd::lang::java::ast::ASTPackageDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 80
      protection public
      30 lines of code
      2 parameters
      6 conditional paths
      uses function getPackageName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses function getRestrictedPackages() defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
      uses function isContainingPackage(String,String) defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
      uses variable thisPackage defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
      uses variable isImportOnDemand defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses function isAllowedClass(ASTImportDeclaration) defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
   function LoosePackageCouplingRule() in line 52
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable PACKAGES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
      uses variable CLASSES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::coupling::LoosePackageCouplingRule
      uses function addRuleChainVisit(Class<?extends Node >) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   variable CLASSES_DESCRIPTOR in line 43
      protection public
   variable PACKAGES_DESCRIPTOR in line 40
      protection public
   variable restrictedPackages in line 50
   variable thisPackage in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/AccessorClassGenerationRule.java
module net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getClassID() in line 295
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classID defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
   function getCurrentClassData() in line 280
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable classID defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses variable classDataList defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
   function processRule(Object) in line 252
      27 lines of code
      1 parameters
      7 conditional paths
      uses variable classDataList defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses function getName() defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::AllocData
      uses function getParameterCount() defined in net::sourceforge::pmd::lang::java::ast::ASTConstructorDeclaration
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::AllocData
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getASTAllocationExpression() defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::AllocData
   function setClassID(int) in line 291
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classID defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
   function stripString(String,String) in line 309
      11 lines of code
      2 parameters
      2 conditional paths
   function visit(ASTEnumDeclaration,Object) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 45
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable classDataList defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses variable packageName defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 158
      protection public
      68 lines of code
      2 parameters
      8 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getClassID() defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses function setClassID(int) defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses variable classDataList defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses function ClassData(String) defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
      uses function getClassName() defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
      uses variable data defined in sample-matlab.m
      uses function processRule(Object) defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses variable className defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
      uses function addClassQualifyingName(String) defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function visit(ASTConstructorDeclaration,Object) in line 230
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function getCurrentClassData() defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses function addConstructor(ASTConstructorDeclaration) defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
      uses variable data defined in sample-matlab.m
   function visit(ASTAllocationExpression,Object) in line 237
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable classID defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses function getCurrentClassData() defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses variable data defined in sample-matlab.m
      uses variable packageName defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses function getClassQualifyingNamesList() defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
      uses variable isArray defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::AllocData
      uses function addInstantiation(AllocData) defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   variable classDataList in line 37
   variable classID in line 38
   variable packageName in line 39
module net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   function addClassQualifyingName(String) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classQualifyingNames defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function addConstructor(ASTConstructorDeclaration) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable privateConstructors defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   function addInstantiation(AllocData) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instantiations defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   function getClassName() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   function getClassQualifyingNamesList() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classQualifyingNames defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   function getInstantiationIterator() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instantiations defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   function getPrivateConstructorIterator() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable privateConstructors defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   function ClassData(String) in line 60
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   variable className in line 52
   variable classQualifyingNames in line 58
   variable instantiations in line 54
   variable privateConstructors in line 53
module net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::AllocData
   function getArgumentCount() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getASTAllocationExpression() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isArray() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AllocData(ASTAllocationExpression,String,List< String >) in line 102
      protection public
      35 lines of code
      3 parameters
      6 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::ast::ASTArguments
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function stripString(String,String) defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule
      uses variable classQualifyingNames defined in net::sourceforge::pmd::lang::java::rule::design::AccessorClassGenerationRule::ClassData
   variable allocationExpression in line 99
   variable argumentCount in line 98
   variable isArray in line 100
   variable name in line 97
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/AssignmentToNonFinalStaticRule.java
module net::sourceforge::pmd::lang::java::rule::design::AssignmentToNonFinalStaticRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function initializedInConstructor(List< NameOccurrence >) in line 41
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 25
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function initializedInConstructor(List< NameOccurrence >) defined in net::sourceforge::pmd::lang::java::rule::design::AssignmentToNonFinalStaticRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/AvoidDeeplyNestedIfStmtsRule.java
module net::sourceforge::pmd::lang::java::rule::design::AvoidDeeplyNestedIfStmtsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTCompilationUnit,Object) in line 28
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable depth defined in net::sourceforge::pmd::lang::java::rule::design::AvoidDeeplyNestedIfStmtsRule
      uses variable depthLimit defined in net::sourceforge::pmd::lang::java::rule::design::AvoidDeeplyNestedIfStmtsRule
      uses variable PROBLEM_DEPTH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::AvoidDeeplyNestedIfStmtsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 34
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable hasElse defined in net::sourceforge::pmd::lang::java::ast::ASTIfStatement
      uses variable depth defined in net::sourceforge::pmd::lang::java::rule::design::AvoidDeeplyNestedIfStmtsRule
      uses variable data defined in sample-matlab.m
      uses variable depthLimit defined in net::sourceforge::pmd::lang::java::rule::design::AvoidDeeplyNestedIfStmtsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function AvoidDeeplyNestedIfStmtsRule() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable PROBLEM_DEPTH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::AvoidDeeplyNestedIfStmtsRule
   variable depth in line 13
   variable depthLimit in line 14
   variable PROBLEM_DEPTH_DESCRIPTOR in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/basic/AvoidDeeplyNestedIfStmtsRule.java
module net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function handleIf(AbstractVmNode,Object) in line 45
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable depth defined in net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
      uses variable data defined in sample-matlab.m
      uses variable depthLimit defined in net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTprocess,Object) in line 30
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable depth defined in net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
      uses variable depthLimit defined in net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
      uses variable PROBLEM_DEPTH_DESCRIPTOR defined in net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function handleIf(AbstractVmNode,Object) defined in net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElseIfStatement,Object) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function handleIf(AbstractVmNode,Object) defined in net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
      uses variable data defined in sample-matlab.m
   function AvoidDeeplyNestedIfStmtsRule() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable PROBLEM_DEPTH_DESCRIPTOR defined in net::sourceforge::pmd::lang::vm::rule::basic::AvoidDeeplyNestedIfStmtsRule
   variable depth in line 15
   variable depthLimit in line 16
   variable PROBLEM_DEPTH_DESCRIPTOR in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/AvoidReassigningParametersRule.java
module net::sourceforge::pmd::lang::java::rule::design::AvoidReassigningParametersRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function lookForViolation(Map< VariableNameDeclaration, List< NameOccurrence >>,Object) in line 26
      18 lines of code
      2 parameters
      4 conditional paths
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isSelfAssignment() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getNameForWhichThisIsAQualifier() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function useThisOrSuper() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isVarargs() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function isArray() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function visit(ASTMethodDeclarator,Object) in line 19
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function lookForViolation(Map< VariableNameDeclaration, List< NameOccurrence >>,Object) defined in net::sourceforge::pmd::lang::java::rule::design::AvoidReassigningParametersRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConstructorDeclaration,Object) in line 46
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function lookForViolation(Map< VariableNameDeclaration, List< NameOccurrence >>,Object) defined in net::sourceforge::pmd::lang::java::rule::design::AvoidReassigningParametersRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/basic/AvoidReassigningParametersRule.java
module net::sourceforge::pmd::lang::vm::rule::basic::AvoidReassigningParametersRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function visit(final ASTDirective,final Object) in line 18
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getDirectiveName() defined in net::sourceforge::pmd::lang::vm::ast::ASTDirective
      uses function getFirstToken() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/CloseResourceRule.java
module net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkForResources(Node,Object) in line 108
      28 lines of code
      2 parameters
      6 conditional paths
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses variable types defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable simpleTypes defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses function toSimpleType(String) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function x(K+) defined in sample-matlab.m
      uses function ensureClosed(ASTLocalVariableDeclaration,ASTVariableDeclaratorId,Object) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable data defined in sample-matlab.m
   function ensureClosed(ASTLocalVariableDeclaration,ASTVariableDeclaratorId,Object) in line 151
      161 lines of code
      3 parameters
      31 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable t defined in sample-matlab.m
      uses function hasNullInitializer(ASTLocalVariableDeclaration) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function findChildrenOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable f defined in sample-matlab.m
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable closeTargets defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses function nullCheckIfCondition(ASTBlock,Node,String) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function variableIsPassedToMethod(ASTPrimaryExpression,String) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function findIfStatement(ASTBlock,Node) in line 328
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function hasNullInitializer(ASTLocalVariableDeclaration) in line 137
      13 lines of code
      1 parameters
      3 conditional paths
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable e defined in sample-matlab.m
   function nullCheckIfCondition(ASTBlock,Node,String) in line 350
      15 lines of code
      3 parameters
      3 conditional paths
      uses function findIfStatement(ASTBlock,Node) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable e defined in sample-matlab.m
   function toSimpleType(String) in line 87
      8 lines of code
      1 parameters
      2 conditional paths
   function variableIsPassedToMethod(ASTPrimaryExpression,String) in line 313
      14 lines of code
      2 parameters
      3 conditional paths
   function visit(ASTCompilationUnit,Object) in line 72
      protection public
      14 lines of code
      2 parameters
      5 conditional paths
      uses variable closeTargets defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable CLOSE_TARGETS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable types defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable TYPES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable simpleTypes defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses function toSimpleType(String) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConstructorDeclaration,Object) in line 97
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkForResources(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 103
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkForResources(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable data defined in sample-matlab.m
   function CloseResourceRule() in line 66
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable CLOSE_TARGETS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
      uses variable TYPES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::CloseResourceRule
   variable CLOSE_TARGETS_DESCRIPTOR in line 60
   variable closeTargets in line 59
   variable simpleTypes in line 57
   variable types in line 56
   variable TYPES_DESCRIPTOR in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/CompareObjectsWithEqualsRule.java
module net::sourceforge::pmd::lang::java::rule::design::CompareObjectsWithEqualsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function hasName(Node) in line 19
      3 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isAllocation(Node) in line 30
      4 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function isPartOfQualifiedName(Node) in line 103
      4 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function findChildrenOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTEqualityExpression,Object) in line 35
      protection public
      59 lines of code
      2 parameters
      10 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isAllocation(Node) defined in net::sourceforge::pmd::lang::java::rule::design::CompareObjectsWithEqualsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function hasName(Node) defined in net::sourceforge::pmd::lang::java::rule::design::CompareObjectsWithEqualsRule
      uses function isPartOfQualifiedName(Node) defined in net::sourceforge::pmd::lang::java::rule::design::CompareObjectsWithEqualsRule
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTName
      uses function isArray() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function isReferenceType() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ConfusingTernaryRule.java
module net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isConditionalWithAllMatches(Node) in line 107
      19 lines of code
      1 parameters
      5 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isMatch(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
   function isMatch(Node) in line 92
      4 lines of code
      1 parameters
      1 conditional paths
      uses function isUnaryNot(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
      uses function isNotEquals(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
      uses function isConditionalWithAllMatches(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
      uses function isParenthesisAroundMatch(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
   function isNotEquals(Node) in line 102
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function isParenthesisAroundMatch(Node) in line 127
      17 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isMatch(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
   function isUnaryNot(Node) in line 97
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTIfStatement,Object) in line 61
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isMatch(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
      uses variable ignoreElseIfProperty defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 80
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isMatch(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function ConfusingTernaryRule() in line 56
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable ignoreElseIfProperty defined in net::sourceforge::pmd::lang::java::rule::design::ConfusingTernaryRule
   variable ignoreElseIfProperty in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ConstructorCallsOverridableMethodRule.java
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function addCalledMethodsOfNode(Node,List< MethodInvocation >,String) in line 848
      5 lines of code
      3 parameters
      1 conditional paths
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function addCalledMethodsOfNodeImpl(List< ASTPrimaryExpression >,List< MethodInvocation >,String) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   function addCalledMethodsOfNodeImpl(List< ASTPrimaryExpression >,List< MethodInvocation >,String) in line 854
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable ape defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function findMethod(ASTPrimaryExpression,String) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   function clearEvalPackages() in line 577
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable evalPackages defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   function compareNodes(Node,Node) in line 500
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
   function evaluateDangerOfConstructors1(Map< ConstructorHolder, List< MethodInvocation >>,Set< MethodHolder >) in line 687
      30 lines of code
      2 parameters
      7 conditional paths
      uses function isDangerous() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorHolder
      uses function getName() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getMethodDeclaratorParameterTypes(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function getArgumentTypes() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function setDangerous(boolean) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorHolder
   function evaluateDangerOfConstructors2(Map< ConstructorHolder, List< MethodInvocation >>) in line 727
      26 lines of code
      1 parameters
      6 conditional paths
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorInvocation
      uses function isDangerous() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorHolder
      uses function getASTConstructorDeclaration() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorHolder
      uses function getParameterCount() defined in net::sourceforge::pmd::lang::java::ast::ASTConstructorDeclaration
      uses function getMethodDeclaratorParameterTypes(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function getArgumentTypes() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorInvocation
   function evaluateDangerOfMethods(Map< MethodHolder, List< MethodInvocation >>) in line 651
      29 lines of code
      1 parameters
      6 conditional paths
      uses function isDangerous() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodHolder
      uses function getMethodDeclaratorParameterTypes(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function getName() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getArgumentTypes() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function setDangerous() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodHolder
      uses function setCalledMethod(String) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodHolder
   function findMethod(ASTPrimaryExpression,String) in line 870
      32 lines of code
      2 parameters
      7 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getMethod(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getReferenceNames() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function isSuper() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getQualifierNames() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getArgumentTypes(ASTArguments) in line 936
      36 lines of code
      1 parameters
      13 conditional paths
      uses variable argumentTypes defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isCharLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isFloatLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isIntLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isDoubleLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isLongLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function getCurrentEvalPackage() in line 562
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable evalPackages defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   function getMethodDeclaratorParameterTypes(Node) in line 918
      17 lines of code
      1 parameters
      5 conditional paths
      uses function findChildrenOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function getNameFromPrefix(ASTPrimaryPrefix) in line 906
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function putEvalPackage(EvalPackage) in line 569
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable evalPackages defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   function removeCurrentEvalPackage() in line 573
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable evalPackages defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   function visit(ASTCompilationUnit,Object) in line 755
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function clearEvalPackages() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumDeclaration,Object) in line 761
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 771
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses function visitClassDec(ASTClassOrInterfaceDeclaration,Object) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable data defined in sample-matlab.m
      uses function putEvalPackage(EvalPackage) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable NULL_EVAL_PACKAGE defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function removeCurrentEvalPackage() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   function visit(ASTConstructorDeclaration,Object) in line 798
      protection public
      23 lines of code
      2 parameters
      4 conditional paths
      uses function getCurrentEvalPackage() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function addCalledMethodsOfNode(Node,List< MethodInvocation >,String) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable calledMethods defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
      uses function isThis() defined in net::sourceforge::pmd::lang::java::ast::ASTExplicitConstructorInvocation
      uses variable calledConstructors defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
      uses variable allPrivateConstructorsOfClass defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclarator,Object) in line 828
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses function getCurrentEvalPackage() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setDangerous() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodHolder
      uses function setCalledMethod(String) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodHolder
      uses function getMethodName() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function addCalledMethodsOfNode(Node,List< MethodInvocation >,String) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable allMethodsOfClass defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
      uses variable data defined in sample-matlab.m
   function visitClassDec(ASTClassOrInterfaceDeclaration,Object) in line 585
      51 lines of code
      2 parameters
      13 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function putEvalPackage(EvalPackage) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable NULL_EVAL_PACKAGE defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable data defined in sample-matlab.m
      uses function getCurrentEvalPackage() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function evaluateDangerOfMethods(Map< MethodHolder, List< MethodInvocation >>) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function evaluateDangerOfConstructors1(Map< ConstructorHolder, List< MethodInvocation >>,Set< MethodHolder >) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function evaluateDangerOfConstructors2(Map< ConstructorHolder, List< MethodInvocation >>) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable calledMethods defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
      uses variable allMethodsOfClass defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
      uses function getMethodDeclaratorParameterTypes(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable allPrivateConstructorsOfClass defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
      uses function removeCurrentEvalPackage() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
   variable evalPackages in line 560
   variable NULL_EVAL_PACKAGE in line 554
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getArgumentCount() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable argumentSize defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getArgumentTypes() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable argumentTypes defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getASTPrimaryExpression() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ape defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getMethod(ASTPrimaryExpression) in line 209
      protection public
      155 lines of code
      1 parameters
      26 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::ast::ASTArguments
      uses variable argumentTypes defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getArgumentTypes(ASTArguments) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function x(K+) defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getNameFromPrefix(ASTPrimaryPrefix) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses variable isArguments defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
      uses function MethodInvocation(ASTPrimaryExpression,List< String >,List< String >,String,int,List< String >,boolean) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getName() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getQualifierNames() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable qualifierNames defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getReferenceNames() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable referenceNames defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function isSuper() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable superCall defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function show() in line 365
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getQualifierNames() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function isSuper() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getReferenceNames() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getName() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getArgumentTypes() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function MethodInvocation(ASTPrimaryExpression,List< String >,List< String >,String,int,List< String >,boolean) in line 171
      9 lines of code
      7 parameters
      1 conditional paths
      uses variable ape defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses variable qualifierNames defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses variable referenceNames defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses variable argumentSize defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses variable argumentTypes defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses variable superCall defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   variable ape in line 164
   variable argumentSize in line 167
   variable argumentTypes in line 168
   variable name in line 163
   variable qualifierNames in line 166
   variable referenceNames in line 165
   variable superCall in line 169
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorInvocation
   function getArgumentCount() in line 406
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getArgumentTypes() in line 410
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable argumentTypes defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function getASTExplicitConstructorInvocation() in line 402
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 414
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function ConstructorInvocation(ASTExplicitConstructorInvocation) in line 391
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::ast::ASTArguments
      uses variable argumentTypes defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getArgumentTypes(ASTArguments) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   variable argumentTypes in line 389
   variable count in line 388
   variable eci in line 386
   variable name in line 387
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodHolder
   function getASTMethodDeclarator() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCalled() in line 432
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDangerous() in line 440
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setCalledMethod(String) in line 428
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodInvocation
   function setDangerous() in line 444
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MethodHolder(ASTMethodDeclarator) in line 424
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable amd in line 420
   variable called in line 422
   variable dangerous in line 421
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorHolder
   function getASTConstructorDeclaration() in line 459
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getASTExplicitConstructorInvocation() in line 470
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getASTExplicitConstructorInvocation() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorInvocation
   function getCalledConstructor() in line 463
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function initCI() in line 481
      9 lines of code
      0 parameters
      2 conditional paths
   function isDangerous() in line 491
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDangerous(boolean) in line 495
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ConstructorHolder(ASTConstructorDeclaration) in line 455
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable cd in line 450
   variable ci in line 452
   variable ciInitialized in line 453
   variable dangerous in line 451
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodHolderComparator
   inherits from java::util::Comparator
   function compare(MethodHolder,MethodHolder) in line 510
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compareNodes(Node,Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function getASTMethodDeclarator() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::MethodHolder
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorHolderComparator
   inherits from java::util::Comparator
   function compare(ConstructorHolder,ConstructorHolder) in line 516
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compareNodes(Node,Node) defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule
      uses function getASTConstructorDeclaration() defined in net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::ConstructorHolder
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
   function EvalPackage() in line 525
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function EvalPackage(String) in line 528
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable allMethodsOfClass in line 538
      protection public
   variable allPrivateConstructorsOfClass in line 541
      protection public
   variable calledConstructors in line 540
      protection public
   variable calledMethods in line 537
      protection public
   variable className in line 536
      protection public
module net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::NullEvalPackage
   inherits from net::sourceforge::pmd::lang::java::rule::design::ConstructorCallsOverridableMethodRule::EvalPackage
   function NullEvalPackage() in line 545
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ExcessiveLengthRule.java
module net::sourceforge::pmd::lang::java::rule::design::ExcessiveLengthRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   function visit(JavaNode,Object) in line 28
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable nodeClass defined in net::sourceforge::pmd::lang::java::rule::design::ExcessiveLengthRule
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
      uses function childrenAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
   function ExcessiveLengthRule(Class<?>) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeClass defined in net::sourceforge::pmd::lang::java::rule::design::ExcessiveLengthRule
   variable nodeClass in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/design/ExcessiveLengthRule.java
module net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
   function getViolationParameters(DataPoint) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(PLSQLNode,Object) in line 32
      protection public
      29 lines of code
      2 parameters
      5 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable nodeClass defined in net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
      uses function childrenAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable data defined in sample-matlab.m
   function ExcessiveLengthRule(Class<?>) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeClass defined in net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
   variable LOGGER in line 24
   variable nodeClass in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ExcessiveNodeCountRule.java
module net::sourceforge::pmd::lang::java::rule::design::ExcessiveNodeCountRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   function visit(JavaNode,Object) in line 33
      protection public
      18 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
      uses variable nodeClass defined in net::sourceforge::pmd::lang::java::rule::design::ExcessiveNodeCountRule
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   function ExcessiveNodeCountRule(Class<?>) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeClass defined in net::sourceforge::pmd::lang::java::rule::design::ExcessiveNodeCountRule
   variable nodeClass in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/design/ExcessiveNodeCountRule.java
module net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveNodeCountRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
   function visit(PLSQLNode,Object) in line 33
      protection public
      18 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
      uses variable nodeClass defined in net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveNodeCountRule
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
   function ExcessiveNodeCountRule(Class<?>) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeClass defined in net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveNodeCountRule
   variable nodeClass in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/FieldDeclarationsShouldBeAtStartOfClassRule.java
module net::sourceforge::pmd::lang::java::rule::design::FieldDeclarationsShouldBeAtStartOfClassRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function skipAnnotations(Node) in line 86
      10 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable j defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTFieldDeclaration,Object) in line 49
      protection public
      30 lines of code
      2 parameters
      8 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function skipAnnotations(Node) defined in net::sourceforge::pmd::lang::java::rule::design::FieldDeclarationsShouldBeAtStartOfClassRule
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ignoreAnonymousClassDeclarations defined in net::sourceforge::pmd::lang::java::rule::design::FieldDeclarationsShouldBeAtStartOfClassRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses variable ignoreEnumDeclarations defined in net::sourceforge::pmd::lang::java::rule::design::FieldDeclarationsShouldBeAtStartOfClassRule
   function FieldDeclarationsShouldBeAtStartOfClassRule() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable ignoreEnumDeclarations defined in net::sourceforge::pmd::lang::java::rule::design::FieldDeclarationsShouldBeAtStartOfClassRule
      uses variable ignoreAnonymousClassDeclarations defined in net::sourceforge::pmd::lang::java::rule::design::FieldDeclarationsShouldBeAtStartOfClassRule
   variable ignoreAnonymousClassDeclarations in line 38
   variable ignoreEnumDeclarations in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/GenericClassCounterRule.java
module net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function addAMatch(Node,Object) in line 155
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getAttribute(String) defined in net::sourceforge::pmd::RuleContext
      uses variable counterLabel defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
   function arrayAsList(String[]) in line 85
      8 lines of code
      1 parameters
      2 conditional paths
   function end(RuleContext) in line 172
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getAttribute(String) defined in net::sourceforge::pmd::RuleContext
      uses variable counterLabel defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable threshold defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function removeAttribute(String) defined in net::sourceforge::pmd::RuleContext
   function init() in line 94
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable counterLabel defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses function arrayAsList(String[]) defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable NAME_MATCH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable operand defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable OPERAND_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable TYPE_MATCH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable threshold defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
   function searchForAMatch(String,Node) in line 164
      6 lines of code
      2 parameters
      1 conditional paths
      uses function hasDescendantMatchingXPath(String) defined in net::sourceforge::pmd::lang::ast::Node
   function start(RuleContext) in line 109
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function setAttribute(String,Object) defined in net::sourceforge::pmd::RuleContext
      uses variable counterLabel defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
   function visit(ASTCompilationUnit,Object) in line 116
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function init() defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable data defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 122
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable simpleClassname defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceType,Object) in line 137
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses variable simpleClassname defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses function searchForAMatch(String,Node) defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses function addAMatch(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function GenericClassCounterRule() in line 77
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable NAME_MATCH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable OPERAND_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable TYPE_MATCH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::GenericClassCounterRule
   variable counterLabel in line 75
   variable matches in line 67
   variable NAME_MATCH_DESCRIPTOR in line 51
   variable namesMatch in line 65
   variable operand in line 72
   variable OPERAND_DESCRIPTOR in line 54
   variable simpleClassname in line 68
   variable threshold in line 73
   variable THRESHOLD_DESCRIPTOR in line 61
   variable TYPE_MATCH_DESCRIPTOR in line 57
   variable typesMatch in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/GodClassRule.java
module net::sourceforge::pmd::lang::java::rule::design::GodClassRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function calculateTcc() in line 122
      9 lines of code
      0 parameters
      2 conditional paths
      uses function determineMethodPairs() defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function calculateTotalMethodPairs() defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
   function calculateTotalMethodPairs() in line 139
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable methodAttributeAccess defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
   function determineMethodPairs() in line 152
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable methodAttributeAccess defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable j defined in sample-matlab.m
   function findVariableDeclaration(String,Scope) in line 282
      16 lines of code
      2 parameters
      4 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getParent() defined in net::sourceforge::pmd::lang::symboltable::Scope
   function getMethodOrAttributeName(ASTPrimaryExpression) in line 266
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getNameImage(ASTPrimaryExpression) in line 237
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getVariableName(ASTPrimaryExpression) in line 248
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isAttributeAccess(ASTPrimaryExpression) in line 299
      3 lines of code
      1 parameters
      1 conditional paths
   function isForeignAttributeOrMethod(ASTPrimaryExpression) in line 220
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getNameImage(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function hasDecendantOfAnyType(Class<?>...) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isForeignGetterSetterCall(ASTPrimaryExpression) in line 204
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodOrAttributeName(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
   function isMethodCall(ASTPrimaryExpression) in line 211
      8 lines of code
      1 parameters
      2 conditional paths
   function visit(ASTCompilationUnit,Object) in line 88
      protection public
      28 lines of code
      2 parameters
      2 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable atfdCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable methodAttributeAccess defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
      uses function calculateTcc() defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable WMC_VERY_HIGH defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable FEW_THRESHOLD defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable ONE_THIRD_THRESHOLD defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function addRuleViolation(RuleViolation) defined in net::sourceforge::pmd::Report
      uses function toString() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function visit(ASTPrimaryExpression,Object) in line 184
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses function isForeignAttributeOrMethod(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function isAttributeAccess(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function isMethodCall(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function isForeignGetterSetterCall(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable atfdCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable currentMethodName defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable methodAttributeAccess defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function getVariableName(ASTPrimaryExpression) defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function findVariableDeclaration(String,Scope) defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 304
      protection public
      12 lines of code
      2 parameters
      1 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable currentMethodName defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable methodAttributeAccess defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalOrExpression,Object) in line 318
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalAndExpression,Object) in line 324
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 330
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 336
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 342
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchLabel,Object) in line 348
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCatchStatement,Object) in line 354
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 360
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isTernary defined in net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
      uses variable wmcCounter defined in net::sourceforge::pmd::lang::java::rule::design::GodClassRule
      uses variable data defined in sample-matlab.m
   variable atfdCounter in line 72
   variable currentMethodName in line 80
   variable FEW_THRESHOLD in line 61
   variable methodAttributeAccess in line 78
   variable ONE_THIRD_THRESHOLD in line 67
   variable WMC_VERY_HIGH in line 55
   variable wmcCounter in line 70
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/IdempotentOperationsRule.java
module net::sourceforge::pmd::lang::java::rule::design::IdempotentOperationsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTStatementExpression,Object) in line 20
      protection public
      62 lines of code
      2 parameters
      13 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable r defined in sample-matlab.m
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ImmutableFieldRule.java
module net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function findAllConstructors(ASTClassOrInterfaceDeclaration) in line 119
      6 lines of code
      1 parameters
      1 conditional paths
   function inAnonymousInnerClass(Node) in line 114
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isAnonymousInnerClass() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceBodyDeclaration
   function initializedInConstructor(List< NameOccurrence >,Set< ASTConstructorDeclaration >) in line 65
      41 lines of code
      2 parameters
      10 conditional paths
      uses variable MUTABLE defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isSelfAssignment() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function inLoopOrTry(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses function inAnonymousInnerClass(Node) defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses variable CHECKDECL defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses variable IMMUTABLE defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
   function initializedWhenDeclared(VariableNameDeclaration) in line 61
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function inLoopOrTry(Node) in line 107
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 40
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function findAllConstructors(ASTClassOrInterfaceDeclaration) defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isVolatile() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function initializedInConstructor(List< NameOccurrence >,Set< ASTConstructorDeclaration >) defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses variable MUTABLE defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses variable IMMUTABLE defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses variable CHECKDECL defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses function initializedWhenDeclared(VariableNameDeclaration) defined in net::sourceforge::pmd::lang::java::rule::design::ImmutableFieldRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   variable CHECKDECL in line 37
   variable IMMUTABLE in line 36
   variable MUTABLE in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/NonThreadSafeSingletonRule.java
module net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTCompilationUnit,Object) in line 45
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldDecls defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses variable checkNonStaticMethods defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses variable CHECK_NON_STATIC_METHODS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses variable checkNonStaticFields defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses variable CHECK_NON_STATIC_FIELDS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 53
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable checkNonStaticFields defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses variable fieldDecls defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses function getVariableName() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 61
      protection public
      50 lines of code
      2 parameters
      12 conditional paths
      uses variable checkNonStaticMethods defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isSynchronized() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable data defined in sample-matlab.m
      uses variable fieldDecls defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function NonThreadSafeSingletonRule() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable CHECK_NON_STATIC_METHODS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
      uses variable CHECK_NON_STATIC_FIELDS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::design::NonThreadSafeSingletonRule
   variable CHECK_NON_STATIC_FIELDS_DESCRIPTOR in line 35
   variable CHECK_NON_STATIC_METHODS_DESCRIPTOR in line 32
   variable checkNonStaticFields in line 30
   variable checkNonStaticMethods in line 29
   variable fieldDecls in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/PositionalIteratorRule.java
module net::sourceforge::pmd::lang::java::rule::design::PositionalIteratorRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function collectNames(String,List< String >,Node) in line 44
      12 lines of code
      3 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getVariableName(String) defined in net::sourceforge::pmd::lang::java::rule::design::PositionalIteratorRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function getName(Node) in line 68
      10 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getVariableName(String) in line 40
      3 lines of code
      1 parameters
      1 conditional paths
   function hasNameAsChild(Node) in line 57
      10 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTWhileStatement,Object) in line 16
      protection public
      23 lines of code
      2 parameters
      6 conditional paths
      uses function hasNameAsChild(Node) defined in net::sourceforge::pmd::lang::java::rule::design::PositionalIteratorRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function collectNames(String,List< String >,Node) defined in net::sourceforge::pmd::lang::java::rule::design::PositionalIteratorRule
      uses function getVariableName(String) defined in net::sourceforge::pmd::lang::java::rule::design::PositionalIteratorRule
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/PreserveStackTraceRule.java
module net::sourceforge::pmd::lang::java::rule::design::PreserveStackTraceRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkForTargetUsage(String,Node) in line 174
      13 lines of code
      2 parameters
      4 conditional paths
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function ck(Object,String,ASTThrowStatement,Node) in line 188
      6 lines of code
      4 parameters
      2 conditional paths
      uses function checkForTargetUsage(String,Node) defined in net::sourceforge::pmd::lang::java::rule::design::PreserveStackTraceRule
      uses variable data defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isInitCauseCalled(String,List< NameOccurrence >) in line 102
      21 lines of code
      2 parameters
      6 conditional paths
      uses function checkForTargetUsage(String,Node) defined in net::sourceforge::pmd::lang::java::rule::design::PreserveStackTraceRule
   function useInitCause(Node,ASTCatchStatement) in line 157
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasDescendantMatchingXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTCatchStatement,Object) in line 45
      protection public
      56 lines of code
      2 parameters
      14 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function findChildrenOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function ck(Object,String,ASTThrowStatement,Node) defined in net::sourceforge::pmd::lang::java::rule::design::PreserveStackTraceRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable FILL_IN_STACKTRACE defined in net::sourceforge::pmd::lang::java::rule::design::PreserveStackTraceRule
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function isInitCauseCalled(String,List< NameOccurrence >) defined in net::sourceforge::pmd::lang::java::rule::design::PreserveStackTraceRule
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTVariableDeclarator,Object) in line 125
      protection public
      31 lines of code
      2 parameters
      6 conditional paths
      uses function hasDescendantMatchingXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable FIND_THROWABLE_INSTANCE defined in net::sourceforge::pmd::lang::java::rule::design::PreserveStackTraceRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function useInitCause(Node,ASTCatchStatement) defined in net::sourceforge::pmd::lang::java::rule::design::PreserveStackTraceRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses variable e defined in sample-matlab.m
   variable FILL_IN_STACKTRACE in line 42
   variable FIND_THROWABLE_INSTANCE in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/SimplifyBooleanReturnsRule.java
module net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function eachNodeHasOneChild(Node) in line 210
      9 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getDescendant(Node,int) in line 195
      10 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getLastChild(Node) in line 220
      6 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function hasOneBlockStmt(Node) in line 186
      4 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function terminatesInBooleanLiteral(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
   function isIfJustReturnsBoolean(ASTIfStatement) in line 180
      5 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasOneBlockStmt(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function terminatesInBooleanLiteral(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isJustReturnsBooleanAfter(ASTIfStatement) in line 161
      10 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChildIndex() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function terminatesInBooleanLiteral(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
   function isNodesEquals(Node,Node) in line 243
      19 lines of code
      2 parameters
      6 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isNodesEqualWithUnaryExpression(Node,Node) in line 227
      15 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isNodesEquals(Node,Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
   function isSimpleReturn(Node) in line 263
      3 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function terminatesInBooleanLiteral(Node) in line 206
      3 lines of code
      1 parameters
      1 conditional paths
      uses function eachNodeHasOneChild(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function getLastChild(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
   function visit(ASTMethodDeclaration,Object) in line 19
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getResultType() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses variable t defined in sample-matlab.m
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 36
      protection public
      116 lines of code
      2 parameters
      13 conditional paths
      uses variable hasElse defined in net::sourceforge::pmd::lang::java::ast::ASTIfStatement
      uses function isIfJustReturnsBoolean(ASTIfStatement) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function isJustReturnsBooleanAfter(ASTIfStatement) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function terminatesInBooleanLiteral(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function isNodesEqualWithUnaryExpression(Node,Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function hasOneBlockStmt(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function isSimpleReturn(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
      uses function getDescendant(Node,int) defined in net::sourceforge::pmd::lang::java::rule::design::SimplifyBooleanReturnsRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/SingularFieldRule.java
module net::sourceforge::pmd::lang::java::rule::design::SingularFieldRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isInAssignment(Node) in line 143
      10 lines of code
      1 parameters
      2 conditional paths
   function visit(ASTFieldDeclaration,Object) in line 48
      protection public
      94 lines of code
      2 parameters
      19 conditional paths
      uses variable CHECK_INNER_CLASSES defined in net::sourceforge::pmd::lang::java::rule::design::SingularFieldRule
      uses variable DISALLOW_NOT_ASSIGNMENT defined in net::sourceforge::pmd::lang::java::rule::design::SingularFieldRule
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getLocation() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isInAssignment(Node) defined in net::sourceforge::pmd::lang::java::rule::design::SingularFieldRule
      uses function getParentsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable method defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function SingularFieldRule() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable CHECK_INNER_CLASSES defined in net::sourceforge::pmd::lang::java::rule::design::SingularFieldRule
      uses variable DISALLOW_NOT_ASSIGNMENT defined in net::sourceforge::pmd::lang::java::rule::design::SingularFieldRule
   variable CHECK_INNER_CLASSES in line 36
   variable DISALLOW_NOT_ASSIGNMENT in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/SwitchDensityRule.java
module net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
   function visit(ASTSwitchStatement,Object) in line 59
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses variable data defined in sample-matlab.m
      uses function childrenAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getDensity() defined in net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::java::rule::AbstractStatisticalJavaRule
      uses function getStatementCount() defined in net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
   function visit(ASTStatement,Object) in line 83
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function childrenAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function visit(ASTSwitchLabel,Object) in line 93
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function childrenAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function SwitchDensityRule() in line 54
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
module net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
   function addStatement() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stmts defined in net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
   function addStatements(int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stmts defined in net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
   function addSwitchLabel() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable labels defined in net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
   function getDensity() in line 46
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable labels defined in net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
      uses variable stmts defined in net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
   function getStatementCount() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stmts defined in net::sourceforge::pmd::lang::java::rule::design::SwitchDensityRule::SwitchDensity
   variable labels in line 27
   variable stmts in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/UnnecessaryLocalBeforeReturnRule.java
module net::sourceforge::pmd::lang::java::rule::design::UnnecessaryLocalBeforeReturnRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isMethodCall(ASTReturnStatement) in line 70
      9 lines of code
      1 parameters
      3 conditional paths
   function visit(ASTMethodDeclaration,Object) in line 22
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function isVoid() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 31
      protection public
      31 lines of code
      2 parameters
      8 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function isMethodCall(ASTReturnStatement) defined in net::sourceforge::pmd::lang::java::rule::design::UnnecessaryLocalBeforeReturnRule
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/UnsynchronizedStaticDateFormatterRule.java
module net::sourceforge::pmd::lang::java::rule::design::UnsynchronizedStaticDateFormatterRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTFieldDeclaration,Object) in line 37
      protection public
      26 lines of code
      2 parameters
      7 conditional paths
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses variable data defined in sample-matlab.m
      uses variable targets defined in net::sourceforge::pmd::lang::java::rule::design::UnsynchronizedStaticDateFormatterRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable method defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   variable targets in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/UseCollectionIsEmptyRule.java
module net::sourceforge::pmd::lang::java::rule::design::UseCollectionIsEmptyRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
   function appliesToClassName(String) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getComparisonTargets() in line 54
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function getTypeOfMethodCall(ASTPrimarySuffix) in line 82
      20 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getMethodDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses variable e defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getTypeOfPrimaryPrefix(ASTPrimarySuffix) in line 103
      5 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function isTargetMethod(JavaNameOccurrence) in line 44
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getNameForWhichThisIsAQualifier() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTPrimarySuffix,Object) in line 66
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getTypeOfPrimaryPrefix(ASTPrimarySuffix) defined in net::sourceforge::pmd::lang::java::rule::design::UseCollectionIsEmptyRule
      uses function getTypeOfMethodCall(ASTPrimarySuffix) defined in net::sourceforge::pmd::lang::java::rule::design::UseCollectionIsEmptyRule
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function checkNodeAndReport(Object,Node,Node) defined in net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/UseUtilityClassRule.java
module net::sourceforge::pmd::lang::java::rule::design::UseUtilityClassRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isExceptionType(ASTClassOrInterfaceDeclaration) in line 78
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTClassOrInterfaceBody,Object) in line 21
      protection public
      56 lines of code
      2 parameters
      16 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses function isExceptionType(ASTClassOrInterfaceDeclaration) defined in net::sourceforge::pmd::lang::java::rule::design::UseUtilityClassRule
      uses variable data defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function getMethodName() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function getResultType() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses variable c defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/finalizers/AvoidCallingFinalizeRule.java
module net::sourceforge::pmd::lang::java::rule::finalizers::AvoidCallingFinalizeRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTCompilationUnit,Object) in line 21
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable checked defined in net::sourceforge::pmd::lang::java::rule::finalizers::AvoidCallingFinalizeRule
   function visit(ASTName,Object) in line 26
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getName() defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
      uses variable checked defined in net::sourceforge::pmd::lang::java::rule::finalizers::AvoidCallingFinalizeRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTPrimaryPrefix,Object) in line 42
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function findChildrenOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getName() defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
      uses variable checked defined in net::sourceforge::pmd::lang::java::rule::finalizers::AvoidCallingFinalizeRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   variable checked in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/GenericLiteralCheckerRule.java
module net::sourceforge::pmd::lang::java::rule::GenericLiteralCheckerRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function init() in line 32
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable pattern defined in net::sourceforge::pmd::lang::java::rule::GenericLiteralCheckerRule
      uses variable REGEX_PROPERTY defined in net::sourceforge::pmd::lang::java::rule::GenericLiteralCheckerRule
      uses variable PROPERTY_NAME defined in net::sourceforge::pmd::lang::java::rule::GenericLiteralCheckerRule
   function visit(ASTLiteral,Object) in line 49
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function init() defined in net::sourceforge::pmd::lang::java::rule::GenericLiteralCheckerRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function GenericLiteralCheckerRule() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable REGEX_PROPERTY defined in net::sourceforge::pmd::lang::java::rule::GenericLiteralCheckerRule
   variable pattern in line 22
   variable PROPERTY_NAME in line 24
   variable REGEX_PROPERTY in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/imports/DontImportJavaLangRule.java
module net::sourceforge::pmd::lang::java::rule::imports::DontImportJavaLangRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTImportDeclaration,Object) in line 14
      protection public
      24 lines of code
      2 parameters
      6 conditional paths
      uses variable isStatic defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable data defined in sample-matlab.m
      uses function getPackage() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable JAVA_LANG_PACKAGE defined in net::sourceforge::pmd::lang::java::rule::imports::DontImportJavaLangRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   variable JAVA_LANG_PACKAGE in line 11
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/imports/DuplicateImportsRule.java
module net::sourceforge::pmd::lang::java::rule::imports::DuplicateImportsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isDisambiguationImport(ASTCompilationUnit,String,String) in line 56
      28 lines of code
      3 parameters
      9 conditional paths
      uses variable importOnDemandImports defined in net::sourceforge::pmd::lang::java::rule::imports::DuplicateImportsRule
      uses function getClassTypeResolver() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
      uses function classNameExists(String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTCompilationUnit,Object) in line 21
      protection public
      26 lines of code
      2 parameters
      4 conditional paths
      uses variable singleTypeImports defined in net::sourceforge::pmd::lang::java::rule::imports::DuplicateImportsRule
      uses variable importOnDemandImports defined in net::sourceforge::pmd::lang::java::rule::imports::DuplicateImportsRule
      uses variable data defined in sample-matlab.m
      uses function isDisambiguationImport(ASTCompilationUnit,String,String) defined in net::sourceforge::pmd::lang::java::rule::imports::DuplicateImportsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTImportDeclaration,Object) in line 85
      protection public
      20 lines of code
      2 parameters
      4 conditional paths
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses function getImportedNameNode() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable isStatic defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable isImportOnDemand defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable importOnDemandImports defined in net::sourceforge::pmd::lang::java::rule::imports::DuplicateImportsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable singleTypeImports defined in net::sourceforge::pmd::lang::java::rule::imports::DuplicateImportsRule
   variable importOnDemandImports in line 19
   variable singleTypeImports in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/imports/ImportFromSamePackageRule.java
module net::sourceforge::pmd::lang::java::rule::imports::ImportFromSamePackageRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTImportDeclaration,Object) in line 13
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getPackageName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/imports/UnnecessaryFullyQualifiedNameRule.java
module net::sourceforge::pmd::lang::java::rule::imports::UnnecessaryFullyQualifiedNameRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkImports(JavaNode,Object,boolean) in line 56
      79 lines of code
      3 parameters
      18 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable matches defined in net::sourceforge::pmd::lang::java::rule::imports::UnnecessaryFullyQualifiedNameRule
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnnecessaryFullyQualifiedNameRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnnecessaryFullyQualifiedNameRule
      uses variable data defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnnecessaryFullyQualifiedNameRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceType,Object) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function checkImports(JavaNode,Object,boolean) defined in net::sourceforge::pmd::lang::java::rule::imports::UnnecessaryFullyQualifiedNameRule
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 48
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function checkImports(JavaNode,Object,boolean) defined in net::sourceforge::pmd::lang::java::rule::imports::UnnecessaryFullyQualifiedNameRule
      uses variable data defined in sample-matlab.m
   function UnnecessaryFullyQualifiedNameRule() in line 22
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable imports in line 19
   variable matches in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/imports/UnusedImportsRule.java
module net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function check(Node) in line 130
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses function getImportWrapper(Node) defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
   function getImportWrapper(Node) in line 140
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTCompilationUnit,Object) in line 28
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses variable data defined in sample-matlab.m
      uses function visitComments(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTImportDeclaration,Object) in line 102
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable isImportOnDemand defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceType,Object) in line 119
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function check(Node) defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 125
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function check(Node) defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses variable data defined in sample-matlab.m
   function visitComments(ASTCompilationUnit) in line 69
      31 lines of code
      1 parameters
      10 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses function getComments() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
      uses variable PATTERNS defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
   variable imports in line 25
   variable LINK_PATTERNS in line 58
   variable PATTERNS in line 67
   variable SEE_PATTERN in line 55
   variable THROWS_PATTERN in line 64
   variable VALUE_PATTERN in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/javabeans/BeanMembersShouldSerializeRule.java
module net::sourceforge::pmd::lang::java::rule::javabeans::BeanMembersShouldSerializeRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function imagesOf(List<?extends Node >) in line 44
      9 lines of code
      1 parameters
      2 conditional paths
   function isBeanAccessor(ASTMethodDeclarator) in line 102
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function trimIfPrefix(String) in line 95
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable prefixProperty defined in net::sourceforge::pmd::lang::java::rule::javabeans::BeanMembersShouldSerializeRule
   function visit(ASTCompilationUnit,Object) in line 38
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable prefixProperty defined in net::sourceforge::pmd::lang::java::rule::javabeans::BeanMembersShouldSerializeRule
      uses variable PREFIX_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::javabeans::BeanMembersShouldSerializeRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 55
      protection public
      39 lines of code
      2 parameters
      7 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable d defined in sample-matlab.m
      uses function isBeanAccessor(ASTMethodDeclarator) defined in net::sourceforge::pmd::lang::java::rule::javabeans::BeanMembersShouldSerializeRule
      uses function imagesOf(List<?extends Node >) defined in net::sourceforge::pmd::lang::java::rule::javabeans::BeanMembersShouldSerializeRule
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function isTransient() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function trimIfPrefix(String) defined in net::sourceforge::pmd::lang::java::rule::javabeans::BeanMembersShouldSerializeRule
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function BeanMembersShouldSerializeRule() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable PREFIX_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::javabeans::BeanMembersShouldSerializeRule
   variable PREFIX_DESCRIPTOR in line 30
   variable prefixProperty in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/JavaRuleChainVisitor.java
module net::sourceforge::pmd::lang::java::rule::JavaRuleChainVisitor
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNodes(List< Node >,RuleContext) in line 20
      14 lines of code
      2 parameters
      2 conditional paths
      uses function visit(Rule,Node,RuleContext) defined in net::sourceforge::pmd::lang::java::rule::JavaRuleChainVisitor
      uses variable data defined in sample-matlab.m
      uses function indexNode(Node) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function visit(Rule,Node,RuleContext) in line 35
      8 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/JavaRuleViolation.java
module net::sourceforge::pmd::lang::java::rule::JavaRuleViolation
   inherits from net::sourceforge::pmd::lang::rule::ParametricRuleViolation
   function isSupressed(Node,Rule) in line 75
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function suppresses(final Node,Rule) defined in net::sourceforge::pmd::lang::java::rule::JavaRuleViolation
      uses variable rule defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function setClassNameFrom(JavaNode) in line 93
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getParentsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable className defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
   function setVariableNameIfExists(Node) in line 114
      15 lines of code
      1 parameters
      6 conditional paths
      uses variable variableName defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function suppresses(final Node,Rule) in line 109
      4 lines of code
      2 parameters
      1 conditional paths
      uses function hasSuppressWarningsAnnotationFor(Rule) defined in net::sourceforge::pmd::lang::java::ast::CanSuppressWarnings
      uses variable rule defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
   function JavaRuleViolation(Rule,RuleContext,JavaNode,String,int,int) in line 37
      protection public
      5 lines of code
      6 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function setLines(int,int) defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses variable beginLine defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses variable endLine defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
   function JavaRuleViolation(Rule,RuleContext,JavaNode,String) in line 43
      protection public
      25 lines of code
      4 parameters
      4 conditional paths
      uses variable rule defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable packageName defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function getPackageName() defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses function setClassNameFrom(JavaNode) defined in net::sourceforge::pmd::lang::java::rule::JavaRuleViolation
      uses variable methodName defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function setVariableNameIfExists(Node) defined in net::sourceforge::pmd::lang::java::rule::JavaRuleViolation
      uses variable suppressed defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
      uses function isSupressed(Node,Rule) defined in net::sourceforge::pmd::lang::java::rule::JavaRuleViolation
      uses function getRule() defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/JavaRuleViolationFactory.java
module net::sourceforge::pmd::lang::java::rule::JavaRuleViolationFactory
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function createRuleViolation(Rule,RuleContext,Node,String) in line 22
      3 lines of code
      4 parameters
      1 conditional paths
   function createRuleViolation(Rule,RuleContext,Node,String,int,int) in line 27
      3 lines of code
      6 parameters
      1 conditional paths
   function JavaRuleViolationFactory() in line 18
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/junit/AbstractJUnitRule.java
module net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   abstract class
   function doesNodeContainJUnitAnnotation(Node) in line 119
      16 lines of code
      1 parameters
      5 conditional paths
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::TypeNode
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable JUNIT4_CLASS defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   function isJUnit3Class(ASTCompilationUnit) in line 93
      21 lines of code
      1 parameters
      6 conditional paths
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses variable JUNIT3_CLASS defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isJUnit3Method(ASTMethodDeclaration) in line 85
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in sample-matlab.m
   function isJUnit4Class(ASTCompilationUnit) in line 115
      3 lines of code
      1 parameters
      1 conditional paths
      uses function doesNodeContainJUnitAnnotation(Node) defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   function isJUnit4Method(ASTMethodDeclaration) in line 81
      3 lines of code
      1 parameters
      1 conditional paths
      uses function doesNodeContainJUnitAnnotation(Node) defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses variable method defined in sample-matlab.m
   function isJUnitMethod(ASTMethodDeclaration,Object) in line 68
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable method defined in sample-matlab.m
      uses variable isJUnit3Class defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses function isJUnit3Method(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses function isJUnit4Method(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   function visit(ASTCompilationUnit,Object) in line 53
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses variable isJUnit3Class defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses variable isJUnit4Class defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses variable data defined in sample-matlab.m
   variable isJUnit3Class in line 28
   variable isJUnit4Class in line 29
   variable JUNIT3_CLASS in line 26
      protection public
   variable JUNIT4_CLASS in line 24
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/junit/JUnitAssertionsShouldIncludeMessageRule.java
module net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule
   inherits from net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   function visit(ASTArguments,Object) in line 73
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable checks defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule
      uses variable data defined in sample-matlab.m
   function JUnitAssertionsShouldIncludeMessageRule() in line 52
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable checks defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule
      uses function AssertionCall(String,int) defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule::AssertionCall
      uses function isException(ASTArguments) defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule::AssertionCall
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   variable checks in line 50
module net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule::AssertionCall
   function check(Object,ASTArguments) in line 26
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::ast::ASTArguments
      uses variable argumentsCount defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule::AssertionCall
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function isException(ASTArguments) defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule::AssertionCall
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isException(ASTArguments) in line 45
      3 lines of code
      1 parameters
      1 conditional paths
   function AssertionCall(String,int) in line 21
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable argumentsCount defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule::AssertionCall
      uses variable assertionName defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitAssertionsShouldIncludeMessageRule::AssertionCall
   variable argumentsCount in line 18
   variable assertionName in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/junit/JUnitTestsShouldIncludeAssertRule.java
module net::sourceforge::pmd::lang::java::rule::junit::JUnitTestsShouldIncludeAssertRule
   inherits from net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   function containsAssert(Node,boolean) in line 38
      18 lines of code
      2 parameters
      7 conditional paths
      uses function isAssertOrFailStatement(ASTStatementExpression) defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitTestsShouldIncludeAssertRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable c defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function containsExpect(Node) in line 60
      16 lines of code
      1 parameters
      5 conditional paths
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable JUNIT4_CLASS defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   function isAssertOrFailStatement(ASTStatementExpression) in line 80
      18 lines of code
      1 parameters
      5 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 21
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 29
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses function isJUnitMethod(ASTMethodDeclaration,Object) defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses variable method defined in sample-matlab.m
      uses variable data defined in sample-matlab.m
      uses function containsAssert(Node,boolean) defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitTestsShouldIncludeAssertRule
      uses function containsExpect(Node) defined in net::sourceforge::pmd::lang::java::rule::junit::JUnitTestsShouldIncludeAssertRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/junit/TestClassWithoutTestCasesRule.java
module net::sourceforge::pmd::lang::java::rule::junit::TestClassWithoutTestCasesRule
   inherits from net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   function isInInnerClassOrInterface(ASTMethodDeclaration) in line 40
      4 lines of code
      1 parameters
      1 conditional paths
      uses function isNested() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 15
      protection public
      24 lines of code
      2 parameters
      6 conditional paths
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses function isNested() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
      uses function isInInnerClassOrInterface(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::java::rule::junit::TestClassWithoutTestCasesRule
      uses function isJUnitMethod(ASTMethodDeclaration,Object) defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/logging/GuardDebugLoggingRule.java
module net::sourceforge::pmd::lang::java::rule::logging::GuardDebugLoggingRule
   inherits from net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
   function extractProperties() in line 16
      3 lines of code
      0 parameters
      1 conditional paths
   function GuardDebugLoggingRule() in line 10
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/logging/GuardLogStatementJavaUtilRule.java
module net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementJavaUtilRule
   inherits from net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
   function configureDefaultGuards() in line 70
      8 lines of code
      0 parameters
      1 conditional paths
      uses function formatLogLevelString(Level) defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementJavaUtilRule
      uses variable GUARD_METHOD_NAME defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementJavaUtilRule
   function configureGuards(String[],String[]) in line 56
      13 lines of code
      2 parameters
      4 conditional paths
   function formatLogLevelString(Level) in line 79
      3 lines of code
      1 parameters
      1 conditional paths
   function isSlf4jImported(ASTCompilationUnit) in line 46
      9 lines of code
      1 parameters
      3 conditional paths
   function visit(ASTCompilationUnit,Object) in line 28
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses function isSlf4jImported(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementJavaUtilRule
      uses variable data defined in sample-matlab.m
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable LOG_LEVELS defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses variable GUARD_METHODS defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses function configureGuards(String[],String[]) defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementJavaUtilRule
      uses function configureDefaultGuards() defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementJavaUtilRule
      uses function findViolationForEachLogStatement(ASTCompilationUnit,Object,String) defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses variable extendedXPath defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementJavaUtilRule
   variable extendedXPath in line 16
   variable GUARD_METHOD_NAME in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/logging/GuardLogStatementRule.java
module net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
   inherits from net::sourceforge::pmd::lang::java::rule::optimizations::AbstractOptimizationRule
   inherits from net::sourceforge::pmd::Rule
   function buildGuardStatementMap(List< String >,List< String >) in line 112
      16 lines of code
      2 parameters
      5 conditional paths
      uses variable guardStmtByLogLevel defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
   function extractProperties() in line 94
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable guardStmtByLogLevel defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses variable LOG_LEVELS defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses variable GUARD_METHODS defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses function setPropertiesDefaultValues(List< String >,List< String >) defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses function buildGuardStatementMap(List< String >,List< String >) defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
   function findViolationForEachLogStatement(ASTCompilationUnit,Object,String) in line 58
      8 lines of code
      3 parameters
      3 conditional paths
      uses variable guardStmtByLogLevel defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses function findViolations(ASTCompilationUnit,String,String,String) defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses variable data defined in sample-matlab.m
   function findViolations(ASTCompilationUnit,String,String,String) in line 68
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function setPropertiesDefaultValues(List< String >,List< String >) in line 79
      14 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTCompilationUnit,Object) in line 52
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function extractProperties() defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses function findViolationForEachLogStatement(ASTCompilationUnit,Object,String) defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses variable data defined in sample-matlab.m
      uses variable XPATH_EXPRESSION defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
   function GuardLogStatementRule() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::PropertySource
      uses variable LOG_LEVELS defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
      uses variable GUARD_METHODS defined in net::sourceforge::pmd::lang::java::rule::logging::GuardLogStatementRule
   variable GUARD_METHODS in line 36
      protection public
   variable guardStmtByLogLevel in line 39
   variable LOG_LEVELS in line 33
      protection public
   variable XPATH_EXPRESSION in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/logging/MoreThanOneLoggerRule.java
module net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function init(JavaNode,Object) in line 69
      13 lines of code
      2 parameters
      2 conditional paths
      uses variable stack defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses variable count defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses variable ZERO defined in net::sourceforge::pmd::util::NumericConstants
      uses function childrenAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable data defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumDeclaration,Object) in line 60
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeDeclaration,Object) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function init(JavaNode,Object) defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclarator,Object) in line 84
      protection public
      23 lines of code
      2 parameters
      6 conditional paths
      uses variable count defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses variable data defined in sample-matlab.m
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable LOG4J_LOGGER defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses variable JAVA_LOGGER defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses variable SLF4J_LOGGER defined in net::sourceforge::pmd::lang::java::rule::logging::MoreThanOneLoggerRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   variable count in line 52
   variable JAVA_LOGGER in line 24
   variable LOG4J_LOGGER in line 22
   variable SLF4J_LOGGER in line 26
   variable stack in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/migrating/JUnitUseExpectedRule.java
module net::sourceforge::pmd::lang::java::rule::migrating::JUnitUseExpectedRule
   inherits from net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
   function getCatch(Node) in line 107
      8 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTClassOrInterfaceBodyDeclaration,Object) in line 46
      protection public
      26 lines of code
      2 parameters
      7 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isJUnitMethod(ASTMethodDeclaration,Object) defined in net::sourceforge::pmd::lang::java::rule::junit::AbstractJUnitRule
      uses variable data defined in sample-matlab.m
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTMethodDeclaration,Object) in line 74
      protection public
      32 lines of code
      2 parameters
      8 conditional paths
      uses function getCatch(Node) defined in net::sourceforge::pmd::lang::java::rule::migrating::JUnitUseExpectedRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/migrating/UnnecessaryCastRule.java
module net::sourceforge::pmd::lang::java::rule::migrating::UnnecessaryCastRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function process(Node,Object) in line 73
      20 lines of code
      2 parameters
      5 conditional paths
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable implClassNames defined in net::sourceforge::pmd::lang::java::rule::migrating::UnnecessaryCastRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTLocalVariableDeclaration,Object) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function process(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::migrating::UnnecessaryCastRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function process(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::migrating::UnnecessaryCastRule
      uses variable data defined in sample-matlab.m
   variable implClassNames in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/naming/AvoidDollarSignsRule.java
module net::sourceforge::pmd::lang::java::rule::naming::AvoidDollarSignsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 13
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclaratorId,Object) in line 21
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclarator,Object) in line 29
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/naming/AvoidFieldNameMatchingMethodNameRule.java
module net::sourceforge::pmd::lang::java::rule::naming::AvoidFieldNameMatchingMethodNameRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 21
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceBody,Object) in line 29
      protection public
      24 lines of code
      2 parameters
      7 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/naming/AvoidFieldNameMatchingTypeNameRule.java
module net::sourceforge::pmd::lang::java::rule::naming::AvoidFieldNameMatchingTypeNameRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 12
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 19
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getVariableName() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/naming/ClassNamingConventionsRule.java
module net::sourceforge::pmd::lang::java::rule::naming::ClassNamingConventionsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 11
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/naming/MethodNamingConventionsRule.java
module net::sourceforge::pmd::lang::java::rule::naming::MethodNamingConventionsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isOverriddenMethod(ASTMethodDeclarator) in line 53
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTCompilationUnit,Object) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable checkNativeMethods defined in net::sourceforge::pmd::lang::java::rule::naming::MethodNamingConventionsRule
      uses variable CHECK_NATIVE_METHODS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::MethodNamingConventionsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclarator,Object) in line 33
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable checkNativeMethods defined in net::sourceforge::pmd::lang::java::rule::naming::MethodNamingConventionsRule
      uses variable data defined in sample-matlab.m
      uses function isOverriddenMethod(ASTMethodDeclarator) defined in net::sourceforge::pmd::lang::java::rule::naming::MethodNamingConventionsRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function MethodNamingConventionsRule() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable CHECK_NATIVE_METHODS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::MethodNamingConventionsRule
   variable CHECK_NATIVE_METHODS_DESCRIPTOR in line 21
   variable checkNativeMethods in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/naming/MethodWithSameNameAsEnclosingClassRule.java
module net::sourceforge::pmd::lang::java::rule::naming::MethodWithSameNameAsEnclosingClassRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 15
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/naming/SuspiciousHashcodeMethodNameRule.java
module net::sourceforge::pmd::lang::java::rule::naming::SuspiciousHashcodeMethodNameRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTMethodDeclaration,Object) in line 15
      protection public
      25 lines of code
      2 parameters
      3 conditional paths
      uses function getResultType() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable t defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/naming/VariableNamingConventionsRule.java
module net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkVariableDeclaratorId(String[],String[],Node,boolean,boolean,ASTVariableDeclaratorId,Object) in line 161
      37 lines of code
      7 parameters
      7 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function addViolationWithMessage(Object,Node,String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function normalizeVariableName(String,String[],String[]) defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
   function checkVariableDeclarators(String[],String[],Node,boolean,boolean,Object) in line 150
      10 lines of code
      6 parameters
      3 conditional paths
      uses function findChildrenOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function checkVariableDeclaratorId(String[],String[],Node,boolean,boolean,ASTVariableDeclaratorId,Object) defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable data defined in sample-matlab.m
   function dysfunctionReason() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function hasPrefixesOrSuffixes() defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
   function hasPrefixesOrSuffixes() in line 226
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses function getPropertyDescriptors() defined in net::sourceforge::pmd::AbstractPropertySource
   function init() in line 93
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable checkMembers defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable CHECK_MEMBERS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable checkLocals defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable CHECK_LOCALS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable checkParameters defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable CHECK_PARAMETERS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable checkNativeMethodParameters defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable CHECK_NATIVE_METHOD_PARAMETERS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable staticPrefixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable STATIC_PREFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable staticSuffixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable STATIC_SUFFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable memberPrefixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable MEMBER_PREFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable memberSuffixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable MEMBER_SUFFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable localPrefixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable LOCAL_PREFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable localSuffixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable LOCAL_SUFFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable parameterPrefixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable PARAMETER_PREFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable parameterSuffixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable PARAMETER_SUFFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
   function normalizeVariableName(String,String[],String[]) in line 199
      3 lines of code
      3 parameters
      1 conditional paths
      uses function stripSuffix(String,String[]) defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses function stripPrefix(String,String[]) defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
   function stripPrefix(String,String[]) in line 215
      10 lines of code
      2 parameters
      4 conditional paths
   function stripSuffix(String,String[]) in line 203
      11 lines of code
      2 parameters
      4 conditional paths
   function visit(ASTCompilationUnit,Object) in line 88
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function init() defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 108
      protection public
      15 lines of code
      2 parameters
      3 conditional paths
      uses variable checkMembers defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable data defined in sample-matlab.m
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function checkVariableDeclarators(String[],String[],Node,boolean,boolean,Object) defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable staticPrefixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable memberPrefixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable staticSuffixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable memberSuffixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
   function visit(ASTLocalVariableDeclaration,Object) in line 124
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable checkLocals defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable data defined in sample-matlab.m
      uses function checkVariableDeclarators(String[],String[],Node,boolean,boolean,Object) defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable localPrefixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable localSuffixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function visit(ASTFormalParameters,Object) in line 131
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable checkParameters defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable data defined in sample-matlab.m
      uses variable checkNativeMethodParameters defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function checkVariableDeclaratorId(String[],String[],Node,boolean,boolean,ASTVariableDeclaratorId,Object) defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable parameterPrefixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable parameterSuffixes defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
   function VariableNamingConventionsRule() in line 73
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable CHECK_MEMBERS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable CHECK_LOCALS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable CHECK_PARAMETERS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable CHECK_NATIVE_METHOD_PARAMETERS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable STATIC_PREFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable STATIC_SUFFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable MEMBER_PREFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable MEMBER_SUFFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable LOCAL_PREFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable LOCAL_SUFFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable PARAMETER_PREFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
      uses variable PARAMETER_SUFFIXES_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::naming::VariableNamingConventionsRule
   variable CHECK_LOCALS_DESCRIPTOR in line 40
   variable CHECK_MEMBERS_DESCRIPTOR in line 37
   variable CHECK_NATIVE_METHOD_PARAMETERS_DESCRIPTOR in line 46
   variable CHECK_PARAMETERS_DESCRIPTOR in line 43
   variable checkLocals in line 25
   variable checkMembers in line 24
   variable checkNativeMethodParameters in line 27
   variable checkParameters in line 26
   variable LOCAL_PREFIXES_DESCRIPTOR in line 61
   variable LOCAL_SUFFIXES_DESCRIPTOR in line 64
   variable localPrefixes in line 32
   variable localSuffixes in line 33
   variable MEMBER_PREFIXES_DESCRIPTOR in line 55
   variable MEMBER_SUFFIXES_DESCRIPTOR in line 58
   variable memberPrefixes in line 30
   variable memberSuffixes in line 31
   variable PARAMETER_PREFIXES_DESCRIPTOR in line 67
   variable PARAMETER_SUFFIXES_DESCRIPTOR in line 70
   variable parameterPrefixes in line 34
   variable parameterSuffixes in line 35
   variable STATIC_PREFIXES_DESCRIPTOR in line 49
   variable STATIC_SUFFIXES_DESCRIPTOR in line 52
   variable staticPrefixes in line 28
   variable staticSuffixes in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/optimizations/AbstractOptimizationRule.java
module net::sourceforge::pmd::lang::java::rule::optimizations::AbstractOptimizationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function assigned(List< NameOccurrence >) in line 28
      9 lines of code
      1 parameters
      3 conditional paths
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isSelfAssignment() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 21
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/optimizations/AvoidInstantiatingObjectsInLoopsRule.java
module net::sourceforge::pmd::lang::java::rule::optimizations::AvoidInstantiatingObjectsInLoopsRule
   inherits from net::sourceforge::pmd::lang::java::rule::optimizations::AbstractOptimizationRule
   function fourthParentNotReturn(ASTAllocationExpression) in line 29
      3 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function fourthParentNotThrow(ASTAllocationExpression) in line 25
      3 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function insideLoop(ASTAllocationExpression) in line 33
      27 lines of code
      1 parameters
      5 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTAllocationExpression,Object) in line 18
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function insideLoop(ASTAllocationExpression) defined in net::sourceforge::pmd::lang::java::rule::optimizations::AvoidInstantiatingObjectsInLoopsRule
      uses function fourthParentNotThrow(ASTAllocationExpression) defined in net::sourceforge::pmd::lang::java::rule::optimizations::AvoidInstantiatingObjectsInLoopsRule
      uses function fourthParentNotReturn(ASTAllocationExpression) defined in net::sourceforge::pmd::lang::java::rule::optimizations::AvoidInstantiatingObjectsInLoopsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/optimizations/LocalVariableCouldBeFinalRule.java
module net::sourceforge::pmd::lang::java::rule::optimizations::LocalVariableCouldBeFinalRule
   inherits from net::sourceforge::pmd::lang::java::rule::optimizations::AbstractOptimizationRule
   function visit(ASTLocalVariableDeclaration,Object) in line 16
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable data defined in sample-matlab.m
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function assigned(List< NameOccurrence >) defined in net::sourceforge::pmd::lang::java::rule::optimizations::AbstractOptimizationRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/optimizations/MethodArgumentCouldBeFinalRule.java
module net::sourceforge::pmd::lang::java::rule::optimizations::MethodArgumentCouldBeFinalRule
   inherits from net::sourceforge::pmd::lang::java::rule::optimizations::AbstractOptimizationRule
   function lookForViolation(Scope,Object) in line 28
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function assigned(List< NameOccurrence >) defined in net::sourceforge::pmd::lang::java::rule::optimizations::AbstractOptimizationRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function visit(ASTMethodDeclaration,Object) in line 20
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses variable data defined in sample-matlab.m
      uses function lookForViolation(Scope,Object) defined in net::sourceforge::pmd::lang::java::rule::optimizations::MethodArgumentCouldBeFinalRule
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function visit(ASTConstructorDeclaration,Object) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function lookForViolation(Scope,Object) defined in net::sourceforge::pmd::lang::java::rule::optimizations::MethodArgumentCouldBeFinalRule
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/optimizations/PrematureDeclarationRule.java
module net::sourceforge::pmd::lang::java::rule::optimizations::PrematureDeclarationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function blocksAfter(AbstractJavaNode,AbstractJavaNode) in line 210
      16 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function start(RuleContext) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function indexOf(AbstractJavaNode,Node) defined in net::sourceforge::pmd::lang::java::rule::optimizations::PrematureDeclarationRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function hasAsParentBetween(Node,Class<?>,Node) in line 82
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function hasExit(ASTBlockStatement) in line 104
      22 lines of code
      1 parameters
      4 conditional paths
      uses function hasAsParentBetween(Node,Class<?>,Node) defined in net::sourceforge::pmd::lang::java::rule::optimizations::PrematureDeclarationRule
   function hasReferencesIn(ASTBlockStatement,String) in line 137
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function isReference(String,String) defined in net::sourceforge::pmd::lang::java::rule::optimizations::PrematureDeclarationRule
   function indexOf(AbstractJavaNode,Node) in line 187
      12 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isReference(String,String) in line 159
      6 lines of code
      2 parameters
      1 conditional paths
   function varNameIn(ASTLocalVariableDeclaration) in line 173
      4 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTLocalVariableDeclaration,Object) in line 42
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function varNameIn(ASTLocalVariableDeclaration) defined in net::sourceforge::pmd::lang::java::rule::optimizations::PrematureDeclarationRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function blocksAfter(AbstractJavaNode,AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::rule::optimizations::PrematureDeclarationRule
      uses function hasReferencesIn(ASTBlockStatement,String) defined in net::sourceforge::pmd::lang::java::rule::optimizations::PrematureDeclarationRule
      uses function hasExit(ASTBlockStatement) defined in net::sourceforge::pmd::lang::java::rule::optimizations::PrematureDeclarationRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/optimizations/RedundantFieldInitializerRule.java
module net::sourceforge::pmd::lang::java::rule::optimizations::RedundantFieldInitializerRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function addViolation(Object,ASTVariableDeclarator) in line 150
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function isRef(ASTFieldDeclaration,ASTVariableDeclarator) in line 139
      10 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function parseInteger(String) in line 154
      22 lines of code
      1 parameters
      6 conditional paths
   function visit(ASTFieldDeclaration,Object) in line 34
      protection public
      81 lines of code
      2 parameters
      20 conditional paths
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses variable data defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isRef(ASTFieldDeclaration,ASTVariableDeclarator) defined in net::sourceforge::pmd::lang::java::rule::optimizations::RedundantFieldInitializerRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,ASTVariableDeclarator) defined in net::sourceforge::pmd::lang::java::rule::optimizations::RedundantFieldInitializerRule
      uses variable isTrue defined in net::sourceforge::pmd::lang::java::ast::ASTBooleanLiteral
      uses function isIntLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function parseInteger(String) defined in net::sourceforge::pmd::lang::java::rule::optimizations::RedundantFieldInitializerRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isLongLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isFloatLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isDoubleLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isCharLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function RedundantFieldInitializerRule() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRuleChainVisit(Class<?extends Node >) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/optimizations/UnnecessaryWrapperObjectCreationRule.java
module net::sourceforge::pmd::lang::java::rule::optimizations::UnnecessaryWrapperObjectCreationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTPrimaryPrefix,Object) in line 27
      protection public
      30 lines of code
      2 parameters
      7 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses variable PREFIX_SET defined in net::sourceforge::pmd::lang::java::rule::optimizations::UnnecessaryWrapperObjectCreationRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable SUFFIX_SET defined in net::sourceforge::pmd::lang::java::rule::optimizations::UnnecessaryWrapperObjectCreationRule
   variable PREFIX_SET in line 21
   variable SUFFIX_SET in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/optimizations/UseStringBufferForStringAppendsRule.java
module net::sourceforge::pmd::lang::java::rule::optimizations::UseStringBufferForStringAppendsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTVariableDeclaratorId,Object) in line 21
      protection public
      38 lines of code
      2 parameters
      12 conditional paths
      uses function isArray() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses variable data defined in sample-matlab.m
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable isCompound defined in net::sourceforge::pmd::lang::java::ast::ASTAssignmentOperator
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/regex/RegexHelper.java
module net::sourceforge::pmd::lang::java::rule::regex::RegexHelper
   function compilePatternsFromList(List< String >) in line 32
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
   function isMatch(Pattern,String) in line 56
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function RegexHelper() in line 23
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strictexception/AvoidCatchingThrowableRule.java
module net::sourceforge::pmd::lang::java::rule::strictexception::AvoidCatchingThrowableRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTCatchStatement,Object) in line 21
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strictexception/ExceptionAsFlowControlRule.java
module net::sourceforge::pmd::lang::java::rule::strictexception::ExceptionAsFlowControlRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTThrowStatement,Object) in line 24
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable data defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getFirstClassOrInterfaceTypeImage() defined in net::sourceforge::pmd::lang::java::ast::ASTThrowStatement
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strictexception/SignatureDeclareThrowsExceptionRule.java
module net::sourceforge::pmd::lang::java::rule::strictexception::SignatureDeclareThrowsExceptionRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function evaluateExceptions(List< ASTName >,Object) in line 81
      7 lines of code
      2 parameters
      3 conditional paths
      uses function hasDeclaredExceptionInSignature(ASTName) defined in net::sourceforge::pmd::lang::java::rule::strictexception::SignatureDeclareThrowsExceptionRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function hasDeclaredExceptionInSignature(ASTName) in line 96
      3 lines of code
      1 parameters
      1 conditional paths
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isParentSignatureDeclaration(ASTName) defined in net::sourceforge::pmd::lang::java::rule::strictexception::SignatureDeclareThrowsExceptionRule
   function isParentSignatureDeclaration(ASTName) in line 106
      4 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTCompilationUnit,Object) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable junitImported defined in net::sourceforge::pmd::lang::java::rule::strictexception::SignatureDeclareThrowsExceptionRule
   function visit(ASTImportDeclaration,Object) in line 37
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable junitImported defined in net::sourceforge::pmd::lang::java::rule::strictexception::SignatureDeclareThrowsExceptionRule
   function visit(ASTMethodDeclaration,Object) in line 45
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses function getMethodName() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses variable junitImported defined in net::sourceforge::pmd::lang::java::rule::strictexception::SignatureDeclareThrowsExceptionRule
      uses function evaluateExceptions(List< ASTName >,Object) defined in net::sourceforge::pmd::lang::java::rule::strictexception::SignatureDeclareThrowsExceptionRule
   function visit(ASTConstructorDeclaration,Object) in line 67
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function evaluateExceptions(List< ASTName >,Object) defined in net::sourceforge::pmd::lang::java::rule::strictexception::SignatureDeclareThrowsExceptionRule
   variable junitImported in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/StringConcatenationRule.java
module net::sourceforge::pmd::lang::java::rule::StringConcatenationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTForStatement,Object) in line 13
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/AppendCharacterWithCharRule.java
module net::sourceforge::pmd::lang::java::rule::strings::AppendCharacterWithCharRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTLiteral,Object) in line 24
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses variable data defined in sample-matlab.m
      uses function isSingleCharacterStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/AvoidDuplicateLiteralsRule.java
module net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkFile(File) in line 188
      14 lines of code
      1 parameters
      4 conditional paths
   function dysfunctionReason() in line 207
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable EXCEPTION_FILE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses function checkFile(File) defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable EXCEPTION_LIST_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
   function getLineReader() in line 103
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable EXCEPTION_FILE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
   function processResults(Object) in line 139
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable literals defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 108
      protection public
      30 lines of code
      2 parameters
      5 conditional paths
      uses variable literals defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable EXCEPTION_LIST_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses function ExceptionParser(char) defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
      uses variable SEPARATOR_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable exceptions defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses function parse(String) defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
      uses variable EXCEPTION_FILE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses function getLineReader() defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable minLength defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable MINIMUM_LENGTH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable data defined in sample-matlab.m
      uses function processResults(Object) defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
   function visit(ASTLiteral,Object) in line 154
      protection public
      33 lines of code
      2 parameters
      6 conditional paths
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable minLength defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable exceptions defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable SKIP_ANNOTATIONS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable literals defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
   function AvoidDuplicateLiteralsRule() in line 94
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable MINIMUM_LENGTH_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable SKIP_ANNOTATIONS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable EXCEPTION_LIST_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable SEPARATOR_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses variable EXCEPTION_FILE_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
   variable EXCEPTION_FILE_DESCRIPTOR in line 50
      protection public
   variable EXCEPTION_LIST_DESCRIPTOR in line 44
      protection public
   variable exceptions in line 91
   variable literals in line 90
   variable MINIMUM_LENGTH_DESCRIPTOR in line 38
      protection public
   variable minLength in line 92
   variable SEPARATOR_DESCRIPTOR in line 47
      protection public
   variable SKIP_ANNOTATIONS_DESCRIPTOR in line 41
      protection public
   variable THRESHOLD_DESCRIPTOR in line 35
      protection public
module net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
   function parse(String) in line 62
      protection public
      26 lines of code
      1 parameters
      6 conditional paths
      uses variable ESCAPE_CHAR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
      uses variable delimiter defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
   function ExceptionParser(char) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delimiter defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
   variable delimiter in line 56
   variable ESCAPE_CHAR in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/ConsecutiveAppendsShouldReuseRule.java
module net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveAppendsShouldReuseRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getNextBlockStatementSibling(Node) in line 64
      17 lines of code
      1 parameters
      5 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getVariableAppended(ASTBlockStatement) in line 81
      22 lines of code
      1 parameters
      7 conditional paths
      uses function isFirstChild(Node,Class<?>) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveAppendsShouldReuseRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function isAStringBuilderBuffer(ASTPrimaryPrefix,String) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveAppendsShouldReuseRule
   function isAStringBuilderBuffer(ASTPrimaryPrefix,String) in line 103
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isFirstChild(Node,Class<?>) in line 113
      6 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTBlockStatement,Object) in line 51
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getVariableAppended(ASTBlockStatement) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveAppendsShouldReuseRule
      uses function getNextBlockStatementSibling(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveAppendsShouldReuseRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/ConsecutiveLiteralAppendsRule.java
module net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkConstructor(ASTVariableDeclaratorId,Object) in line 167
      19 lines of code
      2 parameters
      5 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isAdditive(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function processAdditive(Object,int,Node,Node) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses variable data defined in sample-matlab.m
   function checkForViolation(Node,Object,int) in line 346
      6 lines of code
      3 parameters
      2 conditional paths
      uses variable threshold defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function checkInitializerExpressions(ASTVariableDeclaratorId) in line 193
      28 lines of code
      1 parameters
      7 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function getFirstParentBlock(Node) in line 302
      15 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable BLOCK_PARENTS defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function getSwitchParent(Node,Node) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
   function getSwitchParent(Node,Node) in line 327
      14 lines of code
      2 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isAdditive(Node) in line 276
      16 lines of code
      1 parameters
      4 conditional paths
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function isAppendingStringLiteral(Node) in line 353
      7 lines of code
      1 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isStringBuffer(ASTVariableDeclaratorId) in line 361
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function getTypeNameNode() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function processAdditive(Object,int,Node,Node) in line 222
      42 lines of code
      4 parameters
      9 conditional paths
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function checkForViolation(Node,Object,int) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclaratorId,Object) in line 85
      protection public
      75 lines of code
      2 parameters
      15 conditional paths
      uses function isStringBuffer(ASTVariableDeclaratorId) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses variable data defined in sample-matlab.m
      uses variable threshold defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function checkConstructor(ASTVariableDeclaratorId,Object) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function checkInitializerExpressions(ASTVariableDeclaratorId) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function getFirstParentBlock(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isPartOfQualifiedName() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function checkForViolation(Node,Object,int) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isAdditive(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function processAdditive(Object,int,Node,Node) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
      uses function isAppendingStringLiteral(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
   function ConsecutiveLiteralAppendsRule() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::ConsecutiveLiteralAppendsRule
   variable BLOCK_PARENTS in line 63
   variable threshold in line 78
   variable THRESHOLD_DESCRIPTOR in line 75
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/InefficientEmptyStringCheckRule.java
module net::sourceforge::pmd::lang::java::rule::strings::InefficientEmptyStringCheckRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractInefficientZeroCheck
   function appliesToClassName(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isTargetMethod(JavaNameOccurrence) in line 36
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getNameForWhichThisIsAQualifier() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/InefficientStringBufferingRule.java
module net::sourceforge::pmd::lang::java::rule::strings::InefficientStringBufferingRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getTypeNode(ASTName) in line 130
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function isAllocatedStringBuffer(ASTAdditiveExpression) in line 168
      9 lines of code
      1 parameters
      2 conditional paths
   function isInStringBufferOperation(Node,int,String) in line 144
      23 lines of code
      3 parameters
      5 conditional paths
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTName
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isPrimitiveType(ASTName) in line 122
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getTypeNode(ASTName) defined in net::sourceforge::pmd::lang::java::rule::strings::InefficientStringBufferingRule
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isStringType(ASTName) in line 108
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getTypeNode(ASTName) defined in net::sourceforge::pmd::lang::java::rule::strings::InefficientStringBufferingRule
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTAdditiveExpression,Object) in line 40
      protection public
      67 lines of code
      2 parameters
      19 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isPrimitiveType(ASTName) defined in net::sourceforge::pmd::lang::java::rule::strings::InefficientStringBufferingRule
      uses function isStringType(ASTName) defined in net::sourceforge::pmd::lang::java::rule::strings::InefficientStringBufferingRule
      uses function isAllocation() defined in net::sourceforge::pmd::lang::java::ast::ASTBlockStatement
      uses function isAllocatedStringBuffer(ASTAdditiveExpression) defined in net::sourceforge::pmd::lang::java::rule::strings::InefficientStringBufferingRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function isInStringBufferOperation(Node,int,String) defined in net::sourceforge::pmd::lang::java::rule::strings::InefficientStringBufferingRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/InsufficientStringBufferDeclarationRule.java
module net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getConstructorLength(Node,int) in line 214
      62 lines of code
      2 parameters
      14 conditional paths
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable DEFAULT_BUFFER_SIZE defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isStringOrCharLiteral(ASTLiteral) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function isIntLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function getFirstParentBlock(Node) in line 312
      15 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable BLOCK_PARENTS defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function getSwitchParent(Node,Node) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
   function getInitialLength(Node) in line 278
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isStringOrCharLiteral(ASTLiteral) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
   function getSwitchParent(Node,Node) in line 337
      14 lines of code
      2 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isAdditive(Node) in line 300
      3 lines of code
      1 parameters
      1 conditional paths
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function isStringOrCharLiteral(ASTLiteral) in line 177
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isCharLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function processAdditive(Node) in line 160
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function processBlocks(Map< Node, Map< Node, Integer >>) in line 146
      13 lines of code
      1 parameters
      3 conditional paths
   function processNode(Node) in line 181
      32 lines of code
      1 parameters
      8 conditional paths
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isStringOrCharLiteral(ASTLiteral) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function isIntLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function storeBlockStatistics(Map< Node, Map< Node, Integer >>,int,Node) in line 123
      22 lines of code
      3 parameters
      5 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function x(K+) defined in sample-matlab.m
   function visit(ASTVariableDeclaratorId,Object) in line 53
      protection public
      57 lines of code
      2 parameters
      11 conditional paths
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses variable data defined in sample-matlab.m
      uses variable DEFAULT_BUFFER_SIZE defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function getConstructorLength(Node,int) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function getInitialLength(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function processBlocks(Map< Node, Map< Node, Integer >>) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstParentBlock(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function isAdditive(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function processAdditive(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function processNode(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
      uses function storeBlockStatistics(Map< Node, Map< Node, Integer >>,int,Node) defined in net::sourceforge::pmd::lang::java::rule::strings::InsufficientStringBufferDeclarationRule
   variable BLOCK_PARENTS in line 42
   variable DEFAULT_BUFFER_SIZE in line 50
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/StringInstantiationRule.java
module net::sourceforge::pmd::lang::java::rule::strings::StringInstantiationRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTAllocationExpression,Object) in line 22
      protection public
      35 lines of code
      2 parameters
      8 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function hasDecendantOfAnyType(Class<?>...) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/StringToStringRule.java
module net::sourceforge::pmd::lang::java::rule::strings::StringToStringRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTVariableDeclaratorId,Object) in line 15
      protection public
      18 lines of code
      2 parameters
      6 conditional paths
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses variable data defined in sample-matlab.m
      uses function isArray() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getNameForWhichThisIsAQualifier() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getLocation() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/UnnecessaryCaseChangeRule.java
module net::sourceforge::pmd::lang::java::rule::strings::UnnecessaryCaseChangeRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getBadPrefixOrNull(ASTPrimaryExpression,int) in line 43
      26 lines of code
      2 parameters
      6 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getBadSuffixOrNull(ASTPrimaryExpression,int) in line 70
      12 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTPrimaryExpression,Object) in line 15
      protection public
      27 lines of code
      2 parameters
      6 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function getBadPrefixOrNull(ASTPrimaryExpression,int) defined in net::sourceforge::pmd::lang::java::rule::strings::UnnecessaryCaseChangeRule
      uses function getBadSuffixOrNull(ASTPrimaryExpression,int) defined in net::sourceforge::pmd::lang::java::rule::strings::UnnecessaryCaseChangeRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isArguments defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/UseIndexOfCharRule.java
module net::sourceforge::pmd::lang::java::rule::strings::UseIndexOfCharRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractPoorMethodCall
   function isViolationArgument(Node) in line 38
      3 lines of code
      1 parameters
      1 conditional paths
   function methodNames() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable METHOD_NAMES defined in net::sourceforge::pmd::lang::java::rule::strings::UseIndexOfCharRule
   function targetTypename() in line 22
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TARGET_TYPE_NAME defined in net::sourceforge::pmd::lang::java::rule::strings::UseIndexOfCharRule
   variable METHOD_NAMES in line 15
   variable TARGET_TYPE_NAME in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/UselessStringValueOfRule.java
module net::sourceforge::pmd::lang::java::rule::strings::UselessStringValueOfRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isPrimitive(Node) in line 73
      19 lines of code
      1 parameters
      6 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTPrimaryPrefix,Object) in line 22
      protection public
      50 lines of code
      2 parameters
      12 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTName
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isPrimitive(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::UselessStringValueOfRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/strings/UseStringBufferLengthRule.java
module net::sourceforge::pmd::lang::java::rule::strings::UseStringBufferLengthRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function isEqualsViolation(Node) in line 112
      13 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::Node
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function isLengthViolation(Node) in line 126
      6 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::Node
   function isViolation(ASTName) in line 95
      16 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isEqualsViolation(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::UseStringBufferLengthRule
      uses function isLengthViolation(Node) defined in net::sourceforge::pmd::lang::java::rule::strings::UseStringBufferLengthRule
   function visit(ASTMethodDeclaration,Object) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable alreadySeen defined in net::sourceforge::pmd::lang::java::rule::strings::UseStringBufferLengthRule
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 58
      protection public
      20 lines of code
      2 parameters
      5 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTName
      uses variable alreadySeen defined in net::sourceforge::pmd::lang::java::rule::strings::UseStringBufferLengthRule
      uses function isViolation(ASTName) defined in net::sourceforge::pmd::lang::java::rule::strings::UseStringBufferLengthRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   variable alreadySeen in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/sunsecure/AbstractSunSecureRule.java
module net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   abstract class
   function getFirstNameImage(Node) in line 127
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function getReturnedVariableName(ASTReturnStatement) in line 64
      16 lines of code
      1 parameters
      4 conditional paths
      uses function hasTernaryCondition(ASTReturnStatement) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
      uses function hasTernaryNullCheck(ASTReturnStatement) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function hasTernaryCondition(ASTReturnStatement) in line 89
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable isTernary defined in net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
   function hasTernaryNullCheck(ASTReturnStatement) in line 81
      7 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function isField(String,ASTTypeDeclaration) in line 40
      12 lines of code
      2 parameters
      4 conditional paths
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isLocalVariable(String,Node) in line 106
      12 lines of code
      2 parameters
      4 conditional paths
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/sunsecure/ArrayIsStoredDirectlyRule.java
module net::sourceforge::pmd::lang::java::rule::sunsecure::ArrayIsStoredDirectlyRule
   inherits from net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
   function checkAll(Object,ASTFormalParameter[],List< ASTBlockStatement >) in line 64
      5 lines of code
      3 parameters
      2 conditional paths
      uses function checkForDirectAssignment(Object,final ASTFormalParameter,final List< ASTBlockStatement >) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::ArrayIsStoredDirectlyRule
   function checkForDirectAssignment(Object,final ASTFormalParameter,final List< ASTBlockStatement >) in line 92
      56 lines of code
      3 parameters
      15 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getExpressionVarName(Node) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::ArrayIsStoredDirectlyRule
      uses function isLocalVariable(String,Node) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable e defined in sample-matlab.m
      uses variable isArrayDereference defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function getArrays(ASTFormalParameters) in line 149
      13 lines of code
      1 parameters
      4 conditional paths
   function getExpressionVarName(Node) in line 70
      18 lines of code
      1 parameters
      6 conditional paths
      uses function getFirstNameImage(Node) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
      uses variable e defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses variable usesSuperModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 36
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTConstructorDeclaration,Object) in line 44
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getArrays(ASTFormalParameters) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::ArrayIsStoredDirectlyRule
      uses function getParameters() defined in net::sourceforge::pmd::lang::java::ast::ASTConstructorDeclaration
      uses function checkAll(Object,ASTFormalParameter[],List< ASTBlockStatement >) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::ArrayIsStoredDirectlyRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 55
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getArrays(ASTFormalParameters) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::ArrayIsStoredDirectlyRule
      uses function checkAll(Object,ASTFormalParameter[],List< ASTBlockStatement >) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::ArrayIsStoredDirectlyRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/sunsecure/MethodReturnsInternalArrayRule.java
module net::sourceforge::pmd::lang::java::rule::sunsecure::MethodReturnsInternalArrayRule
   inherits from net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
   function hasArraysCopyOf(ASTReturnStatement) in line 92
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
   function hasClone(ASTReturnStatement,String) in line 75
      16 lines of code
      2 parameters
      4 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 28
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 36
      protection public
      38 lines of code
      2 parameters
      11 conditional paths
      uses variable method defined in sample-matlab.m
      uses variable data defined in sample-matlab.m
      uses function getReturnedVariableName(ASTReturnStatement) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
      uses function isField(String,ASTTypeDeclaration) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
      uses function hasArraysCopyOf(ASTReturnStatement) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::MethodReturnsInternalArrayRule
      uses function hasClone(ASTReturnStatement,String) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::MethodReturnsInternalArrayRule
      uses function isLocalVariable(String,Node) defined in net::sourceforge::pmd::lang::java::rule::sunsecure::AbstractSunSecureRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/SymbolTableTestRule.java
module net::sourceforge::pmd::lang::java::rule::SymbolTableTestRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTFieldDeclaration,Object) in line 15
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unnecessary/UnnecessaryConversionTemporaryRule.java
module net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTPrimaryExpression,Object) in line 25
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
      uses variable inPrimaryExpressionContext defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
      uses variable primary defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
      uses variable usingPrimitiveWrapperAllocation defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
   function visit(ASTAllocationExpression,Object) in line 38
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable inPrimaryExpressionContext defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses variable PRIMITIVE_WRAPPERS defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable usingPrimitiveWrapperAllocation defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
   function visit(ASTPrimarySuffix,Object) in line 49
      protection public
      10 lines of code
      2 parameters
      4 conditional paths
      uses variable inPrimaryExpressionContext defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
      uses variable usingPrimitiveWrapperAllocation defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable primary defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryConversionTemporaryRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   variable inPrimaryExpressionContext in line 17
   variable primary in line 18
   variable PRIMITIVE_WRAPPERS in line 21
   variable usingPrimitiveWrapperAllocation in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unnecessary/UnnecessaryReturnRule.java
module net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryReturnRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTMethodDeclaration,Object) in line 15
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getResultType() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isVoid() defined in net::sourceforge::pmd::lang::java::ast::ASTResultType
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 23
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unnecessary/UselessOperationOnImmutableRule.java
module net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOperationOnImmutableRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getDeclaration(ASTLocalVariableDeclaration) in line 89
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
      uses variable MAP_CLASSES defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOperationOnImmutableRule
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::ast::ASTType
   function visit(ASTLocalVariableDeclaration,Object) in line 55
      protection public
      25 lines of code
      2 parameters
      6 conditional paths
      uses function getDeclaration(ASTLocalVariableDeclaration) defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOperationOnImmutableRule
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
      uses variable MAP_CLASSES defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOperationOnImmutableRule
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::ast::ASTType
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   variable BIG_DECIMAL_METHODS in line 29
   variable BIG_INTEGER_METHODS in line 34
   variable MAP_CLASSES in line 44
   variable STRING_METHODS in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unnecessary/UselessOverridingMethodRule.java
module net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function hasArguments(ASTMethodDeclaration) in line 104
      3 lines of code
      1 parameters
      1 conditional paths
      uses function hasDescendantMatchingXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function init() in line 59
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses variable IGNORE_ANNOTATIONS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
   function isMethodThrowingType(ASTMethodDeclaration,List< String >) in line 88
      15 lines of code
      2 parameters
      5 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function isMethodType(ASTMethodDeclaration,String) in line 77
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getResultType() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function hasDescendantMatchingXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTCompilationUnit,Object) in line 54
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function init() defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses variable data defined in sample-matlab.m
   function visit(ASTImplementsList,Object) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 69
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 109
      protection public
      121 lines of code
      2 parameters
      29 conditional paths
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isSynchronized() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable data defined in sample-matlab.m
      uses variable CLONE defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses function getMethodName() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function hasArguments(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses function isMethodType(ASTMethodDeclaration,String) defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses variable OBJECT defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses function isMethodThrowingType(ASTMethodDeclaration,List< String >) defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses variable exceptions defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses function getBlock() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable usesSuperModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ignoreAnnotations defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function UselessOverridingMethodRule() in line 46
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable IGNORE_ANNOTATIONS_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
      uses variable exceptions defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UselessOverridingMethodRule
   variable CLONE in line 40
   variable exceptions in line 38
   variable IGNORE_ANNOTATIONS_DESCRIPTOR in line 43
   variable ignoreAnnotations in line 39
   variable OBJECT in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedFormalParameterRule.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedFormalParameterRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function actuallyUsed(VariableNameDeclaration,List< NameOccurrence >) in line 98
      15 lines of code
      2 parameters
      4 conditional paths
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isArray() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function check(Node,Object) in line 81
      16 lines of code
      2 parameters
      4 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function actuallyUsed(VariableNameDeclaration,List< NameOccurrence >) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedFormalParameterRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function isSerializationMethod(ASTMethodDeclaration) in line 51
      16 lines of code
      1 parameters
      3 conditional paths
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function getMethodName() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function throwsOneException(ASTMethodDeclaration,Class<?extends Throwable >) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedFormalParameterRule
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::ast::ASTType
   function throwsOneException(ASTMethodDeclaration,Class<?extends Throwable >) in line 68
      12 lines of code
      2 parameters
      3 conditional paths
      uses function getThrows() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTConstructorDeclaration,Object) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function check(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedFormalParameterRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 41
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses variable CHECKALL_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedFormalParameterRule
      uses variable data defined in sample-matlab.m
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isSerializationMethod(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedFormalParameterRule
      uses function check(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedFormalParameterRule
   function UnusedFormalParameterRule() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable CHECKALL_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedFormalParameterRule
   variable CHECKALL_DESCRIPTOR in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedLocalVariableRule.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedLocalVariableRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function actuallyUsed(List< NameOccurrence >) in line 33
      11 lines of code
      1 parameters
      3 conditional paths
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function visit(ASTLocalVariableDeclaration,Object) in line 17
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function isArray() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function actuallyUsed(List< NameOccurrence >) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedLocalVariableRule
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedModifierRule.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedModifierRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function check(Node,Object) in line 49
      8 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 15
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses function isNested() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTMethodDeclaration,Object) in line 35
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function isSyntacticallyPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isSyntacticallyAbstract() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function check(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedModifierRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 42
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function isSyntacticallyPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isSyntacticallyStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isSyntacticallyFinal() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function check(Node,Object) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedModifierRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedPrivateFieldRule.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateFieldRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function actuallyUsed(List< NameOccurrence >) in line 106
      10 lines of code
      1 parameters
      3 conditional paths
      uses function isOnLeftHandSide() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function isOK(String) in line 117
      3 lines of code
      1 parameters
      1 conditional paths
   function usedInOuter(NameDeclaration,JavaNode) in line 73
      32 lines of code
      2 parameters
      8 conditional paths
      uses function findChildrenOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function usedInOuterClass(ASTClassOrInterfaceDeclaration,NameDeclaration) in line 62
      10 lines of code
      2 parameters
      3 conditional paths
      uses function usedInOuter(NameDeclaration,JavaNode) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateFieldRule
   function usedInOuterEnum(ASTClassOrInterfaceDeclaration,NameDeclaration) in line 48
      10 lines of code
      2 parameters
      3 conditional paths
      uses function usedInOuter(NameDeclaration,JavaNode) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateFieldRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 30
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function isOK(String) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateFieldRule
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function actuallyUsed(List< NameOccurrence >) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateFieldRule
      uses function usedInOuterClass(ASTClassOrInterfaceDeclaration,NameDeclaration) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateFieldRule
      uses function usedInOuterEnum(ASTClassOrInterfaceDeclaration,NameDeclaration) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateFieldRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedPrivateMethodRule.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateMethodRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function calledFromOutsideItself(List< NameOccurrence >,NameDeclaration) in line 75
      22 lines of code
      2 parameters
      5 conditional paths
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function findUnique(Map< MethodNameDeclaration, List< NameOccurrence >>) in line 59
      15 lines of code
      1 parameters
      3 conditional paths
   function privateAndNotExcluded(NameDeclaration) in line 98
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 36
      protection public
      22 lines of code
      2 parameters
      6 conditional paths
      uses variable isInterface defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceDeclaration
      uses variable data defined in sample-matlab.m
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function findUnique(Map< MethodNameDeclaration, List< NameOccurrence >>) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateMethodRule
      uses function privateAndNotExcluded(NameDeclaration) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateMethodRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function calledFromOutsideItself(List< NameOccurrence >,NameDeclaration) defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedPrivateMethodRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/UselessAssignment.java
module net::sourceforge::pmd::lang::java::rule::UselessAssignment
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   inherits from net::sourceforge::pmd::lang::dfa::pathfinder::Executable
   function execute(CurrentPath) in line 60
      protection public
      41 lines of code
      1 parameters
      6 conditional paths
      uses function iterator() defined in net::sourceforge::pmd::lang::dfa::pathfinder::CurrentPath
      uses function getVariableAccess() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable j defined in sample-matlab.m
      uses function getVariableName() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function isDefinition() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function accessTypeMatches(int) defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses variable accessType defined in net::sourceforge::pmd::lang::java::rule::UselessAssignment::Usage
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable rc defined in net::sourceforge::pmd::lang::java::rule::UselessAssignment
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::UselessAssignment::Usage
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function Usage(int,DataFlowNode) defined in net::sourceforge::pmd::lang::java::rule::UselessAssignment::Usage
      uses function getAccessType() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
   function visit(ASTMethodDeclaration,Object) in line 23
      protection public
      22 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function run() defined in net::sourceforge::pmd::lang::dfa::pathfinder::DAAPathFinder
   variable rc in line 21
module net::sourceforge::pmd::lang::java::rule::UselessAssignment::Usage
   function toString() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessType defined in net::sourceforge::pmd::lang::java::rule::UselessAssignment::Usage
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::UselessAssignment::Usage
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function Usage(int,DataFlowNode) in line 50
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable accessType defined in net::sourceforge::pmd::lang::java::rule::UselessAssignment::Usage
      uses variable node defined in net::sourceforge::pmd::lang::java::rule::UselessAssignment::Usage
   variable accessType in line 47
      protection public
   variable node in line 48
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/AbstractJavaScope.java
module net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractScope
   abstract class
   function addDeclaration(NameDeclaration) in line 20
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function checkForDuplicatedNameDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
   function checkForDuplicatedNameDeclaration(NameDeclaration) in line 25
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
   function contains(NameOccurrence) in line 32
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses function findVariableHere(JavaNameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
      uses variable t defined in sample-matlab.m
   function findVariableHere(JavaNameOccurrence) in line 36
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/Applier.java
module net::sourceforge::pmd::lang::java::symboltable::Applier
   function apply(UnaryFunction< E >,Iterator<?extends E >) in line 16
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable f defined in sample-matlab.m
   function Applier() in line 12
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/Applier.java
module net::sourceforge::pmd::lang::plsql::symboltable::Applier
   function apply(UnaryFunction< E >,Iterator<?extends E >) in line 16
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable f defined in sample-matlab.m
   function Applier() in line 12
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/ClassNameDeclaration.java
module net::sourceforge::pmd::lang::java::symboltable::ClassNameDeclaration
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypedNameDeclaration
   function getAccessNodeParent() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getType() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getTypeImage() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function toString() in line 21
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function ClassNameDeclaration(ASTClassOrInterfaceDeclaration) in line 13
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function ClassNameDeclaration(ASTEnumDeclaration) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/ClassNameDeclaration.java
module net::sourceforge::pmd::lang::plsql::symboltable::ClassNameDeclaration
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function ClassNameDeclaration(ASTQualifiedName) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function ClassNameDeclaration(ASTPackageSpecification) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function ClassNameDeclaration(ASTPackageBody) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function ClassNameDeclaration(ASTTriggerUnit) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function ClassNameDeclaration(ASTTypeSpecification) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/ClassScope.java
module net::sourceforge::pmd::lang::java::symboltable::ClassScope
   inherits from net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
   function addNameOccurrence(NameOccurrence) in line 91
      protection public
      37 lines of code
      1 parameters
      9 conditional paths
      uses function findVariableHere(JavaNameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isMethodReference() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getMethodDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getClassDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function addNameOccurrence(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::Scope
   function clipClassName(String) in line 579
      3 lines of code
      1 parameters
      1 conditional paths
   function convertToSimpleType(List< ASTClassOrInterfaceType >) in line 473
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable t defined in sample-matlab.m
      uses function addNext(SimpleTypedNameDeclaration) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function convertToSimpleType(ASTClassOrInterfaceType) in line 486
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses function qualifyTypeName(String) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function determineSuper(Node) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   function createBuiltInMethodDeclaration(final String,final int) in line 247
      34 lines of code
      2 parameters
      2 conditional paths
      uses function setPublic(boolean) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function setScope(Scope) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtSetParent(Node) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function determineArgumentTypes(JavaNameOccurrence,List< TypedNameDeclaration >) in line 345
      103 lines of code
      2 parameters
      25 conditional paths
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getNextSibling(Node) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getParent() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable d defined in sample-matlab.m
      uses function qualifyTypeName(String) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function determineSuper(Node) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function isCharLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isFloatLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isDoubleLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isIntLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isLongLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function convertToSimpleType(List< ASTClassOrInterfaceType >) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getType() defined in net::sourceforge::pmd::lang::java::symboltable::TypedNameDeclaration
      uses function resolveGenericType(Node,String) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::symboltable::TypedNameDeclaration
   function determineParameterTypes(MethodNameDeclaration) in line 290
      20 lines of code
      1 parameters
      3 conditional paths
      uses function getMethodNameDeclaratorNode() defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
      uses function qualifyTypeName(String) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function resolveGenericType(Node,String) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function determineSuper(Node) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   function determineSuper(Node) in line 449
      23 lines of code
      1 parameters
      5 conditional paths
      uses function convertToSimpleType(List< ASTClassOrInterfaceType >) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function addNext(SimpleTypedNameDeclaration) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function findVariableHere(JavaNameOccurrence) in line 133
      105 lines of code
      1 parameters
      23 conditional paths
      uses function getMethodDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable className defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function determineParameterTypes(MethodNameDeclaration) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function determineArgumentTypes(JavaNameOccurrence,List< TypedNameDeclaration >) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable isEnum defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function createBuiltInMethodDeclaration(final String,final int) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function isMethodReference() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function clipClassName(String) defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
      uses function getClassDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   function getClassDeclarations() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function getClassName() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   function getMethodDeclarations() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function getNextSibling(Node) in line 545
      10 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getVariableDeclarations() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function qualifyTypeName(String) in line 311
      20 lines of code
      1 parameters
      4 conditional paths
   function resolveGenericType(Node,String) in line 505
      24 lines of code
      2 parameters
      5 conditional paths
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function resolveGenericType(String,List< ASTTypeParameter >) in line 530
      14 lines of code
      2 parameters
      5 conditional paths
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function setIsEnum(boolean) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isEnum defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   function toString() in line 556
      protection public
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getClassDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getMethodDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   function ClassScope(String) in line 55
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
      uses variable anonymousInnerClassCounter defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   function ClassScope() in line 67
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable anonymousInnerClassCounter defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   variable anonymousInnerClassCounter in line 45
   variable className in line 51
   variable isEnum in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/ClassScope.java
module net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractScope
   function addDeclaration(NameDeclaration) in line 52
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function addNameOccurrence(NameOccurrence) in line 60
      protection public
      31 lines of code
      1 parameters
      7 conditional paths
      uses function findVariableHere(PLSQLNameOccurrence) defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses function getMethodDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getLocation() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
   function clipClassName(String) in line 196
      3 lines of code
      1 parameters
      1 conditional paths
   function findVariableHere(PLSQLNameOccurrence) in line 112
      61 lines of code
      1 parameters
      11 conditional paths
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses function getMethodDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable className defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses function toString() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function clipClassName(String) defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   function getClassDeclarations() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function getClassName() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
   function getEnclosingClassScope() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMethodDeclarations() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function getVariableDeclarations() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function toString() in line 174
      protection public
      21 lines of code
      0 parameters
      5 conditional paths
      uses variable className defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses function getClassDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses function getMethodDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
   function ClassScope(String) in line 31
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getCanonicalImage() defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses variable className defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
      uses variable anonymousInnerClassCounter defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
   function ClassScope() in line 43
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable anonymousInnerClassCounter defined in net::sourceforge::pmd::lang::plsql::symboltable::ClassScope
   variable anonymousInnerClassCounter in line 23
   variable className in line 29
   variable LOGGER in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/ImageFinderFunction.java
module net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   inherits from net::sourceforge::pmd::util::UnaryFunction
   function applyTo(NameDeclaration) in line 26
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable images defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses variable decl defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   function getDecl() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decl defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   function ImageFinderFunction(String) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable images defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   function ImageFinderFunction(List< String >) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable images defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   variable decl in line 16
   variable images in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/ImageFinderFunction.java
module net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   inherits from net::sourceforge::pmd::util::UnaryFunction
   function applyTo(NameDeclaration) in line 26
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable images defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses variable decl defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   function getDecl() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decl defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   function ImageFinderFunction(String) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable images defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   function ImageFinderFunction(List< String >) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable images defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   variable decl in line 16
   variable images in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/JavaNameOccurrence.java
module net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   inherits from net::sourceforge::pmd::lang::symboltable::NameOccurrence
   function equals(Object) in line 214
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function JavaNameOccurrence(JavaNode,String) defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function getArgumentCount() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable argumentCount defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function getImage() in line 227
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function getLocation() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function getNameForWhichThisIsAQualifier() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable qualifiedName defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function hasAssignmentOperator(Node) in line 178
      8 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function hashCode() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function isCompoundAssignment(Node) in line 115
      3 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function isMethodOrConstructorInvocation() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isMethodReference() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function isOnLeftHandSide() in line 81
      protection public
      33 lines of code
      0 parameters
      8 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isStandAlonePostfix(Node) defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isPartOfQualifiedName() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isCompoundAssignment(Node) defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function isOnRightHandSide() in line 75
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function isPartOfQualifiedName() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable qualifiedName defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function isSelfAssignment() in line 146
      protection public
      31 lines of code
      0 parameters
      6 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasAssignmentOperator(Node) defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function isCompoundAssignment(Node) defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function isStandAlonePostfix(Node) in line 119
      12 lines of code
      1 parameters
      3 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses function thirdChildHasDottedName(Node) defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function isThisOrSuper() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable THIS defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable SUPER defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function setArgumentCount(int) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable argumentCount defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function setIsMethodOrConstructorInvocation() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isMethodOrConstructorInvocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function setNameWhichThisQualifies(NameOccurrence) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable qualifiedName defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function thirdChildHasDottedName(Node) in line 132
      4 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function toString() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable location defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isMethodOrConstructorInvocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function useThisOrSuper() in line 201
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable usesSuperModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses variable image defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable THIS_DOT defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable SUPER_DOT defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function JavaNameOccurrence(JavaNode,String) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable image defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   variable argumentCount in line 27
   variable image in line 23
   variable isMethodOrConstructorInvocation in line 26
   variable location in line 22
   variable qualifiedName in line 24
   variable SUPER in line 30
   variable SUPER_DOT in line 33
   variable THIS in line 29
   variable THIS_DOT in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/LocalScope.java
module net::sourceforge::pmd::lang::java::symboltable::LocalScope
   inherits from net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
   function addDeclaration(NameDeclaration) in line 37
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function addNameOccurrence(NameOccurrence) in line 23
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function findVariableHere(JavaNameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::LocalScope
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::LocalScope
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function findVariableHere(JavaNameOccurrence) in line 46
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::LocalScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   function getVariableDeclarations() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function toString() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::LocalScope
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/LocalScope.java
module net::sourceforge::pmd::lang::plsql::symboltable::LocalScope
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractScope
   function addDeclaration(NameDeclaration) in line 37
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function addNameOccurrence(NameOccurrence) in line 18
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function findVariableHere(PLSQLNameOccurrence) defined in net::sourceforge::pmd::lang::plsql::symboltable::LocalScope
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::LocalScope
      uses function getLocation() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function findVariableHere(PLSQLNameOccurrence) in line 44
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::LocalScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   function getVariableDeclarations() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function toString() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::LocalScope
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/MethodNameDeclaration.java
module net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function equals(Object) in line 59
      protection public
      59 lines of code
      1 parameters
      9 conditional paths
      uses function MethodNameDeclaration(ASTMethodDeclarator) defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getParameterCount() defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isVarargs defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function getMethodNameDeclaratorNode() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getParameterCount() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getParameterDisplaySignature() in line 38
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::ast::ASTType
      uses variable isVarargs defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function hashCode() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function isVarargs() in line 23
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isVarargs defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function toString() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function MethodNameDeclaration(ASTMethodDeclarator) in line 15
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/MethodNameDeclaration.java
module net::sourceforge::pmd::lang::plsql::symboltable::MethodNameDeclaration
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function equals(Object) in line 72
      protection public
      65 lines of code
      1 parameters
      7 conditional paths
      uses function MethodNameDeclaration(ASTMethodDeclarator) defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodNameDeclaration
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getParameterCount() defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodNameDeclaration
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::plsql::ast::ASTFormalParameter
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getMethodNameDeclaratorNode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getParameterCount() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getParameterDisplaySignature() in line 51
      protection public
      19 lines of code
      0 parameters
      3 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::plsql::ast::ASTFormalParameter
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::plsql::ast::ASTDatatype
   function hashCode() in line 139
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses variable e defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodNameDeclaration
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
   function isVarargs() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 156
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function MethodNameDeclaration(ASTMethodDeclarator) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function MethodNameDeclaration(ASTTriggerTimingPointSection) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   variable LOGGER in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/MethodScope.java
module net::sourceforge::pmd::lang::java::symboltable::MethodScope
   inherits from net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
   function addDeclaration(NameDeclaration) in line 43
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function addNameOccurrence(NameOccurrence) in line 30
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function findVariableHere(JavaNameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function findVariableHere(JavaNameOccurrence) in line 50
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   function getName() in line 59
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function getVariableDeclarations() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function toString() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
   function MethodScope(Node) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
   variable node in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/MethodScope.java
module net::sourceforge::pmd::lang::plsql::symboltable::MethodScope
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractScope
   function addDeclaration(NameDeclaration) in line 47
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function addNameOccurrence(NameOccurrence) in line 33
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function findVariableHere(PLSQLNameOccurrence) defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodScope
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodScope
      uses function getLocation() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function findVariableHere(PLSQLNameOccurrence) in line 54
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isThisOrSuper() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   function getEnclosingMethodScope() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodScope
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function getVariableDeclarations() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function toString() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodScope
   function MethodScope(Node) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::plsql::symboltable::MethodScope
   variable node in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/NameFinder.java
module net::sourceforge::pmd::lang::java::symboltable::NameFinder
   function add(JavaNameOccurrence) in line 74
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable names defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
      uses function setNameWhichThisQualifies(NameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   function checkForNameChild(JavaNode) in line 41
      32 lines of code
      1 parameters
      9 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function add(JavaNameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isArguments defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffix
      uses variable names defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
      uses function setIsMethodOrConstructorInvocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function setArgumentCount(int) defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::java::ast::ASTArguments
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getNames() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable names defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
   function toString() in line 84
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable names defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function NameFinder(ASTPrimaryExpression) in line 25
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable usesSuperModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses function add(JavaNameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
      uses variable usesThisModifier defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function checkForNameChild(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
   variable names in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/NameFinder.java
module net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
   function add(PLSQLNameOccurrence) in line 69
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable names defined in net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
      uses function setNameWhichThisQualifies(PLSQLNameOccurrence) defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function checkForNameChild(Node) in line 44
      24 lines of code
      1 parameters
      6 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function add(PLSQLNameOccurrence) defined in net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isArguments defined in net::sourceforge::pmd::lang::plsql::ast::ASTPrimarySuffix
      uses variable names defined in net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
      uses function setIsMethodOrConstructorInvocation() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function setArgumentCount(int) defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getArgumentCount() defined in net::sourceforge::pmd::lang::plsql::ast::ASTArguments
   function getNames() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable names defined in net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
   function toString() in line 79
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable names defined in net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
   function NameFinder(ASTPrimaryExpression) in line 23
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable usesSelfModifier defined in net::sourceforge::pmd::lang::plsql::ast::ASTPrimaryPrefix
      uses function add(PLSQLNameOccurrence) defined in net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
      uses function checkForNameChild(Node) defined in net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
   variable names in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/OccurrenceFinder.java
module net::sourceforge::pmd::lang::java::symboltable::OccurrenceFinder
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   function visit(ASTPrimaryExpression,Object) in line 15
      protection public
      60 lines of code
      2 parameters
      7 conditional paths
      uses function getNames() defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
      uses function execute() defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses function getResult() defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses function getScope() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getScope() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/OccurrenceFinder.java
module net::sourceforge::pmd::lang::plsql::symboltable::OccurrenceFinder
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
   function visit(ASTPrimaryExpression,Object) in line 18
      protection public
      52 lines of code
      2 parameters
      7 conditional paths
      uses function getNames() defined in net::sourceforge::pmd::lang::plsql::symboltable::NameFinder
      uses function execute() defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses function getResult() defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses function getScope() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::OccurrenceFinder
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses variable data defined in sample-matlab.m
   variable LOGGER in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/ScopeAndDeclarationFinder.java
module net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   function addScope(Scope,JavaNode) in line 83
      5 lines of code
      2 parameters
      1 conditional paths
      uses function setParent(Scope) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable scopes defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function setScope(Scope) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
   function cont(AbstractJavaNode) in line 315
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable scopes defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
   function createClassScope(JavaNode) in line 121
      7 lines of code
      1 parameters
      2 conditional paths
      uses function addScope(Scope,JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function createLocalScope(JavaNode) in line 97
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addScope(Scope,JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
   function createMethodScope(JavaNode) in line 109
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addScope(Scope,JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
   function createSourceFileScope(ASTCompilationUnit) in line 135
      14 lines of code
      1 parameters
      2 conditional paths
      uses function getPackageDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function configureImports(ClassLoader,List< ASTImportDeclaration >) defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses variable classLoader defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable scopes defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function setScope(Scope) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function visit(ASTCompilationUnit,Object) in line 151
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createSourceFileScope(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 158
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function createClassScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumDeclaration,Object) in line 167
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function createClassScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeDeclaration,Object) in line 177
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createClassScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceBodyDeclaration,Object) in line 184
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function isAnonymousInnerClass() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceBodyDeclaration
      uses function isEnumChild() defined in net::sourceforge::pmd::lang::java::ast::ASTClassOrInterfaceBodyDeclaration
      uses function createClassScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTBlock,Object) in line 195
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTCatchStatement,Object) in line 202
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTFinallyStatement,Object) in line 209
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTConstructorDeclaration,Object) in line 216
      protection public
      45 lines of code
      2 parameters
      6 conditional paths
      uses function createMethodScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function visit(ASTCompilationUnit,Object) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function setScope(Scope) defined in net::sourceforge::pmd::lang::java::ast::JavaNode
      uses variable scopes defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function setScope(Scope) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function visit(ASTMethodDeclaration,Object) in line 263
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function createMethodScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTLambdaExpression,Object) in line 272
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTTryStatement,Object) in line 279
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 287
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 294
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclaratorId,Object) in line 301
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function setNameDeclaration(VariableNameDeclaration) defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 309
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(JavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses function cont(AbstractJavaNode) defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function ScopeAndDeclarationFinder() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ScopeAndDeclarationFinder(ClassLoader) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classLoader defined in net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinder
   variable classLoader in line 51
   variable scopes in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/ScopeAndDeclarationFinder.java
module net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
   function addScope(Scope,PLSQLNode) in line 61
      5 lines of code
      2 parameters
      1 conditional paths
      uses function setParent(Scope) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable scopes defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function setScope(Scope) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
   function cont(PLSQLNode) in line 396
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable scopes defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
   function createClassScope(PLSQLNode) in line 99
      7 lines of code
      1 parameters
      2 conditional paths
      uses function addScope(Scope,PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function createLocalScope(PLSQLNode) in line 75
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addScope(Scope,PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
   function createMethodScope(PLSQLNode) in line 87
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addScope(Scope,PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
   function createSourceFileScope(ASTInput) in line 113
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable scopes defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function setScope(Scope) defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function visit(ASTInput,Object) in line 128
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createSourceFileScope(ASTInput) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageSpecification,Object) in line 135
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function createClassScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageBody,Object) in line 144
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function createClassScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeSpecification,Object) in line 154
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function createClassScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTTriggerUnit,Object) in line 163
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function createClassScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTTriggerTimingPointSection,Object) in line 183
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function createMethodScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function getScope() defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectDeclaration,Object) in line 206
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTBlock,Object) in line 212
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeMethod,Object) in line 279
      protection public
      42 lines of code
      2 parameters
      7 conditional paths
      uses function createMethodScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function getScope() defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable e defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function getMethodName() defined in net::sourceforge::pmd::lang::plsql::ast::ASTTypeMethod
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTProgramUnit,Object) in line 323
      protection public
      42 lines of code
      2 parameters
      7 conditional paths
      uses function createMethodScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function getScope() defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable e defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function getMethodName() defined in net::sourceforge::pmd::lang::plsql::ast::ASTProgramUnit
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 368
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTForAllStatement,Object) in line 375
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function createLocalScope(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses function cont(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::symboltable::ScopeAndDeclarationFinder
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantDeclaratorId,Object) in line 382
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function setNameDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
      uses variable data defined in sample-matlab.m
   variable LOGGER in line 44
   variable scopes in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/Search.java
module net::sourceforge::pmd::lang::java::symboltable::Search
   function execute() in line 23
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable decl defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses function searchUpward(NameOccurrence,Scope) defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses variable occ defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses function getLocation() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function getScope() defined in net::sourceforge::pmd::lang::symboltable::ScopedNode
      uses variable TRACE defined in net::sourceforge::pmd::lang::java::symboltable::Search
   function execute(Scope) in line 30
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable decl defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses function searchUpward(NameOccurrence,Scope) defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses variable occ defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses variable TRACE defined in net::sourceforge::pmd::lang::java::symboltable::Search
   function getResult() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decl defined in net::sourceforge::pmd::lang::java::symboltable::Search
   function searchUpward(NameOccurrence,Scope) in line 41
      18 lines of code
      2 parameters
      6 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getParent() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function addNameOccurrence(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::Scope
   function Search(JavaNameOccurrence) in line 16
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable TRACE defined in net::sourceforge::pmd::lang::java::symboltable::Search
      uses variable occ defined in net::sourceforge::pmd::lang::java::symboltable::Search
   variable decl in line 14
   variable occ in line 13
   variable TRACE in line 11
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/Search.java
module net::sourceforge::pmd::lang::plsql::symboltable::Search
   function execute() in line 25
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable decl defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses function searchUpward(PLSQLNameOccurrence,Scope) defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses variable occ defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses function getLocation() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getScope() defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
   function execute(Scope) in line 32
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable decl defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses function searchUpward(PLSQLNameOccurrence,Scope) defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses variable occ defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
   function getResult() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decl defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
   function searchUpward(PLSQLNameOccurrence,Scope) in line 43
      18 lines of code
      2 parameters
      6 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getParent() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function addNameOccurrence(NameOccurrence) defined in net::sourceforge::pmd::lang::symboltable::Scope
   function Search(PLSQLNameOccurrence) in line 18
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses variable occ defined in net::sourceforge::pmd::lang::plsql::symboltable::Search
      uses variable isMethodOrConstructorInvocation defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   variable decl in line 16
   variable LOGGER in line 13
   variable occ in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SimpleTypedNameDeclaration.java
module net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypedNameDeclaration
   function addNext(SimpleTypedNameDeclaration) in line 38
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable next defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses function addNext(SimpleTypedNameDeclaration) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function equals(Object) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function internalEquals(Object) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses function internalEqualsNext(Object) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function getType() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function getTypeImage() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeImage defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function hashCode() in line 67
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable typeImage defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function internalEquals(Object) in line 100
      69 lines of code
      1 parameters
      20 conditional paths
      uses function SimpleTypedNameDeclaration(String,Class<?>) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable type defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable typeImage defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable primitiveTypes defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function internalEqualsNext(Object) in line 87
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable next defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses function equals(Object) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses function SimpleTypedNameDeclaration(String,Class<?>) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function toString() in line 61
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable next defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable type defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable typeImage defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function SimpleTypedNameDeclaration(String,Class<?>) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable typeImage defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable type defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   function SimpleTypedNameDeclaration(String,Class<?>,SimpleTypedNameDeclaration) in line 32
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable typeImage defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable type defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses variable next defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
   variable next in line 17
   variable primitiveTypes in line 170
   variable type in line 16
   variable typeImage in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScope.java
module net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
   inherits from net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
   function addDeclaration(NameDeclaration) in line 90
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function configureImports(ClassLoader,List< ASTImportDeclaration >) in line 41
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable types defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses function setASTCompilationUnitPackage(String) defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses variable packageImage defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses function addImport(String) defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function findClassNameDeclaration(String) in line 110
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getClassDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   function findVariableHere(JavaNameOccurrence) in line 116
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunction
   function getClassDeclarations() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function getExplicitImports() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable types defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses function getExplicitImports() defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function getPackageName() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageImage defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
   function getQualifiedTypeNames() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSubTypes(String,Scope) defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
   function getSubTypes(String,Scope) in line 131
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable types defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses variable c defined in sample-matlab.m
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
   function hasAuxclasspath() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable types defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses variable hasAuxclasspath defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function resolveType(String) in line 73
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable types defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
      uses function findClass(String) defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses variable e defined in sample-matlab.m
   function toString() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
   function SourceFileScope() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SourceFileScope(String) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable packageImage defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScope
   variable packageImage in line 25
   variable types in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/SourceFileScope.java
module net::sourceforge::pmd::lang::plsql::symboltable::SourceFileScope
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractScope
   function addDeclaration(NameDeclaration) in line 31
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function findVariableHere(NameOccurrence) in line 42
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function getDecl() defined in net::sourceforge::pmd::lang::plsql::symboltable::ImageFinderFunction
   function getPackageName() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageImage defined in net::sourceforge::pmd::lang::plsql::symboltable::SourceFileScope
   function toString() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function SourceFileScope() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SourceFileScope(String) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable packageImage in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SymbolFacade.java
module net::sourceforge::pmd::lang::java::symboltable::SymbolFacade
   function initializeWith(ASTCompilationUnit) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function initializeWith(ClassLoader,ASTCompilationUnit) in line 12
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/SymbolFacade.java
module net::sourceforge::pmd::lang::plsql::symboltable::SymbolFacade
   function initializeWith(ASTInput) in line 9
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function jjtAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::ASTInput
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/TypedNameDeclaration.java
module net::sourceforge::pmd::lang::java::symboltable::TypedNameDeclaration
   function getType() in line 10
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTypeImage() in line 8
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/TypeSet.java
module net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function addImport(String) in line 260
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function buildResolvers() in line 296
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable resolvers defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses variable imports defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses variable pkg defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function findClass(String) in line 278
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable resolvers defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses function buildResolvers() defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function getASTCompilationUnitPackage() in line 252
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pkg defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function getExplicitImports() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function getImportsCount() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function hasAuxclasspath() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setASTCompilationUnitPackage(String) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pkg defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function TypeSet() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TypeSet(ClassLoader) in line 35
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function hasAuxclasspath() defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   variable hasAuxclasspath in line 22
   variable imports in line 245
   variable pkg in line 244
   variable pmdClassLoader in line 21
   variable resolvers in line 246
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::Resolver
   function resolve(String) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::AbstractResolver
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypeSet::Resolver
   abstract class
   function AbstractResolver(PMDASMClassLoader) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   variable pmdClassLoader in line 75
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::ExplicitImportResolver
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypeSet::AbstractResolver
   function resolve(String) in line 101
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   function ExplicitImportResolver(PMDASMClassLoader,Set< String >) in line 96
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   variable importStmts in line 90
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::CurrentPackageResolver
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypeSet::AbstractResolver
   function resolve(String) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable pkg defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   function CurrentPackageResolver(PMDASMClassLoader,String) in line 124
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses variable pkg defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   variable pkg in line 118
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::ImplicitImportResolver
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypeSet::AbstractResolver
   function resolve(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   function ImplicitImportResolver(PMDASMClassLoader) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::ImportOnDemandResolver
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypeSet::AbstractResolver
   function resolve(String) in line 167
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   function ImportOnDemandResolver(PMDASMClassLoader,Set< String >) in line 162
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
   variable importStmts in line 156
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::PrimitiveTypeResolver
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypeSet::Resolver
   function resolve(String) in line 202
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function PrimitiveTypeResolver() in line 191
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   variable primitiveTypes in line 186
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::VoidResolver
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypeSet::Resolver
   function resolve(String) in line 215
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
module net::sourceforge::pmd::lang::java::symboltable::TypeSet::FullyQualifiedNameResolver
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypeSet::AbstractResolver
   function resolve(String) in line 236
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   function FullyQualifiedNameResolver(PMDASMClassLoader) in line 232
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSet
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/TypeSet.java
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   function addImport(String) in line 134
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   function buildResolvers() in line 158
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable resolvers defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
      uses variable imports defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
      uses variable pkg defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   function findClass(String) in line 142
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable resolvers defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
      uses function buildResolvers() defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   function getASTinputPackage() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pkg defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   function getImportsCount() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   function setASTinputPackage(String) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pkg defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   variable imports in line 123
   variable pkg in line 122
   variable resolvers in line 124
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::Resolver
   function resolve(String) in line 24
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::ExplicitImportResolver
   inherits from net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::Resolver
   function resolve(String) in line 34
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function ExplicitImportResolver(Set< String >) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable importStmts in line 28
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::CurrentPackageResolver
   inherits from net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::Resolver
   function resolve(String) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pkg defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   function CurrentPackageResolver(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pkg defined in net::sourceforge::pmd::lang::plsql::symboltable::TypeSet
   variable pkg in line 45
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::ImplicitImportResolver
   inherits from net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::Resolver
   function resolve(String) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::ImportOnDemandResolver
   inherits from net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::Resolver
   function resolve(String) in line 70
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
   function ImportOnDemandResolver(Set< String >) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable importStmts in line 64
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::PrimitiveTypeResolver
   inherits from net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::Resolver
   function resolve(String) in line 99
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function PrimitiveTypeResolver() in line 88
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   variable primitiveTypes in line 85
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::VoidResolver
   inherits from net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::Resolver
   function resolve(String) in line 108
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
module net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::FullyQualifiedNameResolver
   inherits from net::sourceforge::pmd::lang::plsql::symboltable::TypeSet::Resolver
   function resolve(String) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration.java
module net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   inherits from net::sourceforge::pmd::lang::java::symboltable::TypedNameDeclaration
   function equals(Object) in line 104
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function VariableNameDeclaration(ASTVariableDeclaratorId) defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function getAccessNodeParent() in line 74
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function getDeclaratorId() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getScope() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getScope() defined in net::sourceforge::pmd::lang::symboltable::ScopedNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
   function getType() in line 95
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::TypeNode
   function getTypeImage() in line 58
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function getTypeNode() in line 85
      9 lines of code
      0 parameters
      3 conditional paths
      uses function isPrimitiveType() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function isLambdaTypelessParameter() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function hashCode() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function isArray() in line 29
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getTypeNode() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isExceptionBlockParameter() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function isLambdaTypelessParameter() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function isPrimitiveType() in line 53
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isLambdaTypelessParameter() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function isReferenceType() in line 69
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isLambdaTypelessParameter() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getAccessNodeParent() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function isVarargs() in line 39
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses variable isVarargs defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   function toString() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function VariableNameDeclaration(ASTVariableDeclaratorId) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/VariableNameDeclaration.java
module net::sourceforge::pmd::lang::plsql::symboltable::VariableNameDeclaration
   inherits from net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function equals(Object) in line 43
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses function VariableNameDeclaration(ASTVariableOrConstantDeclaratorId) defined in net::sourceforge::pmd::lang::plsql::symboltable::VariableNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses variable e defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::VariableNameDeclaration
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getDeclaratorId() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function getScope() in line 21
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getScope() defined in net::sourceforge::pmd::lang::symboltable::ScopedNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable e defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::VariableNameDeclaration
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function hashCode() in line 66
      protection public
      18 lines of code
      0 parameters
      3 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses variable e defined in sample-matlab.m
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::symboltable::VariableNameDeclaration
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function toString() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function VariableNameDeclaration(ASTVariableOrConstantDeclaratorId) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   variable LOGGER in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/VariableUsageFinderFunction.java
module net::sourceforge::pmd::lang::java::symboltable::VariableUsageFinderFunction
   inherits from net::sourceforge::pmd::util::UnaryFunction
   function applyTo(NameDeclaration) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable results defined in net::sourceforge::pmd::lang::java::symboltable::VariableUsageFinderFunction
      uses variable decls defined in net::sourceforge::pmd::lang::java::symboltable::VariableUsageFinderFunction
   function getUsed() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable results defined in net::sourceforge::pmd::lang::java::symboltable::VariableUsageFinderFunction
   function VariableUsageFinderFunction(Map< NameDeclaration, List< NameOccurrence >>) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable decls defined in net::sourceforge::pmd::lang::java::symboltable::VariableUsageFinderFunction
   variable decls in line 18
   variable results in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java
module net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   function classNameExists(String) in line 681
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable e defined in sample-matlab.m
   function getClassName(ASTCompilationUnit) in line 710
      12 lines of code
      1 parameters
      3 conditional paths
      uses function declarationsAreInDefaultPackage() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getPackageDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
      uses variable importedOnDemand defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getPackageNameImage() defined in net::sourceforge::pmd::lang::java::ast::ASTPackageDeclaration
   function loadClass(String) in line 692
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable e defined in sample-matlab.m
   function populateClassName(ASTCompilationUnit,String) in line 746
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable importedClasses defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getImportedClasses(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   function populateImports(ASTCompilationUnit) in line 728
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable importedClasses defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable JAVA_LANG defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable importedOnDemand defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function populateType(TypeNode,String) in line 638
      39 lines of code
      2 parameters
      9 conditional paths
      uses variable PRIMITIVE_TYPES defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable importedClasses defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable e defined in sample-matlab.m
      uses function processOnDemand(String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function setType(Class<?>) defined in net::sourceforge::pmd::lang::java::ast::TypeNode
   function processOnDemand(String) in line 700
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable importedOnDemand defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable e defined in sample-matlab.m
   function rollupTypeBinaryNumericPromotion(TypeNode) in line 601
      36 lines of code
      1 parameters
      12 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function rollupTypeUnary(TypeNode) in line 567
      11 lines of code
      1 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function setType(Class<?>) defined in net::sourceforge::pmd::lang::java::ast::TypeNode
   function rollupTypeUnaryNumericPromotion(TypeNode) in line 580
      19 lines of code
      1 parameters
      6 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function setType(Class<?>) defined in net::sourceforge::pmd::lang::java::ast::TypeNode
   function visit(ASTCompilationUnit,Object) in line 146
      protection public
      26 lines of code
      2 parameters
      6 conditional paths
      uses variable importedOnDemand defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable importedClasses defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getClassName(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function populateClassName(ASTCompilationUnit,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable e defined in sample-matlab.m
      uses variable LOG defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function populateImports(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable data defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 174
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function setType(Class<?>) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setPackage(Package) defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeDeclaration,Object) in line 189
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTClassOrInterfaceType,Object) in line 196
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function hasDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable anonymousClassCounter defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable data defined in sample-matlab.m
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 211
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function visit(ASTEnumDeclaration,Object) in line 217
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function visit(ASTAnnotationTypeDeclaration,Object) in line 223
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 229
      protection public
      26 lines of code
      2 parameters
      5 conditional paths
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTName
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function setType(Class<?>) defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 257
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTVariableDeclarator,Object) in line 264
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTVariableDeclaratorId,Object) in line 271
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getNameDeclaration() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses variable data defined in sample-matlab.m
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTType,Object) in line 286
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTReferenceType,Object) in line 293
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTPrimitiveType,Object) in line 300
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function visit(ASTExpression,Object) in line 306
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTConditionalExpression,Object) in line 313
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses variable isTernary defined in net::sourceforge::pmd::lang::java::ast::ASTConditionalExpression
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTConditionalOrExpression,Object) in line 324
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalAndExpression,Object) in line 330
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable data defined in sample-matlab.m
   function visit(ASTInclusiveOrExpression,Object) in line 336
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeBinaryNumericPromotion(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTExclusiveOrExpression,Object) in line 343
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeBinaryNumericPromotion(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTAndExpression,Object) in line 350
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeBinaryNumericPromotion(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTEqualityExpression,Object) in line 357
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable data defined in sample-matlab.m
   function visit(ASTInstanceOfExpression,Object) in line 363
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable data defined in sample-matlab.m
   function visit(ASTRelationalExpression,Object) in line 369
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable data defined in sample-matlab.m
   function visit(ASTShiftExpression,Object) in line 375
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnaryNumericPromotion(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTAdditiveExpression,Object) in line 383
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeBinaryNumericPromotion(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTMultiplicativeExpression,Object) in line 390
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeBinaryNumericPromotion(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTUnaryExpression,Object) in line 397
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnaryNumericPromotion(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTPreIncrementExpression,Object) in line 404
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTPreDecrementExpression,Object) in line 411
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTUnaryExpressionNotPlusMinus,Object) in line 418
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTPostfixExpression,Object) in line 429
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTCastExpression,Object) in line 436
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTPrimaryExpression,Object) in line 443
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTPrimaryPrefix,Object) in line 454
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTPrimarySuffix,Object) in line 465
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTNullLiteral,Object) in line 472
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function visit(ASTBooleanLiteral,Object) in line 478
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses variable data defined in sample-matlab.m
   function visit(ASTLiteral,Object) in line 484
      protection public
      23 lines of code
      2 parameters
      8 conditional paths
      uses variable data defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function isIntLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function populateType(TypeNode,String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
      uses function isLongLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isFloatLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isDoubleLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isCharLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
      uses function isStringLiteral() defined in net::sourceforge::pmd::lang::java::ast::ASTLiteral
   function visit(ASTAllocationExpression,Object) in line 509
      protection public
      28 lines of code
      2 parameters
      2 conditional paths
      uses variable data defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTStatementExpression,Object) in line 539
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTNormalAnnotation,Object) in line 546
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTMarkerAnnotation,Object) in line 553
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function visit(ASTSingleMemberAnnotation,Object) in line 560
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
      uses function rollupTypeUnary(TypeNode) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function ClassTypeResolver() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassTypeResolver(ClassLoader) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   variable anonymousClassCounter in line 134
   variable importedClasses in line 132
   variable importedOnDemand in line 133
   variable JAVA_LANG in line 77
   variable LOG in line 74
   variable pmdClassLoader in line 131
   variable PRIMITIVE_TYPES in line 76
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/PMDASMClassLoader.java
module net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   inherits from ClassLoader
   function getImportedClasses(String) in line 78
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses variable dontBother defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses function getInnerClasses() defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function getPackages() defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable e defined in sample-matlab.m
   function getInstance(ClassLoader) in line 41
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable cachedClassLoader defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable cachedPMDASMClassLoader defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses function PMDASMClassLoader(ClassLoader) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   function loadClass(String) in line 60
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable dontBother defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable e defined in sample-matlab.m
   function PMDASMClassLoader(ClassLoader) in line 52
      3 lines of code
      1 parameters
      1 conditional paths
   variable cachedClassLoader in line 34
   variable cachedPMDASMClassLoader in line 33
   variable dontBother in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/rules/CloneMethodMustImplementCloneable.java
module net::sourceforge::pmd::lang::java::typeresolution::rules::CloneMethodMustImplementCloneable
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 32
      protection public
      35 lines of code
      2 parameters
      11 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTMethodDeclaration,Object) in line 69
      protection public
      22 lines of code
      2 parameters
      6 conditional paths
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTMethodDeclarator,Object) in line 93
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/rules/imports/UnusedImports.java
module net::sourceforge::pmd::lang::java::typeresolution::rules::imports::UnusedImports
   inherits from net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
   function check(Node) in line 29
      23 lines of code
      1 parameters
      7 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses function getImportWrapper(Node) defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses function matches(ImportWrapper) defined in net::sourceforge::pmd::lang::rule::ImportWrapper
      uses variable c defined in sample-matlab.m
   function visit(ASTImportDeclaration,Object) in line 18
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable isImportOnDemand defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable imports defined in net::sourceforge::pmd::lang::java::rule::imports::UnusedImportsRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/rules/LooseCoupling.java
module net::sourceforge::pmd::lang::java::typeresolution::rules::LooseCoupling
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function methodHasOverride(Node) in line 38
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable method defined in sample-matlab.m
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable name defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function visit(ASTClassOrInterfaceType,Object) in line 24
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function methodHasOverride(Node) defined in net::sourceforge::pmd::lang::java::typeresolution::rules::LooseCoupling
      uses variable data defined in sample-matlab.m
      uses function getNthParent(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/rules/SignatureDeclareThrowsException.java
module net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function checkExceptions(Node,Object) in line 135
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable method defined in sample-matlab.m
      uses function evaluateExceptions(List< ASTName >,Object) defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
   function evaluateExceptions(List< ASTName >,Object) in line 148
      7 lines of code
      2 parameters
      3 conditional paths
      uses function hasDeclaredExceptionInSignature(ASTName) defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function hasDeclaredExceptionInSignature(ASTName) in line 163
      3 lines of code
      1 parameters
      1 conditional paths
      uses function hasImageEqualTo(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isParentSignatureDeclaration(ASTName) defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
   function isAllowedMethod(ASTMethodDeclaration) in line 116
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable IGNORE_JUNIT_COMPLETELY_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
      uses function getMethodName() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   function isJUnitTest(ASTClassOrInterfaceType) in line 71
      20 lines of code
      1 parameters
      7 conditional paths
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isJUnitTest(Class<?>) in line 92
      3 lines of code
      1 parameters
      1 conditional paths
   function isParentSignatureDeclaration(ASTName) in line 171
      4 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTClassOrInterfaceDeclaration,Object) in line 45
      protection public
      25 lines of code
      2 parameters
      7 conditional paths
      uses variable junitImported defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
      uses variable data defined in sample-matlab.m
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isJUnitTest(ASTClassOrInterfaceType) defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(ASTImportDeclaration,Object) in line 97
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
      uses variable junitImported defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
   function visit(ASTMethodDeclaration,Object) in line 106
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable junitImported defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
      uses function isAllowedMethod(ASTMethodDeclaration) defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
      uses function checkExceptions(Node,Object) defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
   function visit(ASTConstructorDeclaration,Object) in line 126
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function checkExceptions(Node,Object) defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
   function SignatureDeclareThrowsException() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable IGNORE_JUNIT_COMPLETELY_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::typeresolution::rules::SignatureDeclareThrowsException
   variable IGNORE_JUNIT_COMPLETELY_DESCRIPTOR in line 34
   variable junitImported in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/TypeHelper.java
module net::sourceforge::pmd::lang::java::typeresolution::TypeHelper
   function isA(TypeNode,Class<?>) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function subclasses(TypeNode,Class<?>) defined in net::sourceforge::pmd::lang::java::typeresolution::TypeHelper
   function isA(TypedNameDeclaration,Class<?>) in line 27
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getType() defined in net::sourceforge::pmd::lang::java::symboltable::TypedNameDeclaration
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::symboltable::TypedNameDeclaration
   function isEither(TypeNode,Class<?>,Class<?>) in line 23
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function subclasses(TypeNode,Class<?>) defined in net::sourceforge::pmd::lang::java::typeresolution::TypeHelper
   function isEither(TypedNameDeclaration,Class<?>,Class<?>) in line 33
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function isA(TypeNode,Class<?>) defined in net::sourceforge::pmd::lang::java::typeresolution::TypeHelper
   function isNeither(TypedNameDeclaration,Class<?>,Class<?>) in line 37
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function isA(TypeNode,Class<?>) defined in net::sourceforge::pmd::lang::java::typeresolution::TypeHelper
   function subclasses(TypeNode,Class<?>) in line 41
      protection public
      23 lines of code
      2 parameters
      6 conditional paths
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::TypeNode
   function TypeHelper() in line 15
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/TypeResolutionFacade.java
module net::sourceforge::pmd::lang::java::typeresolution::TypeResolutionFacade
   inherits from net::sourceforge::pmd::lang::java::ast::JavaParserVisitorAdapter
   function initializeWith(ClassLoader,ASTCompilationUnit) in line 14
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function setClassTypeResolver(ClassTypeResolver) defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/visitors/PMDASMVisitor.java
module net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   inherits from org::objectweb::asm::ClassVisitor
   function addMethodDesc(String) in line 138
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addTypes(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function addType(Type) in line 150
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable t defined in sample-matlab.m
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function addTypes(String) in line 143
      6 lines of code
      1 parameters
      2 conditional paths
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function extractSignature(String) in line 77
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable sigVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function getInnerClasses() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable innerClasses defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function getPackages() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packages defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function parseClassName(String) in line 47
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable packages defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function parseClassName(String[]) in line 69
      7 lines of code
      1 parameters
      3 conditional paths
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visit(int,int,String,String,String,String[]) in line 85
      protection public
      7 lines of code
      6 parameters
      2 conditional paths
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function extractSignature(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitAnnotation(String,boolean) in line 93
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable annotationVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitAttribute(Attribute) in line 164
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitEnd() in line 135
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitField(int,String,String,String,Object) in line 98
      protection public
      11 lines of code
      5 parameters
      3 conditional paths
      uses function extractSignature(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable fieldVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitInnerClass(String,String,String,int) in line 122
      protection public
      9 lines of code
      4 parameters
      3 conditional paths
      uses variable innerClasses defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable packages defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitMethod(int,String,String,String,String[]) in line 110
      protection public
      8 lines of code
      5 parameters
      2 conditional paths
      uses function extractSignature(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function addMethodDesc(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable methodVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitOuterClass(String,String,String) in line 132
      protection public
      2 lines of code
      3 parameters
      1 conditional paths
   function visitSource(String,String) in line 119
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function PMDASMVisitor() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable annotationVisitor in line 29
   variable fieldVisitor in line 31
   variable innerClasses in line 37
      protection public
   variable methodVisitor in line 35
   variable packages in line 27
   variable sigVisitor in line 33
module net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
   inherits from org::objectweb::asm::FieldVisitor
   function visitAnnotation(String,boolean) in line 180
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable annotationVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitAttribute(Attribute) in line 185
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitEnd() in line 188
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function PMDFieldVisitor(PMDASMVisitor) in line 175
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
   variable parent in line 173
module net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDAnnotationVisitor
   inherits from org::objectweb::asm::AnnotationVisitor
   function visit(String,Object) in line 216
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitAnnotation(String,String) in line 200
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitArray(String) in line 209
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitEnd() in line 213
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitEnum(String,String,String) in line 205
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function PMDAnnotationVisitor(PMDASMVisitor) in line 195
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
   variable parent in line 193
module net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDSignatureVisitor
   inherits from org::objectweb::asm::signature::SignatureVisitor
   function visitArrayType() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitBaseType(char) in line 262
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitClassBound() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClassType(String) in line 272
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitEnd() in line 287
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitExceptionType() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitFormalTypeParameter(String) in line 231
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitInnerClassType(String) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitInterface() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitInterfaceBound() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitParameterType() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitReturnType() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitSuperclass() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitTypeArgument() in line 280
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitTypeArgument(char) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitTypeVariable(String) in line 265
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function PMDSignatureVisitor(PMDASMVisitor) in line 226
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable parent in line 224
module net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDMethodVisitor
   inherits from org::objectweb::asm::MethodVisitor
   function visitAnnotation(String,String) in line 304
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable annotationVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitAnnotation(String,boolean) in line 394
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable annotationVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitAnnotationDefault() in line 390
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses variable annotationVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitAttribute(Attribute) in line 402
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCode() in line 350
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitEnd() in line 399
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitFieldInsn(int,String,String,String) in line 317
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitFrame(int,int,Object[],int,Object[]) in line 353
      protection public
      2 lines of code
      5 parameters
      1 conditional paths
   function visitIincInsn(int,int) in line 371
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function visitInsn(int) in line 356
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIntInsn(int,int) in line 359
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function visitJumpInsn(int,Label) in line 365
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function visitLabel(Label) in line 368
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLdcInsn(Object) in line 334
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitLineNumber(int,Label) in line 384
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function visitLocalVariable(String,String,String,Label,Label,int) in line 346
      protection public
      3 lines of code
      6 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function extractSignature(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitLookupSwitchInsn(Label,int[],Label[]) in line 377
      protection public
      2 lines of code
      3 parameters
      1 conditional paths
   function visitMaxs(int,int) in line 387
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function visitMethodInsn(int,String,String,String,boolean) in line 322
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function addMethodDesc(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitMultiANewArrayInsn(String,int) in line 342
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitParameterAnnotation(int,String,boolean) in line 299
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses variable annotationVisitor defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitTableSwitchInsn(int,int,Label,Label[]) in line 374
      protection public
      2 lines of code
      4 parameters
      1 conditional paths
   function visitTryCatchBlock(Label,Label,Label,String) in line 380
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitTypeInsn(int,String) in line 309
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
      uses function addType(Type) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
      uses function parseClassName(String) defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor
   function visitVarInsn(int,int) in line 362
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function PMDMethodVisitor(PMDASMVisitor) in line 294
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in net::sourceforge::pmd::lang::java::typeresolution::visitors::PMDASMVisitor::PMDFieldVisitor
   variable parent in line 292
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/xpath/GetCommentOnFunction.java
module net::sourceforge::pmd::lang::java::xpath::GetCommentOnFunction
   inherits from org::jaxen::Function
   function call(Context,List) in line 32
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function registerSelfInSimpleContext() in line 27
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/xpath/JavaFunctions.java
module net::sourceforge::pmd::lang::java::xpath::JavaFunctions
   function typeof(XPathContext,String,String) in line 19
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function typeof(XPathContext,String,String,String) in line 23
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function JavaFunctions() in line 15
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/xpath/TypeOfFunction.java
module net::sourceforge::pmd::lang::java::xpath::TypeOfFunction
   inherits from org::jaxen::Function
   function call(Context,List) in line 26
      protection public
      32 lines of code
      2 parameters
      7 conditional paths
      uses function getStringValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function typeof(Node,String,String,String) defined in net::sourceforge::pmd::lang::java::xpath::TypeOfFunction
   function registerSelfInSimpleContext() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function typeof(Node,String,String,String) in line 60
      protection public
      26 lines of code
      4 parameters
      7 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/cli/CLITest.java
module net::sourceforge::pmd::cli::CLITest
   inherits from net::sourceforge::pmd::cli::BaseCLITest
   inherits from net::sourceforge::pmd::cli::BaseCLITest
   function changeJavaVersion() in line 40
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function exitStatusNoViolations() in line 49
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function exitStatusWithViolations() in line 55
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function minimalArgs() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function minimumPriority() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function testWrongRulename() in line 93
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses variable TEST_OUPUT_DIRECTORY defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function createTestOutputFile(String) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runPMDWith(String[]) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function getStatusCode() defined in net::sourceforge::pmd::cli::BaseCLITest
   function testWrongRuleset() in line 65
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses variable TEST_OUPUT_DIRECTORY defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function createTestOutputFile(String) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runPMDWith(String[]) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function getStatusCode() defined in net::sourceforge::pmd::cli::BaseCLITest
   function testWrongRulesetWithRulename() in line 79
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses variable TEST_OUPUT_DIRECTORY defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function createTestOutputFile(String) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runPMDWith(String[]) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function getStatusCode() defined in net::sourceforge::pmd::cli::BaseCLITest
   function useEcmaScript() in line 20
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function usingDebug() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/cli/CLITest.java
module net::sourceforge::pmd::cli::CLITest
   inherits from net::sourceforge::pmd::cli::BaseCLITest
   inherits from net::sourceforge::pmd::cli::BaseCLITest
   function changeJavaVersion() in line 40
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function exitStatusNoViolations() in line 49
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function exitStatusWithViolations() in line 55
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function minimalArgs() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function minimumPriority() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function testWrongRulename() in line 93
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses variable TEST_OUPUT_DIRECTORY defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function createTestOutputFile(String) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runPMDWith(String[]) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function getStatusCode() defined in net::sourceforge::pmd::cli::BaseCLITest
   function testWrongRuleset() in line 65
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses variable TEST_OUPUT_DIRECTORY defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function createTestOutputFile(String) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runPMDWith(String[]) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function getStatusCode() defined in net::sourceforge::pmd::cli::BaseCLITest
   function testWrongRulesetWithRulename() in line 79
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses variable TEST_OUPUT_DIRECTORY defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function createTestOutputFile(String) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runPMDWith(String[]) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function getStatusCode() defined in net::sourceforge::pmd::cli::BaseCLITest
   function useEcmaScript() in line 20
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
   function usingDebug() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_FOLDER defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runTest(String[],String) defined in net::sourceforge::pmd::cli::BaseCLITest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/cli/XPathCLITest.java
module net::sourceforge::pmd::cli::XPathCLITest
   function runXPath() in line 15
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses variable output defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/coverage/PMDCoverageTest.java
module net::sourceforge::pmd::coverage::PMDCoverageTest
   function runPmd(String) in line 35
      23 lines of code
      1 parameters
      3 conditional paths
      uses variable f defined in sample-matlab.m
   function suite() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testPmdOptions() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function runPmd(String) defined in net::sourceforge::pmd::coverage::PMDCoverageTest
   function testResourceFileCommands() in line 68
      protection public
      24 lines of code
      0 parameters
      5 conditional paths
      uses variable PMD_CONFIG_FILE defined in net::sourceforge::pmd::coverage::PMDCoverageTest
      uses variable r defined in sample-matlab.m
      uses function runPmd(String) defined in net::sourceforge::pmd::coverage::PMDCoverageTest
   variable PMD_CONFIG_FILE in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/cpd/CPDCommandLineInterfaceTest.java
module net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   function runCPD(String...) in line 127
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable NO_EXIT_AFTER_RUN defined in net::sourceforge::pmd::cpd::CPDCommandLineInterface
   function setup() in line 27
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable originalStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable originalStderr defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable bufferStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   function teardown() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable originalStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable originalStderr defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   function testBrokenAndValidFile() in line 96
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function runCPD(String...) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable out defined in sample-matlab.m
      uses variable bufferStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   function testCSVFormat() in line 118
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function runCPD(String...) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable out defined in sample-matlab.m
      uses variable bufferStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   function testEncodingOption() in line 71
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function runCPD(String...) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable out defined in sample-matlab.m
      uses variable bufferStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   function testExcludes() in line 56
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function runCPD(String...) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable out defined in sample-matlab.m
      uses variable bufferStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   function testFormatXmlWithoutEncoding() in line 108
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function runCPD(String...) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable out defined in sample-matlab.m
      uses variable bufferStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   function testIgnoreIdentifiers() in line 45
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function runCPD(String...) defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
      uses variable out defined in sample-matlab.m
      uses variable bufferStdout defined in net::sourceforge::pmd::cpd::CPDCommandLineInterfaceTest
   variable bufferStdout in line 22
   variable originalStderr in line 24
   variable originalStdout in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/cpd/JavaTokensTokenizerTest.java
module net::sourceforge::pmd::cpd::JavaTokensTokenizerTest
   function suite() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function test1() in line 14
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::Tokenizer
      uses function getSlice(int,int) defined in net::sourceforge::pmd::cpd::SourceCode
   function test2() in line 33
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable data defined in sample-matlab.m
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function getSlice(int,int) defined in net::sourceforge::pmd::cpd::SourceCode
   function testCommentsIgnored() in line 24
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::Tokenizer
   function testDiscardImports() in line 52
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function testDiscardOneLineAnnotationWithParams() in line 114
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function testDiscardPkgStmts() in line 61
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function testDiscardSemicolons() in line 43
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testDiscardSimpleOneLineAnnotation() in line 70
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function testIgnoreBetweenSpecialAnnotation() in line 141
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function testIgnoreBetweenSpecialAnnotationAndIgnoreAnnotations() in line 174
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function testIgnoreComments() in line 93
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable EOL defined in net::sourceforge::pmd::PMD
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/cpd/MatchAlgorithmTest.java
module net::sourceforge::pmd::cpd::MatchAlgorithmTest
   function getSampleCode() in line 29
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable LINE_1 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable LINE_2 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses variable LINE_3 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses variable LINE_4 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses variable LINE_5 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses variable LINE_6 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses variable LINE_7 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses variable LINE_8 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
   function testIgnore() in line 73
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function setIgnoreLiterals(boolean) defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses function setIgnoreIdentifiers(boolean) defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses function getSampleCode() defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses function findMatches() defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable matches defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function iterator() defined in net::sourceforge::pmd::cpd::Match
   function testSimple() in line 42
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
      uses function getSampleCode() defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::JavaTokenizer
      uses function findMatches() defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses variable matches defined in net::sourceforge::pmd::cpd::MatchAlgorithm
      uses function iterator() defined in net::sourceforge::pmd::cpd::Match
      uses function getBeginLine() defined in net::sourceforge::pmd::cpd::Mark
      uses function getFilename() defined in net::sourceforge::pmd::cpd::Mark
      uses variable LINE_3 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
      uses function getSourceCodeSlice() defined in net::sourceforge::pmd::cpd::Mark
      uses variable LINE_4 defined in net::sourceforge::pmd::cpd::MatchAlgorithmTest
   variable LINE_1 in line 20
   variable LINE_2 in line 21
   variable LINE_3 in line 22
   variable LINE_4 in line 23
   variable LINE_5 in line 24
   variable LINE_6 in line 25
   variable LINE_7 in line 26
   variable LINE_8 in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/ExcludeLinesTest.java
module net::sourceforge::pmd::ExcludeLinesTest
   inherits from net::sourceforge::pmd::testframework::RuleTst
   function setUp() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rule defined in net::sourceforge::pmd::ExcludeLinesTest
      uses function findRule(String,String) defined in net::sourceforge::pmd::testframework::RuleTst
   function suite() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAcceptance() in line 30
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function runTest(TestDescriptor) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::ExcludeLinesTest
      uses variable rule defined in net::sourceforge::pmd::ExcludeLinesTest
      uses variable TEST2 defined in net::sourceforge::pmd::ExcludeLinesTest
   function testAlternateMarker() in line 36
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function getConfiguration() defined in net::sourceforge::pmd::PMD
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses variable r defined in sample-matlab.m
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses variable rule defined in net::sourceforge::pmd::ExcludeLinesTest
      uses function getSourceCodeProcessor() defined in net::sourceforge::pmd::PMD
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses variable TEST3 defined in net::sourceforge::pmd::ExcludeLinesTest
   variable rule in line 22
   variable TEST1 in line 51
   variable TEST2 in line 58
   variable TEST3 in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/jaxen/RegexpAcceptanceTest.java
module net::sourceforge::pmd::jaxen::RegexpAcceptanceTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function testSimple() in line 20
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable xPath defined in net::sourceforge::pmd::jaxen::RegexpAcceptanceTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function extractTestsFromXml(Rule) defined in net::sourceforge::pmd::testframework::RuleTst
      uses function runTests(Rule) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
   variable xPath in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/AccessNodeTest.java
module net::sourceforge::pmd::lang::java::ast::AccessNodeTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAbstract() in line 111
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setAbstract(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testFinal() in line 71
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setFinal(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testModifiersOnClassDecl() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function testNative() in line 103
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setNative(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testPackagePrivate() in line 127
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isPackagePrivate() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setPrivate(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testPrivate() in line 63
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setPrivate(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testProtected() in line 55
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isProtected() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setProtected(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testPublic() in line 47
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setPublic(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testStatic() in line 39
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setStatic(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testStrict() in line 119
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isStrictfp() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setStrictfp(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testSynchronized() in line 79
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isSynchronized() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setSynchronized(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testTransient() in line 95
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isTransient() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setTransient(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   function testVolatile() in line 87
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function MyAccessNode(int) defined in net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
      uses function isVolatile() defined in net::sourceforge::pmd::lang::java::ast::AccessNode
      uses function setVolatile(boolean) defined in net::sourceforge::pmd::lang::java::ast::AccessNode
   variable TEST1 in line 34
module net::sourceforge::pmd::lang::java::ast::AccessNodeTest::MyAccessNode
   inherits from net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function MyAccessNode(int) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MyAccessNode(JavaParser,int) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotationTest.java
module net::sourceforge::pmd::lang::java::ast::ASTAnnotationTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAnnotationFailsWithJDK14() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotationTest
   function testAnnotationSucceedsWithDefaultMode() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotationTest
   function testAnnotationSucceedsWithJDK15() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTAnnotationTest
   variable TEST1 in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTAssignmentOperatorTest.java
module net::sourceforge::pmd::lang::java::ast::ASTAssignmentOperatorTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCompoundAssignmentMultRecognized() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::ast::ASTAssignmentOperatorTest
   function testCompoundAssignmentPlusRecognized() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::ast::ASTAssignmentOperatorTest
   function testSimpleAssignmentRecognized() in line 16
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTAssignmentOperatorTest
   variable TEST1 in line 33
   variable TEST2 in line 41
   variable TEST3 in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTBlockStatementTest.java
module net::sourceforge::pmd::lang::java::ast::ASTBlockStatementTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testIsAllocation() in line 13
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isAllocation() defined in net::sourceforge::pmd::lang::java::ast::ASTBlockStatement
   function testIsAllocation2() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isAllocation() defined in net::sourceforge::pmd::lang::java::ast::ASTBlockStatement
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTBooleanLiteralTest.java
module net::sourceforge::pmd::lang::java::ast::ASTBooleanLiteralTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFalse() in line 23
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::ast::ASTBooleanLiteralTest
      uses variable isTrue defined in net::sourceforge::pmd::lang::java::ast::ASTBooleanLiteral
   function testTrue() in line 16
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTBooleanLiteralTest
      uses variable isTrue defined in net::sourceforge::pmd::lang::java::ast::ASTBooleanLiteral
   variable TEST1 in line 29
   variable TEST2 in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTFieldDeclarationTest.java
module net::sourceforge::pmd::lang::java::ast::ASTFieldDeclarationTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testGetVariableName() in line 71
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getVariableName() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function testIsArray() in line 15
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclarationTest
      uses function isArray() defined in net::sourceforge::pmd::lang::java::ast::Dimensionable
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::Dimensionable
   function testIsSyntacticallyPublic() in line 30
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclarationTest
      uses function isSyntacticallyPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isPackagePrivate() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isProtected() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function testMultiDimensionalArray() in line 23
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclarationTest
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::Dimensionable
   function testWithEnum() in line 43
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST4 defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclarationTest
      uses function isInterfaceMember() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   variable TEST1 in line 49
   variable TEST2 in line 54
   variable TEST3 in line 59
   variable TEST4 in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTFormalParameterTest.java
module net::sourceforge::pmd::lang::java::ast::ASTFormalParameterTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testVarargs() in line 21
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameterTest
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable isVarargs defined in net::sourceforge::pmd::lang::java::ast::ASTFormalParameter
   variable TEST1 in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTImportDeclarationTest.java
module net::sourceforge::pmd::lang::java::ast::ASTImportDeclarationTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testGetImportedNameNode() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclarationTest
      uses function getImportedName() defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
   function testImportOnDemand() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclarationTest
   function testStaticImport() in line 34
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclarationTest
      uses variable isStatic defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclaration
   function testStaticImportFailsWithJDK14() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::ast::ASTImportDeclarationTest
   variable TEST1 in line 45
   variable TEST2 in line 49
   variable TEST3 in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTInitializerTest.java
module net::sourceforge::pmd::lang::java::ast::ASTInitializerTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testDontCrashOnBlockStatement() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTInitializerTest
   variable TEST1 in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTLiteralTest.java
module net::sourceforge::pmd::lang::java::ast::ASTLiteralTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testIsCharLiteral() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST7 defined in net::sourceforge::pmd::lang::java::ast::ASTLiteralTest
   function testIsFloatDoubleLiteral() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST6 defined in net::sourceforge::pmd::lang::java::ast::ASTLiteralTest
   function testIsFloatFloatLiteral() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST5 defined in net::sourceforge::pmd::lang::java::ast::ASTLiteralTest
   function testIsIntIntLiteral() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::ast::ASTLiteralTest
   function testIsIntLongLiteral() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST4 defined in net::sourceforge::pmd::lang::java::ast::ASTLiteralTest
   function testIsNotStringLiteral() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::ast::ASTLiteralTest
   function testIsStringLiteral() in line 16
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTLiteralTest
   variable TEST1 in line 57
   variable TEST2 in line 62
   variable TEST3 in line 67
   variable TEST4 in line 72
   variable TEST5 in line 77
   variable TEST6 in line 82
   variable TEST7 in line 87
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclarationTest.java
module net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclarationTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testMultDimArray() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclarationTest
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
   function testMultDimArraySplitBraces() in line 27
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclarationTest
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
   function testSingleDimArray() in line 13
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclarationTest
      uses function getArrayDepth() defined in net::sourceforge::pmd::lang::java::ast::ASTLocalVariableDeclaration
   variable TEST1 in line 33
   variable TEST2 in line 38
   variable TEST3 in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTMethodDeclarationTest.java
module net::sourceforge::pmd::lang::java::ast::ASTMethodDeclarationTest
   function suite() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testGetVariableName() in line 10
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getMethodName() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTPackageDeclarationTest.java
module net::sourceforge::pmd::lang::java::ast::ASTPackageDeclarationTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function testPackageName() in line 25
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable PACKAGE_INFO_ANNOTATED defined in net::sourceforge::pmd::lang::java::ast::ASTPackageDeclarationTest
   variable PACKAGE_INFO_ANNOTATED in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTPrimarySuffixTest.java
module net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffixTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testArguments() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffixTest
   function testArrayDereference() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTPrimarySuffixTest
   variable TEST1 in line 26
   variable TEST2 in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTSwitchLabelTest.java
module net::sourceforge::pmd::lang::java::ast::ASTSwitchLabelTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testDefaultOff() in line 16
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::ASTSwitchLabelTest
   function testDefaultSet() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::ast::ASTSwitchLabelTest
   variable TEST1 in line 28
   variable TEST2 in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTTests.java
module net::sourceforge::pmd::lang::java::ast::ASTTests
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTThrowStatementTest.java
module net::sourceforge::pmd::lang::java::ast::ASTThrowStatementTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testGetFirstASTNameImageNew() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable OK_NAME defined in net::sourceforge::pmd::lang::java::ast::ASTThrowStatementTest
   function testGetFirstASTNameImageNull() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable NULL_NAME defined in net::sourceforge::pmd::lang::java::ast::ASTThrowStatementTest
   variable NULL_NAME in line 33
   variable OK_NAME in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTVariableDeclaratorIdTest.java
module net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorIdTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAnnotations() in line 37
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_ANNOTATIONS defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorIdTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testIsExceptionBlockParameter() in line 18
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function jjtSetParent(Node) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isExceptionBlockParameter() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function testLambdaWithoutType() in line 54
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava18(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST_LAMBDA_WITHOUT_TYPE defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorIdTest
      uses variable f defined in sample-matlab.m
   function testLambdaWithType() in line 46
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava18(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST_LAMBDA_WITH_TYPE defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorIdTest
      uses variable f defined in sample-matlab.m
   function testTypeNameNode() in line 28
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TYPE_NAME_NODE defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorIdTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   variable TEST_ANNOTATIONS in line 65
   variable TEST_LAMBDA_WITH_TYPE in line 69
   variable TEST_LAMBDA_WITHOUT_TYPE in line 75
   variable TYPE_NAME_NODE in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ClassDeclTest.java
module net::sourceforge::pmd::lang::java::ast::ClassDeclTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function getClassDecl(String[]) in line 58
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
   function suite() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAbstract() in line 24
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
      uses function verifyFlags(ASTClassOrInterfaceDeclaration,boolean,boolean,boolean,boolean) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
   function testFinal() in line 31
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
      uses function verifyFlags(ASTClassOrInterfaceDeclaration,boolean,boolean,boolean,boolean) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
   function testPublic() in line 17
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
      uses function verifyFlags(ASTClassOrInterfaceDeclaration,boolean,boolean,boolean,boolean) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
   function testPublicFinal() in line 45
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
      uses function verifyFlags(ASTClassOrInterfaceDeclaration,boolean,boolean,boolean,boolean) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
   function testStrict() in line 38
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getClassDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
      uses function verifyFlags(ASTClassOrInterfaceDeclaration,boolean,boolean,boolean,boolean) defined in net::sourceforge::pmd::lang::java::ast::ClassDeclTest
   function verifyFlags(ASTClassOrInterfaceDeclaration,boolean,boolean,boolean,boolean) in line 51
      protection public
      6 lines of code
      5 parameters
      1 conditional paths
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isStrictfp() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/EncodingTest.java
module net::sourceforge::pmd::lang::java::ast::EncodingTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function testDecodingOfUTF8() in line 15
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST_UTF8 defined in net::sourceforge::pmd::lang::java::ast::EncodingTest
   variable TEST_UTF8 in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/FieldDeclTest.java
module net::sourceforge::pmd::lang::java::ast::FieldDeclTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function getFieldDecl(String[]) in line 25
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function makeAccessJavaCode(String[]) defined in net::sourceforge::pmd::lang::java::ast::FieldDeclTest
   function makeAccessJavaCode(String[]) in line 17
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function suite() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFinal() in line 62
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::FieldDeclTest
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function testPrivate() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::FieldDeclTest
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function testProtected() in line 40
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::FieldDeclTest
      uses function isProtected() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function testPublic() in line 33
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::FieldDeclTest
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function testStatic() in line 54
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::FieldDeclTest
      uses function isStatic() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
   function testTransient() in line 70
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::FieldDeclTest
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
      uses function isTransient() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function testVolatile() in line 78
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::FieldDeclTest
      uses function isVolatile() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::ASTFieldDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/JDKVersionTest.java
module net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 501
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAnnotatedLocals() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ANNOTATED_LOCALS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testAnnotatedParams() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ANNOTATED_PARAMS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testAssertAsIdentifierSucceedsWith1_3() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava13(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ASSERT_TEST5 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testAssertAsIdentifierSucceedsWith1_3_test2() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava13(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ASSERT_TEST5_a defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testAssertAsKeywordFailsWith1_3() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava13(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ASSERT_TEST6 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testAssertAsKeywordVariantsSucceedWith1_4() in line 35
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ASSERT_TEST1 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable ASSERT_TEST2 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable ASSERT_TEST3 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable ASSERT_TEST4 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testAssertAsMethodNameIdentifierFailsWith1_4() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ASSERT_TEST7 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testAssertAsVariableDeclIdentifierFailsWith1_4() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ASSERT_TEST5 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testBinaryAndUnderscoresInNumericalLiterals() in line 145
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_NUMERICAL_LITERALS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testEnumAsIdentifierShouldFailWith15() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK14_ENUM defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testEnumAsIdentifierShouldPassWith14() in line 18
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK14_ENUM defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testEnumAsKeywordShouldFailWith14() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK14_ENUM defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testEnumAsKeywordShouldPassWith15() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK15_ENUM defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testGenericDiamond() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_GENERIC_DIAMOND defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testGenericINAnnotation() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable GENERIC_IN_ANNOTATION defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testGenericReturnType() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable GENERIC_RETURN_TYPE defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testGenericsInMethodCall() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable GENERIC_IN_METHOD_CALL defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testJDK15ForLoopShouldFailWith14() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK15_FORLOOP defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testJDK15ForLoopSyntaxShouldPassWith15() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK15_FORLOOP defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testJDK15ForLoopSyntaxWithModifiers() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK15_FORLOOP_WITH_MODIFIER defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testJDK15GenericsSyntaxShouldPassWith15() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK15_GENERICS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testMulticatch() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_MULTICATCH defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testMulticatchWithAnnotations() in line 185
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_MULTICATCH_WITH_ANNOTATIONS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testMultipleGenerics() in line 124
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable FUNKY_GENERICS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable MULTIPLE_GENERICS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testNestedClassInMethodBug() in line 103
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable INNER_BUG defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable INNER_BUG2 defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testStringInSwitch() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_STRING_IN_SWITCH defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testTryWithResources() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_TRY_WITH_RESOURCES defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testTryWithResourcesMulti() in line 170
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_TRY_WITH_RESOURCES_MULTI defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testTryWithResourcesSemi() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_TRY_WITH_RESOURCES_SEMI defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testTryWithResourcesWithAnnotations() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK17_TRY_WITH_RESOURCES_WITH_ANNOTATIONS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testVarargsShouldFailWith14() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK15_VARARGS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testVarargsShouldPassWith15() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable JDK15_VARARGS defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   function testVariousParserBugs() in line 94
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable FIELDS_BUG defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable GT_BUG defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable ANNOTATIONS_BUG defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable CONSTANT_FIELD_IN_ANNOTATION_BUG defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
      uses variable GENERIC_IN_FIELD defined in net::sourceforge::pmd::lang::java::ast::JDKVersionTest
   variable ANNOTATED_LOCALS in line 188
   variable ANNOTATED_PARAMS in line 195
   variable ANNOTATIONS_BUG in line 295
   variable ASSERT_TEST1 in line 200
   variable ASSERT_TEST2 in line 207
   variable ASSERT_TEST3 in line 214
   variable ASSERT_TEST4 in line 221
   variable ASSERT_TEST5 in line 228
   variable ASSERT_TEST5_a in line 234
   variable ASSERT_TEST6 in line 239
   variable ASSERT_TEST7 in line 246
   variable CONSTANT_FIELD_IN_ANNOTATION_BUG in line 300
   variable FIELDS_BUG in line 285
   variable FUNKY_GENERICS in line 354
   variable GENERIC_IN_ANNOTATION in line 310
   variable GENERIC_IN_FIELD in line 305
   variable GENERIC_IN_METHOD_CALL in line 333
   variable GENERIC_RETURN_TYPE in line 340
   variable GT_BUG in line 290
   variable INNER_BUG in line 317
   variable INNER_BUG2 in line 325
   variable JDK14_ENUM in line 256
   variable JDK15_ENUM in line 251
   variable JDK15_FORLOOP in line 266
   variable JDK15_FORLOOP_WITH_MODIFIER in line 273
   variable JDK15_GENERICS in line 280
   variable JDK15_VARARGS in line 261
   variable JDK17_GENERIC_DIAMOND in line 453
   variable JDK17_MULTICATCH in line 486
   variable JDK17_MULTICATCH_WITH_ANNOTATIONS in line 494
   variable JDK17_NUMERICAL_LITERALS in line 359
   variable JDK17_STRING_IN_SWITCH in line 437
   variable JDK17_TRY_WITH_RESOURCES in line 458
   variable JDK17_TRY_WITH_RESOURCES_MULTI in line 472
   variable JDK17_TRY_WITH_RESOURCES_SEMI in line 465
   variable JDK17_TRY_WITH_RESOURCES_WITH_ANNOTATIONS in line 479
   variable MULTIPLE_GENERICS in line 348
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/MethodDeclTest.java
module net::sourceforge::pmd::lang::java::ast::MethodDeclTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function getMethodDecl(String[]) in line 78
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
   function suite() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAbstract() in line 55
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::MethodDeclTest
      uses function isAbstract() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   function testFinal() in line 39
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::MethodDeclTest
      uses function isFinal() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   function testNative() in line 63
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::MethodDeclTest
      uses function isNative() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function testPrivate() in line 25
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::MethodDeclTest
      uses function isPrivate() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function testProtected() in line 32
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::MethodDeclTest
      uses function isProtected() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
   function testPublic() in line 18
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::MethodDeclTest
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   function testStrict() in line 71
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::MethodDeclTest
      uses function isStrictfp() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
   function testSynchronized() in line 47
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodDecl(String[]) defined in net::sourceforge::pmd::lang::java::ast::MethodDeclTest
      uses function isSynchronized() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaAccessNode
      uses function isPublic() defined in net::sourceforge::pmd::lang::java::ast::ASTMethodDeclaration
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ParserCornersTest.java
module net::sourceforge::pmd::lang::java::ast::ParserCornersTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function emptyFileJustComment() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava18(String) defined in net::sourceforge::pmd::lang::java::ParserTst
   function readAsString(String) in line 111
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function testCastLookaheadProblem() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable CAST_LOOKAHEAD_PROBLEM defined in net::sourceforge::pmd::lang::java::ast::ParserCornersTest
   function testGenericsProblem() in line 51
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable GENERICS_PROBLEM defined in net::sourceforge::pmd::lang::java::ast::ParserCornersTest
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
   function testGetFirstASTNameImageNull() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable ABSTRACT_METHOD_LEVEL_CLASS_DECL defined in net::sourceforge::pmd::lang::java::ast::ParserCornersTest
   function testInnerOuterClass() in line 28
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
   function testLambdaBug1333() in line 72
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava18(String) defined in net::sourceforge::pmd::lang::java::ParserTst
   function testMultipleExceptionCatching() in line 91
      protection public
      19 lines of code
      0 parameters
      3 conditional paths
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable e defined in sample-matlab.m
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
   function testParsersCases() in line 57
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function readAsString(String) defined in net::sourceforge::pmd::lang::java::ast::ParserCornersTest
      uses function parseJava15(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses function parseJava17(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses function parseJava18(String) defined in net::sourceforge::pmd::lang::java::ParserTst
   variable ABSTRACT_METHOD_LEVEL_CLASS_DECL in line 125
   variable CAST_LOOKAHEAD_PROBLEM in line 130
   variable GENERICS_PROBLEM in line 122
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/SimpleNodeTest.java
module net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 351
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testColumnsOnQualifiedName() in line 76
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable QUALIFIED_NAME defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function verifyNode(Node,int,int,int,int) defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testContainsChildOfType() in line 247
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
      uses variable CONTAINS_CHILDREN_OF_TYPE defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testContainsNoInner() in line 211
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
      uses variable CONTAINS_NO_INNER defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testContainsNoInnerWithAnonInner() in line 239
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
      uses variable CONTAINS_NO_INNER_WITH_ANON_INNER defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testFindDescendantsOfType() in line 116
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testFindDescendantsOfTypeMultiple() in line 123
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testFindDescendantsOfTypeRecurse() in line 132
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testGetFirstChild() in line 142
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function x(K+) defined in sample-matlab.m
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testGetFirstChildNested() in line 155
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function x(K+) defined in sample-matlab.m
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testGetFirstChildNestedDeeper() in line 170
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function x(K+) defined in sample-matlab.m
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testHasExplicitExtends() in line 48
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable HAS_EXPLICIT_EXTENDS defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testHasExplicitImplements() in line 62
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable HAS_EXPLICIT_IMPLEMENTS defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testLineNumbersAreSetOnAllSiblings() in line 103
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable LINE_NUMBERS_ON_SIBLINGS defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testLineNumbersForNameSplitOverTwoLines() in line 88
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable BROKEN_LINE_IN_NAME defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function verifyNode(Node,int,int,int,int) defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testMethodDiffLines() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable METHOD_DIFF_LINES defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function verifyNode(Node,int,int,int,int) defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testMethodSameLine() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable METHOD_SAME_LINE defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function verifyNode(Node,int,int,int,int) defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testNoExplicitExtends() in line 55
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_EXPLICIT_EXTENDS defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testNoExplicitImplements() in line 69
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_EXPLICIT_IMPLEMENTS defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testNoLookahead() in line 41
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NO_LOOKAHEAD defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses function verifyNode(Node,int,int,int,int) defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testParentMethods() in line 188
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function parseJava14(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
      uses variable d defined in sample-matlab.m
   function testUserData() in line 264
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
      uses variable HAS_EXPLICIT_EXTENDS defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function testXPathNodeSelect() in line 253
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
      uses variable TEST_XPATH defined in net::sourceforge::pmd::lang::java::ast::SimpleNodeTest
   function verifyNode(Node,int,int,int,int) in line 273
      6 lines of code
      5 parameters
      1 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndColumn() defined in net::sourceforge::pmd::lang::ast::Node
   variable BROKEN_LINE_IN_NAME in line 301
   variable CONTAINS_CHILDREN_OF_TYPE in line 326
   variable CONTAINS_NO_INNER in line 331
   variable CONTAINS_NO_INNER_WITH_ANON_INNER in line 338
   variable HAS_EXPLICIT_EXTENDS in line 280
   variable HAS_EXPLICIT_IMPLEMENTS in line 286
   variable LINE_NUMBERS_ON_SIBLINGS in line 306
   variable METHOD_DIFF_LINES in line 319
   variable METHOD_SAME_LINE in line 292
   variable NO_EXPLICIT_EXTENDS in line 283
   variable NO_EXPLICIT_IMPLEMENTS in line 289
   variable NO_LOOKAHEAD in line 317
   variable QUALIFIED_NAME in line 297
   variable TEST1 in line 202
   variable TEST_XPATH in line 345
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/dfa/AcceptanceTest.java
module net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function check(int,List) in line 48
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable j defined in sample-matlab.m
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getIndex() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function suite() in line 831
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function test_1() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST1_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_10() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST8_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST10 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_11() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST8_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST11 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_12() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST12_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST12 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_13() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST13_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST13 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_14() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST14_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST14 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_15() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST15_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST15 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_16() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST16_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST16 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_17() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST17_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST17 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_18() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST18_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST18 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_19() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST19_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST19 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_2() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST2_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_20() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST20_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST20 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_21() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST21_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST21 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_22() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST22_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST22 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_23() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST23_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST23 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_24() in line 173
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST24_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST24 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_25() in line 178
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST25_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST25 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_26() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST26_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST26 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_27() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST27_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST27 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_28() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST28_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST28 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_29() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST29_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST29 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_3() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST3_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_30() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST30_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST30 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_4() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST4_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST4 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_6() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST5_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST6 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_7() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST5_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST7 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_8() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST8_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST8 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function test_9() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function check(int,List) defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST5_NODES defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
      uses variable TEST9 defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function testbook() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable FOO defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   function testLabelledBreakLockup() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable LABELLED_BREAK_LOCKUP defined in net::sourceforge::pmd::lang::java::dfa::AcceptanceTest
   variable FOO in line 27
   variable LABELLED_BREAK_LOCKUP in line 39
   variable TEST1 in line 219
   variable TEST10 in line 334
      protection public
   variable TEST11 in line 343
      protection public
   variable TEST12 in line 360
      protection public
   variable TEST12_NODES in line 352
   variable TEST13 in line 381
      protection public
   variable TEST13_NODES in line 369
   variable TEST14 in line 405
      protection public
   variable TEST14_NODES in line 394
   variable TEST15 in line 427
      protection public
   variable TEST15_NODES in line 417
   variable TEST16 in line 449
      protection public
   variable TEST16_NODES in line 438
   variable TEST17 in line 475
      protection public
   variable TEST17_NODES in line 462
   variable TEST18 in line 502
      protection public
   variable TEST18_NODES in line 490
   variable TEST19 in line 526
      protection public
   variable TEST19_NODES in line 513
   variable TEST1_NODES in line 209
   variable TEST2 in line 241
   variable TEST20 in line 552
      protection public
   variable TEST20_NODES in line 542
   variable TEST21 in line 580
      protection public
   variable TEST21_NODES in line 566
   variable TEST22 in line 607
      protection public
   variable TEST22_NODES in line 595
   variable TEST23 in line 634
      protection public
   variable TEST23_NODES in line 621
   variable TEST24 in line 662
      protection public
   variable TEST24_NODES in line 648
   variable TEST25 in line 686
      protection public
   variable TEST25_NODES in line 678
   variable TEST26 in line 709
      protection public
   variable TEST26_NODES in line 697
   variable TEST27 in line 735
      protection public
   variable TEST27_NODES in line 723
   variable TEST28 in line 764
      protection public
   variable TEST28_NODES in line 747
   variable TEST29 in line 794
      protection public
   variable TEST29_NODES in line 784
   variable TEST2_NODES in line 230
   variable TEST3 in line 260
   variable TEST30 in line 818
      protection public
   variable TEST30_NODES in line 808
   variable TEST3_NODES in line 251
   variable TEST4 in line 276
   variable TEST4_NODES in line 269
   variable TEST5_NODES in line 284
   variable TEST6 in line 292
   variable TEST7 in line 300
   variable TEST8 in line 317
      protection public
   variable TEST8_NODES in line 308
   variable TEST9 in line 325
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/AcceptanceTest.java
module net::sourceforge::pmd::lang::java::symboltable::AcceptanceTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCatchBlocks() in line 46
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_CATCH_BLOCKS defined in net::sourceforge::pmd::lang::java::symboltable::AcceptanceTest
      uses variable c defined in sample-matlab.m
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getParent() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
   function testClashingSymbols() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::AcceptanceTest
   function testDemo() in line 95
      protection public
      22 lines of code
      0 parameters
      2 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_DEMO defined in net::sourceforge::pmd::lang::java::symboltable::AcceptanceTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable d defined in sample-matlab.m
      uses function getLocation() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function testEnum() in line 119
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_ENUM defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   function testEq() in line 59
      protection public
      19 lines of code
      0 parameters
      3 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_EQ defined in net::sourceforge::pmd::lang::java::symboltable::AcceptanceTest
      uses variable e defined in sample-matlab.m
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable method defined in sample-matlab.m
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
   function testFieldFinder() in line 80
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_FIELD defined in net::sourceforge::pmd::lang::java::symboltable::AcceptanceTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function testInitializer() in line 37
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_INITIALIZERS defined in net::sourceforge::pmd::lang::java::symboltable::AcceptanceTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable isStatic defined in net::sourceforge::pmd::lang::java::ast::ASTInitializer
   function testInnerOuterClass() in line 130
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_INNER_CLASS defined in net::sourceforge::pmd::lang::java::symboltable::AcceptanceTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getUsages() defined in net::sourceforge::pmd::lang::java::ast::ASTVariableDeclaratorId
   variable TEST1 in line 153
   variable TEST_CATCH_BLOCKS in line 168
   variable TEST_DEMO in line 139
   variable TEST_EQ in line 146
   variable TEST_FIELD in line 178
   variable TEST_INITIALIZERS in line 162
   variable TEST_INNER_CLASS in line 189
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/dfa/DAAPathFinderTest.java
module net::sourceforge::pmd::lang::java::dfa::DAAPathFinderTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   inherits from net::sourceforge::pmd::lang::dfa::pathfinder::Executable
   function execute(CurrentPath) in line 24
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function suite() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testTwoUpdateDefs() in line 18
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable TWO_UPDATE_DEFS defined in net::sourceforge::pmd::lang::java::dfa::DAAPathFinderTest
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   variable TWO_UPDATE_DEFS in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/dfa/DataFlowNodeTest.java
module net::sourceforge::pmd::lang::java::dfa::DataFlowNodeTest
   function suite() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAddPathToChild() in line 21
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function testRemovePathToChild() in line 31
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function removePathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function testRemovePathWithNonChild() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function removePathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function testReverseParentPathsTo() in line 49
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function addPathToChild(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function reverseParentPathsTo(DataFlowNode) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function testSetType() in line 69
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable BREAK_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable CASE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/dfa/GeneralFiddlingTest.java
module net::sourceforge::pmd::lang::java::dfa::GeneralFiddlingTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function innerClassShouldWork() in line 27
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function buildDFA(String) defined in net::sourceforge::pmd::lang::java::ParserTst
   function test1() in line 39
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function buildDFA(String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::dfa::GeneralFiddlingTest
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable f defined in sample-matlab.m
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   variable TEST1 in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/dfa/StatementAndBraceFinderTest.java
module net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinderTest
   inherits from net::sourceforge::pmd::lang::java::ParserTst
   function suite() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testForStmtHasCorrectTypes() in line 59
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST5 defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinderTest
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable FOR_INIT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_UPDATE defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_END defined in net::sourceforge::pmd::lang::dfa::NodeType
   function testIfStmtHasCorrectTypes() in line 43
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinderTest
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable IF_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable IF_LAST_STATEMENT_WITHOUT_ELSE defined in net::sourceforge::pmd::lang::dfa::NodeType
   function testOnlyWorksForMethodsAndConstructors() in line 72
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function buildDataFlowFor(JavaNode) defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinder
   function testStatementExpressionParentChildLinks() in line 27
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinderTest
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function testVariableDeclaratorParentChildLinks() in line 35
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinderTest
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function testWhileStmtHasCorrectTypes() in line 51
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST4 defined in net::sourceforge::pmd::lang::java::dfa::StatementAndBraceFinderTest
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable WHILE_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable WHILE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   variable TEST1 in line 79
   variable TEST2 in line 86
   variable TEST3 in line 93
   variable TEST4 in line 100
   variable TEST5 in line 107
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/dfa/StatementAndBraceFinderTest.java
module net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinderTest
   inherits from net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst
   function suite() in line 268
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testExpressionParentChildLinks() in line 33
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST1 defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinderTest
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function testForStmtHasCorrectTypes() in line 81
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST5 defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinderTest
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable FOR_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_BEFORE_FIRST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable FOR_END defined in net::sourceforge::pmd::lang::dfa::NodeType
   function testIfStmtHasCorrectTypes() in line 60
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST3 defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinderTest
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable IF_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable IF_LAST_STATEMENT_WITHOUT_ELSE defined in net::sourceforge::pmd::lang::dfa::NodeType
   function testLabelledStmtHasCorrectTypes() in line 182
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST8 defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinderTest
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable LABEL_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   function testOnlyWorksForMethodsAndConstructors() in line 190
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function buildDataFlowFor(PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinder
   function testSimpleCaseStmtHasCorrectTypes() in line 99
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST6 defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinderTest
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable SWITCH_START defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable CASE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable BREAK_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable SWITCH_LAST_DEFAULT_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable SWITCH_END defined in net::sourceforge::pmd::lang::dfa::NodeType
   function testVariableOrConstantDeclaratorParentChildLinks() in line 50
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST2 defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinderTest
      uses function getDataFlowNode() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getParents() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function getChildren() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
   function testWhileStmtHasCorrectTypes() in line 72
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST4 defined in net::sourceforge::pmd::lang::plsql::dfa::StatementAndBraceFinderTest
      uses function getFlow() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses function isType(int) defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
      uses variable WHILE_EXPR defined in net::sourceforge::pmd::lang::dfa::NodeType
      uses variable WHILE_LAST_STATEMENT defined in net::sourceforge::pmd::lang::dfa::NodeType
   variable TEST1 in line 201
   variable TEST2 in line 208
   variable TEST3 in line 216
   variable TEST4 in line 223
   variable TEST5 in line 230
   variable TEST6 in line 237
   variable TEST7 in line 249
   variable TEST8 in line 261
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/dfa/StructureTest.java
module net::sourceforge::pmd::lang::java::dfa::StructureTest
   function suite() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAddResultsinDFANodeContainingAddedNode() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function createNewNode(Node) defined in net::sourceforge::pmd::lang::dfa::Structure
      uses function getNode() defined in net::sourceforge::pmd::lang::dfa::DataFlowNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/dfa/VariableAccessTest.java
module net::sourceforge::pmd::lang::java::dfa::VariableAccessTest
   function suite() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testGetVariableName() in line 10
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFINITION defined in net::sourceforge::pmd::lang::dfa::VariableAccess
      uses function getVariableName() defined in net::sourceforge::pmd::lang::dfa::VariableAccess
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ParserTst.java
module net::sourceforge::pmd::lang::java::ParserTst
   abstract class
   function buildDFA(String) in line 94
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function initializeWith(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::symboltable::SymbolFacade
      uses function initializeWith(DataFlowHandler,ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function parseJava(LanguageVersion,String) in line 119
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getSymbolFacade() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function start(Node) defined in net::sourceforge::pmd::lang::VisitorStarter
   function parseJava13(String) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseJava(LanguageVersion,String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function parseJava14(String) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseJava(LanguageVersion,String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function parseJava15(String) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseJava(LanguageVersion,String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function parseJava17(String) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseJava(LanguageVersion,String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function parseJava18(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseJava(LanguageVersion,String) defined in net::sourceforge::pmd::lang::java::ParserTst
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
module net::sourceforge::pmd::lang::java::ParserTst::Collector
   inherits from java::lang::reflect::InvocationHandler
   function getCollection() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable collection defined in net::sourceforge::pmd::lang::java::ParserTst::Collector
   function invoke(Object,Method,Object[]) in line 44
      protection public
      11 lines of code
      3 parameters
      4 conditional paths
      uses variable method defined in sample-matlab.m
      uses variable clazz defined in net::sourceforge::pmd::lang::java::ParserTst::Collector
      uses variable collection defined in net::sourceforge::pmd::lang::java::ParserTst::Collector
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getCollection() defined in net::sourceforge::pmd::lang::java::ParserTst::Collector
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function initializeWith(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::symboltable::SymbolFacade
      uses function initializeWith(DataFlowHandler,ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::dfa::DataFlowFacade
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function Collector(Class< E >) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable clazz defined in net::sourceforge::pmd::lang::java::ParserTst::Collector
   function Collector(Class< E >,Collection< E >) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable clazz defined in net::sourceforge::pmd::lang::java::ParserTst::Collector
   variable clazz in line 28
   variable collection in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/android/AndroidRulesTest.java
module net::sourceforge::pmd::lang::java::rule::android::AndroidRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::android::AndroidRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/basic/BasicRulesTest.java
module net::sourceforge::pmd::lang::java::rule::basic::BasicRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 16
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::basic::BasicRulesTest
   variable RULESET in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/rule/basic/BasicRulesTest.java
module net::sourceforge::pmd::lang::ecmascript::rule::basic::BasicRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::ecmascript::rule::basic::BasicRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/lang/jsp/rule/basic/BasicRulesTest.java
module net::sourceforge::pmd::lang::jsp::rule::basic::BasicRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::jsp::rule::basic::BasicRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/test/java/net/sourceforge/pmd/lang/vm/rule/basic/BasicRulesTest.java
module net::sourceforge::pmd::lang::vm::rule::basic::BasicRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::vm::rule::basic::BasicRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/lang/xml/rule/basic/BasicRulesTest.java
module net::sourceforge::pmd::lang::xml::rule::basic::BasicRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::xml::rule::basic::BasicRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/braces/BracesRulesTest.java
module net::sourceforge::pmd::lang::java::rule::braces::BracesRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::braces::BracesRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/rule/braces/BracesRulesTest.java
module net::sourceforge::pmd::lang::ecmascript::rule::braces::BracesRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::ecmascript::rule::braces::BracesRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/clone/CloneRulesTest.java
module net::sourceforge::pmd::lang::java::rule::clone::CloneRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::clone::CloneRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/codesize/CodesizeRulesTest.java
module net::sourceforge::pmd::lang::java::rule::codesize::CodesizeRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::codesize::CodesizeRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/rule/codesize/CodesizeRulesTest.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::CodesizeRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::plsql::rule::codesize::CodesizeRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/comments/AbstractCommentRuleTest.java
module net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRuleTest
   function testCommentAssignments() in line 47
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses variable testSubject defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRuleTest
      uses function assignCommentsToDeclarations(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   function testFilteredCommentIn() in line 34
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable testSubject defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRuleTest
      uses function filteredCommentIn(Comment) defined in net::sourceforge::pmd::lang::java::rule::comments::AbstractCommentRule
   variable testSubject in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/comments/CommentRulesTest.java
module net::sourceforge::pmd::lang::java::rule::comments::CommentRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::comments::CommentRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/controversial/ControversialRulesTest.java
module net::sourceforge::pmd::lang::java::rule::controversial::ControversialRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::controversial::ControversialRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/rule/controversial/ControversialRulesTest.java
module net::sourceforge::pmd::lang::ecmascript::rule::controversial::ControversialRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::ecmascript::rule::controversial::ControversialRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/coupling/CouplingRulesTest.java
module net::sourceforge::pmd::lang::java::rule::coupling::CouplingRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::coupling::CouplingRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/design/DesignRulesTest.java
module net::sourceforge::pmd::lang::java::rule::design::DesignRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 16
      protection public
      59 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::design::DesignRulesTest
   variable RULESET in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/empty/EmptyRulesTest.java
module net::sourceforge::pmd::lang::java::rule::empty::EmptyRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::empty::EmptyRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/finalizers/FinalizersRulesTest.java
module net::sourceforge::pmd::lang::java::rule::finalizers::FinalizersRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::finalizers::FinalizersRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/imports/ImportsRulesTest.java
module net::sourceforge::pmd::lang::java::rule::imports::ImportsRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function assertTrue(String,boolean) in line 28
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function setUp() in line 13
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::imports::ImportsRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/j2ee/J2EERulesTest.java
module net::sourceforge::pmd::lang::java::rule::j2ee::J2EERulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::j2ee::J2EERulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/javabeans/JavabeansRulesTest.java
module net::sourceforge::pmd::lang::java::rule::javabeans::JavabeansRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::javabeans::JavabeansRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/JavaRuleViolationTest.java
module net::sourceforge::pmd::lang::java::rule::JavaRuleViolationTest
   function parse(final String) in line 38
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses function jjtAccept(JavaParserVisitor,Object) defined in net::sourceforge::pmd::lang::java::ast::ASTCompilationUnit
   function testASTFormalParameterVariableName() in line 30
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parse(final String) defined in net::sourceforge::pmd::lang::java::rule::JavaRuleViolationTest
      uses function getVariableName() defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
   function testMethodName() in line 52
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parse(final String) defined in net::sourceforge::pmd::lang::java::rule::JavaRuleViolationTest
      uses function getMethodName() defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/junit/JunitRulesTest.java
module net::sourceforge::pmd::lang::java::rule::junit::JunitRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::junit::JunitRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/loggingjakartacommons/LoggingJakartaCommonsRulesTest.java
module net::sourceforge::pmd::lang::java::rule::loggingjakartacommons::LoggingJakartaCommonsRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::loggingjakartacommons::LoggingJakartaCommonsRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/loggingjava/LoggingJavaRulesTest.java
module net::sourceforge::pmd::lang::java::rule::loggingjava::LoggingJavaRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::loggingjava::LoggingJavaRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/migrating/MigratingRulesTest.java
module net::sourceforge::pmd::lang::java::rule::migrating::MigratingRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::migrating::MigratingRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/naming/NamingRulesTest.java
module net::sourceforge::pmd::lang::java::rule::naming::NamingRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::naming::NamingRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/optimizations/OptimizationsRulesTest.java
module net::sourceforge::pmd::lang::java::rule::optimizations::OptimizationsRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::optimizations::OptimizationsRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/strictexception/StrictExceptionRulesTest.java
module net::sourceforge::pmd::lang::java::rule::strictexception::StrictExceptionRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::strictexception::StrictExceptionRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/strings/AvoidDuplicateLiteralsRuleTest.java
module net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRuleTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function testAll() in line 18
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function findRule(String,String) defined in net::sourceforge::pmd::testframework::RuleTst
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses variable THRESHOLD_DESCRIPTOR defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule
      uses function runTests(Rule) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function testStringParserEmptyString() in line 25
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
   function testStringParserEscapedChar() in line 42
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
   function testStringParserEscapedEscapedChar() in line 52
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
   function testStringParserSimple() in line 32
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::java::rule::strings::AvoidDuplicateLiteralsRule::ExceptionParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/strings/StringsRulesTest.java
module net::sourceforge::pmd::lang::java::rule::strings::StringsRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::strings::StringsRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/sunsecure/SunSecureRulesTest.java
module net::sourceforge::pmd::lang::java::rule::sunsecure::SunSecureRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::sunsecure::SunSecureRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/typeresolution/CloneMethodMustImplementCloneableTest.java
module net::sourceforge::pmd::lang::java::rule::typeresolution::CloneMethodMustImplementCloneableTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 12
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::typeresolution::CloneMethodMustImplementCloneableTest
   variable RULESET in line 9
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/typeresolution/LooseCouplingTest.java
module net::sourceforge::pmd::lang::java::rule::typeresolution::LooseCouplingTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::typeresolution::LooseCouplingTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/typeresolution/SignatureDeclareThrowsExceptionTest.java
module net::sourceforge::pmd::lang::java::rule::typeresolution::SignatureDeclareThrowsExceptionTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::typeresolution::SignatureDeclareThrowsExceptionTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/typeresolution/UnusedImportsTest.java
module net::sourceforge::pmd::lang::java::rule::typeresolution::UnusedImportsTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::typeresolution::UnusedImportsTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/typeresolution/xml/MyInterface.java
module net::sourceforge::pmd::lang::java::rule::typeresolution::xml::MyInterface
   inherits from Cloneable
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/typeresolution/xml/MyTestCase.java
module net::sourceforge::pmd::lang::java::rule::typeresolution::xml::MyTestCase
   inherits from junit::framework::TestCase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/unnecessary/UnnecessaryRulesTest.java
module net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 16
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::unnecessary::UnnecessaryRulesTest
   variable RULESET in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/rule/unnecessary/UnnecessaryRulesTest.java
module net::sourceforge::pmd::lang::ecmascript::rule::unnecessary::UnnecessaryRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::ecmascript::rule::unnecessary::UnnecessaryRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/unusedcode/UnusedCodeRulesTest.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedCodeRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 19
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::java::rule::unusedcode::UnusedCodeRulesTest
   variable RULESET in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/unusedcode/unusedprivatemethod/ClassWithPublicEnum.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::unusedprivatemethod::ClassWithPublicEnum
module net::sourceforge::pmd::lang::java::rule::unusedcode::unusedprivatemethod::ClassWithPublicEnum::PublicEnum
   variable VALUE1 in line 22
      protection public
   variable VALUE2 in line 23
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/unusedcode/unusedprivatemethod/DashboardGraphInnateFilter_o.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::unusedprivatemethod::DashboardGraphInnateFilter_o
   inherits from net::sourceforge::pmd::lang::java::rule::unusedcode::unusedprivatemethod::DashboardInnateFilter_o
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/unusedcode/unusedprivatemethod/DashboardInnateFilter_o.java
module net::sourceforge::pmd::lang::java::rule::unusedcode::unusedprivatemethod::DashboardInnateFilter_o
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/XPathRuleTest.java
module net::sourceforge::pmd::lang::java::rule::XPathRuleTest
   inherits from net::sourceforge::pmd::testframework::RuleTst
   function setUp() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function suite() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testFollowingSibling() in line 137
      protection public
      37 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function setXPath(String) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function setProperties(Map< PropertyDescriptor<?>, Object >) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function setVersion(String) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable XPATH_1_0 defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function evaluate(Node,RuleContext) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable XPATH_2_0 defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
   function testImageOfPrimarySuffix() in line 90
      protection public
      41 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function setXPath(String) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function setProperties(Map< PropertyDescriptor<?>, Object >) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function setVersion(String) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable XPATH_1_0 defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses function evaluate(Node,RuleContext) defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable XPATH_1_0_COMPATIBILITY defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
      uses variable XPATH_2_0 defined in net::sourceforge::pmd::lang::rule::xpath::XPathRuleQuery
   function testPluginname() in line 51
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function setXPath(String) defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function getSourceCodeProcessor() defined in net::sourceforge::pmd::PMD
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::rule::XPathRuleTest
      uses function iterator() defined in net::sourceforge::pmd::Report
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
   function testVariables() in line 67
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function setXPath(String) defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable f defined in sample-matlab.m
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function getSourceCodeProcessor() defined in net::sourceforge::pmd::PMD
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::rule::XPathRuleTest
      uses function iterator() defined in net::sourceforge::pmd::Report
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
   variable TEST1 in line 175
   variable TEST2 in line 180
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/SuppressWarningsTest.java
module net::sourceforge::pmd::lang::java::SuppressWarningsTest
   inherits from net::sourceforge::pmd::testframework::RuleTst
   function suite() in line 298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testClassLevelSuppression() in line 41
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
   function testConstructorLevelSuppression() in line 64
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST5 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testFieldLevelSuppression() in line 71
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST6 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testInheritedSuppression() in line 50
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testLocalVariableLevelSuppression() in line 85
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST8 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testMethodLevelSuppression() in line 57
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST4 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testNoSuppressionBlank() in line 134
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST10 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testNoSuppressionSomethingElseS() in line 141
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST11 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testParameterLevelSuppression() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST7 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testSpecificSuppression() in line 92
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST9 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testSpecificSuppressionAtTopLevel() in line 155
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST13 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testSpecificSuppressionMulitpleValues1() in line 120
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST9_MULTIPLE_VALUES_1 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testSpecificSuppressionMulitpleValues2() in line 127
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST9_MULTIPLE_VALUES_2 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testSpecificSuppressionValue1() in line 99
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST9_VALUE1 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testSpecificSuppressionValue2() in line 106
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST9_VALUE2 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testSpecificSuppressionValue3() in line 113
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST9_VALUE3 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   function testSuppressAll() in line 148
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable TEST12 defined in net::sourceforge::pmd::lang::java::SuppressWarningsTest
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function size() defined in net::sourceforge::pmd::Report
   variable TEST1 in line 161
   variable TEST10 in line 272
   variable TEST11 in line 280
   variable TEST12 in line 288
   variable TEST13 in line 293
   variable TEST2 in line 165
   variable TEST3 in line 173
   variable TEST4 in line 183
   variable TEST5 in line 191
   variable TEST6 in line 199
   variable TEST7 in line 208
   variable TEST8 in line 214
   variable TEST9 in line 222
   variable TEST9_MULTIPLE_VALUES_1 in line 254
   variable TEST9_MULTIPLE_VALUES_2 in line 263
   variable TEST9_VALUE1 in line 230
   variable TEST9_VALUE2 in line 238
   variable TEST9_VALUE3 in line 246
module net::sourceforge::pmd::lang::java::SuppressWarningsTest::BarRule
   inherits from net::sourceforge::pmd::lang::java::rule::AbstractJavaRule
   function getName() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(ASTCompilationUnit,Object) in line 24
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable c defined in sample-matlab.m
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/ApplierTest.java
module net::sourceforge::pmd::lang::java::symboltable::ApplierTest
   function suite() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSimple() in line 30
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
module net::sourceforge::pmd::lang::java::symboltable::ApplierTest::MyFunction
   inherits from net::sourceforge::pmd::util::UnaryFunction
   function applyTo(Object) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function gotCallback() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable gotCallback in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/ClassScopeTest.java
module net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 404
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAnonymousInnerClassName() in line 57
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getClassName() defined in net::sourceforge::pmd::lang::java::symboltable::ClassScope
   function testbuz() in line 185
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable METH defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
   function testCantContainsSuperToString() in line 75
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::Node
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function testClassName() in line 95
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
   function testContains() in line 66
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function testContainsStaticVariablePrefixedWithClassName() in line 83
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addDeclaration(NameDeclaration) defined in net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::Node
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function testEnumsClassScope() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode15(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable ENUM_SCOPE defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
   function testEnumTypeParameter() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode15(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable ENUM_TYPE_PARAMETER defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
   function testMethodDeclarationRecorded() in line 102
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable METHOD_DECLARATIONS_RECORDED defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testMethodUsageSeen() in line 192
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable METHOD_USAGE_SEEN defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function testMethodUsageSeen2() in line 230
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable METHOD_USAGE_SEEN2 defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   function testMethodUsageSeenWithThis() in line 211
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable METHOD_USAGE_SEEN_WITH_THIS defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function testNestedClassDeclFound() in line 175
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable NESTED_CLASS_FOUND defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable c defined in sample-matlab.m
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function testNestedClassFieldAndParameter() in line 258
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable NESTED_CLASS_FIELD_AND_PARAM defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
   function testNoParams() in line 147
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable NO_PARAMS defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getParameterDisplaySignature() defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
   function testNullType() in line 278
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_NULL_TYPE defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
   function testOneParam() in line 129
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable ONE_PARAM defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getParameterDisplaySignature() defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
   function testOneParamVararg() in line 156
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode15(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable ONE_PARAM_VARARG defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getParameterDisplaySignature() defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
   function testTwoMethodsSameNameDiffArgs() in line 115
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable METHODS_WITH_DIFF_ARG defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function testTwoParams() in line 138
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TWO_PARAMS defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getParameterDisplaySignature() defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
   function testTwoParamsVararg() in line 165
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode15(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TWO_PARAMS_VARARG defined in net::sourceforge::pmd::lang::java::symboltable::ClassScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getParameterDisplaySignature() defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclaration
   function testVarArgsEmpty() in line 43
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode15(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   variable CLASS_NAME in line 366
   variable ENUM_SCOPE in line 380
   variable ENUM_TYPE_PARAMETER in line 395
   variable METH in line 321
   variable METHOD_DECLARATIONS_RECORDED in line 369
   variable METHOD_USAGE_SEEN in line 304
   variable METHOD_USAGE_SEEN2 in line 295
   variable METHOD_USAGE_SEEN_WITH_THIS in line 312
   variable METHODS_WITH_DIFF_ARG in line 374
   variable NESTED_CLASS_FIELD_AND_PARAM in line 282
   variable NESTED_CLASS_FOUND in line 330
   variable NO_PARAMS in line 347
   variable ONE_PARAM in line 335
   variable ONE_PARAM_VARARG in line 353
   variable TEST_NULL_TYPE in line 389
      protection public
   variable TWO_PARAMS in line 341
   variable TWO_PARAMS_VARARG in line 359
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/GlobalScopeTest.java
module net::sourceforge::pmd::lang::java::symboltable::GlobalScopeTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testClassDeclAppears() in line 17
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::GlobalScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function testEnums() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode15(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::symboltable::GlobalScopeTest
   variable TEST1 in line 31
   variable TEST2 in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/ImageFinderFunctionTest.java
module net::sourceforge::pmd::lang::java::symboltable::ImageFinderFunctionTest
   function suite() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSeveralImages() in line 30
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testSingleImage() in line 20
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/LocalScopeTest.java
module net::sourceforge::pmd::lang::java::symboltable::LocalScopeTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testgetEnclosingMethodScope() in line 106
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST4 defined in net::sourceforge::pmd::lang::java::symboltable::LocalScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function testLocalVariableDeclarationFound() in line 54
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::LocalScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
   function testLocalVariableTypesAreRecorded() in line 88
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::LocalScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function testMethodArgumentTypesAreRecorded() in line 97
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST5 defined in net::sourceforge::pmd::lang::java::symboltable::LocalScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getTypeImage() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function testNameWithSuperIsNotFlaggedAsUnused() in line 41
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setUsesSuperModifier() defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addNameOccurrence(NameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::LocalScope
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function testNameWithThisOrSuperIsNotFlaggedAsUnused() in line 28
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setUsesThisModifier() defined in net::sourceforge::pmd::lang::java::ast::ASTPrimaryPrefix
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function addNameOccurrence(NameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::LocalScope
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::AbstractScope
   function testPostfixUsageIsRecorded() in line 76
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::symboltable::LocalScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getLocation() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function testQualifiedNameOccurrence() in line 65
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::symboltable::LocalScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getImage() defined in net::sourceforge::pmd::lang::java::symboltable::JavaNameOccurrence
   variable TEST1 in line 115
      protection public
   variable TEST2 in line 122
      protection public
   variable TEST3 in line 130
      protection public
   variable TEST4 in line 138
      protection public
   variable TEST5 in line 143
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/MethodNameDeclarationTest.java
module net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclarationTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testEquality() in line 20
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode15(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable SIMILAR defined in net::sourceforge::pmd::lang::java::symboltable::MethodNameDeclarationTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   variable SIMILAR in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/MethodScopeTest.java
module net::sourceforge::pmd::lang::java::symboltable::MethodScopeTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testGenerics() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_GENERICS defined in net::sourceforge::pmd::lang::java::symboltable::MethodScopeTest
   function testMethodName() in line 30
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::MethodScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getName() defined in net::sourceforge::pmd::lang::java::symboltable::MethodScope
   function testMethodParameterOccurrenceRecorded() in line 19
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::MethodScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function getLocation() defined in net::sourceforge::pmd::lang::symboltable::NameOccurrence
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   variable TEST1 in line 42
      protection public
   variable TEST_GENERICS in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/NameOccurrencesTest.java
module net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testEnumStaticUsage() in line 80
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST_ENUM defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getNames() defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
   function testIsSelfAssignment() in line 67
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST5 defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getNames() defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
      uses variable TEST6 defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
   function testNameLinkage() in line 38
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getNames() defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
   function testQualifiedOccurrence() in line 58
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST4 defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getNames() defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
   function testSimpleVariableOccurrence() in line 47
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getNames() defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
   function testSuper() in line 21
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getNames() defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
   function testThis() in line 29
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::symboltable::NameOccurrencesTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getNames() defined in net::sourceforge::pmd::lang::java::symboltable::NameFinder
   variable TEST1 in line 95
      protection public
   variable TEST2 in line 102
      protection public
   variable TEST3 in line 109
      protection public
   variable TEST4 in line 116
      protection public
   variable TEST5 in line 123
      protection public
   variable TEST6 in line 137
      protection public
   variable TEST_ENUM in line 151
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/ScopeAndDeclarationFinderTest.java
module net::sourceforge::pmd::lang::java::symboltable::ScopeAndDeclarationFinderTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function testJava8LambdaScoping() in line 22
      protection public
      22 lines of code
      0 parameters
      2 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getVariableDeclarations() defined in net::sourceforge::pmd::lang::java::symboltable::LocalScope
      uses function contains(NameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::AbstractJavaScope
      uses function findVariableHere(JavaNameOccurrence) defined in net::sourceforge::pmd::lang::java::symboltable::LocalScope
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/ScopeCreationVisitorTest.java
module net::sourceforge::pmd::lang::java::symboltable::ScopeCreationVisitorTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testScopesAreCreated() in line 16
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::ScopeCreationVisitorTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
   variable TEST1 in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/SimpleTypedNameDeclarationTest.java
module net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclarationTest
   function by(Class<?>,String) in line 75
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
   function byClass(Class<?>) in line 69
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
   function byName(String) in line 72
      3 lines of code
      1 parameters
      1 conditional paths
   function testEquals() in line 25
      protection public
      43 lines of code
      0 parameters
      1 conditional paths
      uses function byClass(Class<?>) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclarationTest
      uses function byName(String) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclarationTest
      uses function equals(Object) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclaration
      uses function by(Class<?>,String) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclarationTest
      uses function withNext(SimpleTypedNameDeclaration,String) defined in net::sourceforge::pmd::lang::java::symboltable::SimpleTypedNameDeclarationTest
   function withNext(SimpleTypedNameDeclaration,String) in line 78
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScopeTest.java
module net::sourceforge::pmd::lang::java::symboltable::SourceFileScopeTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testClassDeclAppears() in line 18
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function testNestedClasses() in line 40
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::AbstractNameDeclaration
   function testPackageIsEmptyString() in line 26
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
   function testPackageNameFound() in line 33
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST2 defined in net::sourceforge::pmd::lang::java::symboltable::SourceFileScopeTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getScope() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaNode
      uses function getEnclosingScope(Class< T >) defined in net::sourceforge::pmd::lang::symboltable::Scope
   variable TEST1 in line 49
   variable TEST2 in line 52
   variable TEST3 in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/STBBaseTst.java
module net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   abstract class
   function parseCode(String) in line 17
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function parseCode(String,LanguageVersion) in line 25
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses variable stb defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function initializeWith(ASTCompilationUnit) defined in net::sourceforge::pmd::lang::java::symboltable::SymbolFacade
   function parseCode15(String) in line 21
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   variable acu in line 14
   variable stb in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/TypeSetTest.java
module net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function getResolver() in line 188
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function importOnDemandResolverFail1() in line 177
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getResolver() defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function importOnDemandResolverFail2() in line 183
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getResolver() defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function suite() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAddImport() in line 28
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testASTCompilationUnitPackage() in line 21
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testCurrentPackageResolverPass() in line 152
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testCurrentPackageResolverWithNull() in line 158
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testExplicitImportResolver() in line 112
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testExplicitImportResolverWithNull() in line 120
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testExplicitImportResolverWithNullAndEmptyImports() in line 128
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testFindClassExplicitImport() in line 50
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testFindClassImplicitImport() in line 35
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testFindClassImportOnDemand() in line 58
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testFindClassPrimitive() in line 66
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testFindClassSamePackage() in line 42
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testFindClassVoid() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testFindFullyQualified() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function testFullyQualifiedNameResolverWithNull() in line 197
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testImplicitImportResolverPass() in line 134
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testImplicitImportResolverPassFail() in line 140
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testImplicitImportResolverWithNull() in line 146
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses variable pmdClassLoader defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testImportOnDemandResolverPass() in line 164
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getResolver() defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testImportOnDemandResolverWithNull() in line 171
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function getResolver() defined in net::sourceforge::pmd::lang::java::symboltable::TypeSetTest
   function testPrimitiveTypeResolver() in line 86
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testPrimitiveTypeResolverWithNull() in line 94
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testVoidTypeResolver() in line 100
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   function testVoidTypeResolverWithNull() in line 106
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
   variable pmdClassLoader in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/VariableNameDeclarationTest.java
module net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclarationTest
   inherits from net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function suite() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testArrayIsReferenceType() in line 60
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclarationTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function isReferenceType() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function testConstructor() in line 24
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclarationTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses function getImage() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function getNode() defined in net::sourceforge::pmd::lang::symboltable::NameDeclaration
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function testExceptionBlkParam() in line 34
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function jjtSetParent(Node) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function isExceptionBlockParameter() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function testIsArray() in line 46
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclarationTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function isArray() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function testParamTypeImage() in line 81
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST5 defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclarationTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function testPrimitiveType() in line 53
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST1 defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclarationTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses function isPrimitiveType() defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclaration
   function testPrimitiveTypeImage() in line 67
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST3 defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclarationTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   function testRefTypeImage() in line 74
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function parseCode(String) defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
      uses variable TEST4 defined in net::sourceforge::pmd::lang::java::symboltable::VariableNameDeclarationTest
      uses variable acu defined in net::sourceforge::pmd::lang::java::symboltable::STBBaseTst
   variable TEST1 in line 87
      protection public
   variable TEST2 in line 94
      protection public
   variable TEST3 in line 101
      protection public
   variable TEST4 in line 108
      protection public
   variable TEST5 in line 114
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/symboltable/VariableUsageFinderFunctionTest.java
module net::sourceforge::pmd::lang::java::symboltable::VariableUsageFinderFunctionTest
   function suite() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testLookingForUsed() in line 23
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function setImage(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable f defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/LanguageVersionDiscovererTest.java
module net::sourceforge::pmd::LanguageVersionDiscovererTest
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testJavaFileUsing14() in line 34
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function testJavaFileUsingDefaults() in line 21
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testJspFile() in line 22
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testLanguageVersionDiscoverer() in line 45
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguageVersionDiscoverer() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultLanguageVersion(Language) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::PMDConfiguration
   function testPlsql() in line 21
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testPython() in line 23
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/LanguageVersionDiscovererTest.java
module net::sourceforge::pmd::LanguageVersionDiscovererTest
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testJavaFileUsing14() in line 34
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function testJavaFileUsingDefaults() in line 21
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testJspFile() in line 22
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testLanguageVersionDiscoverer() in line 45
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguageVersionDiscoverer() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultLanguageVersion(Language) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::PMDConfiguration
   function testPlsql() in line 21
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testPython() in line 23
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/LanguageVersionDiscovererTest.java
module net::sourceforge::pmd::LanguageVersionDiscovererTest
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testJavaFileUsing14() in line 34
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function testJavaFileUsingDefaults() in line 21
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testJspFile() in line 22
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testLanguageVersionDiscoverer() in line 45
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguageVersionDiscoverer() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultLanguageVersion(Language) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::PMDConfiguration
   function testPlsql() in line 21
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testPython() in line 23
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/test/java/net/sourceforge/pmd/LanguageVersionDiscovererTest.java
module net::sourceforge::pmd::LanguageVersionDiscovererTest
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suite() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testJavaFileUsing14() in line 34
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
   function testJavaFileUsingDefaults() in line 21
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
   function testJspFile() in line 22
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testLanguageVersionDiscoverer() in line 45
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function getLanguageVersionDiscoverer() defined in net::sourceforge::pmd::PMDConfiguration
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getDefaultLanguageVersion(Language) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::PMDConfiguration
   function testPlsql() in line 21
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testPython() in line 23
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getDefaultLanguageVersionForFile(File) defined in net::sourceforge::pmd::lang::LanguageVersionDiscoverer
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/ClassTypeResolverTest.java
module net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
   function acceptanceTest() in line 59
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
   function parseAndTypeResolveForClass(Class<?>,String) in line 508
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getSymbolFacade() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function start(Node) defined in net::sourceforge::pmd::lang::VisitorStarter
      uses function getTypeResolutionFacade(ClassLoader) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function parseAndTypeResolveForClass15(Class<?>) in line 501
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass(Class<?>,String) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
   function suite() in line 497
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAnonymousInnerClass() in line 124
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function testAssignmentOperators() in line 475
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testBinaryLogicalOperators() in line 408
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testBinaryNumericOperators() in line 455
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testBinaryNumericPromotion() in line 309
      protection public
      65 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testBinaryStringPromotion() in line 377
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testClassNameExists() in line 51
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function classNameExists(String) defined in net::sourceforge::pmd::lang::java::typeresolution::ClassTypeResolver
   function testEnumAnonymousInnerClass() in line 82
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
   function testExtraTopLevelClass() in line 91
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function testInnerClass() in line 107
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function getType() defined in net::sourceforge::pmd::lang::java::ast::AbstractJavaTypeNode
   function testLiterals() in line 139
      protection public
      148 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testUnaryLogicalOperators() in line 394
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testUnaryNumericOperators() in line 433
      protection public
      19 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function testUnaryNumericPromotion() in line 290
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass15(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverTest
      uses function findChildNodesWithXPath(String) defined in net::sourceforge::pmd::lang::ast::AbstractNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/ClassWithImportInnerOnDemand.java
module net::sourceforge::pmd::typeresolution::ClassWithImportInnerOnDemand
   function foo(Map< String, String >) in line 14
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable e defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/ClassWithImportOnDemand.java
module net::sourceforge::pmd::typeresolution::ClassWithImportOnDemand
   function foo() in line 8
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/PMDASMClassLoaderTest.java
module net::sourceforge::pmd::typeresolution::PMDASMClassLoaderTest
   function setUp() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cl defined in net::sourceforge::pmd::typeresolution::PMDASMClassLoaderTest
   function suite() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testCachingMemoryConsumption() in line 97
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
      uses variable cl defined in net::sourceforge::pmd::typeresolution::PMDASMClassLoaderTest
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable e defined in sample-matlab.m
   function testCachingOfNotFoundClasses() in line 59
      protection public
      20 lines of code
      0 parameters
      3 conditional paths
      uses variable cl defined in net::sourceforge::pmd::typeresolution::PMDASMClassLoaderTest
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses variable e defined in sample-matlab.m
   function testClassWithImportInnerOnDemand() in line 37
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable cl defined in net::sourceforge::pmd::typeresolution::PMDASMClassLoaderTest
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses function getImportedClasses(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   function testLoadClassWithImportOnDemand() in line 24
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable cl defined in net::sourceforge::pmd::typeresolution::PMDASMClassLoaderTest
      uses function loadClass(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
      uses function getImportedClasses(String) defined in net::sourceforge::pmd::lang::java::typeresolution::PMDASMClassLoader
   variable cl in line 16
module net::sourceforge::pmd::typeresolution::PMDASMClassLoaderTest::MockedClassLoader
   inherits from ClassLoader
   function findClass(String) in line 84
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/AnonymousInnerClass.java
module net::sourceforge::pmd::typeresolution::testdata::AnonymousInnerClass
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/ArrayListFound.java
module net::sourceforge::pmd::typeresolution::testdata::ArrayListFound
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/DefaultJavaLangImport.java
module net::sourceforge::pmd::typeresolution::testdata::DefaultJavaLangImport
   function toString() in line 5
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/EnumWithAnonymousInnerClass.java
module net::sourceforge::pmd::typeresolution::testdata::EnumWithAnonymousInnerClass
   variable VAL in line 8
module net::sourceforge::pmd::typeresolution::testdata::EnumWithAnonymousInnerClass::Inner
   function get() in line 5
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/ExtraTopLevelClass.java
module net::sourceforge::pmd::typeresolution::testdata::ExtraTopLevelClass
module net::sourceforge::pmd::typeresolution::testdata::TheExtraTopLevelClass
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/InnerClass.java
module net::sourceforge::pmd::typeresolution::testdata::InnerClass
   function foo(TheInnerClass) in line 7
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
module net::sourceforge::pmd::typeresolution::testdata::InnerClass::TheInnerClass
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/Literals.java
module net::sourceforge::pmd::typeresolution::testdata::Literals
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/Operators.java
module net::sourceforge::pmd::typeresolution::testdata::Operators
   function assignmentOperators() in line 50
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function binaryLogicalOperators() in line 14
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function binaryNumericOperators() in line 39
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function unaryLogicalOperators() in line 9
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function unaryNumericOperators() in line 30
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/testdata/Promotion.java
module net::sourceforge::pmd::typeresolution::testdata::Promotion
   function binaryNumericPromotion() in line 19
      protection public
      52 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function binaryStringPromotion() in line 72
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function unaryNumericPromotion() in line 8
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/ant/java/PMDTaskTestExample.java
module ant::java::PMDTaskTestExample
   function veryLongMethod() in line 6
      protection public
      102 lines of code
      0 parameters
      1 conditional paths
   variable testField in line 109
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/ast/ParserCornerCases.java
module Superclass
   function Superclass() in line 12
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
module Outer
module Outer::Inner
module Child
   inherits from Outer::Inner
module ParserCornerCases
   inherits from Superclass
   function bitwiseOperator() in line 72
      protection public
      5 lines of code
      0 parameters
      11 conditional paths
      uses variable c defined in sample-matlab.m
   function testGeneric() in line 59
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function x(K+) defined in sample-matlab.m
   function ParserCornerCases() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParserCornerCases(int) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ParserCornerCases(String) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module PmdTestParent
   function PmdTestParent(Object) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module PmdTestChild
   inherits from PmdTestParent
   function PmdTestChild() in line 88
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
module SimpleBean
module SimpleBeanUser
module SimpleBeanUser2
   inherits from SimpleBeanUser
module TestParseAnnototation
module FooBlock
module MyFoo
module Foo
   inherits from MyFoo
   function Foo() in line 157
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
module SuperTest
   function iterator() in line 174
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
module ClazzPropertyOfPrimitiveTypes
   function test() in line 203
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/ast/ParserCornerCases17.java
module ParserCornerCases17
   function binaryLiterals() in line 29
      protection public
      42 lines of code
      0 parameters
      10 conditional paths
   function catchingMultipleExceptionTypes() in line 163
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function expressionInCastExpression() in line 176
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function stringsInSwitchStatements() in line 91
      protection public
      24 lines of code
      0 parameters
      8 conditional paths
      uses variable t defined in sample-matlab.m
   function theTryWithResourcesStatement() in line 132
      protection public
      30 lines of code
      0 parameters
      4 conditional paths
   function typeInferenceForGenericInstanceCreation() in line 121
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function underscoreInNumericLiterals() in line 72
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
   function ParserCornerCases17() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module ParserCornerCases17::MyClass
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/ast/ParserCornerCases18.java
module ParserCornerCases18
   function comparingByKey() in line 74
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function doPrivileged(PrivilegedAction< String >) in line 66
      3 lines of code
      1 parameters
      1 conditional paths
   function filterFiles(FileFilter[]) in line 70
      2 lines of code
      1 parameters
      1 conditional paths
   function lambdas() in line 24
      protection public
      34 lines of code
      0 parameters
      1 conditional paths
      uses variable f defined in sample-matlab.m
      uses function filterFiles(FileFilter[]) defined in ParserCornerCases18
      uses function doPrivileged(PrivilegedAction< String >) defined in ParserCornerCases18
      uses variable c defined in sample-matlab.m
      uses variable r defined in sample-matlab.m
      uses variable e defined in sample-matlab.m
   function methodReferences() in line 91
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable r defined in sample-matlab.m
      uses function toDoLater() defined in ParserCornerCases18
      uses function staticMethod() defined in ParserCornerCases18
   function staticMethod() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toDoLater() in line 60
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function typeAnnotations() in line 118
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
module ParserCornerCases18::PmdMethodReferenceTest
   function foo(int) in line 109
      3 lines of code
      1 parameters
      1 conditional paths
   function PmdTest() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module ParserCornerCases18::UnmodifiableList
   inherits from Readonly List
module ParserCornerCases18::X
   function lambaWithIf() in line 127
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function x(K+) defined in sample-matlab.m
   function lambaWithIf2() in line 137
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function x(K+) defined in sample-matlab.m
   function lambdaWithPropertyAssignment() in line 148
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
module DefaultIterator
   function hasNext() in line 159
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function next() in line 160
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 161
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function skip(int) in line 163
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function staticInterfaceMethods() in line 167
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/cli/EmptyIfStatement.java
module EmptyIfStatement
   function foo() in line 10
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/cpd/badandgood/BadFile.java
module BadFile
   function foo() in line 2
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/cpd/badandgood/GoodFile.java
module GoodFile
   function foo() in line 2
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/cpd/badandgood/GoodFile2.java
module GoodFile2
   function foo() in line 2
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/cpd/clitest/File1.java
module File1
   function dup() in line 2
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java/src/test/resources/net/sourceforge/pmd/cpd/clitest/File2.java
module File2
   function dup() in line 2
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable j defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java8/src/test/java/net/sourceforge/pmd/lang/java/bugs/InterfaceMethodTest.java
module net::sourceforge::pmd::lang::java::bugs::InterfaceMethodTest
   function parseAndTypeResolveForClass(Class<?>) in line 27
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getSymbolFacade() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function start(Node) defined in net::sourceforge::pmd::lang::VisitorStarter
      uses function getTypeResolutionFacade(ClassLoader) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function should_not_fail() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass(Class<?>) defined in net::sourceforge::pmd::lang::java::bugs::InterfaceMethodTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java8/src/test/java/net/sourceforge/pmd/typeresolution/ClassTypeResolverJava8Test.java
module net::sourceforge::pmd::typeresolution::ClassTypeResolverJava8Test
   function interface_method_should_be_parseable() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass18(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverJava8Test
   function parseAndTypeResolveForClass(Class<?>,String) in line 41
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::java::JavaLanguageModule
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getSymbolFacade() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function start(Node) defined in net::sourceforge::pmd::lang::VisitorStarter
      uses function getTypeResolutionFacade(ClassLoader) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function parseAndTypeResolveForClass18(Class<?>) in line 34
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass(Class<?>,String) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverJava8Test
   function repeatable_annotations_method_should_be_parseable() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function parseAndTypeResolveForClass18(Class<?>) defined in net::sourceforge::pmd::typeresolution::ClassTypeResolverJava8Test
   function suite() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java8/src/test/java/net/sourceforge/pmd/typeresolution/testdata/UsesJavaStreams.java
module net::sourceforge::pmd::typeresolution::testdata::UsesJavaStreams
   function performStuff() in line 14
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
module net::sourceforge::pmd::typeresolution::testdata::UsesJavaStreams::WithStaticAndDefaultMethod
   function myToString() in line 9
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function performOn() in line 8
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module net::sourceforge::pmd::typeresolution::testdata::UsesJavaStreams::ImplWithStaticAndDefaultMethod
   inherits from net::sourceforge::pmd::typeresolution::testdata::UsesJavaStreams::WithStaticAndDefaultMethod
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-java8/src/test/java/net/sourceforge/pmd/typeresolution/testdata/UsesRepeatableAnnotations.java
module net::sourceforge::pmd::typeresolution::testdata::UsesRepeatableAnnotations
module net::sourceforge::pmd::typeresolution::testdata::UsesRepeatableAnnotations::Multitude
   function value() in line 19
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module net::sourceforge::pmd::typeresolution::testdata::UsesRepeatableAnnotations::Multitudes
   function value() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/cpd/EcmascriptLanguage.java
module net::sourceforge::pmd::cpd::EcmascriptLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function EcmascriptLanguage() in line 11
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/cpd/EcmascriptTokenizer.java
module net::sourceforge::pmd::cpd::EcmascriptTokenizer
   inherits from net::sourceforge::pmd::cpd::AbstractTokenizer
   function EcmascriptTokenizer() in line 9
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable stringToken defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable ignorableCharacter defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable ignorableStmt defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable spanMultipleLinesString defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable spanMultipleLinesLineContinuationCharacter defined in net::sourceforge::pmd::cpd::AbstractTokenizer
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/AbstractEcmascriptNode.java
module net::sourceforge::pmd::lang::ecmascript::ast::AbstractEcmascriptNode
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   inherits from EcmascriptNode< T >
   abstract class
   function childrenAccept(EcmascriptParserVisitor,Object) in line 43
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function getJsDoc() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNode() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasSideEffects() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractEcmascriptNode(T) in line 14
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable node in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/AbstractInfixEcmascriptNode.java
module net::sourceforge::pmd::lang::ecmascript::ast::AbstractInfixEcmascriptNode
   inherits from AbstractEcmascriptNode< T >
   function getLeft() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRight() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractInfixEcmascriptNode(T) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractInfixEcmascriptNode(T,boolean) in line 16
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTArrayComprehension.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTArrayComprehension
   inherits from AbstractEcmascriptNode< ArrayComprehension >
   function getArrayComprehensionLoop(int) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFilter() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumArrayComprehensionLoops() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< ArrayComprehension >
   function getResult() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasFilter() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< ArrayComprehension >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTArrayComprehension(ArrayComprehension) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTArrayComprehensionLoop.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTArrayComprehensionLoop
   inherits from AbstractEcmascriptNode< ArrayComprehensionLoop >
   function getIteratedObject() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIterator() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTArrayComprehensionLoop(ArrayComprehensionLoop) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTArrayLiteral.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTArrayLiteral
   inherits from AbstractEcmascriptNode< ArrayLiteral >
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::DestructuringNode
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::TrailingCommaNode
   function isDestructuring() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< ArrayLiteral >
   function isTrailingComma() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trailingComma defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTArrayLiteral
   function jjtAccept(EcmascriptParserVisitor,Object) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function setTrailingComma(boolean) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trailingComma defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTArrayLiteral
   function ASTArrayLiteral(ArrayLiteral) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable trailingComma in line 9
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTAssignment.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTAssignment
   inherits from AbstractInfixEcmascriptNode< Assignment >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTAssignment(Assignment) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTAstRoot.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTAstRoot
   inherits from AbstractEcmascriptNode< AstRoot >
   function getComment(int) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNumComments() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTAstRoot
   function getNumComments() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< AstRoot >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTAstRoot(AstRoot) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTCatchClause.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTCatchClause
   inherits from AbstractEcmascriptNode< CatchClause >
   function getBlock() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCatchCondition() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVariableName() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isIf() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< CatchClause >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTCatchClause(CatchClause) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTComment.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTComment
   inherits from AbstractEcmascriptNode< Comment >
   function getValue() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< Comment >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTComment(Comment) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTDoLoop.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTDoLoop
   inherits from AbstractEcmascriptNode< DoLoop >
   function getBody() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCondition() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTDoLoop(DoLoop) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTElementGet.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTElementGet
   inherits from AbstractEcmascriptNode< ElementGet >
   function getElement() in line 28
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function getTarget() in line 21
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTElementGet(ElementGet) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTEmptyExpression.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTEmptyExpression
   inherits from AbstractEcmascriptNode< EmptyExpression >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTEmptyExpression(EmptyExpression) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTExpressionStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTExpressionStatement
   inherits from AbstractEcmascriptNode< ExpressionStatement >
   function hasResult() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< ExpressionStatement >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTExpressionStatement(ExpressionStatement) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTForInLoop.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTForInLoop
   inherits from AbstractEcmascriptNode< ForInLoop >
   function getBody() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIteratedObject() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIterator() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isForEach() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< ForInLoop >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTForInLoop(ForInLoop) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTForLoop.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTForLoop
   inherits from AbstractEcmascriptNode< ForLoop >
   function getBody() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCondition() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIncrement() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInitializer() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTForLoop(ForLoop) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTFunctionCall.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionCall
   inherits from AbstractEcmascriptNode< FunctionCall >
   function getArgument(int) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNumArguments() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< FunctionCall >
   function getTarget() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasArguments() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumArguments() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionCall
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTFunctionCall(FunctionCall) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTFunctionNode.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNode
   inherits from AbstractEcmascriptNode< FunctionNode >
   function getBody() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBody(int) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getBody() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNode
   function getFunctionName() in line 25
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable node defined in AbstractEcmascriptNode< FunctionNode >
   function getNumParams() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< FunctionNode >
   function getParam(int) in line 32
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in AbstractEcmascriptNode< FunctionNode >
   function isClosure() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< FunctionNode >
   function isGetter() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< FunctionNode >
   function isGetterOrSetter() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< FunctionNode >
   function isSetter() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< FunctionNode >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTFunctionNode(FunctionNode) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTInfixExpression.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTInfixExpression
   inherits from AbstractInfixEcmascriptNode< InfixExpression >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTInfixExpression(InfixExpression) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTKeywordLiteral.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTKeywordLiteral
   inherits from AbstractEcmascriptNode< KeywordLiteral >
   function isBoolean() in line 23
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< KeywordLiteral >
   function isDebugger() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< KeywordLiteral >
   function isNull() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< KeywordLiteral >
   function isThis() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< KeywordLiteral >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTKeywordLiteral(KeywordLiteral) in line 10
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTLabel.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTLabel
   inherits from AbstractEcmascriptNode< Label >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTLabel(Label) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTLetNode.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTLetNode
   inherits from AbstractEcmascriptNode< LetNode >
   function getBody() in line 28
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasBody() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTLetNode
   function getVariables() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasBody() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< LetNode >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTLetNode(LetNode) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTNewExpression.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTNewExpression
   inherits from AbstractEcmascriptNode< NewExpression >
   function getArgument(int) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getInitializer() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumArguments() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< NewExpression >
   function getTarget() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasArguments() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumArguments() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTNewExpression
   function hasInitializer() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< NewExpression >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTNewExpression(NewExpression) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTNumberLiteral.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTNumberLiteral
   inherits from AbstractEcmascriptNode< NumberLiteral >
   function getNormalizedImage() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getNumber() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< NumberLiteral >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTNumberLiteral(NumberLiteral) in line 10
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTObjectLiteral.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTObjectLiteral
   inherits from AbstractEcmascriptNode< ObjectLiteral >
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::DestructuringNode
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::TrailingCommaNode
   function getObjectProperty(int) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isDestructuring() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< ObjectLiteral >
   function isTrailingComma() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trailingComma defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTObjectLiteral
   function jjtAccept(EcmascriptParserVisitor,Object) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function setTrailingComma(boolean) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trailingComma defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTObjectLiteral
   function ASTObjectLiteral(ObjectLiteral) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable trailingComma in line 9
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTObjectProperty.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTObjectProperty
   inherits from AbstractInfixEcmascriptNode< ObjectProperty >
   function isGetter() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSetter() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTObjectProperty(ObjectProperty) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTParenthesizedExpression.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTParenthesizedExpression
   inherits from AbstractEcmascriptNode< ParenthesizedExpression >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTParenthesizedExpression(ParenthesizedExpression) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTPropertyGet.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTPropertyGet
   inherits from AbstractInfixEcmascriptNode< PropertyGet >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTPropertyGet(PropertyGet) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTRegExpLiteral.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTRegExpLiteral
   inherits from AbstractEcmascriptNode< RegExpLiteral >
   function getFlags() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< RegExpLiteral >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTRegExpLiteral(RegExpLiteral) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTScope.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTScope
   inherits from AbstractEcmascriptNode< Scope >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTScope(Scope) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTStringLiteral.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTStringLiteral
   inherits from AbstractEcmascriptNode< StringLiteral >
   function getQuoteCharacter() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< StringLiteral >
   function isDoubleQuoted() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getQuoteCharacter() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTStringLiteral
   function isSingleQuoted() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getQuoteCharacter() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTStringLiteral
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTStringLiteral(StringLiteral) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTStringLiteral.java
module net::sourceforge::pmd::lang::vm::ast::ASTStringLiteral
   inherits from net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function adjTokenLineNums(final AbstractVmNode) in line 52
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function getFirstToken() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses function getLastToken() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses function getColumn() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses function getLine() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function isConstant() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(final VmParserVisitor,final Object) in line 110
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function unescape(final String) in line 76
      protection public
      28 lines of code
      1 parameters
      4 conditional paths
      uses variable c defined in sample-matlab.m
   function ASTStringLiteral(final int) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTStringLiteral(final VmParser,final int) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTSwitchCase.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTSwitchCase
   inherits from AbstractEcmascriptNode< SwitchCase >
   function getExpression() in line 24
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function isDefault() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTSwitchCase
   function getNumStatements() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< SwitchCase >
   function getStatement(int) in line 37
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isDefault() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTSwitchCase
   function isDefault() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< SwitchCase >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTSwitchCase(SwitchCase) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTVariableDeclaration.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTVariableDeclaration
   inherits from AbstractEcmascriptNode< VariableDeclaration >
   function getVariableInitializer(int) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isConst() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< VariableDeclaration >
   function isLet() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< VariableDeclaration >
   function isVar() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< VariableDeclaration >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 18
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTVariableDeclaration(VariableDeclaration) in line 10
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTWhileLoop.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTWhileLoop
   inherits from AbstractEcmascriptNode< WhileLoop >
   function getBody() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCondition() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTWhileLoop(WhileLoop) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTWithStatement.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTWithStatement
   inherits from AbstractEcmascriptNode< WithStatement >
   function getExpression() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStatement() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTWithStatement(WithStatement) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTXmlDotQuery.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTXmlDotQuery
   inherits from AbstractInfixEcmascriptNode< XmlDotQuery >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTXmlDotQuery(XmlDotQuery) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTXmlExpression.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTXmlExpression
   inherits from AbstractEcmascriptNode< XmlExpression >
   function getExpression() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isXmlAttribute() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable node defined in AbstractEcmascriptNode< XmlExpression >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTXmlExpression(XmlExpression) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTXmlMemberGet.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTXmlMemberGet
   inherits from AbstractInfixEcmascriptNode< XmlMemberGet >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTXmlMemberGet(XmlMemberGet) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTXmlString.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTXmlString
   inherits from AbstractEcmascriptNode< XmlString >
   function jjtAccept(EcmascriptParserVisitor,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
      uses variable data defined in sample-matlab.m
   function ASTXmlString(XmlString) in line 9
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/DestructuringNode.java
module net::sourceforge::pmd::lang::ecmascript::ast::DestructuringNode
   function isDestructuring() in line 7
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptNode.java
module net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   function childrenAccept(EcmascriptParserVisitor,Object) in line 20
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getJsDoc() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNode() in line 25
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function hasSideEffects() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(EcmascriptParserVisitor,Object) in line 15
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptParser.java
module net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
   function getSuppressMap() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable suppressMap defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
   function parse(final Reader) in line 57
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function parseEcmascript(final String,final List< ParseProblem >) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
      uses variable suppressMap defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
      uses variable suppressMarker defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable e defined in sample-matlab.m
   function parseEcmascript(final String,final List< ParseProblem >) in line 37
      19 lines of code
      2 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
      uses function isRecordingComments() defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses function isRecordingLocalJsDocComments() defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses function getRhinoLanguageVersion() defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses function getVersion() defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions::Version
   function EcmascriptParser(EcmascriptParserOptions) in line 30
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
      uses function getSuppressMarker() defined in net::sourceforge::pmd::lang::ParserOptions
      uses variable suppressMarker defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
   variable parserOptions in line 25
   variable suppressMap in line 27
   variable suppressMarker in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptParserVisitor.java
module net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
   function visit(EcmascriptNode,Object) in line 7
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTArrayComprehension,Object) in line 9
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTArrayComprehensionLoop,Object) in line 11
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTArrayLiteral,Object) in line 13
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTAssignment,Object) in line 15
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTAstRoot,Object) in line 17
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTBlock,Object) in line 19
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTBreakStatement,Object) in line 21
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTCatchClause,Object) in line 23
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTComment,Object) in line 25
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTConditionalExpression,Object) in line 27
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTContinueStatement,Object) in line 29
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTDoLoop,Object) in line 31
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTElementGet,Object) in line 33
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTEmptyExpression,Object) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTExpressionStatement,Object) in line 37
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTForInLoop,Object) in line 39
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTForLoop,Object) in line 41
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTFunctionCall,Object) in line 43
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTFunctionNode,Object) in line 45
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTIfStatement,Object) in line 47
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTInfixExpression,Object) in line 49
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTKeywordLiteral,Object) in line 51
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTLabel,Object) in line 53
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTLabeledStatement,Object) in line 55
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTLetNode,Object) in line 57
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTName,Object) in line 59
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTNewExpression,Object) in line 61
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTNumberLiteral,Object) in line 63
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTObjectLiteral,Object) in line 65
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTObjectProperty,Object) in line 67
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTParenthesizedExpression,Object) in line 69
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTPropertyGet,Object) in line 71
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTRegExpLiteral,Object) in line 73
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTReturnStatement,Object) in line 75
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTScope,Object) in line 77
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTStringLiteral,Object) in line 79
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTSwitchCase,Object) in line 81
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTSwitchStatement,Object) in line 83
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTThrowStatement,Object) in line 85
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTTryStatement,Object) in line 87
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTUnaryExpression,Object) in line 89
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTVariableDeclaration,Object) in line 91
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTVariableInitializer,Object) in line 93
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTWhileLoop,Object) in line 95
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTWithStatement,Object) in line 97
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTXmlDotQuery,Object) in line 99
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTXmlExpression,Object) in line 101
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTXmlMemberGet,Object) in line 103
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visit(ASTXmlString,Object) in line 105
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptParserVisitorAdapter.java
module net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
   function visit(EcmascriptNode,Object) in line 8
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(EcmascriptParserVisitor,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptNode
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayComprehension,Object) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayComprehensionLoop,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayLiteral,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAssignment,Object) in line 25
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAstRoot,Object) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTBlock,Object) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTBreakStatement,Object) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCatchClause,Object) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTComment,Object) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTContinueStatement,Object) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDoLoop,Object) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTElementGet,Object) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEmptyExpression,Object) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTExpressionStatement,Object) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForInLoop,Object) in line 73
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForLoop,Object) in line 77
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFunctionCall,Object) in line 81
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFunctionNode,Object) in line 85
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 89
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTInfixExpression,Object) in line 93
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTKeywordLiteral,Object) in line 97
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLabel,Object) in line 101
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLabeledStatement,Object) in line 105
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLetNode,Object) in line 109
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 113
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNewExpression,Object) in line 117
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNumberLiteral,Object) in line 121
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectLiteral,Object) in line 125
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectProperty,Object) in line 129
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTParenthesizedExpression,Object) in line 133
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPropertyGet,Object) in line 137
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTRegExpLiteral,Object) in line 141
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 145
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTScope,Object) in line 149
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTStringLiteral,Object) in line 153
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchCase,Object) in line 157
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 161
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTThrowStatement,Object) in line 165
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTryStatement,Object) in line 169
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpression,Object) in line 173
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclaration,Object) in line 177
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableInitializer,Object) in line 181
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileLoop,Object) in line 185
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTWithStatement,Object) in line 189
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTXmlDotQuery,Object) in line 193
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTXmlExpression,Object) in line 197
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTXmlMemberGet,Object) in line 201
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTXmlString,Object) in line 205
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitorAdapter
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptTreeBuilder.java
module net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
   inherits from org::mozilla::javascript::ast::NodeVisitor
   function calculateLineNumbers(EcmascriptNode<?>) in line 238
      10 lines of code
      1 parameters
      1 conditional paths
      uses function visit(AstNode) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses variable data defined in sample-matlab.m
      uses variable sourceCodePositioner defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses function jjtAccept(EcmascriptParserVisitor,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptNode
   function handleParseProblems(EcmascriptNode<?extends AstNode >) in line 215
      22 lines of code
      1 parameters
      6 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptNode
      uses variable parseProblems defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses variable parseProblemToNode defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
   function register(Class< T >,Class<?extends EcmascriptNode< T >>) in line 125
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable NODE_TYPE_TO_NODE_ADAPTER_TYPE defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses variable e defined in sample-matlab.m
   function visit(AstNode) in line 206
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable parents defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
   function EcmascriptTreeBuilder(String,List< ParseProblem >) in line 146
      protection public
      4 lines of code
      2 parameters
      5 conditional paths
      uses variable parseProblems defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses variable NODE_TYPE_TO_NODE_ADAPTER_TYPE defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses variable e defined in sample-matlab.m
      uses function calculateLineNumbers(EcmascriptNode<?>) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses variable parseProblemToNode defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses variable nodes defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses function jjtAddChild(Node,int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function handleParseProblems(EcmascriptNode<?extends AstNode >) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
      uses variable parents defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptTreeBuilder
   variable NODE_TYPE_TO_NODE_ADAPTER_TYPE in line 71
   variable nodes in line 139
   variable parents in line 142
   variable parseProblems in line 135
   variable parseProblemToNode in line 136
   variable sourceCodePositioner in line 144
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/SourceCodePositioner.java
module net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositioner
   function analyzeLineOffsets(String) in line 22
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable lineOffsets defined in net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositioner
   function columnFromOffset(int) in line 51
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function lineNumberFromOffset(int) defined in net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositioner
      uses variable lineOffsets defined in net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositioner
   function lineNumberFromOffset(int) in line 37
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable lineOffsets defined in net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositioner
   function SourceCodePositioner(String) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function analyzeLineOffsets(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositioner
   variable lineOffsets in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/TrailingCommaNode.java
module net::sourceforge::pmd::lang::ecmascript::ast::TrailingCommaNode
   function isTrailingComma() in line 7
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setTrailingComma(boolean) in line 9
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/Ecmascript3Handler.java
module net::sourceforge::pmd::lang::ecmascript::Ecmascript3Handler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getDefaultParserOptions() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDumpFacade(final Writer,final String,final boolean) in line 51
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function initializeWith(Writer,String,boolean,EcmascriptNode<?>) defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
   function getParser(ParserOptions) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptRuleViolationFactory
   function getXPathHandler() in line 27
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/Ecmascript3Parser.java
module net::sourceforge::pmd::lang::ecmascript::Ecmascript3Parser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTokenManager(Reader) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ecmascriptParser defined in net::sourceforge::pmd::lang::ecmascript::Ecmascript3Parser
   function parse(String,Reader) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ecmascriptParser defined in net::sourceforge::pmd::lang::ecmascript::Ecmascript3Parser
   function Ecmascript3Parser(ParserOptions) in line 21
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
      uses variable ecmascriptParser defined in net::sourceforge::pmd::lang::ecmascript::Ecmascript3Parser
   variable ecmascriptParser in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/EcmascriptLanguageModule.java
module net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function EcmascriptLanguageModule() in line 14
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 11
      protection public
   variable TERSE_NAME in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/EcmascriptParserOptions.java
module net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   inherits from net::sourceforge::pmd::lang::ParserOptions
   function equals(Object) in line 113
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function EcmascriptParserOptions() defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable suppressMarker defined in net::sourceforge::pmd::lang::ParserOptions
      uses variable recordingComments defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable recordingLocalJsDocComments defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable rhinoLanguageVersion defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function getRhinoLanguageVersion() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rhinoLanguageVersion defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function hashCode() in line 103
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable recordingComments defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable recordingLocalJsDocComments defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable rhinoLanguageVersion defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function isRecordingComments() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable recordingComments defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function isRecordingLocalJsDocComments() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable recordingLocalJsDocComments defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function setRecordingComments(boolean) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable recordingComments defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function setRecordingLocalJsDocComments(boolean) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable recordingLocalJsDocComments defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function setRhinoLanguageVersion(Version) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable rhinoLanguageVersion defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function EcmascriptParserOptions() in line 64
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable RECORDING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable RHINO_LANGUAGE_VERSION defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function EcmascriptParserOptions(Rule) in line 71
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable RECORDING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable RHINO_LANGUAGE_VERSION defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   variable RECORDING_COMMENTS_DESCRIPTOR in line 51
      protection public
   variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR in line 53
      protection public
   variable recordingComments in line 60
   variable recordingLocalJsDocComments in line 61
   variable RHINO_LANGUAGE_VERSION in line 55
      protection public
   variable rhinoLanguageVersion in line 62
   variable VERSION_LABELS in line 45
module net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions::Version
   function getLabel() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVersion() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Version(String,int) in line 31
      4 lines of code
      2 parameters
      1 conditional paths
   variable name in line 28
   variable version in line 29
   variable VERSION_1_0 in line 18
      protection public
   variable VERSION_1_1 in line 19
      protection public
   variable VERSION_1_2 in line 20
      protection public
   variable VERSION_1_3 in line 21
      protection public
   variable VERSION_1_4 in line 22
      protection public
   variable VERSION_1_5 in line 23
      protection public
   variable VERSION_1_6 in line 24
      protection public
   variable VERSION_1_7 in line 25
      protection public
   variable VERSION_1_8 in line 26
      protection public
   variable VERSION_DEFAULT in line 17
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule/AbstractEcmascriptRule.java
module net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserVisitor
   inherits from net::sourceforge::pmd::lang::rule::ImmutableLanguage
   abstract class
   function apply(List<?extends Node >,RuleContext) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visitAll(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
   function getParserOptions() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(EcmascriptNode,Object) in line 105
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(EcmascriptParserVisitor,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptNode
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayComprehension,Object) in line 110
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayComprehensionLoop,Object) in line 114
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArrayLiteral,Object) in line 118
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAssignment,Object) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAstRoot,Object) in line 126
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBlock,Object) in line 130
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBreakStatement,Object) in line 134
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCatchClause,Object) in line 138
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTComment,Object) in line 142
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalExpression,Object) in line 146
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTContinueStatement,Object) in line 150
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDoLoop,Object) in line 154
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElementGet,Object) in line 158
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEmptyExpression,Object) in line 162
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExpressionStatement,Object) in line 166
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForInLoop,Object) in line 170
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForLoop,Object) in line 174
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFunctionCall,Object) in line 178
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFunctionNode,Object) in line 182
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 186
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTInfixExpression,Object) in line 190
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTKeywordLiteral,Object) in line 194
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLabel,Object) in line 198
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLabeledStatement,Object) in line 202
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLetNode,Object) in line 206
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 210
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNewExpression,Object) in line 214
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNumberLiteral,Object) in line 218
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectLiteral,Object) in line 222
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectProperty,Object) in line 226
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTParenthesizedExpression,Object) in line 230
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPropertyGet,Object) in line 234
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTRegExpLiteral,Object) in line 238
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 242
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTScope,Object) in line 246
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTStringLiteral,Object) in line 250
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchCase,Object) in line 254
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSwitchStatement,Object) in line 258
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTThrowStatement,Object) in line 262
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTryStatement,Object) in line 266
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpression,Object) in line 270
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableDeclaration,Object) in line 274
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableInitializer,Object) in line 278
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileLoop,Object) in line 282
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWithStatement,Object) in line 286
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTXmlDotQuery,Object) in line 290
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTXmlExpression,Object) in line 294
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTXmlMemberGet,Object) in line 298
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visit(ASTXmlString,Object) in line 302
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable data defined in sample-matlab.m
   function visitAll(List<?extends Node >,RuleContext) in line 92
      6 lines of code
      2 parameters
      2 conditional paths
      uses function visit(EcmascriptNode,Object) defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
   function AbstractEcmascriptRule() in line 76
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable RECORDING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable RHINO_LANGUAGE_VERSION defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
   variable RECORDING_COMMENTS_DESCRIPTOR in line 72
   variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR in line 73
   variable RHINO_LANGUAGE_VERSION in line 74
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule/basic/ConsistentReturnRule.java
module net::sourceforge::pmd::lang::ecmascript::rule::basic::ConsistentReturnRule
   inherits from net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
   function visit(ASTFunctionNode,Object) in line 19
      protection public
      19 lines of code
      2 parameters
      5 conditional paths
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function ConsistentReturnRule() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRuleChainVisit(Class<?extends Node >) defined in net::sourceforge::pmd::lang::rule::AbstractRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule/EcmascriptRuleChainVisitor.java
module net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptRuleChainVisitor
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNodes(List< Node >,RuleContext) in line 20
      15 lines of code
      2 parameters
      4 conditional paths
      uses function indexNode(Node) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(Rule,Node,RuleContext) in line 36
      8 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule/EcmascriptRuleViolationFactory.java
module net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptRuleViolationFactory
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function createRuleViolation(Rule,RuleContext,Node,String) in line 23
      3 lines of code
      4 parameters
      1 conditional paths
   function createRuleViolation(Rule,RuleContext,Node,String,int,int) in line 27
      3 lines of code
      6 parameters
      1 conditional paths
   function EcmascriptRuleViolationFactory() in line 18
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule/EcmascriptXPathRule.java
module net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptXPathRule
   inherits from net::sourceforge::pmd::lang::rule::XPathRule
   function getParserOptions() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EcmascriptXPathRule() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptLanguageModule
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable RECORDING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptXPathRule
      uses variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptXPathRule
      uses variable RHINO_LANGUAGE_VERSION defined in net::sourceforge::pmd::lang::ecmascript::rule::EcmascriptXPathRule
   variable RECORDING_COMMENTS_DESCRIPTOR in line 16
   variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR in line 17
   variable RHINO_LANGUAGE_VERSION in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/cpd/EcmascriptTokenizerTest.java
module net::sourceforge::pmd::cpd::EcmascriptTokenizerTest
   function getCode1() in line 61
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function getCode2() in line 74
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function parseStringNotAsMultiline() in line 41
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function test1() in line 19
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getCode1() defined in net::sourceforge::pmd::cpd::EcmascriptTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::Tokenizer
   function test2() in line 28
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
      uses function getCode2() defined in net::sourceforge::pmd::cpd::EcmascriptTokenizerTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTFunctionNodeTest.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNodeTest
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
   function testGetBody() in line 12
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
      uses function isClosure() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNode
      uses function getBody() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNode
   function testGetBodyFunctionClosureExpression() in line 21
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parse18(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
      uses function isClosure() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNode
      uses function getBody() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTFunctionNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTTryStatementTest.java
module net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatementTest
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
   function getTryStmt(String) in line 19
      7 lines of code
      1 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function testCatchAndFinallyBlock() in line 48
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getTryStmt(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatementTest
      uses function getCatchClause(int) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function hasCatch() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function getNumCatchClause() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function getFinallyBlock() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function hasFinally() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   function testCatchBlockOnly() in line 38
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getTryStmt(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatementTest
      uses function getCatchClause(int) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function hasCatch() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function getNumCatchClause() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function getFinallyBlock() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function hasFinally() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   function testFinallyBlockOnly() in line 28
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function getTryStmt(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatementTest
      uses function getCatchClause(int) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function hasCatch() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function getNumCatchClause() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function getFinallyBlock() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function hasFinally() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
   function testMultipleCatchAndFinallyBlock() in line 58
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function getTryStmt(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatementTest
      uses function getCatchClause(int) defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function hasCatch() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function getNumCatchClause() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function getFinallyBlock() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
      uses function hasFinally() defined in net::sourceforge::pmd::lang::ecmascript::ast::ASTTryStatement
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptParserTest.java
module net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTest
   inherits from net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
   function getName(Node) in line 121
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getLeft() defined in net::sourceforge::pmd::lang::ecmascript::ast::AbstractInfixEcmascriptNode
      uses function getRight() defined in net::sourceforge::pmd::lang::ecmascript::ast::AbstractInfixEcmascriptNode
   function testArrayAccess() in line 90
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function testArrayMethod() in line 103
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
      uses function findDescendantsOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses variable f defined in sample-matlab.m
      uses function getName(Node) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTest
   function testCaseAsIdentifier() in line 142
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
   function testLineNumbers() in line 32
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstDescendantOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function testLineNumbersWithinEcmascriptRules() in line 60
      protection public
      25 lines of code
      0 parameters
      1 conditional paths
      uses variable output defined in sample-matlab.m
      uses variable data defined in sample-matlab.m
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
   function testSuppresionComment() in line 158
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::ecmascript::Ecmascript3Parser
      uses function getSuppressMap() defined in net::sourceforge::pmd::lang::ecmascript::Ecmascript3Parser
   function testVoidKeyword() in line 183
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
   function testXorAssignment() in line 195
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptParserTestBase.java
module net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParserTestBase
   abstract class
   function dump(EcmascriptNode<?>) in line 27
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function initializeWith(Writer,String,boolean,EcmascriptNode<?>) defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
      uses function visit(EcmascriptNode<?>,Object) defined in net::sourceforge::pmd::lang::ecmascript::ast::DumpFacade
   function parse(String) in line 13
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function parse(final Reader) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
   function parse18(String) in line 19
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function setRhinoLanguageVersion(Version) defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable VERSION_1_8 defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions::Version
      uses function parse(final Reader) defined in net::sourceforge::pmd::lang::ecmascript::ast::EcmascriptParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/SourceCodePositionerTest.java
module net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositionerTest
   function testLineNumberFromOffset() in line 21
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable SOURCE_CODE defined in net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositionerTest
      uses function lineNumberFromOffset(int) defined in net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositioner
      uses function columnFromOffset(int) defined in net::sourceforge::pmd::lang::ecmascript::ast::SourceCodePositioner
   variable SOURCE_CODE in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/EcmascriptParserOptionsTest.java
module net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptionsTest
   function suite() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testConstructor() in line 34
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable RECORDING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses function getParserOptions() defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable RHINO_LANGUAGE_VERSION defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable VERSION_DEFAULT defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions::Version
      uses variable VERSION_1_8 defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions::Version
   function testDefaults() in line 20
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function isRecordingComments() defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses function isRecordingLocalJsDocComments() defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable VERSION_DEFAULT defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions::Version
      uses function getRhinoLanguageVersion() defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
   function testEqualsHashcode() in line 66
      protection public
      39 lines of code
      0 parameters
      2 conditional paths
      uses variable RECORDING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable RECORDING_LOCAL_JSDOC_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable property defined in sample-matlab.m
      uses function getParserOptions() defined in net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::lang::ParserOptions
      uses function setRhinoLanguageVersion(Version) defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions
      uses variable VERSION_DEFAULT defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions::Version
      uses variable VERSION_1_8 defined in net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptions::Version
   function testSetters() in line 56
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::lang::ParserOptions
      uses function getSuppressMarker() defined in net::sourceforge::pmd::lang::ParserOptions
module net::sourceforge::pmd::lang::ecmascript::EcmascriptParserOptionsTest::MyRule
   inherits from net::sourceforge::pmd::lang::ecmascript::rule::AbstractEcmascriptRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-javascript/src/test/resources/net/sourceforge/pmd/cli/ExampleFile.js
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/cpd/JSPLanguage.java
module net::sourceforge::pmd::cpd::JSPLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function JSPLanguage() in line 7
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/cpd/JSPTokenizer.java
module net::sourceforge::pmd::cpd::JSPTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 16
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getNextToken() defined in net::sourceforge::pmd::lang::TokenManager
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/AbstractJspNode.java
module net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   inherits from net::sourceforge::pmd::lang::jsp::ast::JspNode
   function childrenAccept(JspParserVisitor,Object) in line 49
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function jjtAccept(JspParserVisitor,Object) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function jjtClose() in line 28
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable parser defined in net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
      uses variable endLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable endColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtOpen() in line 21
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable parser defined in net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function toString() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function AbstractJspNode(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractJspNode(JspParser,int) in line 16
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   variable parser in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTAttribute.java
module net::sourceforge::pmd::lang::jsp::ast::ASTAttribute
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function getLocalName() in line 48
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTAttribute
   function getName() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTAttribute
   function getNamespacePrefix() in line 37
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTAttribute
   function isHasNamespacePrefix() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTAttribute
   function jjtAccept(JspParserVisitor,Object) in line 70
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setName(String) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTAttribute
   function ASTAttribute(int) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAttribute(JspParser,int) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable name in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTAttributeValue.java
module net::sourceforge::pmd::lang::jsp::ast::ASTAttributeValue
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAttributeValue(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAttributeValue(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTCData.java
module net::sourceforge::pmd::lang::jsp::ast::ASTCData
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTCData(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTCData(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTCommentTag.java
module net::sourceforge::pmd::lang::jsp::ast::ASTCommentTag
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTCommentTag(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTCommentTag(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTContent.java
module net::sourceforge::pmd::lang::jsp::ast::ASTContent
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTContent(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTContent(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTDeclaration.java
module net::sourceforge::pmd::lang::jsp::ast::ASTDeclaration
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function getName() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTDeclaration
   function jjtAccept(JspParserVisitor,Object) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setName(String) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTDeclaration
   function ASTDeclaration(int) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDeclaration(JspParser,int) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable name in line 11
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTDoctypeDeclaration.java
module net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeDeclaration
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function getName() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeDeclaration
   function jjtAccept(JspParserVisitor,Object) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setName(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeDeclaration
   function ASTDoctypeDeclaration(int) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDoctypeDeclaration(JspParser,int) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable name in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTDoctypeExternalId.java
module net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeExternalId
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function getPublicId() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable publicId defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeExternalId
   function getUri() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable uri defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeExternalId
   function isHasPublicId() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable publicId defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeExternalId
   function jjtAccept(JspParserVisitor,Object) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setPublicId(String) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable publicId defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeExternalId
   function setUri(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDoctypeExternalId(int) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDoctypeExternalId(JspParser,int) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable publicId in line 20
   variable uri in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTElement.java
module net::sourceforge::pmd::lang::jsp::ast::ASTElement
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function getLocalName() in line 49
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function getName() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function getNamespacePrefix() in line 38
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function isEmpty() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable empty defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function isHasNamespacePrefix() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function isUnclosed() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable unclosed defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function jjtAccept(JspParserVisitor,Object) in line 107
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setEmpty(boolean) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable empty defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function setName(String) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function setUnclosed(boolean) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable unclosed defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function ASTElement(int) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTElement(JspParser,int) in line 99
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable empty in line 20
   variable name in line 15
   variable unclosed in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTElExpression.java
module net::sourceforge::pmd::lang::jsp::ast::ASTElExpression
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTElExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTElExpression(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTHtmlScript.java
module net::sourceforge::pmd::lang::jsp::ast::ASTHtmlScript
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTHtmlScript(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTHtmlScript(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspComment.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspComment
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTJspComment(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspComment(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspDeclaration.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspDeclaration
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTJspDeclaration(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspDeclaration(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspDeclarations.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspDeclarations
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTJspDeclarations(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspDeclarations(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspDirective.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspDirective
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function getName() in line 20
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirective
   function jjtAccept(JspParserVisitor,Object) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setName(String) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirective
   function ASTJspDirective(int) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspDirective(JspParser,int) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable name in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspDirectiveAttribute.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function getName() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
   function getValue() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
   function jjtAccept(JspParserVisitor,Object) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setName(String) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
   function setValue(String) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
   function ASTJspDirectiveAttribute(int) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspDirectiveAttribute(JspParser,int) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable name in line 11
   variable value in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspDocument.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspDocument
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTJspDocument(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspDocument(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspExpression.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspExpression
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTJspExpression(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspExpression(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspExpressionInAttribute.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspExpressionInAttribute
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTJspExpressionInAttribute(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspExpressionInAttribute(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspScriptlet.java
module net::sourceforge::pmd::lang::jsp::ast::ASTJspScriptlet
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTJspScriptlet(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTJspScriptlet(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTText.java
module net::sourceforge::pmd::lang::jsp::ast::ASTText
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTText(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTText(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTUnparsedText.java
module net::sourceforge::pmd::lang::jsp::ast::ASTUnparsedText
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTUnparsedText(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTUnparsedText(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTValueBinding.java
module net::sourceforge::pmd::lang::jsp::ast::ASTValueBinding
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNode
   function jjtAccept(JspParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTValueBinding(int) in line 9
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTValueBinding(JspParser,int) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/JspNode.java
module net::sourceforge::pmd::lang::jsp::ast::JspNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   function childrenAccept(JspParserVisitor,Object) in line 17
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function jjtAccept(JspParserVisitor,Object) in line 12
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/JspParserVisitorAdapter.java
module net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
   inherits from net::sourceforge::pmd::lang::jsp::ast::JspParserVisitor
   function visit(JspNode,Object) in line 8
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(JspParserVisitor,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspNode
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 13
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTContent,Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTJspDirective,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTJspDirectiveAttribute,Object) in line 25
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTJspScriptlet,Object) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTJspExpression,Object) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTJspDeclaration,Object) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTJspComment,Object) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTText,Object) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTUnparsedText,Object) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTElExpression,Object) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTValueBinding,Object) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCData,Object) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTElement,Object) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAttribute,Object) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAttributeValue,Object) in line 73
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTJspExpressionInAttribute,Object) in line 77
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCommentTag,Object) in line 81
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDeclaration,Object) in line 85
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDoctypeDeclaration,Object) in line 89
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDoctypeExternalId,Object) in line 93
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTHtmlScript,Object) in line 97
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspParserVisitorAdapter
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/OpenTagRegister.java
module net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
   function closeTag(String) in line 40
      protection public
      51 lines of code
      1 parameters
      6 conditional paths
      uses variable tagList defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
      uses function setUnclosed(boolean) defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
      uses function setEmpty(boolean) defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
      uses function isEmpty() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function closeTag(ASTElement) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeTag(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function openTag(ASTElement) in line 25
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
      uses variable tagList defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
   variable tagList in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/StartAndEndTagMismatchException.java
module net::sourceforge::pmd::lang::jsp::ast::StartAndEndTagMismatchException
   inherits from net::sourceforge::pmd::lang::jsp::ast::SyntaxErrorException
   function getEndColumn() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEndLine() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getMessage() in line 72
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable startTagName defined in net::sourceforge::pmd::lang::jsp::ast::StartAndEndTagMismatchException
      uses variable startLine defined in net::sourceforge::pmd::lang::jsp::ast::StartAndEndTagMismatchException
   function getStartColumn() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStartLine() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startLine defined in net::sourceforge::pmd::lang::jsp::ast::StartAndEndTagMismatchException
   function StartAndEndTagMismatchException(int,int,String,int,int,String) in line 28
      protection public
      11 lines of code
      6 parameters
      1 conditional paths
      uses variable START_END_TAG_MISMATCH_RULE_NAME defined in net::sourceforge::pmd::lang::jsp::ast::StartAndEndTagMismatchException
      uses variable startLine defined in net::sourceforge::pmd::lang::jsp::ast::StartAndEndTagMismatchException
      uses variable startTagName defined in net::sourceforge::pmd::lang::jsp::ast::StartAndEndTagMismatchException
   variable START_END_TAG_MISMATCH_RULE_NAME in line 12
      protection public
   variable startLine in line 15
   variable startTagName in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/SyntaxErrorException.java
module net::sourceforge::pmd::lang::jsp::ast::SyntaxErrorException
   inherits from net::sourceforge::pmd::lang::ast::ParseException
   abstract class
   function getLine() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable line defined in net::sourceforge::pmd::lang::jsp::ast::SyntaxErrorException
   function getRuleName() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ruleName defined in net::sourceforge::pmd::lang::jsp::ast::SyntaxErrorException
   function SyntaxErrorException(int,String) in line 20
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable line defined in net::sourceforge::pmd::lang::jsp::ast::SyntaxErrorException
      uses variable ruleName defined in net::sourceforge::pmd::lang::jsp::ast::SyntaxErrorException
   variable line in line 13
   variable ruleName in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/JspHandler.java
module net::sourceforge::pmd::lang::jsp::JspHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getDumpFacade(final Writer,final String,final boolean) in line 48
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function initializeWith(Writer,String,boolean,JspNode) defined in net::sourceforge::pmd::lang::jsp::ast::DumpFacade
   function getParser(ParserOptions) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::jsp::rule::JspRuleViolationFactory
   function getXPathHandler() in line 29
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/JspLanguageModule.java
module net::sourceforge::pmd::lang::jsp::JspLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function JspLanguageModule() in line 14
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 11
      protection public
   variable TERSE_NAME in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/JspParser.java
module net::sourceforge::pmd::lang::jsp::JspParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTokenManager(Reader) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String,Reader) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function JspParser(ParserOptions) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/JspTokenManager.java
module net::sourceforge::pmd::lang::jsp::JspTokenManager
   inherits from net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::jsp::JspTokenManager
   function setFileName(String) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::jsp::JspTokenManager
   function JspTokenManager(Reader) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::jsp::JspTokenManager
   variable tokenManager in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/AbstractJspRule.java
module net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   inherits from net::sourceforge::pmd::lang::jsp::ast::JspParserVisitor
   inherits from net::sourceforge::pmd::lang::rule::ImmutableLanguage
   abstract class
   function apply(List<?extends Node >,RuleContext) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visitAll(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
   function setUsesTypeResolution() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(JspNode,Object) in line 67
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(JspParserVisitor,Object) defined in net::sourceforge::pmd::lang::jsp::ast::JspNode
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationUnit,Object) in line 72
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTContent,Object) in line 76
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTJspDirective,Object) in line 80
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTJspDirectiveAttribute,Object) in line 84
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTJspScriptlet,Object) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTJspExpression,Object) in line 92
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTJspDeclaration,Object) in line 96
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTJspComment,Object) in line 100
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTText,Object) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnparsedText,Object) in line 108
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElExpression,Object) in line 112
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTValueBinding,Object) in line 116
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCData,Object) in line 120
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElement,Object) in line 124
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAttribute,Object) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAttributeValue,Object) in line 132
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTJspExpressionInAttribute,Object) in line 136
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCommentTag,Object) in line 140
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDeclaration,Object) in line 144
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDoctypeDeclaration,Object) in line 148
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDoctypeExternalId,Object) in line 152
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visit(ASTHtmlScript,Object) in line 156
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
      uses variable data defined in sample-matlab.m
   function visitAll(List<?extends Node >,RuleContext) in line 54
      6 lines of code
      2 parameters
      2 conditional paths
      uses function visit(JspNode,Object) defined in net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
   function AbstractJspRule() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/basic/DuplicateJspImportsRule.java
module net::sourceforge::pmd::lang::jsp::rule::basic::DuplicateJspImportsRule
   inherits from net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
   function apply(List<?extends Node >,RuleContext) in line 22
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses variable imports defined in net::sourceforge::pmd::lang::jsp::rule::basic::DuplicateJspImportsRule
   function visit(ASTJspDirectiveAttribute,Object) in line 33
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
      uses variable data defined in sample-matlab.m
      uses function getValue() defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
      uses variable imports defined in net::sourceforge::pmd::lang::jsp::rule::basic::DuplicateJspImportsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   variable imports in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/basic/NoInlineStyleInformationRule.java
module net::sourceforge::pmd::lang::jsp::rule::basic::NoInlineStyleInformationRule
   inherits from net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
   function isStyleAttribute(ASTAttribute) in line 78
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable STYLE_ATTRIBUTES defined in net::sourceforge::pmd::lang::jsp::rule::basic::NoInlineStyleInformationRule
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTAttribute
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable ELEMENT_NAMES_THAT_CAN_HAVE_STYLE_ATTRIBUTES defined in net::sourceforge::pmd::lang::jsp::rule::basic::NoInlineStyleInformationRule
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function isStyleElement(ASTElement) in line 67
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable STYLE_ELEMENT_NAMES defined in net::sourceforge::pmd::lang::jsp::rule::basic::NoInlineStyleInformationRule
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function visit(ASTAttribute,Object) in line 45
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function isStyleAttribute(ASTAttribute) defined in net::sourceforge::pmd::lang::jsp::rule::basic::NoInlineStyleInformationRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElement,Object) in line 53
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function isStyleElement(ASTElement) defined in net::sourceforge::pmd::lang::jsp::rule::basic::NoInlineStyleInformationRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   variable ELEMENT_NAMES_THAT_CAN_HAVE_STYLE_ATTRIBUTES in line 33
   variable STYLE_ATTRIBUTES in line 41
   variable STYLE_ELEMENT_NAMES in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/basic/NoUnsanitizedJSPExpressionRule.java
module net::sourceforge::pmd::lang::jsp::rule::basic::NoUnsanitizedJSPExpressionRule
   inherits from net::sourceforge::pmd::lang::jsp::rule::AbstractJspRule
   function elOutsideTaglib(ASTElExpression) in line 25
      10 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function visit(ASTElExpression,Object) in line 17
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function elOutsideTaglib(ASTElExpression) defined in net::sourceforge::pmd::lang::jsp::rule::basic::NoUnsanitizedJSPExpressionRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/JspRuleChainVisitor.java
module net::sourceforge::pmd::lang::jsp::rule::JspRuleChainVisitor
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNodes(List< Node >,RuleContext) in line 20
      14 lines of code
      2 parameters
      2 conditional paths
      uses function visit(Rule,Node,RuleContext) defined in net::sourceforge::pmd::lang::jsp::rule::JspRuleChainVisitor
      uses variable data defined in sample-matlab.m
      uses function indexNode(Node) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function visit(Rule,Node,RuleContext) in line 35
      8 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/JspRuleViolationFactory.java
module net::sourceforge::pmd::lang::jsp::rule::JspRuleViolationFactory
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function createRuleViolation(Rule,RuleContext,Node,String) in line 23
      3 lines of code
      4 parameters
      1 conditional paths
   function createRuleViolation(Rule,RuleContext,Node,String,int,int) in line 27
      3 lines of code
      6 parameters
      1 conditional paths
   function JspRuleViolationFactory() in line 19
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 17
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/lang/jsp/ast/AbstractJspNodesTst.java
module net::sourceforge::pmd::lang::jsp::ast::AbstractJspNodesTst
   abstract class
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/lang/jsp/ast/JspDocStyleTest.java
module net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNodesTst
   function mixedExpressions() in line 277
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_TAGS_WITH_MIXED_EXPRESSIONS defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function nestedEmptyTags() in line 622
      protection public
      31 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_MULTIPLE_EMPTY_TAGS defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function nestedMultipleTags() in line 658
      protection public
      43 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_MULTIPLE_NESTED_TAGS defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function noQuoteAttrCrLf() in line 454
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable TEST_NO_QUOTE_CR_LF_ATTR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function noQuoteAttrEmpty() in line 437
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable TEST_NO_QUOTE_EMPTY_ATTR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function noQuoteAttrTab() in line 472
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_TAB_ATTR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function noQuoteAttrValue() in line 396
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_ATTR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function noQuoteAttrWithBeanWriteTagAsValue() in line 513
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_TAG_IN_ATTR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function noQuoteAttrWithDollarSignInValue() in line 542
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_ATTR_WITH_DOLLAR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function noQuoteAttrWithJspEL() in line 408
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable TEST_NO_QUOTE_ATTR_WITH_EL defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function noQuoteAttrWithJspExpression() in line 426
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_ATTR_WITH_EXPRESSION defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function noQuoteAttrWithMalformedJspExpression() in line 486
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_ATTR_WITH_MALFORMED_EXPR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function noQuoteAttrWithScriptletInValue() in line 499
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_ATTR_WITH_SCRIPTLET defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function noQuoteAttrWithSharpSymbolInValue() in line 556
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_ATTR_WITH_HASH defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function noSpacesBetweenTags() in line 234
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_TAGS_NO_SPACE defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function quoteAttrWithBeanWriteTagAsValue() in line 528
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_NO_QUOTE_TAG_IN_ATTR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function quoteEL() in line 367
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_QUOTE_EL defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function quoteExpression() in line 375
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_QUOTE_EXPRESSION defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function quoteTagInAttribute() in line 385
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_QUOTE_TAG_IN_ATTR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function sortNodesByName(Set< ASTElement >) in line 858
      19 lines of code
      1 parameters
      3 conditional paths
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
      uses function if(~) defined in sample-matlab.m
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
   function suite() in line 1066
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAttributeValueContainingHash() in line 75
      protection public
      32 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_ATTRIBUTE_VALUE_CONTAINING_HASH defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTAttribute
   function testCData() in line 112
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_CDATA defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testComment() in line 152
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_COMMENT defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testComplexHtmlScript() in line 200
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_COMPLEX_SCRIPT defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testDoctype() in line 125
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_DOCTYPE defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeDeclaration
      uses function getPublicId() defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeExternalId
      uses function getUri() defined in net::sourceforge::pmd::lang::jsp::ast::ASTDoctypeExternalId
   function testElementAttributeAndNamespace() in line 42
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_ELEMENT_AND_NAMESPACE defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testHtmlScript() in line 163
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_HTML_SCRIPT defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testHtmlScriptWithAttribute() in line 187
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_HTML_SCRIPT_WITH_ATTRIBUTE defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testImportHtmlScript() in line 175
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_IMPORT_JAVASCRIPT defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testInlineCss() in line 213
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_INLINE_STYLE defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testSimplestJsp() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_SIMPLEST_HTML defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function testTextInTag() in line 222
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_TEXT_IN_TAG defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function textAfterOpenAndClosedTag() in line 353
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_TEXT_AFTER_OPEN_AND_CLOSED_TAG defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function textBetweenUnopenedTag() in line 328
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_TEXT_WITH_UNOPENED_TAG defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function textMultipleClosingTags() in line 341
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_MULTIPLE_CLOSING_TAGS defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unclosedEndOfDoc() in line 832
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_UNCLOSED_END_OF_DOC defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unclosedParentTagClosedBeforeChild() in line 708
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_UNCLOSED_END_AFTER_PARENT_CLOSE defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unclosedStartTagWithUnmatchedCloseOfDifferentTag() in line 786
      protection public
      36 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_UNCLOSED_START_TAG_WITH_UNMATCHED_CLOSE defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unclosedTag() in line 565
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_UNCLOSED_SIMPLE defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unclosedTagAndNoQuotesForAttribute() in line 581
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_UNCLOSED_NO_QUOTE_ATTR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unclosedTagMultipleLevels() in line 597
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_UNCLOSED_MULTIPLE_LEVELS defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unclosedTagsWithDollar() in line 250
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_TAGS_WITH_DOLLAR defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unclosedTagsWithELWithin() in line 262
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_TAGS_WITH_EL_WITHIN defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function unclosedTagsWithJspExpressionWithin() in line 314
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_TAGS_WITH_EXPRESSION_WITHIN defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   function unmatchedTagDoesNotInfluenceStructure() in line 748
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses variable TEST_UNCLOSED_UNMATCHED_CLOSING_TAG defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
      uses function sortNodesByName(Set< ASTElement >) defined in net::sourceforge::pmd::lang::jsp::ast::JspDocStyleTest
   variable TEST_ATTRIBUTE_VALUE_CONTAINING_HASH in line 917
   variable TEST_CDATA in line 908
   variable TEST_COMMENT in line 915
   variable TEST_COMPLEX_SCRIPT in line 929
   variable TEST_DOCTYPE in line 910
   variable TEST_ELEMENT_AND_NAMESPACE in line 906
   variable TEST_HTML_SCRIPT in line 920
   variable TEST_HTML_SCRIPT_WITH_ATTRIBUTE in line 926
   variable TEST_IMPORT_JAVASCRIPT in line 923
   variable TEST_INLINE_STYLE in line 939
   variable TEST_MULTIPLE_CLOSING_TAGS in line 966
   variable TEST_MULTIPLE_EMPTY_TAGS in line 1029
   variable TEST_MULTIPLE_NESTED_TAGS in line 1036
   variable TEST_NO_QUOTE_ATTR in line 979
   variable TEST_NO_QUOTE_ATTR_WITH_DOLLAR in line 1011
   variable TEST_NO_QUOTE_ATTR_WITH_EL in line 994
   variable TEST_NO_QUOTE_ATTR_WITH_EXPRESSION in line 997
   variable TEST_NO_QUOTE_ATTR_WITH_HASH in line 1014
   variable TEST_NO_QUOTE_ATTR_WITH_MALFORMED_EXPR in line 1004
   variable TEST_NO_QUOTE_ATTR_WITH_SCRIPTLET in line 1007
   variable TEST_NO_QUOTE_CR_LF_ATTR in line 988
   variable TEST_NO_QUOTE_EMPTY_ATTR in line 982
   variable TEST_NO_QUOTE_TAB_ATTR in line 991
   variable TEST_NO_QUOTE_TAG_IN_ATTR in line 985
   variable TEST_QUOTE_EL in line 969
   variable TEST_QUOTE_EXPRESSION in line 972
   variable TEST_QUOTE_TAG_IN_ATTR in line 975
   variable TEST_SIMPLEST_HTML in line 904
   variable TEST_TAGS_NO_SPACE in line 945
   variable TEST_TAGS_WITH_DOLLAR in line 948
   variable TEST_TAGS_WITH_EL_WITHIN in line 951
   variable TEST_TAGS_WITH_EXPRESSION_WITHIN in line 957
   variable TEST_TAGS_WITH_MIXED_EXPRESSIONS in line 954
   variable TEST_TEXT_AFTER_OPEN_AND_CLOSED_TAG in line 960
   variable TEST_TEXT_IN_TAG in line 942
   variable TEST_TEXT_WITH_UNOPENED_TAG in line 963
   variable TEST_UNCLOSED_END_AFTER_PARENT_CLOSE in line 1042
   variable TEST_UNCLOSED_END_OF_DOC in line 1059
   variable TEST_UNCLOSED_MULTIPLE_LEVELS in line 1023
   variable TEST_UNCLOSED_NO_QUOTE_ATTR in line 1062
   variable TEST_UNCLOSED_SIMPLE in line 1017
   variable TEST_UNCLOSED_START_TAG_WITH_UNMATCHED_CLOSE in line 1056
   variable TEST_UNCLOSED_UNMATCHED_CLOSING_TAG in line 1049
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/lang/jsp/ast/JspPageStyleTest.java
module net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   inherits from net::sourceforge::pmd::lang::jsp::ast::AbstractJspNodesTst
   function suite() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testComment() in line 20
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable JSP_COMMENT defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   function testDeclaration() in line 69
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable JSP_DECLARATION defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   function testDirective() in line 31
      protection public
      33 lines of code
      0 parameters
      1 conditional paths
      uses variable JSP_DIRECTIVE defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
      uses function getName() defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
      uses function getValue() defined in net::sourceforge::pmd::lang::jsp::ast::ASTJspDirectiveAttribute
   function testElExpression() in line 118
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable JSP_EL_EXPRESSION defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   function testElExpressionInAttribute() in line 130
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable JSP_EL_EXPRESSION_IN_ATTRIBUTE defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   function testExpression() in line 93
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable JSP_EXPRESSION defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   function testExpressionInAttribute() in line 105
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable JSP_EXPRESSION_IN_ATTRIBUTE defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   function testJsfValueBinding() in line 142
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable JSF_VALUE_BINDING defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
      uses variable JSP_COMMENT defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   function testScriptlet() in line 81
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable JSP_SCRIPTLET defined in net::sourceforge::pmd::lang::jsp::ast::JspPageStyleTest
   variable JSF_VALUE_BINDING in line 174
   variable JSP_COMMENT in line 150
   variable JSP_DECLARATION in line 156
   variable JSP_DIRECTIVE in line 153
   variable JSP_EL_EXPRESSION in line 168
   variable JSP_EL_EXPRESSION_IN_ATTRIBUTE in line 171
   variable JSP_EXPRESSION in line 162
   variable JSP_EXPRESSION_IN_ATTRIBUTE in line 165
   variable JSP_SCRIPTLET in line 159
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/lang/jsp/ast/OpenTagRegisterTest.java
module net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
   function doubleNesting() in line 40
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function element(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses variable tagList defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses function openTag(ASTElement) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function closeTag(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function isUnclosed() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function element(String) in line 136
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable elmId defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses function setName(String) defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function interleavedTags() in line 85
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses function element(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses variable tagList defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses function openTag(ASTElement) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function closeTag(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function isUnclosed() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function newRegister() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tagList defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
   function openedIsolatedTag() in line 111
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses function element(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses function x(K+) defined in sample-matlab.m
      uses variable tagList defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses function openTag(ASTElement) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function closeTag(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function isUnclosed() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function testSimpleNesting() in line 24
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function element(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses variable tagList defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses function openTag(ASTElement) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function closeTag(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function isUnclosed() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   function unopenedTags() in line 59
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function element(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses variable tagList defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegisterTest
      uses function openTag(ASTElement) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function closeTag(String) defined in net::sourceforge::pmd::lang::jsp::ast::OpenTagRegister
      uses function isUnclosed() defined in net::sourceforge::pmd::lang::jsp::ast::ASTElement
   variable elmId in line 13
   variable tagList in line 11
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/lang/jsp/ast/XPathJspRuleTest.java
module net::sourceforge::pmd::lang::jsp::ast::XPathJspRuleTest
   inherits from net::sourceforge::pmd::testframework::RuleTst
   function suite() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testExpressionMatching() in line 30
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses variable XPATH_EXPRESSION defined in net::sourceforge::pmd::lang::jsp::ast::XPathJspRuleTest
      uses function setMessage(String) defined in net::sourceforge::pmd::Rule
      uses function setLanguage(Language) defined in net::sourceforge::pmd::Rule
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getSourceCodeProcessor() defined in net::sourceforge::pmd::PMD
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses variable MATCH defined in net::sourceforge::pmd::lang::jsp::ast::XPathJspRuleTest
      uses function size() defined in net::sourceforge::pmd::Report
      uses function iterator() defined in net::sourceforge::pmd::Report
   variable MATCH in line 53
   variable XPATH_EXPRESSION in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/lang/jsp/JspParserTest.java
module net::sourceforge::pmd::lang::jsp::JspParserTest
   function parse(String) in line 31
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::jsp::JspLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
   function testParseDollar() in line 26
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(String) defined in net::sourceforge::pmd::lang::jsp::JspParserTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-jsp/src/test/java/net/sourceforge/pmd/lang/jsp/rule/basicjsf/BasicJsfRulesTest.java
module net::sourceforge::pmd::lang::jsp::rule::basicjsf::BasicJsfRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::jsp::rule::basicjsf::BasicJsfRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/main/java/net/sourceforge/pmd/cpd/MatlabLanguage.java
module net::sourceforge::pmd::cpd::MatlabLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function MatlabLanguage() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/main/java/net/sourceforge/pmd/cpd/MatlabTokenizer.java
module net::sourceforge::pmd::cpd::MatlabTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 25
      protection public
      25 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getNextToken() defined in net::sourceforge::pmd::lang::TokenManager
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/main/java/net/sourceforge/pmd/lang/matlab/MatlabHandler.java
module net::sourceforge::pmd::lang::matlab::MatlabHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getParser(ParserOptions) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/main/java/net/sourceforge/pmd/lang/matlab/MatlabLanguageModule.java
module net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function MatlabLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::matlab::MatlabLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/main/java/net/sourceforge/pmd/lang/matlab/MatlabParser.java
module net::sourceforge::pmd::lang::matlab::MatlabParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTokenManager(Reader) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String,Reader) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function MatlabParser(ParserOptions) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/main/java/net/sourceforge/pmd/lang/matlab/MatlabTokenManager.java
module net::sourceforge::pmd::lang::matlab::MatlabTokenManager
   inherits from net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::matlab::MatlabTokenManager
   function setFileName(String) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MatlabTokenManager(Reader) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::matlab::MatlabTokenManager
   variable tokenManager in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/test/java/net/sourceforge/pmd/cpd/MatlabTokenizerTest.java
module net::sourceforge::pmd::cpd::MatlabTokenizerTest
   inherits from net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function buildTokenizer() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable sourceCode defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::MatlabTokenizerTest
   function getSampleCode() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::MatlabTokenizerTest
   function tokenizeTest() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedTokenCount defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
   variable FILENAME in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-matlab/src/test/resources/net/sourceforge/pmd/cpd/sample-matlab.m
module sample-matlab.m
   variable GitHub in line 1
      protection public
   variable finite in line 7
      protection public
   variable default in line 150
      protection public
   variable isTransposed in line 155
      protection public
   variable CONSTRUCTOR in line 159
      protection public
   variable Static in line 161
      protection public
   variable together in line 182
      protection public
   variable domain in line 183
      protection public
   variable funs in line 183
      protection public
   variable uniformOutput in line 184
      protection public
   variable false in line 184
      protection public
   variable inputs in line 191
      protection public
   variable dom in line 192
      protection public
   variable data in line 192
      protection public
   variable pref in line 192
      protection public
   variable truncLength in line 201
      protection public
   variable k in line 202
      protection public
   variable function_handle in line 216
      protection public
   variable numeric in line 216
      protection public
   variable input in line 216
      protection public
   variable f in line 227
      protection public
   variable c in line 236
      protection public
   variable METHODS in line 246
      protection public
   variable t in line 260
      protection public
   variable collocation in line 262
      protection public
   variable g in line 266
      protection public
   variable C in line 272
      protection public
   variable out in line 287
      protection public
   variable y in line 290
      protection public
   variable e in line 332
      protection public
   variable c_leg in line 345
      protection public
   variable r in line 378
      protection public
   variable object in line 395
      protection public
   variable varargout in line 405
      protection public
   variable varargin in line 462
      protection public
   variable CHEBFUN in line 464
      protection public
   variable breakpoints in line 467
      protection public
   variable property in line 482
      protection public
   variable j in line 483
      protection public
   variable transform in line 510
      protection public
   variable kind in line 511
      protection public
   variable method in line 520
      protection public
   variable output in line 525
      protection public
   variable interpolation in line 534
      protection public
   variable interpolant in line 537
      protection public
   variable d in line 538
      protection public
   variable files in line 540
      protection public
   variable ends in line 567
      protection public
   variable objects in line 569
      protection public
   variable lineWidth in line 572
      protection public
   variable etc in line 572
      protection public
   variable depVar in line 590
      protection public
   variable op in line 595
      protection public
   variable function in line 599
      protection public
   variable this in line 602
      protection public
   function https:http:Description:constructor:diagram:PROPERTIES:(id,id,id,2,id,Kx1 cell array of FUN objects) in line 7
      protection public
      1 lines of code
      6 parameters
      1 conditional paths
   function x(K+) in line 146
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function considered(infxM) in line 150
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function objects(if F.) in line 151
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function are(Mxinf) in line 151
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function power() in line 351
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scale:(f, varargin) in line 386
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function extractColumns() in line 458
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function METHODS:(f) in line 485
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function if(~) in line 587
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function COMPOSE() in line 602
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function if(strncmp(op, '--', 2)) in line 606
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function update() in line 606
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function elseif(strcmpi(op, '--update-devel')) in line 610
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function elseif(strcmpi(op, '--version')) in line 612
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/main/java/net/sourceforge/pmd/cpd/ObjectiveCLanguage.java
module net::sourceforge::pmd::cpd::ObjectiveCLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function ObjectiveCLanguage() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/main/java/net/sourceforge/pmd/cpd/ObjectiveCTokenizer.java
module net::sourceforge::pmd::cpd::ObjectiveCTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 24
      protection public
      24 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/main/java/net/sourceforge/pmd/lang/objectivec/ObjectiveCHandler.java
module net::sourceforge::pmd::lang::objectivec::ObjectiveCHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getParser(ParserOptions) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/main/java/net/sourceforge/pmd/lang/objectivec/ObjectiveCLanguageModule.java
module net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function ObjectiveCLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/main/java/net/sourceforge/pmd/lang/objectivec/ObjectiveCParser.java
module net::sourceforge::pmd::lang::objectivec::ObjectiveCParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTokenManager(Reader) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String,Reader) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function ObjectiveCParser(ParserOptions) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/main/java/net/sourceforge/pmd/lang/objectivec/ObjectiveCTokenManager.java
module net::sourceforge::pmd::lang::objectivec::ObjectiveCTokenManager
   inherits from net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCTokenManager
   function setFileName(String) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ObjectiveCTokenManager(Reader) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::objectivec::ObjectiveCTokenManager
   variable tokenManager in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/test/java/net/sourceforge/pmd/cpd/ObjectiveCTokenizerTest.java
module net::sourceforge::pmd::cpd::ObjectiveCTokenizerTest
   inherits from net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function buildTokenizer() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable sourceCode defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::ObjectiveCTokenizerTest
   function getSampleCode() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::ObjectiveCTokenizerTest
   function tokenizeTest() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedTokenCount defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
   variable FILENAME in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-objectivec/src/test/resources/net/sourceforge/pmd/cpd/AFHTTPRequestOperation.m
module AFHTTPRequestOperation.m
   function http_request_operation_processing_queue() in line 28
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function http_request_operation_completion_group() in line 38
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
module AFURLConnectionOperation()
module AFHTTPRequestOperation()
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-php/src/main/java/net/sourceforge/pmd/cpd/PHPLanguage.java
module net::sourceforge::pmd::cpd::PHPLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function PHPLanguage() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-php/src/main/java/net/sourceforge/pmd/cpd/PHPTokenizer.java
module net::sourceforge::pmd::cpd::PHPTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 14
      protection public
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getCode() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable j defined in sample-matlab.m
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-php/src/main/java/net/sourceforge/pmd/lang/php/PhpLanguageModule.java
module net::sourceforge::pmd::lang::php::PhpLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function PhpLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::php::PhpLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/cpd/PLSQLLanguage.java
module net::sourceforge::pmd::cpd::PLSQLLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function setProperties(Properties) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTokenizer() defined in net::sourceforge::pmd::cpd::AbstractLanguage
   function PLSQLLanguage() in line 13
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/cpd/PLSQLTokenizer.java
module net::sourceforge::pmd::cpd::PLSQLTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function setIgnoreComments(boolean) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIgnoreIdentifiers(boolean) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setIgnoreLiterals(boolean) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProperties(Properties) in line 27
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreComments defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses variable IGNORE_COMMENTS defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses variable ignoreIdentifiers defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses variable IGNORE_IDENTIFIERS defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses variable ignoreLiterals defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses variable IGNORE_LITERALS defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
   function tokenize(SourceCode,Tokens) in line 55
      protection public
      64 lines of code
      2 parameters
      7 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses variable ignoreComments defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses variable ignoreIdentifiers defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses variable ignoreLiterals defined in net::sourceforge::pmd::cpd::PLSQLTokenizer
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
   variable IGNORE_COMMENTS in line 19
      protection public
   variable IGNORE_IDENTIFIERS in line 20
      protection public
   variable IGNORE_LITERALS in line 21
      protection public
   variable ignoreComments in line 23
   variable ignoreIdentifiers in line 24
   variable ignoreLiterals in line 25
   variable LOGGER in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/AbstractPLSQLNode.java
module net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
   abstract class
   function childrenAccept(PLSQLParserVisitor,Object) in line 52
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function dump(String) in line 73
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function toString() defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function AbstractPLSQLNode(int) defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses function dump(String) defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function getCanonicalImage() in line 92
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getCanonicalImage(String) in line 102
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getScope() in line 105
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable scope defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses variable parent defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function jjtClose() in line 32
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable parser defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses variable endLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable endColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtGetValue() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function jjtOpen() in line 25
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable parser defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtSetValue(Object) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function setScope(Scope) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scope defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function toString() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function toString(String) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
      uses function toString(String) defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function AbstractPLSQLNode(int) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractPLSQLNode(PLSQLParser,int) in line 20
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   variable parser in line 13
   variable scope in line 14
   variable value in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTDatatype.java
module net::sourceforge::pmd::lang::plsql::ast::ASTDatatype
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function getTypeImage() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTDatatype(int) in line 10
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDatatype(PLSQLParser,int) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTInput.java
module net::sourceforge::pmd::lang::plsql::ast::ASTInput
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::ast::RootNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTInput(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTInput(PLSQLParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTPackageBody.java
module net::sourceforge::pmd::lang::plsql::ast::ASTPackageBody
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::OracleObject
   function getObjectName() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTPackageBody(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPackageBody(PLSQLParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTPackageSpecification.java
module net::sourceforge::pmd::lang::plsql::ast::ASTPackageSpecification
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::OracleObject
   function getObjectName() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTPackageSpecification(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTPackageSpecification(PLSQLParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTProgramUnit.java
module net::sourceforge::pmd::lang::plsql::ast::ASTProgramUnit
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::ExecutableCode
   inherits from net::sourceforge::pmd::lang::plsql::ast::OracleObject
   inherits from net::sourceforge::pmd::lang::dfa::DFAGraphMethod
   function getMethodName() in line 32
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getName() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodName() defined in net::sourceforge::pmd::lang::plsql::ast::ASTProgramUnit
   function getObjectName() in line 51
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTProgramUnit(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTProgramUnit(PLSQLParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTTriggerTimingPointSection.java
module net::sourceforge::pmd::lang::plsql::ast::ASTTriggerTimingPointSection
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::ExecutableCode
   inherits from net::sourceforge::pmd::lang::dfa::DFAGraphMethod
   function getMethodName() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getName() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodName() defined in net::sourceforge::pmd::lang::plsql::ast::ASTTriggerTimingPointSection
   function jjtAccept(PLSQLParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTriggerTimingPointSection(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTriggerTimingPointSection(PLSQLParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTTriggerUnit.java
module net::sourceforge::pmd::lang::plsql::ast::ASTTriggerUnit
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::ExecutableCode
   inherits from net::sourceforge::pmd::lang::plsql::ast::OracleObject
   inherits from net::sourceforge::pmd::lang::dfa::DFAGraphMethod
   function getMethodName() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getName() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodName() defined in net::sourceforge::pmd::lang::plsql::ast::ASTTriggerUnit
   function getObjectName() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTriggerUnit(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTriggerUnit(PLSQLParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTTypeMethod.java
module net::sourceforge::pmd::lang::plsql::ast::ASTTypeMethod
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::ExecutableCode
   inherits from net::sourceforge::pmd::lang::dfa::DFAGraphMethod
   function getMethodName() in line 31
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getName() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMethodName() defined in net::sourceforge::pmd::lang::plsql::ast::ASTTypeMethod
   function jjtAccept(PLSQLParserVisitor,Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTypeMethod(int) in line 12
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTypeMethod(PLSQLParser,int) in line 16
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTTypeSpecification.java
module net::sourceforge::pmd::lang::plsql::ast::ASTTypeSpecification
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   inherits from net::sourceforge::pmd::lang::plsql::ast::OracleObject
   function getObjectName() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtAccept(PLSQLParserVisitor,Object) in line 21
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTTypeSpecification(int) in line 11
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTTypeSpecification(PLSQLParser,int) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTVariableOrConstantDeclaratorId.java
module net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
   inherits from net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function bumpArrayDepth() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
   function findTypeNameNode(Node) in line 83
      4 lines of code
      1 parameters
      1 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function getArrayDepth() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
   function getNameDeclaration() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nameDeclaration defined in net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
   function getTypeNameNode() in line 57
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function findTypeNameNode(Node) defined in net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
   function getTypeNode() in line 71
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function getUsages() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getScope() defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
      uses function getDeclarations() defined in net::sourceforge::pmd::lang::symboltable::Scope
      uses variable nameDeclaration defined in net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
   function isArray() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable arrayDepth defined in net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
   function jjtAccept(PLSQLParserVisitor,Object) in line 26
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setNameDeclaration(NameDeclaration) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nameDeclaration defined in net::sourceforge::pmd::lang::plsql::ast::ASTVariableOrConstantDeclaratorId
   function ASTVariableOrConstantDeclaratorId(int) in line 16
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTVariableOrConstantDeclaratorId(PLSQLParser,int) in line 20
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable arrayDepth in line 30
   variable nameDeclaration in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ExecutableCode.java
module net::sourceforge::pmd::lang::plsql::ast::ExecutableCode
   inherits from net::sourceforge::pmd::lang::ast::Node
   function getMethodName() in line 18
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/OracleObject.java
module net::sourceforge::pmd::lang::plsql::ast::OracleObject
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
   function getObjectName() in line 16
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/PLSQLNode.java
module net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   inherits from net::sourceforge::pmd::lang::symboltable::ScopedNode
   function childrenAccept(PLSQLParserVisitor,Object) in line 16
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getScope() in line 18
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(PLSQLParserVisitor,Object) in line 13
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setScope(Scope) in line 20
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/PLSQLParserVisitorAdapter.java
module net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitor
   function visit(PLSQLNode,Object) in line 9
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable data defined in sample-matlab.m
   function visit(ASTInput,Object) in line 14
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDDLCommand,Object) in line 19
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSqlPlusCommand,Object) in line 24
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTGlobal,Object) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTBlock,Object) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageSpecification,Object) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageBody,Object) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDeclarativeUnit,Object) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDeclarativeSection,Object) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationDeclarationFragment,Object) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTProgramUnit,Object) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectNameDeclaration,Object) in line 69
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameter,Object) in line 74
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclarator,Object) in line 84
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameters,Object) in line 89
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantDeclarator,Object) in line 94
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantDeclaratorId,Object) in line 99
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantInitializer,Object) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDatatype,Object) in line 109
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationDataType,Object) in line 114
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCollectionTypeName,Object) in line 119
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTScalarDataTypeName,Object) in line 124
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDateTimeLiteral,Object) in line 129
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTExceptionHandler,Object) in line 134
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSkip2NextTerminator,Object) in line 139
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSkip2NextOccurrence,Object) in line 144
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSkipPastNextOccurrence,Object) in line 149
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSkip2NextTokenOccurrence,Object) in line 154
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSkipPastNextTokenOccurrence,Object) in line 159
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTRead2NextOccurrence,Object) in line 164
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTReadPastNextOccurrence,Object) in line 169
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSqlStatement,Object) in line 174
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTWrappedObject,Object) in line 179
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTUnlabelledStatement,Object) in line 184
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTStatement,Object) in line 189
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLabelledStatement,Object) in line 194
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseStatement,Object) in line 199
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseWhenClause,Object) in line 204
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTElseClause,Object) in line 209
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTElsifClause,Object) in line 214
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLoopStatement,Object) in line 219
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 224
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 229
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 234
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForIndex,Object) in line 239
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForAllIndex,Object) in line 244
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTForAllStatement,Object) in line 249
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTGotoStatement,Object) in line 254
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 259
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTContinueStatement,Object) in line 264
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTExitStatement,Object) in line 269
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTRaiseStatement,Object) in line 274
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCloseStatement,Object) in line 279
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTOpenStatement,Object) in line 284
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFetchStatement,Object) in line 289
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEmbeddedSqlStatement,Object) in line 294
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPipelineStatement,Object) in line 299
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalCompilationStatement,Object) in line 304
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSubTypeDefinition,Object) in line 309
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 314
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCollectionTypeDefinition,Object) in line 319
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCollectionDeclaration,Object) in line 324
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectDeclaration,Object) in line 329
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCallSpecTail,Object) in line 334
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCursorUnit,Object) in line 339
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCursorSpecification,Object) in line 344
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCursorBody,Object) in line 349
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTExpression,Object) in line 354
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationExpression,Object) in line 359
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAssignment,Object) in line 364
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseExpression,Object) in line 369
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLikeExpression,Object) in line 374
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTrimExpression,Object) in line 379
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectExpression,Object) in line 384
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalOrExpression,Object) in line 389
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalAndExpression,Object) in line 394
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEqualityExpression,Object) in line 399
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTRelationalExpression,Object) in line 404
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAdditiveExpression,Object) in line 409
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTStringExpression,Object) in line 414
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMultiplicativeExpression,Object) in line 419
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpression,Object) in line 424
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpressionNotPlusMinus,Object) in line 429
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryExpression,Object) in line 434
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryPrefix,Object) in line 439
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimarySuffix,Object) in line 444
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLiteral,Object) in line 449
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTStringLiteral,Object) in line 454
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTBooleanLiteral,Object) in line 459
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNullLiteral,Object) in line 464
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTMultiSetCondition,Object) in line 469
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNumericLiteral,Object) in line 474
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTLabel,Object) in line 479
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 484
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTQualifiedName,Object) in line 489
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArguments,Object) in line 494
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArgumentList,Object) in line 499
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTArgument,Object) in line 504
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantDeclaration,Object) in line 509
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDatatypeDeclaration,Object) in line 514
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPragma,Object) in line 519
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTInlinePragma,Object) in line 524
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTExceptionDeclaration,Object) in line 529
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTParallelClause,Object) in line 534
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTable,Object) in line 539
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTableColumn,Object) in line 544
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTView,Object) in line 549
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTSynonym,Object) in line 554
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDirectory,Object) in line 559
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDatabaseLink,Object) in line 564
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTViewColumn,Object) in line 569
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTComment,Object) in line 574
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeMethod,Object) in line 579
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeSpecification,Object) in line 584
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAlterTypeSpec,Object) in line 589
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAttributeDeclaration,Object) in line 594
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAttribute,Object) in line 599
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTPragmaClause,Object) in line 604
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTriggerUnit,Object) in line 609
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTriggerTimingPointSection,Object) in line 614
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTCompoundTriggerBlock,Object) in line 619
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNonDMLTrigger,Object) in line 624
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDDLEvent,Object) in line 629
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTDatabaseEvent,Object) in line 634
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTNonDMLEvent,Object) in line 639
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAlterTrigger,Object) in line 644
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTKEYWORD_RESERVED,Object) in line 649
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTKEYWORD_UNRESERVED,Object) in line 654
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTID,Object) in line 659
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTUnqualifiedID,Object) in line 664
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTQualifiedID,Object) in line 669
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeKeyword,Object) in line 674
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTJavaInterfaceClass,Object) in line 679
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTEqualsOldIDNewID,Object) in line 684
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(ASTAccessibleByClause,Object) in line 689
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitorAdapter
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/dfa/DFAPLSQLGraphRule.java
module net::sourceforge::pmd::lang::plsql::dfa::DFAPLSQLGraphRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
   inherits from net::sourceforge::pmd::lang::dfa::DFAGraphRule
   function getMethods() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable executables defined in net::sourceforge::pmd::lang::plsql::dfa::DFAPLSQLGraphRule
   function visit(ASTTriggerUnit,Object) in line 33
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable executables defined in net::sourceforge::pmd::lang::plsql::dfa::DFAPLSQLGraphRule
      uses variable data defined in sample-matlab.m
   function visit(ASTProgramUnit,Object) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable executables defined in net::sourceforge::pmd::lang::plsql::dfa::DFAPLSQLGraphRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeMethod,Object) in line 45
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable executables defined in net::sourceforge::pmd::lang::plsql::dfa::DFAPLSQLGraphRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTriggerTimingPointSection,Object) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable executables defined in net::sourceforge::pmd::lang::plsql::dfa::DFAPLSQLGraphRule
      uses variable data defined in sample-matlab.m
   function visit(ASTInput,Object) in line 58
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable executables defined in net::sourceforge::pmd::lang::plsql::dfa::DFAPLSQLGraphRule
      uses variable data defined in sample-matlab.m
   function DFAPLSQLGraphRule() in line 22
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable executables in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/dfa/PLSQLDataFlowNode.java
module net::sourceforge::pmd::lang::plsql::dfa::PLSQLDataFlowNode
   inherits from net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
   function toString() in line 21
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getLine() defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable type defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable node defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses function toString() defined in net::sourceforge::pmd::lang::plsql::ast::AbstractPLSQLNode
   function PLSQLDataFlowNode(List< DataFlowNode >,Node) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dataFlow defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
      uses variable node defined in net::sourceforge::pmd::lang::dfa::AbstractDataFlowNode
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLDataFlowHandler.java
module net::sourceforge::pmd::lang::plsql::PLSQLDataFlowHandler
   inherits from net::sourceforge::pmd::lang::DataFlowHandler
   function createDataFlowNode(List< DataFlowNode >,Node) in line 15
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getLabelStatementNodeClass() in line 19
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLHandler.java
module net::sourceforge::pmd::lang::plsql::PLSQLHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getDataFlowFacade() in line 56
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function initializeWith(DataFlowHandler,ASTInput) defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::plsql::PLSQLHandler
   function getDataFlowHandler() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDFAGraphRule() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDumpFacade(final Writer,final String,final boolean) in line 74
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function initializeWith(Writer,String,boolean,PLSQLNode) defined in net::sourceforge::pmd::lang::plsql::ast::DumpFacade
   function getParser(ParserOptions) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::plsql::rule::PLSQLRuleViolationFactory
   function getSymbolFacade() in line 65
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function initializeWith(ASTInput) defined in net::sourceforge::pmd::lang::plsql::symboltable::SymbolFacade
   function getXPathHandler() in line 87
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLLanguageModule.java
module net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function PLSQLLanguageModule() in line 14
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 11
      protection public
   variable TERSE_NAME in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLParser.java
module net::sourceforge::pmd::lang::plsql::PLSQLParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createPLSQLParser(Reader) in line 34
      6 lines of code
      1 parameters
      1 conditional paths
   function createTokenManager(Reader) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String,Reader) in line 45
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function createPLSQLParser(Reader) defined in net::sourceforge::pmd::lang::plsql::PLSQLParser
   function PLSQLParser(ParserOptions) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLTokenManager.java
module net::sourceforge::pmd::lang::plsql::PLSQLTokenManager
   inherits from net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 22
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::plsql::PLSQLTokenManager
   function setFileName(String) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::plsql::PLSQLTokenManager
   function PLSQLTokenManager(Reader) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::plsql::PLSQLTokenManager
   variable tokenManager in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/AbstractPLSQLRule.java
module net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   inherits from net::sourceforge::pmd::lang::plsql::ast::PLSQLParserVisitor
   inherits from net::sourceforge::pmd::lang::rule::ImmutableLanguage
   abstract class
   function apply(List<?extends Node >,RuleContext) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visitAll(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
   function getDeclaringType(Node) in line 49
      34 lines of code
      1 parameters
      6 conditional paths
      uses variable c defined in sample-matlab.m
      uses function getFirstParentOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function importsPackage(ASTInput,String) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isQualifiedName(Node) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
   function visit(PLSQLNode,Object) in line 96
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable data defined in sample-matlab.m
   function visit(ASTInput,Object) in line 102
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDDLCommand,Object) in line 107
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSqlPlusCommand,Object) in line 112
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTGlobal,Object) in line 117
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBlock,Object) in line 122
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageSpecification,Object) in line 127
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPackageBody,Object) in line 133
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDeclarativeUnit,Object) in line 139
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDeclarativeSection,Object) in line 144
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationDeclarationFragment,Object) in line 149
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTProgramUnit,Object) in line 154
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectNameDeclaration,Object) in line 160
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameter,Object) in line 165
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclaration,Object) in line 170
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMethodDeclarator,Object) in line 175
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFormalParameters,Object) in line 180
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantDeclarator,Object) in line 185
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantDeclaratorId,Object) in line 190
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantInitializer,Object) in line 195
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDatatype,Object) in line 200
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationDataType,Object) in line 205
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCollectionTypeName,Object) in line 210
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTScalarDataTypeName,Object) in line 215
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDateTimeLiteral,Object) in line 220
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExceptionHandler,Object) in line 225
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSkip2NextTerminator,Object) in line 230
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSkip2NextOccurrence,Object) in line 235
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSkipPastNextOccurrence,Object) in line 240
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSkip2NextTokenOccurrence,Object) in line 245
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSkipPastNextTokenOccurrence,Object) in line 250
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTRead2NextOccurrence,Object) in line 255
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReadPastNextOccurrence,Object) in line 260
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSqlStatement,Object) in line 265
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWrappedObject,Object) in line 270
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnlabelledStatement,Object) in line 275
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTStatement,Object) in line 280
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLabelledStatement,Object) in line 285
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseStatement,Object) in line 290
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseWhenClause,Object) in line 295
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElseClause,Object) in line 300
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTElsifClause,Object) in line 305
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLoopStatement,Object) in line 310
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForStatement,Object) in line 315
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTWhileStatement,Object) in line 320
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTIfStatement,Object) in line 325
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForIndex,Object) in line 330
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForAllIndex,Object) in line 335
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTForAllStatement,Object) in line 340
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTGotoStatement,Object) in line 345
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTReturnStatement,Object) in line 350
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTContinueStatement,Object) in line 355
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExitStatement,Object) in line 360
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTRaiseStatement,Object) in line 365
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCloseStatement,Object) in line 370
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTOpenStatement,Object) in line 375
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFetchStatement,Object) in line 380
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEmbeddedSqlStatement,Object) in line 385
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPipelineStatement,Object) in line 390
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalCompilationStatement,Object) in line 395
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSubTypeDefinition,Object) in line 400
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTFieldDeclaration,Object) in line 405
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCollectionTypeDefinition,Object) in line 410
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCollectionDeclaration,Object) in line 415
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectDeclaration,Object) in line 420
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCallSpecTail,Object) in line 425
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCursorUnit,Object) in line 430
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCursorSpecification,Object) in line 435
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCursorBody,Object) in line 440
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExpression,Object) in line 445
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCompilationExpression,Object) in line 450
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAssignment,Object) in line 455
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCaseExpression,Object) in line 460
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLikeExpression,Object) in line 465
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTrimExpression,Object) in line 470
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTObjectExpression,Object) in line 475
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalOrExpression,Object) in line 480
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTConditionalAndExpression,Object) in line 485
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEqualityExpression,Object) in line 490
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTRelationalExpression,Object) in line 495
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAdditiveExpression,Object) in line 500
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTStringExpression,Object) in line 505
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMultiplicativeExpression,Object) in line 510
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpression,Object) in line 515
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnaryExpressionNotPlusMinus,Object) in line 520
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryExpression,Object) in line 525
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimaryPrefix,Object) in line 530
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPrimarySuffix,Object) in line 535
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLiteral,Object) in line 540
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTStringLiteral,Object) in line 545
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTBooleanLiteral,Object) in line 550
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNullLiteral,Object) in line 555
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTMultiSetCondition,Object) in line 560
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNumericLiteral,Object) in line 565
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTLabel,Object) in line 570
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTName,Object) in line 575
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTQualifiedName,Object) in line 580
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArguments,Object) in line 585
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArgumentList,Object) in line 590
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTArgument,Object) in line 595
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTVariableOrConstantDeclaration,Object) in line 600
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDatatypeDeclaration,Object) in line 605
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPragma,Object) in line 610
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTExceptionDeclaration,Object) in line 615
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTParallelClause,Object) in line 620
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTable,Object) in line 625
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTableColumn,Object) in line 630
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTView,Object) in line 635
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTSynonym,Object) in line 640
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDirectory,Object) in line 645
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDatabaseLink,Object) in line 650
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTViewColumn,Object) in line 655
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTComment,Object) in line 660
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeMethod,Object) in line 665
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeSpecification,Object) in line 671
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAlterTypeSpec,Object) in line 677
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAttributeDeclaration,Object) in line 682
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAttribute,Object) in line 687
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTPragmaClause,Object) in line 692
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTInlinePragma,Object) in line 697
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTriggerUnit,Object) in line 702
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTriggerTimingPointSection,Object) in line 708
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTCompoundTriggerBlock,Object) in line 714
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNonDMLTrigger,Object) in line 719
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDDLEvent,Object) in line 724
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTDatabaseEvent,Object) in line 729
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTNonDMLEvent,Object) in line 734
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAlterTrigger,Object) in line 739
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTKEYWORD_RESERVED,Object) in line 744
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTKEYWORD_UNRESERVED,Object) in line 749
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTID,Object) in line 754
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTUnqualifiedID,Object) in line 759
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTQualifiedID,Object) in line 764
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTTypeKeyword,Object) in line 769
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTJavaInterfaceClass,Object) in line 774
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTEqualsOldIDNewID,Object) in line 779
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ASTAccessibleByClause,Object) in line 784
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visit(ExecutableCode,Object) in line 791
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable data defined in sample-matlab.m
   function visitAll(List<?extends Node >,RuleContext) in line 33
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
      uses function visit(PLSQLNode,Object) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
   function AbstractPLSQLRule() in line 23
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
   variable CLASS_NAME in line 20
   variable LOGGER in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/AbstractStatisticalPLSQLRule.java
module net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::AbstractPLSQLRule
   inherits from net::sourceforge::pmd::lang::rule::stat::StatisticalRule
   abstract class
   function addDataPoint(DataPoint) in line 18
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function apply(List<?extends Node >,RuleContext) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses function apply(RuleContext) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function getViolationParameters(DataPoint) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable helper in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/ExcessiveObjectLengthRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::ExcessiveObjectLengthRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
   function ExcessiveObjectLengthRule() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/ExcessivePackageBodyLengthRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::ExcessivePackageBodyLengthRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
   function ExcessivePackageBodyLengthRule() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/ExcessivePackageSpecificationLengthRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::ExcessivePackageSpecificationLengthRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
   function ExcessivePackageSpecificationLengthRule() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/ExcessiveTypeLengthRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::ExcessiveTypeLengthRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::design::ExcessiveLengthRule
   function ExcessiveTypeLengthRule() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/codesize/NcssObjectCountRule.java
module net::sourceforge::pmd::lang::plsql::rule::codesize::NcssObjectCountRule
   inherits from net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
   function getViolationParameters(DataPoint) in line 89
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NcssObjectCountRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NcssObjectCountRule
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(OracleObject,Object) in line 37
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NcssObjectCountRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NcssObjectCountRule
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses variable data defined in sample-matlab.m
      uses function countNodeChildren(Node,Object) defined in net::sourceforge::pmd::lang::plsql::rule::codesize::AbstractNcssCountRule
   function visit(ASTProgramUnit,Object) in line 52
      protection public
      29 lines of code
      2 parameters
      4 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function jjtAccept(PLSQLParserVisitor,Object) defined in net::sourceforge::pmd::lang::plsql::ast::PLSQLNode
      uses variable data defined in sample-matlab.m
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::plsql::rule::AbstractStatisticalPLSQLRule
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NcssObjectCountRule
      uses function getScore() defined in net::sourceforge::pmd::stat::DataPoint
   function visit(ASTFieldDeclaration,Object) in line 83
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NcssObjectCountRule
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::codesize::NcssObjectCountRule
      uses variable ONE defined in net::sourceforge::pmd::util::NumericConstants
   function NcssObjectCountRule() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable MINIMUM_DESCRIPTOR defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRule
      uses variable d defined in sample-matlab.m
   variable CLASS_NAME in line 23
   variable LOGGER in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/PLSQLRuleChainVisitor.java
module net::sourceforge::pmd::lang::plsql::rule::PLSQLRuleChainVisitor
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNodes(List< Node >,RuleContext) in line 24
      16 lines of code
      2 parameters
      2 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::PLSQLRuleChainVisitor
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::PLSQLRuleChainVisitor
      uses function visit(Rule,Node,RuleContext) defined in net::sourceforge::pmd::lang::plsql::rule::PLSQLRuleChainVisitor
      uses variable data defined in sample-matlab.m
      uses function indexNode(Node) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function visit(Rule,Node,RuleContext) in line 41
      17 lines of code
      3 parameters
      3 conditional paths
      uses variable LOGGER defined in net::sourceforge::pmd::lang::plsql::rule::PLSQLRuleChainVisitor
      uses variable CLASS_NAME defined in net::sourceforge::pmd::lang::plsql::rule::PLSQLRuleChainVisitor
      uses function getName() defined in net::sourceforge::pmd::Rule
   variable CLASS_NAME in line 22
   variable LOGGER in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/PLSQLRuleViolationFactory.java
module net::sourceforge::pmd::lang::plsql::rule::PLSQLRuleViolationFactory
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function createRuleViolation(Rule,RuleContext,Node,String) in line 22
      3 lines of code
      4 parameters
      1 conditional paths
   function createRuleViolation(Rule,RuleContext,Node,String,int,int) in line 26
      5 lines of code
      6 parameters
      1 conditional paths
      uses function setLines(int,int) defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
   function PLSQLRuleViolationFactory() in line 18
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/PLSQLNameOccurrence.java
module net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   inherits from net::sourceforge::pmd::lang::symboltable::NameOccurrence
   function equals(Object) in line 191
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function PLSQLNameOccurrence(PLSQLNode,String) defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getImage() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function getArgumentCount() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable argumentCount defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function getImage() in line 204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function getLocation() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function getNameForWhichThisIsAQualifier() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable qualifiedName defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function hashCode() in line 200
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function isMethodOrConstructorInvocation() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isOnLeftHandSide() in line 66
      protection public
      39 lines of code
      0 parameters
      5 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isPartOfQualifiedName() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function isOnRightHandSide() in line 61
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function jjtGetParent() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
   function isPartOfQualifiedName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable qualifiedName defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function isThisOrSuper() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable image defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable THIS defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable SUPER defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function setArgumentCount(int) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable argumentCount defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function setIsMethodOrConstructorInvocation() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isMethodOrConstructorInvocation() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function setNameWhichThisQualifies(PLSQLNameOccurrence) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable qualifiedName defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function toString() in line 209
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getImage() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable location defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function isMethodOrConstructorInvocation() defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   function PLSQLNameOccurrence(PLSQLNode,String) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
      uses variable image defined in net::sourceforge::pmd::lang::plsql::symboltable::PLSQLNameOccurrence
   variable argumentCount in line 19
   variable image in line 15
   variable isMethodOrConstructorInvocation in line 18
   variable location in line 14
   variable qualifiedName in line 16
   variable SUPER in line 22
   variable THIS in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/cpd/PLSQLTokenizerTest.java
module net::sourceforge::pmd::cpd::PLSQLTokenizerTest
   inherits from net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function buildTokenizer() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable sourceCode defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::PLSQLTokenizerTest
   function getSampleCode() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::PLSQLTokenizerTest
   function suite() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function tokenizeTest() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedTokenCount defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
   variable FILENAME in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/AbstractPLSQLParserTst.java
module net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst
   abstract class
   function buildDFA(String) in line 95
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function initializeWith(ASTInput) defined in net::sourceforge::pmd::lang::plsql::symboltable::SymbolFacade
      uses function initializeWith(DataFlowHandler,ASTInput) defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function parseLanguage(LanguageVersion,String) in line 114
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function parsePLSQL(LanguageVersion,String) in line 105
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function parsePLSQL(String) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function parsePLSQL(LanguageVersion,String) defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
module net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst::Collector
   inherits from java::lang::reflect::InvocationHandler
   function getCollection() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable collection defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst::Collector
   function invoke(Object,Method,Object[]) in line 46
      protection public
      11 lines of code
      3 parameters
      4 conditional paths
      uses variable method defined in sample-matlab.m
      uses variable clazz defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst::Collector
      uses variable collection defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst::Collector
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getCollection() defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst::Collector
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function initializeWith(ASTInput) defined in net::sourceforge::pmd::lang::plsql::symboltable::SymbolFacade
      uses function initializeWith(DataFlowHandler,ASTInput) defined in net::sourceforge::pmd::lang::plsql::dfa::DataFlowFacade
      uses function getDataFlowHandler() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
   function Collector(Class< E >) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable clazz defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst::Collector
   function Collector(Class< E >,Collection< E >) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable clazz defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst::Collector
   variable clazz in line 30
   variable collection in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/PLSQLParserTest.java
module net::sourceforge::pmd::lang::plsql::PLSQLParserTest
   inherits from net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst
   function testBOM() in line 28
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parsePLSQL(LanguageVersion,String) defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst
   function testExceptions() in line 12
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function parsePLSQL(LanguageVersion,String) defined in net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/PLSQLXPathRuleTest.java
module net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
   inherits from net::sourceforge::pmd::lang::plsql::AbstractPLSQLParserTst
   function createRule(String) in line 76
      7 lines of code
      1 parameters
      1 conditional paths
      uses function setLanguage(Language) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function setVersion(String) defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses function setMessage(String) defined in net::sourceforge::pmd::lang::rule::AbstractRule
   function setup() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ctx defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses variable NAME defined in net::sourceforge::pmd::lang::plsql::PLSQLLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function testXPathRule1() in line 47
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function createRule(String) defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses variable ctx defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function treeSize() defined in net::sourceforge::pmd::Report
   function testXPathRule1Compatibility() in line 58
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function createRule(String) defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses variable ctx defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function treeSize() defined in net::sourceforge::pmd::Report
   function testXPathRule2() in line 69
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function createRule(String) defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::rule::XPathRule
      uses variable node defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses variable ctx defined in net::sourceforge::pmd::lang::plsql::PLSQLXPathRuleTest
      uses function getReport() defined in net::sourceforge::pmd::RuleContext
      uses function treeSize() defined in net::sourceforge::pmd::Report
   variable ctx in line 36
   variable node in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/main/java/net/sourceforge/pmd/cpd/PythonLanguage.java
module net::sourceforge::pmd::cpd::PythonLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function PythonLanguage() in line 15
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/main/java/net/sourceforge/pmd/cpd/PythonTokenizer.java
module net::sourceforge::pmd::cpd::PythonTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 25
      protection public
      25 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBuffer() defined in net::sourceforge::pmd::cpd::SourceCode
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function getNextToken() defined in net::sourceforge::pmd::lang::TokenManager
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/main/java/net/sourceforge/pmd/lang/python/PythonHandler.java
module net::sourceforge::pmd::lang::python::PythonHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getParser(ParserOptions) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 17
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/main/java/net/sourceforge/pmd/lang/python/PythonLanguageModule.java
module net::sourceforge::pmd::lang::python::PythonLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function PythonLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::python::PythonLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/main/java/net/sourceforge/pmd/lang/python/PythonParser.java
module net::sourceforge::pmd::lang::python::PythonParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTokenManager(Reader) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String,Reader) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function PythonParser(ParserOptions) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/main/java/net/sourceforge/pmd/lang/python/PythonTokenManager.java
module net::sourceforge::pmd::lang::python::PythonTokenManager
   inherits from net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 26
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::python::PythonTokenManager
   function setFileName(String) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PythonTokenManager(Reader) in line 22
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tokenManager defined in net::sourceforge::pmd::lang::python::PythonTokenManager
   variable tokenManager in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/test/java/net/sourceforge/pmd/cpd/PythonTokenizerTest.java
module net::sourceforge::pmd::cpd::PythonTokenizerTest
   inherits from net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function buildTokenizer() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable sourceCode defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::PythonTokenizerTest
   function getSampleCode() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::PythonTokenizerTest
   function tokenizeTest() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedTokenCount defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
   variable FILENAME in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-python/src/test/resources/net/sourceforge/pmd/cpd/sample-python.py
module sample-python.py
   variable logger in line 21
      protection public
module sample-python::BaseHandler
   inherits from object
   function apply_response_fixes((null),(null),(null)) in line 271
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable response_fixes defined in sample-python::BaseHandler
   function get_exception_response((null),(null),(null),(null)) in line 85
      protection public
      10 lines of code
      4 parameters
      1 conditional paths
      uses function handle_uncaught_exception((null),(null),(null),(null)) defined in sample-python::BaseHandler
   function get_response((null),(null)) in line 95
      protection public
      145 lines of code
      2 parameters
      1 conditional paths
      uses variable _request_middleware defined in sample-python::BaseHandler
      uses variable _view_middleware defined in sample-python::BaseHandler
      uses function make_view_atomic((null),(null)) defined in sample-python::BaseHandler
      uses variable _exception_middleware defined in sample-python::BaseHandler
      uses variable _template_response_middleware defined in sample-python::BaseHandler
      uses function get_exception_response((null),(null),(null),(null)) defined in sample-python::BaseHandler
      uses function handle_uncaught_exception((null),(null),(null),(null)) defined in sample-python::BaseHandler
      uses variable _response_middleware defined in sample-python::BaseHandler
      uses function apply_response_fixes((null),(null),(null)) defined in sample-python::BaseHandler
   function handle_uncaught_exception((null),(null),(null),(null)) in line 240
      protection public
      31 lines of code
      4 parameters
      1 conditional paths
   function load_middleware((null)) in line 38
      protection public
      39 lines of code
      1 parameters
      1 conditional paths
      uses variable _view_middleware defined in sample-python::BaseHandler
      uses variable _template_response_middleware defined in sample-python::BaseHandler
      uses variable _response_middleware defined in sample-python::BaseHandler
      uses variable _exception_middleware defined in sample-python::BaseHandler
      uses variable _request_middleware defined in sample-python::BaseHandler
   function make_view_atomic((null),(null)) in line 77
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function __init__((null)) in line 31
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable _exception_middleware in line 36
   variable _request_middleware in line 32
   variable _response_middleware in line 35
   variable _template_response_middleware in line 34
   variable _view_middleware in line 33
   variable response_fixes in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-ruby/src/main/java/net/sourceforge/pmd/cpd/RubyLanguage.java
module net::sourceforge::pmd::cpd::RubyLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function RubyLanguage() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-ruby/src/main/java/net/sourceforge/pmd/cpd/RubyTokenizer.java
module net::sourceforge::pmd::cpd::RubyTokenizer
   inherits from net::sourceforge::pmd::cpd::AbstractTokenizer
   function RubyTokenizer() in line 18
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable stringToken defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable ignorableCharacter defined in net::sourceforge::pmd::cpd::AbstractTokenizer
      uses variable ignorableStmt defined in net::sourceforge::pmd::cpd::AbstractTokenizer
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-ruby/src/main/java/net/sourceforge/pmd/lang/ruby/RubyLanguageModule.java
module net::sourceforge::pmd::lang::ruby::RubyLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function RubyLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::ruby::RubyLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-ruby/src/test/java/net/sourceforge/pmd/cpd/RubyTokenizerTest.java
module net::sourceforge::pmd::cpd::RubyTokenizerTest
   inherits from net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function buildTokenizer() in line 20
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable sourceCode defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function getSampleCode() in line 26
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function suite() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function tokenizeTest() in line 51
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedTokenCount defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/main/java/net/sourceforge/pmd/cpd/ScalaLanguage.java
module net::sourceforge::pmd::cpd::ScalaLanguage
   inherits from net::sourceforge::pmd::cpd::AbstractLanguage
   function ScalaLanguage() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/main/java/net/sourceforge/pmd/lang/scala/ScalaLanguageModule.java
module net::sourceforge::pmd::lang::scala::ScalaLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function ScalaLanguageModule() in line 21
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::scala::ScalaLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 14
      protection public
   variable TERSE_NAME in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/main/java/org/sonar/plugins/scala/cpd/ScalaTokenizer.java
module org::sonar::plugins::scala::cpd::ScalaTokenizer
   inherits from net::sourceforge::pmd::cpd::Tokenizer
   function tokenize(SourceCode,Tokens) in line 40
      protection public
      23 lines of code
      2 parameters
      3 conditional paths
      uses function getFileName() defined in net::sourceforge::pmd::cpd::SourceCode
      uses function add(TokenEntry) defined in net::sourceforge::pmd::cpd::Tokens
      uses variable e defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/main/java/org/sonar/plugins/scala/language/CommentType.java
module org::sonar::plugins::scala::language::CommentType
   variable DOC in line 32
      protection public
   variable NORMAL in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/main/java/org/sonar/plugins/scala/util/StringUtils.java
module org::sonar::plugins::scala::util::StringUtils
   function convertStringToListOfLines(String) in line 35
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
   function StringUtils() in line 31
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-scala/src/test/java/net/sourceforge/pmd/cpd/ScalaTokenizerTest.java
module net::sourceforge::pmd::cpd::ScalaTokenizerTest
   inherits from net::sourceforge::pmd::testframework::AbstractTokenizerTest
   function buildTokenizer() in line 29
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function createTempFileOnDisk() defined in net::sourceforge::pmd::cpd::ScalaTokenizerTest
      uses variable tokenizer defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable sourceCode defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses variable tempFile defined in net::sourceforge::pmd::cpd::ScalaTokenizerTest
   function cleanUp() in line 53
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function createTempFileOnDisk() in line 36
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable tempFile defined in net::sourceforge::pmd::cpd::ScalaTokenizerTest
      uses function getSampleCode() defined in net::sourceforge::pmd::cpd::ScalaTokenizerTest
      uses variable ENCODING defined in net::sourceforge::pmd::cpd::ScalaTokenizerTest
   function getSampleCode() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable FILENAME defined in net::sourceforge::pmd::cpd::ScalaTokenizerTest
      uses variable ENCODING defined in net::sourceforge::pmd::cpd::ScalaTokenizerTest
   function tokenizeTest() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable expectedTokenCount defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
   variable ENCODING in line 21
   variable FILENAME in line 23
   variable tempFile in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/AbstractLanguageVersionTest.java
module net::sourceforge::pmd::AbstractLanguageVersionTest
   function testFindVersionsForLanguageNameAndVersion() in line 73
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses function setName(String) defined in net::sourceforge::pmd::ant::SourceLanguage
      uses function setVersion(String) defined in net::sourceforge::pmd::ant::SourceLanguage
      uses function getName() defined in net::sourceforge::pmd::ant::SourceLanguage
      uses function getVersion(String) defined in net::sourceforge::pmd::lang::Language
      uses function getVersion() defined in net::sourceforge::pmd::ant::SourceLanguage
   function testGetLanguageVersionForTerseName() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractLanguageVersionTest(String,String,String,LanguageVersion) in line 50
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
   variable expected in line 41
   variable name in line 38
   variable terseName in line 40
   variable version in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/AbstractRuleSetFactoryTest.java
module net::sourceforge::pmd::AbstractRuleSetFactoryTest
   abstract class
   function assertEqualsRuleSet(String,RuleSet,RuleSet) in line 379
      94 lines of code
      3 parameters
      4 conditional paths
      uses function getName() defined in net::sourceforge::pmd::RuleSet
      uses function getDescription() defined in net::sourceforge::pmd::RuleSet
      uses function getExcludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getIncludePatterns() defined in net::sourceforge::pmd::RuleSet
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getOverriddenLanguage() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenMinimumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenMaximumLanguageVersion() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function isOverriddenDeprecated() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenName() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenDescription() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenMessage() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenExternalInfoUrl() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenPriority() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getOverriddenExamples() defined in net::sourceforge::pmd::lang::rule::RuleReference
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getRuleClass() defined in net::sourceforge::pmd::Rule
      uses function getDescription() defined in net::sourceforge::pmd::Rule
      uses function getMessage() defined in net::sourceforge::pmd::Rule
      uses function getExternalInfoUrl() defined in net::sourceforge::pmd::Rule
      uses function getPriority() defined in net::sourceforge::pmd::Rule
      uses function getExamples() defined in net::sourceforge::pmd::Rule
      uses function getPropertyDescriptors() defined in net::sourceforge::pmd::PropertySource
      uses variable j defined in sample-matlab.m
   function createRuleSetReferenceId(final String) in line 479
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function getRuleSetFileNames() in line 211
      9 lines of code
      0 parameters
      2 conditional paths
   function getRuleSetFileNames(String) in line 221
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable e defined in sample-matlab.m
   function init() in line 54
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses variable saxParserFactory defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses variable validateDefaultHandlerXsd defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses variable validateDefaultHandlerDtd defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses variable saxParser defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function loadResourceAsStream(String) in line 308
      12 lines of code
      1 parameters
      2 conditional paths
   function loadRuleSetByFileName(String) in line 239
      4 lines of code
      1 parameters
      1 conditional paths
      uses function createRuleSet(String) defined in net::sourceforge::pmd::RuleSetFactory
   function readFullyToString(InputStream) in line 296
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable EOL defined in net::sourceforge::pmd::PMD
   function testAllPMDBuiltInRulesMeetConventions() in line 83
      protection public
      82 lines of code
      0 parameters
      12 conditional paths
      uses function getRuleSetFileNames() defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function loadRuleSetByFileName(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function getRules() defined in net::sourceforge::pmd::RuleSet
      uses function getName() defined in net::sourceforge::pmd::lang::Language
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses function getTerseName() defined in net::sourceforge::pmd::lang::Language
      uses function getName() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable VIOLATION_SUPPRESS_REGEX_DESCRIPTOR defined in net::sourceforge::pmd::Rule
      uses function name() defined in net::sourceforge::pmd::lang::rule::properties::AbstractProperty
      uses variable VIOLATION_SUPPRESS_XPATH_DESCRIPTOR defined in net::sourceforge::pmd::Rule
   function testDtd() in line 186
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getRuleSetFileNames() defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function validateAgainstDtd(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function testReadWriteRoundTrip() in line 202
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getRuleSetFileNames() defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function testRuleSet(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function testRuleSet(String) in line 321
      57 lines of code
      1 parameters
      1 conditional paths
      uses function loadRuleSetByFileName(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function write(RuleSet) defined in net::sourceforge::pmd::RuleSetWriter
      uses function close() defined in net::sourceforge::pmd::RuleSetWriter
      uses function createRuleSetReferenceId(final String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function validateAgainstSchema(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function validateAgainstDtd(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function assertEqualsRuleSet(String,RuleSet,RuleSet) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function testXmlSchema() in line 171
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getRuleSetFileNames() defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function validateAgainstSchema(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function validateAgainstDtd(String) in line 262
      9 lines of code
      1 parameters
      2 conditional paths
      uses function loadResourceAsStream(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function validateAgainstDtd(InputStream) in line 272
      23 lines of code
      1 parameters
      1 conditional paths
      uses function readFullyToString(InputStream) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses variable RULESET_NS_URI defined in net::sourceforge::pmd::RuleSetWriter
      uses variable EOL defined in net::sourceforge::pmd::PMD
      uses variable saxParser defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses variable validateDefaultHandlerDtd defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function resetValid() defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
      uses function isValid() defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
   function validateAgainstSchema(String) in line 244
      9 lines of code
      1 parameters
      2 conditional paths
      uses function loadResourceAsStream(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
   function validateAgainstSchema(InputStream) in line 254
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable saxParser defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses variable validateDefaultHandlerXsd defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses function resetValid() defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
      uses function isValid() defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
   variable saxParser in line 47
   variable saxParserFactory in line 44
   variable validateDefaultHandlerDtd in line 46
   variable validateDefaultHandlerXsd in line 45
module net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function error(SAXParseException) in line 513
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function log(String,SAXParseException) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
      uses variable e defined in sample-matlab.m
   function fatalError(SAXParseException) in line 518
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function log(String,SAXParseException) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
      uses variable e defined in sample-matlab.m
   function isValid() in line 508
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valid defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
   function log(String,SAXParseException) in line 527
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable e defined in sample-matlab.m
      uses variable valid defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
   function resetValid() in line 503
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable valid defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
   function resolveEntity(String,String) in line 534
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function loadResourceAsStream(String) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest
      uses variable validateDocument defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
      uses variable e defined in sample-matlab.m
   function warning(SAXParseException) in line 523
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function log(String,SAXParseException) defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
      uses variable e defined in sample-matlab.m
   function ValidateDefaultHandler(String) in line 499
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable validateDocument defined in net::sourceforge::pmd::AbstractRuleSetFactoryTest::ValidateDefaultHandler
   variable valid in line 497
   variable validateDocument in line 496
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/ant/AbstractAntTestHelper.java
module net::sourceforge::pmd::ant::AbstractAntTestHelper
   inherits from org::apache::tools::ant::BuildFileTest
   abstract class
   function setUp() in line 33
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function validatePostConstruct() defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
      uses variable pathToTestScript defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
      uses variable antTestScriptFilename defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
      uses variable mvnWorkaround defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
   function validatePostConstruct() in line 45
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable pathToTestScript defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
      uses variable antTestScriptFilename defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
      uses variable mvnWorkaround defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
   function AbstractAntTestHelper() in line 23
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable mvnWorkaround defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
      uses variable pathToTestScript defined in net::sourceforge::pmd::ant::AbstractAntTestHelper
   variable antTestScriptFilename in line 20
   variable mvnWorkaround in line 21
      protection public
   variable pathToTestScript in line 19
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/cli/BaseCLITest.java
module net::sourceforge::pmd::cli::BaseCLITest
   abstract class
   function checkStatusCode(int) in line 88
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getStatusCode() defined in net::sourceforge::pmd::cli::BaseCLITest
   function createTestOutputFile(String) in line 60
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable out defined in sample-matlab.m
      uses variable e defined in sample-matlab.m
   function getStatusCode() in line 95
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable STATUS_CODE_PROPERTY defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
   function runPMDWith(String[]) in line 84
      3 lines of code
      1 parameters
      1 conditional paths
   function runTest(String[],String) in line 70
      3 lines of code
      2 parameters
      1 conditional paths
   function runTest(String[],String,int) in line 73
      10 lines of code
      3 parameters
      1 conditional paths
      uses variable TEST_OUPUT_DIRECTORY defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function createTestOutputFile(String) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function runPMDWith(String[]) defined in net::sourceforge::pmd::cli::BaseCLITest
      uses function checkStatusCode(int) defined in net::sourceforge::pmd::cli::BaseCLITest
   function setUp() in line 39
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable NO_EXIT_AFTER_RUN defined in net::sourceforge::pmd::cli::PMDCommandLineInterface
      uses variable TEST_OUPUT_DIRECTORY defined in net::sourceforge::pmd::cli::BaseCLITest
   function setup() in line 49
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable originalOut defined in net::sourceforge::pmd::cli::BaseCLITest
      uses variable originalErr defined in net::sourceforge::pmd::cli::BaseCLITest
   function tearDown() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable originalOut defined in net::sourceforge::pmd::cli::BaseCLITest
      uses variable originalErr defined in net::sourceforge::pmd::cli::BaseCLITest
   variable originalErr in line 33
   variable originalOut in line 32
   variable SOURCE_FOLDER in line 30
   variable TEST_OUPUT_DIRECTORY in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/lang/ParserOptionsTest.java
module net::sourceforge::pmd::lang::ParserOptionsTest
   function testEqualsHashcode() in line 29
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::lang::ParserOptions
      uses function verifyOptionsEqualsHashcode(ParserOptions,ParserOptions,ParserOptions,ParserOptions) defined in net::sourceforge::pmd::lang::ParserOptionsTest
   function testSuppressMarker() in line 18
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getSuppressMarker() defined in net::sourceforge::pmd::lang::ParserOptions
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::lang::ParserOptions
   function verifyOptionsEqualsHashcode(ParserOptions,ParserOptions,ParserOptions,ParserOptions) in line 50
      protection public
      39 lines of code
      4 parameters
      1 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::lang::ParserOptions
      uses function hashCode() defined in net::sourceforge::pmd::lang::ParserOptions
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/testframework/AbstractTokenizerTest.java
module net::sourceforge::pmd::testframework::AbstractTokenizerTest
   abstract class
   function buildTokenizer() in line 26
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSampleCode() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function tokenizeTest() in line 30
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable tokenizer defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses function tokenize(SourceCode,Tokens) defined in net::sourceforge::pmd::cpd::Tokenizer
      uses variable sourceCode defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
      uses function getTokens() defined in net::sourceforge::pmd::cpd::Tokens
      uses variable expectedTokenCount defined in net::sourceforge::pmd::testframework::AbstractTokenizerTest
   variable expectedTokenCount in line 22
   variable sourceCode in line 24
   variable tokenizer in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/testframework/PMDTestRunner.java
module net::sourceforge::pmd::testframework::PMDTestRunner
   inherits from org::junit::runner::Runner
   inherits from org::junit::runner::manipulation::Filterable
   function configureRuleTests() in line 60
      32 lines of code
      0 parameters
      5 conditional paths
      uses function createTestClass() defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses function setUp() defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses function getRules() defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses variable r defined in sample-matlab.m
      uses function extractTestsFromXml(Rule) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable t defined in sample-matlab.m
      uses variable d defined in sample-matlab.m
      uses function createTestDescription(TestDescriptor) defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable allTests defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable desc defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable e defined in sample-matlab.m
   function configureUnitTests() in line 101
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable klass defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable chainedRunner defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable d defined in sample-matlab.m
      uses variable desc defined in net::sourceforge::pmd::testframework::PMDTestRunner
   function createTestClass() in line 93
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable klass defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable e defined in sample-matlab.m
   function createTestDescription(TestDescriptor) in line 143
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable d defined in sample-matlab.m
      uses variable t defined in sample-matlab.m
      uses variable klass defined in net::sourceforge::pmd::testframework::PMDTestRunner
   function filter(Filter) in line 149
      protection public
      31 lines of code
      1 parameters
      7 conditional paths
      uses variable allTests defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable t defined in sample-matlab.m
      uses function createTestDescription(TestDescriptor) defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable e defined in sample-matlab.m
      uses variable chainedRunner defined in net::sourceforge::pmd::testframework::PMDTestRunner
   function getDescription() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable desc defined in net::sourceforge::pmd::testframework::PMDTestRunner
   function run(RunNotifier) in line 119
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function createTestClass() defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable t defined in sample-matlab.m
      uses variable allTests defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable d defined in sample-matlab.m
      uses function createTestDescription(TestDescriptor) defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses function runTest(TestDescriptor) defined in net::sourceforge::pmd::testframework::RuleTst
      uses variable e defined in sample-matlab.m
      uses variable chainedRunner defined in net::sourceforge::pmd::testframework::PMDTestRunner
   function PMDTestRunner(final Class<?extends SimpleAggregatorTst >) in line 52
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable klass defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses variable desc defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses function configureRuleTests() defined in net::sourceforge::pmd::testframework::PMDTestRunner
      uses function configureUnitTests() defined in net::sourceforge::pmd::testframework::PMDTestRunner
   variable allTests in line 44
   variable chainedRunner in line 45
   variable desc in line 42
   variable klass in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/testframework/RuleTst.java
module net::sourceforge::pmd::testframework::RuleTst
   abstract class
   function assertLineNumbers(Report,TestDescriptor) in line 146
      25 lines of code
      2 parameters
      5 conditional paths
      uses function getExpectedLineNumbers() defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function getViolationTree() defined in net::sourceforge::pmd::Report
      uses function size() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function getDescription() defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function iterator() defined in net::sourceforge::pmd::lang::dfa::report::ReportTree
      uses function getBeginLine() defined in net::sourceforge::pmd::RuleViolation
      uses function printReport(TestDescriptor,Report) defined in net::sourceforge::pmd::testframework::RuleTst
   function assertMessages(Report,TestDescriptor) in line 120
      25 lines of code
      2 parameters
      5 conditional paths
      uses function getExpectedMessages() defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function size() defined in net::sourceforge::pmd::Report
      uses function getDescription() defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function iterator() defined in net::sourceforge::pmd::Report
      uses function getDescription() defined in net::sourceforge::pmd::RuleViolation
      uses function printReport(TestDescriptor,Report) defined in net::sourceforge::pmd::testframework::RuleTst
   function extractTestsFromXml(Rule) in line 241
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getCleanRuleName(Rule) defined in net::sourceforge::pmd::testframework::RuleTst
   function extractTestsFromXml(Rule,String) in line 247
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function extractTestsFromXml(Rule) defined in net::sourceforge::pmd::testframework::RuleTst
   function extractTestsFromXml(Rule,String,String) in line 255
      protection public
      27 lines of code
      3 parameters
      3 conditional paths
      uses function parseTests(Rule,Document) defined in net::sourceforge::pmd::testframework::RuleTst
   function findRule(String,String) in line 51
      protection public
      14 lines of code
      2 parameters
      3 conditional paths
      uses function createRuleSets(String) defined in net::sourceforge::pmd::RuleSetFactory
      uses function getRuleByName(String) defined in net::sourceforge::pmd::RuleSets
      uses function setRuleSetName(String) defined in net::sourceforge::pmd::Rule
      uses variable e defined in sample-matlab.m
   function getCleanRuleName(Rule) in line 225
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getName() defined in net::sourceforge::pmd::Rule
   function getNodeValue(Element,String,boolean) in line 384
      12 lines of code
      3 parameters
      3 conditional paths
      uses function parseTextNode(Node) defined in net::sourceforge::pmd::testframework::RuleTst
   function parseTests(Rule,Document) in line 283
      100 lines of code
      2 parameters
      18 conditional paths
      uses variable j defined in sample-matlab.m
      uses function parseTextNode(Node) defined in net::sourceforge::pmd::testframework::RuleTst
      uses function getNodeValue(Element,String,boolean) defined in net::sourceforge::pmd::testframework::RuleTst
      uses function setReinitializeRule(boolean) defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function setRegressionTest(boolean) defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function setExpectedMessages(List< String >) defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function setExpectedLineNumbers(List< Integer >) defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function setProperties(Properties) defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function setNumberInDocument(int) defined in net::sourceforge::pmd::testframework::TestDescriptor
   function parseTextNode(Node) in line 397
      11 lines of code
      1 parameters
      3 conditional paths
   function printReport(TestDescriptor,Report) in line 172
      20 lines of code
      2 parameters
      2 conditional paths
      uses function getDescription() defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function getNumberOfProblemsExpected() defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function size() defined in net::sourceforge::pmd::Report
      uses function getExpectedMessages() defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function getExpectedLineNumbers() defined in net::sourceforge::pmd::testframework::TestDescriptor
      uses function setWriter(Writer) defined in net::sourceforge::pmd::renderers::AbstractRenderer
      uses function start() defined in net::sourceforge::pmd::renderers::TextRenderer
      uses function renderFileReport(Report) defined in net::sourceforge::pmd::renderers::AbstractIncrementingRenderer
      uses function end() defined in net::sourceforge::pmd::renderers::TextRenderer
      uses variable e defined in sample-matlab.m
      uses function getWriter() defined in net::sourceforge::pmd::renderers::AbstractRenderer
   function processUsingStringReader(String,Rule,LanguageVersion) in line 193
      6 lines of code
      3 parameters
      1 conditional paths
      uses function runTestFromString(String,Rule,Report,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
   function runTest(TestDescriptor) in line 71
      protection public
      48 lines of code
      1 parameters
      9 conditional paths
      uses function findRule(String,String) defined in net::sourceforge::pmd::testframework::RuleTst
      uses function getRuleSetName() defined in net::sourceforge::pmd::Rule
      uses function getName() defined in net::sourceforge::pmd::Rule
      uses function getPropertiesByPropertyDescriptor() defined in net::sourceforge::pmd::PropertySource
      uses function getPropertyDescriptor(String) defined in net::sourceforge::pmd::PropertySource
      uses function valueFrom(String) defined in net::sourceforge::pmd::PropertyDescriptor
      uses function setProperty(PropertyDescriptor< T >,T) defined in net::sourceforge::pmd::PropertySource
      uses function processUsingStringReader(String,Rule,LanguageVersion) defined in net::sourceforge::pmd::testframework::RuleTst
      uses function size() defined in net::sourceforge::pmd::Report
      uses variable t defined in sample-matlab.m
      uses function printReport(TestDescriptor,Report) defined in net::sourceforge::pmd::testframework::RuleTst
      uses function assertMessages(Report,TestDescriptor) defined in net::sourceforge::pmd::testframework::RuleTst
      uses function assertLineNumbers(Report,TestDescriptor) defined in net::sourceforge::pmd::testframework::RuleTst
   function runTestFromString(String,Rule,Report,LanguageVersion) in line 203
      protection public
      17 lines of code
      4 parameters
      2 conditional paths
      uses function getConfiguration() defined in net::sourceforge::pmd::PMD
      uses function setDefaultLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::PMDConfiguration
      uses function prependClasspath(String) defined in net::sourceforge::pmd::PMDConfiguration
      uses function setReport(Report) defined in net::sourceforge::pmd::RuleContext
      uses function setSourceCodeFilename(String) defined in net::sourceforge::pmd::RuleContext
      uses function setLanguageVersion(LanguageVersion) defined in net::sourceforge::pmd::RuleContext
      uses function setIgnoreExceptions(boolean) defined in net::sourceforge::pmd::RuleContext
      uses function addRule(Rule) defined in net::sourceforge::pmd::RuleSet
      uses function getSourceCodeProcessor() defined in net::sourceforge::pmd::PMD
      uses function processSourceCode(InputStream,RuleSets,RuleContext) defined in net::sourceforge::pmd::SourceCodeProcessor
      uses variable e defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/testframework/SimpleAggregatorTst.java
module net::sourceforge::pmd::testframework::SimpleAggregatorTst
   inherits from net::sourceforge::pmd::testframework::RuleTst
   abstract class
   function addRule(String,String) in line 62
      3 lines of code
      2 parameters
      1 conditional paths
   function getRules() in line 71
      3 lines of code
      0 parameters
      1 conditional paths
   function runTests(Rule) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function runTests(Rule,String) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function runTests(TestDescriptor[]) in line 50
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function setUp() in line 25
      3 lines of code
      0 parameters
      1 conditional paths
   variable rules in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/testframework/StreamUtil.java
module net::sourceforge::pmd::testframework::StreamUtil
   function toString(InputStream) in line 25
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable e defined in sample-matlab.m
   function StreamUtil() in line 17
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-test/src/main/java/net/sourceforge/pmd/testframework/TestDescriptor.java
module net::sourceforge::pmd::testframework::TestDescriptor
   function getCode() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDescription() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpectedLineNumbers() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getExpectedMessages() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLanguageVersion() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberInDocument() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumberOfProblemsExpected() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProperties() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReinitializeRule() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRule() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function inRegressionTestMode() in line 117
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable property defined in sample-matlab.m
      uses variable e defined in sample-matlab.m
   function isRegressionTest() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExpectedLineNumbers(List< Integer >) in line 66
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setExpectedMessages(List< String >) in line 57
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setNumberInDocument(int) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProperties(Properties) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRegressionTest(boolean) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setReinitializeRule(boolean) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function TestDescriptor() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function TestDescriptor(String,String,int,Rule) in line 37
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function getLanguage() defined in net::sourceforge::pmd::Rule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
   function TestDescriptor(String,String,int,Rule,LanguageVersion) in line 41
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
   variable code in line 26
   variable description in line 22
   variable expectedLineNumbers in line 25
   variable expectedMessages in line 24
   variable isRegressionTest in line 29
   variable languageVersion in line 27
   variable numberInDocument in line 30
   variable numberOfProblemsExpected in line 23
   variable properties in line 21
   variable reinitializeRule in line 28
   variable rule in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/AbstractVmNode.java
module net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   inherits from net::sourceforge::pmd::lang::ast::AbstractNode
   inherits from net::sourceforge::pmd::lang::vm::ast::VmNode
   function childrenAccept(final VmParserVisitor,final Object) in line 133
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable data defined in sample-matlab.m
   function dump(final String,final boolean,final Writer) in line 164
      protection public
      13 lines of code
      3 parameters
      4 conditional paths
      uses function toString() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses function AbstractVmNode(final int) defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses function dump(final String,final boolean,final Writer) defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getColumn() in line 244
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable first defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getFirstToken() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable first defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getInfo() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable info defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getLastToken() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable last defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getLine() in line 237
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable first defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getTemplateName() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getType() in line 202
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function isInvalid() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable invalid defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function jjtAccept(final VmParserVisitor,final Object) in line 125
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function jjtClose() in line 88
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable last defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses variable parser defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable children defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable endLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable endColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function jjtOpen() in line 76
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable first defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses variable parser defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses variable beginLine defined in net::sourceforge::pmd::lang::ast::AbstractNode
      uses variable beginColumn defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function literal() in line 183
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable first defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses variable last defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses variable t defined in sample-matlab.m
   function setFirstToken(final Token) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable t defined in sample-matlab.m
   function setInfo(final int) in line 209
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable info defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function setInvalid() in line 223
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable invalid defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function toString() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in net::sourceforge::pmd::lang::ast::AbstractNode
   function toString(final String) in line 155
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function toString() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function AbstractVmNode(final int) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractVmNode(final VmParser,final int) in line 66
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   variable first in line 48
   variable info in line 39
   variable invalid in line 45
   variable last in line 51
   variable parser in line 36
   variable state in line 42
      protection public
   variable templateName in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTAddNode.java
module net::sourceforge::pmd::lang::vm::ast::ASTAddNode
   inherits from net::sourceforge::pmd::lang::vm::ast::ASTMathNode
   function jjtAccept(VmParserVisitor,Object) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTAddNode(final int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTAddNode(final VmParser,final int) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTDirective.java
module net::sourceforge::pmd::lang::vm::ast::ASTDirective
   inherits from net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getDirectiveName() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directiveName defined in net::sourceforge::pmd::lang::vm::ast::ASTDirective
   function jjtAccept(final VmParserVisitor,final Object) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function setDirectiveName(final String) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable directiveName defined in net::sourceforge::pmd::lang::vm::ast::ASTDirective
   function toString() in line 86
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getDirectiveName() defined in net::sourceforge::pmd::lang::vm::ast::ASTDirective
   function ASTDirective(final int) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDirective(final VmParser,final int) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable directiveName in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTDivNode.java
module net::sourceforge::pmd::lang::vm::ast::ASTDivNode
   inherits from net::sourceforge::pmd::lang::vm::ast::ASTMathNode
   function jjtAccept(VmParserVisitor,Object) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTDivNode(final int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTDivNode(final VmParser,final int) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTEscape.java
module net::sourceforge::pmd::lang::vm::ast::ASTEscape
   inherits from net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function jjtAccept(final VmParserVisitor,final Object) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTEscape(final int) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTEscape(final VmParser,final int) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable val in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTMathNode.java
module net::sourceforge::pmd::lang::vm::ast::ASTMathNode
   inherits from net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   abstract class
   function jjtAccept(final VmParserVisitor,final Object) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMathNode(final int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMathNode(final VmParser,final int) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable strictMode in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTMethod.java
module net::sourceforge::pmd::lang::vm::ast::ASTMethod
   inherits from net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getMethodName() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function jjtAccept(final VmParserVisitor,final Object) in line 62
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMethod(final int) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMethod(final VmParser,final int) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module net::sourceforge::pmd::lang::vm::ast::ASTMethod::MethodCacheKey
   function equals(final Object) in line 89
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses function MethodCacheKey(final String,final Class[]) defined in net::sourceforge::pmd::lang::vm::ast::ASTMethod::MethodCacheKey
      uses variable params defined in net::sourceforge::pmd::lang::vm::ast::ASTMethod::MethodCacheKey
      uses variable methodName defined in net::sourceforge::pmd::lang::vm::ast::ASTMethod::MethodCacheKey
   function hashCode() in line 116
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses variable params defined in net::sourceforge::pmd::lang::vm::ast::ASTMethod::MethodCacheKey
      uses variable methodName defined in net::sourceforge::pmd::lang::vm::ast::ASTMethod::MethodCacheKey
   function MethodCacheKey(final String,final Class[]) in line 77
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable methodName defined in net::sourceforge::pmd::lang::vm::ast::ASTMethod::MethodCacheKey
      uses variable params defined in net::sourceforge::pmd::lang::vm::ast::ASTMethod::MethodCacheKey
   variable methodName in line 73
   variable params in line 75
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTModNode.java
module net::sourceforge::pmd::lang::vm::ast::ASTModNode
   inherits from net::sourceforge::pmd::lang::vm::ast::ASTMathNode
   function jjtAccept(VmParserVisitor,Object) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTModNode(final int) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTModNode(final VmParser,final int) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTMulNode.java
module net::sourceforge::pmd::lang::vm::ast::ASTMulNode
   inherits from net::sourceforge::pmd::lang::vm::ast::ASTMathNode
   function jjtAccept(VmParserVisitor,Object) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTMulNode(final int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTMulNode(final VmParser,final int) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTReference.java
module net::sourceforge::pmd::lang::vm::ast::ASTReference
   inherits from net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function getRootString() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rootString defined in net::sourceforge::pmd::lang::vm::ast::ASTReference
   function jjtAccept(final VmParserVisitor,final Object) in line 70
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function literal() in line 109
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function setLiteral(final String) in line 92
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function literal() defined in net::sourceforge::pmd::lang::vm::ast::ASTReference
   function ASTReference(final int) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTReference(final VmParser,final int) in line 61
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable literal in line 36
   variable rootString in line 34
   variable strictRef in line 41
      protection public
   variable toStringNullCheck in line 48
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTSubtractNode.java
module net::sourceforge::pmd::lang::vm::ast::ASTSubtractNode
   inherits from net::sourceforge::pmd::lang::vm::ast::ASTMathNode
   function jjtAccept(VmParserVisitor,Object) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable data defined in sample-matlab.m
   function ASTSubtractNode(final int) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ASTSubtractNode(final VmParser,final int) in line 46
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/MacroParseException.java
module net::sourceforge::pmd::lang::vm::ast::MacroParseException
   inherits from net::sourceforge::pmd::lang::ast::ParseException
   function appendTemplateInfo(final StringBuffer) in line 119
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getTemplateName() defined in net::sourceforge::pmd::lang::vm::ast::MacroParseException
      uses function getLineNumber() defined in net::sourceforge::pmd::lang::vm::ast::MacroParseException
      uses function getColumnNumber() defined in net::sourceforge::pmd::lang::vm::ast::MacroParseException
   function getColumnNumber() in line 86
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function getLineNumber() in line 68
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
   function getMessage() in line 109
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function appendTemplateInfo(final StringBuffer) defined in net::sourceforge::pmd::lang::vm::ast::MacroParseException
   function getTemplateName() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::ast::MacroParseException
   function MacroParseException(final String,final String,final Token) in line 46
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::ast::MacroParseException
   variable serialVersionUID in line 39
   variable templateName in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/NodeUtils.java
module net::sourceforge::pmd::lang::vm::ast::NodeUtils
   function getSpecialText(final Token) in line 42
      66 lines of code
      1 parameters
      10 conditional paths
      uses variable t defined in sample-matlab.m
      uses variable c defined in sample-matlab.m
      uses variable j defined in sample-matlab.m
   function tokenLiteral(final Token) in line 115
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable t defined in sample-matlab.m
      uses function getSpecialText(final Token) defined in net::sourceforge::pmd::lang::vm::ast::NodeUtils
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/TemplateParseException.java
module net::sourceforge::pmd::lang::vm::ast::TemplateParseException
   inherits from net::sourceforge::pmd::lang::ast::ParseException
   function appendTemplateInfo(final StringBuffer) in line 206
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getTemplateName() defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
      uses function getLineNumber() defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
      uses function getColumnNumber() defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
   function getColumnNumber() in line 125
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getLineNumber() in line 111
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getMessage() in line 144
      protection public
      58 lines of code
      0 parameters
      10 conditional paths
      uses variable specialConstructor defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
      uses function appendTemplateInfo(final StringBuffer) defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
      uses variable j defined in sample-matlab.m
   function getTemplateName() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
   function TemplateParseException(final Token,final int,final String[],final String) in line 51
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
   function TemplateParseException(final Token,final int,final String[]) in line 69
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
   function TemplateParseException() in line 82
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
   function TemplateParseException(final String) in line 92
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::ast::TemplateParseException
   variable serialVersionUID in line 34
   variable specialConstructor in line 41
   variable templateName in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/TokenMgrError.java
module net::sourceforge::pmd::lang::vm::ast::TokenMgrError
   inherits from RuntimeException
   function addEscapes(final String) in line 43
      45 lines of code
      1 parameters
      12 conditional paths
   function LexicalError(final boolean,final int,final int,final int,final String,final char) in line 96
      10 lines of code
      6 parameters
      1 conditional paths
      uses function addEscapes(final String) defined in net::sourceforge::pmd::lang::vm::ast::TokenMgrError
   function TokenMgrError() in line 111
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function TokenMgrError(final String,final int) in line 114
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function TokenMgrError(final boolean,final int,final int,final int,final String,final char,final int) in line 119
      protection public
      4 lines of code
      7 parameters
      1 conditional paths
      uses function LexicalError(final boolean,final int,final int,final int,final String,final char) defined in net::sourceforge::pmd::lang::vm::ast::TokenMgrError
   variable serialVersionUID in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/VmNode.java
module net::sourceforge::pmd::lang::vm::ast::VmNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   function childrenAccept(VmParserVisitor,Object) in line 18
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function jjtAccept(VmParserVisitor,Object) in line 13
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/VmParserVisitorAdapter.java
module net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
   inherits from net::sourceforge::pmd::lang::vm::ast::VmParserVisitor
   function visit(final VmNode,final Object) in line 6
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(VmParserVisitor,Object) defined in net::sourceforge::pmd::lang::vm::ast::VmNode
      uses variable data defined in sample-matlab.m
   function visit(final ASTprocess,final Object) in line 12
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTEscapedDirective,final Object) in line 17
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTEscape,final Object) in line 22
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTComment,final Object) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTTextblock,final Object) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTFloatingPointLiteral,final Object) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTIntegerLiteral,final Object) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTStringLiteral,final Object) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTIdentifier,final Object) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTWord,final Object) in line 58
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTDirective,final Object) in line 64
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTBlock,final Object) in line 70
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTMap,final Object) in line 76
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTObjectArray,final Object) in line 82
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTIntegerRange,final Object) in line 88
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTMethod,final Object) in line 94
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTIndex,final Object) in line 100
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTReference,final Object) in line 106
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTTrue,final Object) in line 112
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTFalse,final Object) in line 118
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTText,final Object) in line 124
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTForeachStatement,final Object) in line 130
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTIfStatement,final Object) in line 136
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTElseStatement,final Object) in line 142
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTElseIfStatement,final Object) in line 148
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTSetDirective,final Object) in line 154
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTExpression,final Object) in line 160
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTAssignment,final Object) in line 166
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTOrNode,final Object) in line 172
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTAndNode,final Object) in line 178
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTEQNode,final Object) in line 184
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTNENode,final Object) in line 190
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTLTNode,final Object) in line 196
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTGTNode,final Object) in line 202
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTLENode,final Object) in line 208
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTGENode,final Object) in line 214
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTAddNode,final Object) in line 220
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTSubtractNode,final Object) in line 226
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTMulNode,final Object) in line 232
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTDivNode,final Object) in line 238
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTModNode,final Object) in line 244
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
   function visit(final ASTNotNode,final Object) in line 250
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::ast::VmParserVisitorAdapter
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Block.java
module net::sourceforge::pmd::lang::vm::directive::Block
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   abstract class
   function getType() in line 40
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable BLOCK defined in net::sourceforge::pmd::lang::vm::directive::Directive
   variable key in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/BlockMacro.java
module net::sourceforge::pmd::lang::vm::directive::BlockMacro
   inherits from net::sourceforge::pmd::lang::vm::directive::Block
   function getName() in line 61
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable key defined in net::sourceforge::pmd::lang::vm::directive::Block
   function getScopeName() in line 71
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::vm::directive::BlockMacro
   function BlockMacro(String) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in net::sourceforge::pmd::lang::vm::directive::BlockMacro
   variable name in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Break.java
module net::sourceforge::pmd::lang::vm::directive::Break
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable LINE defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function isScopeProvided() in line 54
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Define.java
module net::sourceforge::pmd::lang::vm::directive::Define
   inherits from net::sourceforge::pmd::lang::vm::directive::Block
   function getName() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Directive.java
module net::sourceforge::pmd::lang::vm::directive::Directive
   inherits from Cloneable
   abstract class
   function getColumn() in line 89
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable column defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function getLine() in line 80
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable line defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getScopeName() in line 107
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getName() defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function getTemplateName() in line 98
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function getType() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isScopeProvided() in line 116
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable provideScope defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function setLocation(int,int) in line 59
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable line defined in net::sourceforge::pmd::lang::vm::directive::Directive
      uses variable column defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function setLocation(int,int,String) in line 70
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function setLocation(int,int) defined in net::sourceforge::pmd::lang::vm::directive::Directive
      uses variable line defined in net::sourceforge::pmd::lang::vm::directive::Directive
      uses variable column defined in net::sourceforge::pmd::lang::vm::directive::Directive
      uses variable templateName defined in net::sourceforge::pmd::lang::vm::directive::Directive
   variable BLOCK in line 32
      protection public
   variable column in line 38
   variable LINE in line 35
      protection public
   variable line in line 37
   variable provideScope in line 39
   variable templateName in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Evaluate.java
module net::sourceforge::pmd::lang::vm::directive::Evaluate
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable LINE defined in net::sourceforge::pmd::lang::vm::directive::Directive
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Foreach.java
module net::sourceforge::pmd::lang::vm::directive::Foreach
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable BLOCK defined in net::sourceforge::pmd::lang::vm::directive::Directive
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Include.java
module net::sourceforge::pmd::lang::vm::directive::Include
   inherits from net::sourceforge::pmd::lang::vm::directive::InputBase
   function getName() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 73
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable LINE defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function isScopeProvided() in line 82
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/InputBase.java
module net::sourceforge::pmd::lang::vm::directive::InputBase
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   abstract class
   function getName() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Literal.java
module net::sourceforge::pmd::lang::vm::directive::Literal
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 51
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable BLOCK defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function isScopeProvided() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Macro.java
module net::sourceforge::pmd::lang::vm::directive::Macro
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 46
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable BLOCK defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function isScopeProvided() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Parse.java
module net::sourceforge::pmd::lang::vm::directive::Parse
   inherits from net::sourceforge::pmd::lang::vm::directive::InputBase
   function getName() in line 53
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getScopeName() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 72
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable LINE defined in net::sourceforge::pmd::lang::vm::directive::Directive
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/RuntimeMacro.java
module net::sourceforge::pmd::lang::vm::directive::RuntimeMacro
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 58
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable macroName defined in net::sourceforge::pmd::lang::vm::directive::RuntimeMacro
   function getScopeName() in line 69
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 80
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable LINE defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function RuntimeMacro(String) in line 43
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable macroName defined in net::sourceforge::pmd::lang::vm::directive::RuntimeMacro
   variable macroName in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Stop.java
module net::sourceforge::pmd::lang::vm::directive::Stop
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getType() in line 44
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable LINE defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function isScopeProvided() in line 53
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/VelocimacroProxy.java
module net::sourceforge::pmd::lang::vm::directive::VelocimacroProxy
   inherits from net::sourceforge::pmd::lang::vm::directive::Directive
   function getName() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable macroName defined in net::sourceforge::pmd::lang::vm::directive::VelocimacroProxy
   function getNumArgs() in line 82
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable numMacroArgs defined in net::sourceforge::pmd::lang::vm::directive::VelocimacroProxy
   function getType() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable LINE defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function setArgArray(String[]) in line 68
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable numMacroArgs defined in net::sourceforge::pmd::lang::vm::directive::VelocimacroProxy
   function setName(String) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable macroName defined in net::sourceforge::pmd::lang::vm::directive::VelocimacroProxy
   variable macroName in line 32
   variable numMacroArgs in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/AbstractStatisticalVmRule.java
module net::sourceforge::pmd::lang::vm::rule::AbstractStatisticalVmRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   inherits from net::sourceforge::pmd::lang::rule::stat::StatisticalRule
   abstract class
   function addDataPoint(final DataPoint) in line 19
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::lang::vm::rule::AbstractStatisticalVmRule
      uses function addDataPoint(DataPoint) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function apply(final List<?extends Node >,final RuleContext) in line 29
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable helper defined in net::sourceforge::pmd::lang::vm::rule::AbstractStatisticalVmRule
      uses function apply(RuleContext) defined in net::sourceforge::pmd::lang::rule::stat::StatisticalRuleHelper
   function getViolationParameters(final DataPoint) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable helper in line 16
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/AbstractVmRule.java
module net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   inherits from net::sourceforge::pmd::lang::vm::ast::VmParserVisitor
   inherits from net::sourceforge::pmd::lang::rule::ImmutableLanguage
   abstract class
   function apply(final List<?extends Node >,final RuleContext) in line 71
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visitAll(final List<?extends Node >,final RuleContext) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function setUsesTypeResolution() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(final VmNode,final Object) in line 83
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function childrenAccept(VmParserVisitor,Object) defined in net::sourceforge::pmd::lang::vm::ast::VmNode
      uses variable data defined in sample-matlab.m
   function visit(final ASTprocess,final Object) in line 89
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTEscapedDirective,final Object) in line 94
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTEscape,final Object) in line 99
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTComment,final Object) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTTextblock,final Object) in line 109
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTFloatingPointLiteral,final Object) in line 114
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTIntegerLiteral,final Object) in line 119
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTStringLiteral,final Object) in line 124
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTIdentifier,final Object) in line 129
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTWord,final Object) in line 135
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTDirective,final Object) in line 141
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTBlock,final Object) in line 147
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTMap,final Object) in line 153
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTObjectArray,final Object) in line 159
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTIntegerRange,final Object) in line 165
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTMethod,final Object) in line 171
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTIndex,final Object) in line 177
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTReference,final Object) in line 183
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTTrue,final Object) in line 189
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTFalse,final Object) in line 195
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTText,final Object) in line 201
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTForeachStatement,final Object) in line 207
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTIfStatement,final Object) in line 213
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTElseStatement,final Object) in line 219
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTElseIfStatement,final Object) in line 225
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTSetDirective,final Object) in line 231
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTExpression,final Object) in line 237
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTAssignment,final Object) in line 243
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTOrNode,final Object) in line 249
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTAndNode,final Object) in line 255
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTEQNode,final Object) in line 261
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTNENode,final Object) in line 267
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTLTNode,final Object) in line 273
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTGTNode,final Object) in line 279
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTLENode,final Object) in line 285
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTGENode,final Object) in line 291
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTAddNode,final Object) in line 297
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTSubtractNode,final Object) in line 303
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTMulNode,final Object) in line 309
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTDivNode,final Object) in line 315
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTModNode,final Object) in line 321
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTNotNode,final Object) in line 327
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
      uses variable data defined in sample-matlab.m
   function visitAll(final List<?extends Node >,final RuleContext) in line 75
      6 lines of code
      2 parameters
      2 conditional paths
      uses function visit(final VmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function AbstractVmRule() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/basic/CollapsibleIfStatementsRule.java
module net::sourceforge::pmd::lang::vm::rule::basic::CollapsibleIfStatementsRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function handleIfElseIf(final AbstractVmNode,final Object) in line 34
      41 lines of code
      2 parameters
      10 conditional paths
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function hasElseOrElseIf(final Node) defined in net::sourceforge::pmd::lang::vm::rule::basic::CollapsibleIfStatementsRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function hasElseOrElseIf(final Node) in line 76
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getFirstChildOfType(Class< T >) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(final ASTIfStatement,final Object) in line 20
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function handleIfElseIf(final AbstractVmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::basic::CollapsibleIfStatementsRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTElseIfStatement,final Object) in line 26
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function handleIfElseIf(final AbstractVmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::basic::CollapsibleIfStatementsRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/basic/EmptyForeachStmtRule.java
module net::sourceforge::pmd::lang::vm::rule::basic::EmptyForeachStmtRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function visit(final ASTForeachStatement,final Object) in line 17
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/basic/EmptyIfStmtRule.java
module net::sourceforge::pmd::lang::vm::rule::basic::EmptyIfStmtRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function handleIf(final AbstractVmNode,final Object) in line 35
      10 lines of code
      2 parameters
      3 conditional paths
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTIfStatement,final Object) in line 18
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function handleIf(final AbstractVmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::basic::EmptyIfStmtRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTElseIfStatement,final Object) in line 24
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function handleIf(final AbstractVmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::basic::EmptyIfStmtRule
      uses variable data defined in sample-matlab.m
   function visit(final ASTElseStatement,final Object) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function handleIf(final AbstractVmNode,final Object) defined in net::sourceforge::pmd::lang::vm::rule::basic::EmptyIfStmtRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/basic/ExcessiveTemplateLengthRule.java
module net::sourceforge::pmd::lang::vm::rule::basic::ExcessiveTemplateLengthRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractStatisticalVmRule
   function visit(final ASTprocess,final Object) in line 13
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function setNode(Node) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setScore(double) defined in net::sourceforge::pmd::stat::DataPoint
      uses function setMessage(String) defined in net::sourceforge::pmd::stat::DataPoint
      uses function getMessage() defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function addDataPoint(final DataPoint) defined in net::sourceforge::pmd::lang::vm::rule::AbstractStatisticalVmRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/basic/NoInlineJavaScriptRule.java
module net::sourceforge::pmd::lang::vm::rule::basic::NoInlineJavaScriptRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function visit(final ASTText,final Object) in line 14
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/basic/UnusedMacroParameterRule.java
module net::sourceforge::pmd::lang::vm::rule::basic::UnusedMacroParameterRule
   inherits from net::sourceforge::pmd::lang::vm::rule::AbstractVmRule
   function checkForParameter(final Set< String >,final String) in line 43
      9 lines of code
      2 parameters
      3 conditional paths
      uses function containsAny(final String,final String[]) defined in net::sourceforge::pmd::lang::vm::rule::basic::UnusedMacroParameterRule
      uses function formatNameVariations(final String) defined in net::sourceforge::pmd::lang::vm::rule::basic::UnusedMacroParameterRule
   function containsAny(final String,final String[]) in line 53
      8 lines of code
      2 parameters
      3 conditional paths
      uses function formatNameVariations(final String) defined in net::sourceforge::pmd::lang::vm::rule::basic::UnusedMacroParameterRule
   function formatNameVariations(final String) in line 62
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(final ASTDirective,final Object) in line 19
      protection public
      23 lines of code
      2 parameters
      7 conditional paths
      uses function equals(Object) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses function getDirectiveName() defined in net::sourceforge::pmd::lang::vm::ast::ASTDirective
      uses function checkForParameter(final Set< String >,final String) defined in net::sourceforge::pmd::lang::vm::rule::basic::UnusedMacroParameterRule
      uses function addViolation(Object,Node) defined in net::sourceforge::pmd::lang::rule::AbstractRule
      uses variable data defined in sample-matlab.m
      uses function toString() defined in net::sourceforge::pmd::lang::vm::ast::ASTDirective
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/VmRuleChainVisitor.java
module net::sourceforge::pmd::lang::vm::rule::VmRuleChainVisitor
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNodes(final List< Node >,final RuleContext) in line 22
      15 lines of code
      2 parameters
      2 conditional paths
      uses function visit(final Rule,final Node,final RuleContext) defined in net::sourceforge::pmd::lang::vm::rule::VmRuleChainVisitor
      uses variable data defined in sample-matlab.m
      uses function indexNode(Node) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function visit(final Rule,final Node,final RuleContext) in line 39
      9 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/VmRuleViolationFactory.java
module net::sourceforge::pmd::lang::vm::rule::VmRuleViolationFactory
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function createRuleViolation(final Rule,final RuleContext,final Node,final String) in line 23
      4 lines of code
      4 parameters
      1 conditional paths
   function createRuleViolation(final Rule,final RuleContext,final Node,final String,final int,final int) in line 29
      7 lines of code
      6 parameters
      1 conditional paths
      uses function setLines(int,int) defined in net::sourceforge::pmd::lang::rule::ParametricRuleViolation
   function VmRuleViolationFactory() in line 19
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 17
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/util/DirectiveMapper.java
module net::sourceforge::pmd::lang::vm::util::DirectiveMapper
   function getDirective(String) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DIRECTIVE_MAP defined in net::sourceforge::pmd::lang::vm::util::DirectiveMapper
   function isDirective(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DIRECTIVE_NAMES defined in net::sourceforge::pmd::lang::vm::util::DirectiveMapper
   variable DIRECTIVE_MAP in line 24
   variable DIRECTIVE_NAMES in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/util/LogUtil.java
module net::sourceforge::pmd::lang::vm::util::LogUtil
   function formatFileString(final Directive) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTemplateName() defined in net::sourceforge::pmd::lang::vm::directive::Directive
      uses function getLine() defined in net::sourceforge::pmd::lang::vm::directive::Directive
      uses function getColumn() defined in net::sourceforge::pmd::lang::vm::directive::Directive
   function formatFileString(final AbstractVmNode) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function formatFileString(final Directive) defined in net::sourceforge::pmd::lang::vm::util::LogUtil
      uses function getTemplateName() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses function getLine() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
      uses function getColumn() defined in net::sourceforge::pmd::lang::vm::ast::AbstractVmNode
   function formatFileString(String,final int,final int) in line 59
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/util/VelocityCharStream.java
module net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   inherits from net::sourceforge::pmd::lang::ast::CharStream
   function adjustBeginLineColumn(int,int) in line 484
      protection public
      50 lines of code
      2 parameters
      6 conditional paths
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable inBuf defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable j defined in sample-matlab.m
      uses variable k defined in sample-matlab.m
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable line defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable column defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function backup(int) in line 314
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable inBuf defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function BeginToken() in line 180
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable c defined in sample-matlab.m
      uses function readChar() defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function Done() in line 472
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable buffer defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function ExpandBuff(boolean) in line 65
      50 lines of code
      1 parameters
      3 conditional paths
      uses variable nextBufExpand defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable buffer defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable maxNextCharInd defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable t defined in sample-matlab.m
   function FillBuff() in line 116
      60 lines of code
      0 parameters
      10 conditional paths
      uses variable maxNextCharInd defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable nextBufExpand defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses function ExpandBuff(boolean) defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable inputStream defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable buffer defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable e defined in sample-matlab.m
      uses function backup(int) defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function getBeginColumn() in line 298
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function getBeginLine() in line 306
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function getColumn() in line 265
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function getEndColumn() in line 282
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function getEndLine() in line 290
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function GetImage() in line 435
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable buffer defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function getLine() in line 274
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function GetSuffix(int) in line 451
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable buffer defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function readChar() in line 234
      protection public
      26 lines of code
      0 parameters
      3 conditional paths
      uses variable inBuf defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable buffer defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable maxNextCharInd defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses function FillBuff() defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable c defined in sample-matlab.m
      uses function UpdateLineColumn(char) defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function ReInit(java.io.Reader,int,int,int) in line 359
      protection public
      18 lines of code
      4 parameters
      2 conditional paths
      uses variable inputStream defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable line defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable column defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable buffer defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable nextBufExpand defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable prevCharIsLF defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable prevCharIsCR defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable inBuf defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable maxNextCharInd defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function ReInit(java.io.Reader,int,int) in line 383
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function ReInit(java.io.Reader,int,int,int) defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function ReInit(java.io.InputStream,int,int,int) in line 417
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function ReInit(java.io.Reader,int,int,int) defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function ReInit(java.io.InputStream,int,int) in line 427
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function ReInit(java.io.Reader,int,int,int) defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function UpdateLineColumn(char) in line 189
      41 lines of code
      1 parameters
      7 conditional paths
      uses variable column defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable prevCharIsLF defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable line defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable prevCharIsCR defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable c defined in sample-matlab.m
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufpos defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function VelocityCharStream(java.io.Reader,int,int,int) in line 330
      protection public
      12 lines of code
      4 parameters
      1 conditional paths
      uses variable inputStream defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable line defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable column defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable nextBufExpand defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable buffer defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufline defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
      uses variable bufcolumn defined in net::sourceforge::pmd::lang::vm::util::VelocityCharStream
   function VelocityCharStream(java.io.Reader,int,int) in line 348
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function VelocityCharStream(java.io.InputStream,int,int,int) in line 394
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function VelocityCharStream(java.io.InputStream,int,int) in line 405
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable bufcolumn in line 51
   variable buffer in line 61
   variable bufline in line 50
   variable bufpos in line 49
      protection public
   variable column in line 53
   variable inBuf in line 63
   variable inputStream in line 59
   variable line in line 54
   variable maxNextCharInd in line 62
   variable nextBufExpand in line 45
   variable prevCharIsCR in line 56
   variable prevCharIsLF in line 57
   variable STATIC_FLAG in line 43
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/VmHandler.java
module net::sourceforge::pmd::lang::vm::VmHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getDumpFacade(final Writer,final String,final boolean) in line 46
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   function getParser(final ParserOptions) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::vm::rule::VmRuleViolationFactory
   function getXPathHandler() in line 27
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/VmLanguageModule.java
module net::sourceforge::pmd::lang::vm::VmLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function VmLanguageModule() in line 14
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 11
      protection public
   variable TERSE_NAME in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/VmParser.java
module net::sourceforge::pmd::lang::vm::VmParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTokenManager(final Reader) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(final String,final Reader) in line 36
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function VmParser(final ParserOptions) in line 23
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::AbstractParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/VmTokenManager.java
module net::sourceforge::pmd::lang::vm::VmTokenManager
   inherits from net::sourceforge::pmd::lang::TokenManager
   function getNextToken() in line 21
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vmParserTokenManager defined in net::sourceforge::pmd::lang::vm::VmTokenManager
   function setFileName(final String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function VmTokenManager(final Reader) in line 17
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable vmParserTokenManager defined in net::sourceforge::pmd::lang::vm::VmTokenManager
   variable vmParserTokenManager in line 15
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-vm/src/test/java/net/sourceforge/pmd/lang/vm/VmParserTest.java
module net::sourceforge::pmd::lang::vm::VmParserTest
   function parse(final String) in line 54
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::vm::VmLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
   function testParser() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(final String) defined in net::sourceforge::pmd::lang::vm::VmParserTest
      uses variable VM_SRC defined in net::sourceforge::pmd::lang::vm::VmParserTest
   function testParser2() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(final String) defined in net::sourceforge::pmd::lang::vm::VmParserTest
      uses variable SRC2 defined in net::sourceforge::pmd::lang::vm::VmParserTest
   function testParser3() in line 49
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parse(final String) defined in net::sourceforge::pmd::lang::vm::VmParserTest
      uses variable SRC3 defined in net::sourceforge::pmd::lang::vm::VmParserTest
   variable SRC2 in line 27
   variable SRC3 in line 32
   variable VM_SRC in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast/DOMLineNumbers.java
module net::sourceforge::pmd::lang::xml::ast::DOMLineNumbers
   function calculateLinesMap() in line 137
      10 lines of code
      0 parameters
      1 conditional paths
   function determine() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function determineLocation(Node,int) in line 36
      55 lines of code
      2 parameters
      1 conditional paths
   function setBeginLocation(Node,int) in line 124
      6 lines of code
      2 parameters
      1 conditional paths
   function setEndLocation(Node,int) in line 130
      6 lines of code
      2 parameters
      1 conditional paths
   function toColumn(int) in line 159
      9 lines of code
      1 parameters
      1 conditional paths
   function toLine(int) in line 148
      11 lines of code
      1 parameters
      1 conditional paths
   function unexpandEntities(Node,String) in line 92
      32 lines of code
      2 parameters
      1 conditional paths
   function DOMLineNumbers(Document,String) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable document in line 23
   variable lines in line 25
   variable xmlString in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast/XmlNode.java
module net::sourceforge::pmd::lang::xml::ast::XmlNode
   inherits from net::sourceforge::pmd::lang::ast::Node
   inherits from net::sourceforge::pmd::lang::ast::xpath::AttributeNode
   function getNode() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable BEGIN_COLUMN in line 15
      protection public
   variable BEGIN_LINE in line 14
      protection public
   variable END_COLUMN in line 17
      protection public
   variable END_LINE in line 16
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast/XmlNodeInvocationHandler.java
module net::sourceforge::pmd::lang::xml::ast::XmlNodeInvocationHandler
   inherits from java::lang::reflect::InvocationHandler
   function getUserData(String) in line 136
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable node defined in net::sourceforge::pmd::lang::xml::ast::XmlNodeInvocationHandler
      uses function getUserData() defined in net::sourceforge::pmd::lang::ast::Node
   function invoke(Object,Method,Object[]) in line 37
      protection public
      98 lines of code
      3 parameters
      22 conditional paths
      uses variable method defined in sample-matlab.m
      uses variable node defined in net::sourceforge::pmd::lang::xml::ast::XmlNodeInvocationHandler
      uses variable parser defined in net::sourceforge::pmd::lang::xml::ast::XmlNodeInvocationHandler
      uses function createProxy(Node) defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
      uses function getUserData(String) defined in net::sourceforge::pmd::lang::xml::ast::XmlNodeInvocationHandler
      uses variable userData defined in net::sourceforge::pmd::lang::xml::ast::XmlNodeInvocationHandler
   function XmlNodeInvocationHandler(XmlParser,Node) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in net::sourceforge::pmd::lang::xml::ast::XmlNodeInvocationHandler
      uses variable node defined in net::sourceforge::pmd::lang::xml::ast::XmlNodeInvocationHandler
   variable node in line 28
   variable parser in line 30
   variable userData in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast/XmlParser.java
module net::sourceforge::pmd::lang::xml::ast::XmlParser
   function addAllInterfaces(Set< Class<?>>,Class<?>) in line 93
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function createProxy(Node) in line 73
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable nodeCache defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
      uses function addAllInterfaces(Set< Class<?>>,Class<?>) defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
   function parse(Reader) in line 68
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function parseDocument(Reader) defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
      uses function createProxy(Node) defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
   function parseDocument(Reader) in line 38
      29 lines of code
      1 parameters
      2 conditional paths
      uses variable nodeCache defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
      uses variable parserOptions defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
      uses function isNamespaceAware() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isValidating() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isIgnoringComments() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isIgnoringElementContentWhitespace() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isExpandEntityReferences() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isCoalescing() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isXincludeAware() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getEntityResolver() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable e defined in sample-matlab.m
   function XmlParser(XmlParserOptions) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
   variable nodeCache in line 32
   variable parserOptions in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/XmlParser.java
module net::sourceforge::pmd::lang::xml::XmlParser
   inherits from net::sourceforge::pmd::lang::AbstractParser
   function canParse() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createTokenManager(Reader) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSuppressMap() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String,Reader) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
      uses function parse(Reader) defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
   function XmlParser(ParserOptions) in line 21
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parserOptions defined in net::sourceforge::pmd::lang::xml::ast::XmlParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule/AbstractDomXmlRule.java
module net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRule
   inherits from net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
   function visit(XmlNode,RuleContext) in line 31
      9 lines of code
      2 parameters
      1 conditional paths
      uses function getNode() defined in net::sourceforge::pmd::lang::xml::ast::XmlNode
      uses function visitDomNode(XmlNode,Node,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRule
      uses function visitAttributeNodes(XmlNode,Node,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRule
   function visit(XmlNode,Attr,RuleContext) in line 87
      2 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,CharacterData,RuleContext) in line 90
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,Comment,RuleContext) in line 94
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,Document,RuleContext) in line 98
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,DocumentType,RuleContext) in line 102
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,Element,RuleContext) in line 106
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,Entity,RuleContext) in line 110
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,EntityReference,RuleContext) in line 114
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,Notation,RuleContext) in line 118
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,ProcessingInstruction,RuleContext) in line 122
      3 lines of code
      3 parameters
      1 conditional paths
   function visit(XmlNode,Text,RuleContext) in line 126
      3 lines of code
      3 parameters
      1 conditional paths
   function visitAttributeNodes(XmlNode,Node,RuleContext) in line 78
      8 lines of code
      3 parameters
      3 conditional paths
      uses function visit(XmlNode,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRule
   function visitDomNode(XmlNode,Node,RuleContext) in line 41
      36 lines of code
      3 parameters
      11 conditional paths
      uses function visit(XmlNode,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule/AbstractXmlRule.java
module net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
   inherits from net::sourceforge::pmd::lang::rule::AbstractRule
   inherits from net::sourceforge::pmd::lang::rule::ImmutableLanguage
   function apply(List<?extends Node >,RuleContext) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function visitAll(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
   function getParserOptions() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(XmlNode,RuleContext) in line 61
      7 lines of code
      2 parameters
      2 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visitAll(List<?extends Node >,RuleContext) in line 54
      6 lines of code
      2 parameters
      2 conditional paths
      uses function visit(XmlNode,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
   function AbstractXmlRule() in line 34
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable COALESCING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
      uses variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
      uses variable IGNORING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
      uses variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
      uses variable NAMESPACE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
      uses variable VALIDATING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
      uses variable XINCLUDE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
   variable COALESCING_DESCRIPTOR in line 26
      protection public
   variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR in line 27
      protection public
   variable IGNORING_COMMENTS_DESCRIPTOR in line 28
      protection public
   variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR in line 29
      protection public
   variable NAMESPACE_AWARE_DESCRIPTOR in line 30
      protection public
   variable VALIDATING_DESCRIPTOR in line 31
      protection public
   variable XINCLUDE_AWARE_DESCRIPTOR in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule/XmlRuleChainVisitor.java
module net::sourceforge::pmd::lang::xml::rule::XmlRuleChainVisitor
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
   function indexNodes(List< Node >,RuleContext) in line 18
      15 lines of code
      2 parameters
      4 conditional paths
      uses function indexNode(Node) defined in net::sourceforge::pmd::lang::rule::AbstractRuleChainVisitor
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function visit(Rule,Node,RuleContext) in line 34
      4 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule/XmlRuleViolationFactory.java
module net::sourceforge::pmd::lang::xml::rule::XmlRuleViolationFactory
   inherits from net::sourceforge::pmd::lang::rule::AbstractRuleViolationFactory
   function createRuleViolation(Rule,RuleContext,Node,String) in line 23
      3 lines of code
      4 parameters
      1 conditional paths
   function createRuleViolation(Rule,RuleContext,Node,String,int,int) in line 27
      3 lines of code
      6 parameters
      1 conditional paths
   function XmlRuleViolationFactory() in line 19
      2 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 17
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule/XmlXPathRule.java
module net::sourceforge::pmd::lang::xml::rule::XmlXPathRule
   inherits from net::sourceforge::pmd::lang::rule::XPathRule
   function getParserOptions() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function XmlXPathRule() in line 23
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function definePropertyDescriptor(PropertyDescriptor<?>) defined in net::sourceforge::pmd::AbstractPropertySource
      uses variable COALESCING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::XmlXPathRule
      uses variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::XmlXPathRule
      uses variable IGNORING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::XmlXPathRule
      uses variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::XmlXPathRule
      uses variable NAMESPACE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::XmlXPathRule
      uses variable VALIDATING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::XmlXPathRule
      uses variable XINCLUDE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::rule::XmlXPathRule
   variable COALESCING_DESCRIPTOR in line 15
      protection public
   variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR in line 16
      protection public
   variable IGNORING_COMMENTS_DESCRIPTOR in line 17
      protection public
   variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR in line 18
      protection public
   variable NAMESPACE_AWARE_DESCRIPTOR in line 19
      protection public
   variable VALIDATING_DESCRIPTOR in line 20
      protection public
   variable XINCLUDE_AWARE_DESCRIPTOR in line 21
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/XmlHandler.java
module net::sourceforge::pmd::lang::xml::XmlHandler
   inherits from net::sourceforge::pmd::lang::AbstractLanguageVersionHandler
   function getDefaultParserOptions() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDumpFacade(final Writer,final String,final boolean) in line 57
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function initializeWith(Writer,String,boolean,XmlNode) defined in net::sourceforge::pmd::lang::xml::ast::DumpFacade
   function getParser(ParserOptions) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRuleViolationFactory() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INSTANCE defined in net::sourceforge::pmd::lang::xml::rule::XmlRuleViolationFactory
   function getXPathHandler() in line 29
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/XmlLanguageModule.java
module net::sourceforge::pmd::lang::xml::XmlLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function XmlLanguageModule() in line 14
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 11
      protection public
   variable TERSE_NAME in line 12
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/XmlParserOptions.java
module net::sourceforge::pmd::lang::xml::XmlParserOptions
   inherits from net::sourceforge::pmd::lang::ParserOptions
   function equals(Object) in line 175
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function XmlParserOptions() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable suppressMarker defined in net::sourceforge::pmd::lang::ParserOptions
      uses variable coalescing defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable expandEntityReferences defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable ignoringComments defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable ignoringElementContentWhitespace defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable namespaceAware defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable validating defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable xincludeAware defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function getEntityResolver() in line 88
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable lookupDescriptorDoc defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable SILENT_ENTITY_RESOLVER defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function hashCode() in line 161
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable coalescing defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable expandEntityReferences defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable ignoringComments defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable ignoringElementContentWhitespace defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable namespaceAware defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable validating defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable xincludeAware defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function isCoalescing() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable coalescing defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function isExpandEntityReferences() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable expandEntityReferences defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function isIgnoringComments() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoringComments defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function isIgnoringElementContentWhitespace() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ignoringElementContentWhitespace defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function isLookupDescriptorDoc() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lookupDescriptorDoc defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function isNamespaceAware() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable namespaceAware defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function isValidating() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable validating defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function isXincludeAware() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xincludeAware defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function setCoalescing(boolean) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable coalescing defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function setExpandEntityReferences(boolean) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable expandEntityReferences defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function setIgnoringComments(boolean) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoringComments defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function setIgnoringElementContentWhitespace(boolean) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoringElementContentWhitespace defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function setLookupDescriptorDoc(boolean) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lookupDescriptorDoc defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function setNamespaceAware(boolean) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable namespaceAware defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function setValidating(boolean) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable validating defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function setXincludeAware(boolean) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable xincludeAware defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function XmlParserOptions() in line 60
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable COALESCING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable IGNORING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable NAMESPACE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable VALIDATING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable XINCLUDE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable LOOKUP_DESCRIPTOR_DTD defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function XmlParserOptions(Rule) in line 72
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function getProperty(PropertyDescriptor< T >) defined in net::sourceforge::pmd::PropertySource
      uses variable COALESCING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable IGNORING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable NAMESPACE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable VALIDATING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable XINCLUDE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable LOOKUP_DESCRIPTOR_DTD defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   variable coalescing in line 51
   variable COALESCING_DESCRIPTOR in line 21
      protection public
   variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR in line 25
      protection public
   variable expandEntityReferences in line 52
   variable IGNORING_COMMENTS_DESCRIPTOR in line 28
      protection public
   variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR in line 30
      protection public
   variable ignoringComments in line 53
   variable ignoringElementContentWhitespace in line 54
   variable LOOKUP_DESCRIPTOR_DTD in line 41
      protection public
   variable lookupDescriptorDoc in line 58
   variable NAMESPACE_AWARE_DESCRIPTOR in line 34
      protection public
   variable namespaceAware in line 55
   variable SILENT_ENTITY_RESOLVER in line 44
      protection public
   variable validating in line 56
   variable VALIDATING_DESCRIPTOR in line 36
      protection public
   variable XINCLUDE_AWARE_DESCRIPTOR in line 39
      protection public
   variable xincludeAware in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xsl/XslLanguageModule.java
module net::sourceforge::pmd::lang::xsl::XslLanguageModule
   inherits from net::sourceforge::pmd::lang::BaseLanguageModule
   function XslLanguageModule() in line 15
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses variable TERSE_NAME defined in net::sourceforge::pmd::lang::xsl::XslLanguageModule
      uses function addVersion(String,LanguageVersionHandler,boolean) defined in net::sourceforge::pmd::lang::BaseLanguageModule
   variable NAME in line 12
      protection public
   variable TERSE_NAME in line 13
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/lang/xml/rule/AbstractDomXmlRuleTest.java
module net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest
   function dtdIsNotLookedUp() in line 100
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses function setLookupDescriptorDoc(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function suite() in line 238
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testVisit() in line 39
      protection public
      59 lines of code
      0 parameters
      1 conditional paths
      uses function setExpandEntityReferences(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function xsdIsNotLookedUp() in line 124
      protection public
      21 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
module net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   inherits from net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRule
   function apply(List<?extends Node >,RuleContext) in line 163
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function visit(String,org.w3c.dom.Node) in line 153
      8 lines of code
      2 parameters
      2 conditional paths
   function visit(XmlNode,Attr,RuleContext) in line 168
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,CharacterData,RuleContext) in line 174
      5 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,Comment,RuleContext) in line 181
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,Document,RuleContext) in line 187
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,DocumentType,RuleContext) in line 193
      5 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,Element,RuleContext) in line 200
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,Entity,RuleContext) in line 206
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,EntityReference,RuleContext) in line 212
      5 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,Notation,RuleContext) in line 219
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,ProcessingInstruction,RuleContext) in line 225
      5 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function visit(XmlNode,Text,RuleContext) in line 232
      4 lines of code
      3 parameters
      1 conditional paths
      uses function visit(String,org.w3c.dom.Node) defined in net::sourceforge::pmd::lang::xml::rule::AbstractDomXmlRuleTest::MyRule
   function MyRule() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/lang/xml/rule/AbstractXmlRuleTest.java
module net::sourceforge::pmd::lang::xml::rule::AbstractXmlRuleTest
   function suite() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testVisit() in line 25
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses function apply(List<?extends Node >,RuleContext) defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRuleTest::MyRule
module net::sourceforge::pmd::lang::xml::rule::AbstractXmlRuleTest::MyRule
   inherits from net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
   function apply(List<?extends Node >,RuleContext) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visit(XmlNode,RuleContext) in line 55
      4 lines of code
      2 parameters
      1 conditional paths
   function MyRule() in line 45
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/lang/xml/XmlParserOptionsTest.java
module net::sourceforge::pmd::lang::xml::XmlParserOptionsTest
   function suite() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testConstructor() in line 42
      protection public
      38 lines of code
      0 parameters
      1 conditional paths
      uses variable COALESCING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getParserOptions() defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
      uses variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable IGNORING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable NAMESPACE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable VALIDATING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable XINCLUDE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function testDefaults() in line 20
      protection public
      20 lines of code
      0 parameters
      1 conditional paths
      uses function isCoalescing() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isExpandEntityReferences() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isIgnoringComments() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isIgnoringElementContentWhitespace() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isNamespaceAware() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isValidating() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isXincludeAware() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
   function testEqualsHashcode() in line 127
      protection public
      32 lines of code
      0 parameters
      2 conditional paths
      uses variable COALESCING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable EXPAND_ENTITY_REFERENCES_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable IGNORING_COMMENTS_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable IGNORING_ELEMENT_CONTENT_WHITESPACE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable NAMESPACE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable VALIDATING_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable XINCLUDE_AWARE_DESCRIPTOR defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses variable property defined in sample-matlab.m
      uses function getParserOptions() defined in net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::lang::ParserOptions
   function testSetters() in line 82
      protection public
      43 lines of code
      0 parameters
      1 conditional paths
      uses function setSuppressMarker(String) defined in net::sourceforge::pmd::lang::ParserOptions
      uses function getSuppressMarker() defined in net::sourceforge::pmd::lang::ParserOptions
      uses function setCoalescing(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isCoalescing() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function setExpandEntityReferences(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isExpandEntityReferences() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function setIgnoringComments(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isIgnoringComments() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function setIgnoringElementContentWhitespace(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isIgnoringElementContentWhitespace() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function setNamespaceAware(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isNamespaceAware() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function setValidating(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isValidating() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function setXincludeAware(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function isXincludeAware() defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
module net::sourceforge::pmd::lang::xml::XmlParserOptionsTest::MyRule
   inherits from net::sourceforge::pmd::lang::xml::rule::AbstractXmlRule
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/lang/xml/XmlParserTest.java
module net::sourceforge::pmd::lang::xml::XmlParserTest
   function assertLineNumbers(Node,int,int,int,int) in line 434
      6 lines of code
      5 parameters
      1 conditional paths
      uses function getBeginLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getBeginColumn() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndLine() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getEndColumn() defined in net::sourceforge::pmd::lang::ast::Node
   function assertNode(Node,String,int,Object...) in line 380
      16 lines of code
      4 parameters
      3 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function assertTextNode(Node,String) in line 402
      3 lines of code
      2 parameters
      1 conditional paths
   function assertTextNode(Node,String,String) in line 413
      11 lines of code
      3 parameters
      1 conditional paths
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getImage() defined in net::sourceforge::pmd::lang::ast::Node
      uses function getName() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
      uses function getValue() defined in net::sourceforge::pmd::lang::ast::xpath::Attribute
   function testDefaultParsing() in line 124
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_TEST defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertTextNode(Node,String) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   function testDefaultParsingNamespaces() in line 271
      protection public
      26 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_NAMESPACE_TEST defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertTextNode(Node,String) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   function testLineNumbers() in line 81
      protection public
      38 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_TEST defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertLineNumbers(Node,int,int,int,int) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertTextNode(Node,String) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   function testParsingCoalescingEnabled() in line 153
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function setCoalescing(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_TEST defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertTextNode(Node,String) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   function testParsingDoNotExpandEntities() in line 182
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function setExpandEntityReferences(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_TEST defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertTextNode(Node,String) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   function testParsingIgnoreComments() in line 215
      protection public
      24 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function setIgnoringComments(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_TEST defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertTextNode(Node,String) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   function testParsingIgnoreElementContentWhitespace() in line 244
      protection public
      22 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function setIgnoringElementContentWhitespace(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_TEST defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertTextNode(Node,String) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   function testParsingNotNamespaceAware() in line 302
      protection public
      28 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function setNamespaceAware(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_NAMESPACE_TEST defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertTextNode(Node,String) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   function testParsingWithValidation() in line 336
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function setValidating(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses variable XML_INVALID_WITH_DTD defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses variable output defined in sample-matlab.m
      uses function jjtGetNumChildren() defined in net::sourceforge::pmd::lang::ast::Node
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
   function testWithProcessingInstructions() in line 361
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable NAME defined in net::sourceforge::pmd::lang::xml::XmlLanguageModule
      uses function getDefaultVersion() defined in net::sourceforge::pmd::lang::Language
      uses function getLanguageVersionHandler() defined in net::sourceforge::pmd::lang::LanguageVersion
      uses function getDefaultParserOptions() defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function setExpandEntityReferences(boolean) defined in net::sourceforge::pmd::lang::xml::XmlParserOptions
      uses function getParser(ParserOptions) defined in net::sourceforge::pmd::lang::LanguageVersionHandler
      uses function parse(String,Reader) defined in net::sourceforge::pmd::lang::Parser
      uses function assertNode(Node,String,int,Object...) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
      uses function jjtGetChild(int) defined in net::sourceforge::pmd::lang::ast::Node
      uses function assertLineNumbers(Node,int,int,int,int) defined in net::sourceforge::pmd::lang::xml::XmlParserTest
   variable XML_INVALID_WITH_DTD in line 63
   variable XML_NAMESPACE_TEST in line 52
   variable XML_TEST in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/pmd-xml/src/test/java/net/sourceforge/pmd/lang/xsl/rule/xpath/XPathRulesTest.java
module net::sourceforge::pmd::lang::xsl::rule::xpath::XPathRulesTest
   inherits from net::sourceforge::pmd::testframework::SimpleAggregatorTst
   function setUp() in line 13
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function addRule(String,String) defined in net::sourceforge::pmd::testframework::SimpleAggregatorTst
      uses variable RULESET defined in net::sourceforge::pmd::lang::xsl::rule::xpath::XPathRulesTest
   variable RULESET in line 10
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/README.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/cpd-parser-howto.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/howitworks.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/howtomakearuleset.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/howtowritearule.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/new-language.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/pmd-developer.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/pmd-release-process.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/rule-guidelines.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/customizing/xpathruletutorial.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/bestpractices.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/changelog-old.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/changelog.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/credits.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/future.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/license.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/meaning.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/news.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/products.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/overview/similar-projects.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/usage/ant-task.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/usage/ci-plugins.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/usage/cpd-usage.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/usage/jspsupport.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/usage/maven-plugin.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/usage/mvn-plugin.md
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/pmd/pmd-src-5.3.3/pmd-src-5.3.3/src/site/markdown/usage/suppressing.md
