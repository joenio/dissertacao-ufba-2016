file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/antTask/edu/umd/cs/findbugs/anttask/FindBugsTask.java
module edu::umd::cs::findbugs::anttask::FindBugsTask
   inherits from org::apache::tools::ant::Task
   function addArg(String) in line 675
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function checkParameters() in line 602
      68 lines of code
      0 parameters
      12 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function getLocation() defined in edu::umd::cs::findbugs::anttask::FindBugsTask::ClassLocation
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable outputFormat defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable reportLevel defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable excludeFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable includeFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function getName() defined in edu::umd::cs::findbugs::anttask::FindBugsTask::SystemProperty
      uses function getValue() defined in edu::umd::cs::findbugs::anttask::FindBugsTask::SystemProperty
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createAuxAnalyzepath() in line 443
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createAuxClasspath() in line 403
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createClass() in line 488
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createClasspath() in line 546
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createPluginList() in line 574
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createSourcePath() in line 471
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function createSystemProperty() in line 591
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function execFindbugs() in line 684
      156 lines of code
      0 parameters
      35 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable jvm defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable debug defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable jvmargs defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable systemPropertyList defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function getName() defined in edu::umd::cs::findbugs::anttask::FindBugsTask::SystemProperty
      uses function getValue() defined in edu::umd::cs::findbugs::anttask::FindBugsTask::SystemProperty
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable FINDBUGS_JAR defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable projectName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable conserveSpace defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable workHard defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable sorted defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable timestampNow defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable outputFormat defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable stylesheet defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable quietErrors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable reportLevel defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable excludeFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable includeFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable visitors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable omitVisitors defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable outputFileName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable relaxed defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable onlyAnalyze defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable classLocations defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable warningsProperty defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable BUGS_FOUND_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function execute() in line 518
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses function checkParameters() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses function execFindbugs() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable errorProperty defined in edu::umd::cs::findbugs::anttask::FindBugsTask
      uses variable failOnError defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAdjustExperimental(boolean) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxAnalyzepath(Path) in line 420
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable auxAnalyzepath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxAnalyzepathRef(Reference) in line 453
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createAuxAnalyzepath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxClasspath(Path) in line 380
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable auxClasspath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setAuxClasspathRef(Reference) in line 413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createAuxClasspath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setClasspath(Path) in line 535
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setClasspathRef(Reference) in line 556
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClasspath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setConserveSpace(boolean) in line 352
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDebug(boolean) in line 327
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setEffort(String) in line 336
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable effort defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setErrorProperty(String) in line 312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setExcludeFilter(File) in line 359
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFailOnError(boolean) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHome(File) in line 256
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setIncludeFilter(File) in line 366
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setJvm(String) in line 208
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jvm defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setJvmargs(String) in line 201
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOmitVisitors(String) in line 249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOnlyAnalyze(String) in line 505
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutput(String) in line 263
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setOutputFile(String) in line 497
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable outputFileName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setPluginList(Path) in line 563
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setPluginListRef(Reference) in line 584
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createPluginList() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setProjectFile(File) in line 373
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setProjectName(String) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setQuietErrors(boolean) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setRelaxed(boolean) in line 226
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relaxed defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setReportLevel(String) in line 277
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSort(boolean) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSourcePath(Path) in line 460
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable sourcePath defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setSourcePathRef(Reference) in line 481
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createSourcePath() defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setStylesheet(String) in line 270
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setTimeout(long) in line 513
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   function setTimestampNow(boolean) in line 290
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVisitors(String) in line 242
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWarningsProperty(String) in line 320
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setWorkHard(boolean) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable workHard defined in edu::umd::cs::findbugs::anttask::FindBugsTask
   variable adjustExperimental in line 139
   variable auxAnalyzepath in line 145
   variable auxClasspath in line 144
   variable classLocations in line 155
   variable classpath in line 157
   variable conserveSpace in line 129
   variable debug in line 127
   variable DEFAULT_TIMEOUT in line 125
   variable effort in line 128
   variable errorProperty in line 134
   variable excludeFile in line 142
   variable failOnError in line 133
   variable FINDBUGS_JAR in line 124
   variable findbugsEngine in line 162
   variable homeDir in line 140
   variable includeFile in line 143
   variable jvm in line 149
   variable jvmargs in line 150
   variable omitVisitors in line 152
   variable onlyAnalyze in line 160
   variable outputFileName in line 153
   variable outputFormat in line 147
   variable pluginList in line 158
   variable projectFile in line 141
   variable projectName in line 136
   variable quietErrors in line 132
   variable relaxed in line 138
   variable reportLevel in line 148
   variable sorted in line 130
   variable sourcePath in line 146
   variable stylesheet in line 154
   variable systemPropertyList in line 159
   variable timeout in line 156
   variable timestampNow in line 131
   variable visitors in line 151
   variable warningsProperty in line 135
   variable workHard in line 137
module edu::umd::cs::findbugs::anttask::FindBugsTask::ClassLocation
   function getLocation() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLocation(File) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 177
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::anttask::FindBugsTask::SystemProperty
   function getName() in line 194
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getValue() in line 195
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setName(String) in line 191
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setValue(String) in line 192
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function SystemProperty() in line 188
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable name in line 185
   variable value in line 186
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/antTask/edu/umd/cs/findbugs/anttask/FindBugsViewerTask.java
module edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   inherits from org::apache::tools::ant::Task
   function addArg(String) in line 205
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function createClasspath() in line 148
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function createPluginList() in line 178
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function execute() in line 210
      protection public
      68 lines of code
      0 parameters
      9 conditional paths
      uses variable findbugsEngine defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable debug defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable jvmargs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable FINDBUGSGUI_JAR defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses function addArg(String) defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable classpath defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable loadbugs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable look defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function setClasspathRef(Reference) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createClasspath() defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setDebug(boolean) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHome(File) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable homeDir defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setJvmargs(String) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setLoadbugs(File) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loadbugs defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setLook(String) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable look defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setPluginList(Path) in line 166
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setPluginListRef(Reference) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createPluginList() defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setProjectFile(File) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectFile defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function setTimeout(long) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timeout defined in edu::umd::cs::findbugs::anttask::FindBugsViewerTask
   function FindBugsViewerTask() in line 96
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classpath in line 90
   variable debug in line 83
   variable DEFAULT_TIMEOUT in line 80
   variable findbugsEngine in line 93
   variable FINDBUGSGUI_JAR in line 79
   variable homeDir in line 89
   variable jvmargs in line 87
   variable loadbugs in line 85
   variable look in line 88
   variable pluginList in line 91
   variable projectFile in line 84
   variable timeout in line 86
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/infonodeJava/edu/umd/cs/findbugs/gui2/DockLayout.java
module edu::umd::cs::findbugs::gui2::DockLayout
   inherits from edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 124
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable viewMenuItems defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable summaryView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function initialize() in line 142
      protection public
      55 lines of code
      0 parameters
      2 conditional paths
      uses variable topView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable summaryView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses variable tabs defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function getDockingLayout() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable viewMenuItems defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function windowClosed(DockingWindow) defined in edu::umd::cs::findbugs::gui2::DockLayout::DockParentListener
   function makeCommentsVisible() in line 201
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable commentsView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function makeSourceVisible() in line 209
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function saveState() in line 217
      protection public
      13 lines of code
      0 parameters
      2 conditional paths
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
      uses function setDockingLayout(byte[]) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSourceTitle(final String) in line 234
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceView defined in edu::umd::cs::findbugs::gui2::DockLayout
   function DockLayout(MainFrame) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable commentsView in line 106
   variable rootWindow in line 108
   variable sourceView in line 109
   variable summaryView in line 110
   variable tabs in line 111
   variable topView in line 113
   variable viewMenuItems in line 114
module edu::umd::cs::findbugs::gui2::DockLayout::DockParentListener
   inherits from net::infonode::docking::DockingWindowAdapter
   function windowClosed(DockingWindow) in line 58
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::gui2::DockLayout::ViewMenuItem
   inherits from javax::swing::JCheckBoxMenuItem
   inherits from java::awt::event::ItemListener
   function itemStateChanged(ItemEvent) in line 81
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable rootWindow defined in edu::umd::cs::findbugs::gui2::DockLayout
   function ViewMenuItem(View,String) in line 72
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   variable view in line 70
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/AbstractBugReporter.java
module edu::umd::cs::findbugs::AbstractBugReporter
   inherits from edu::umd::cs::findbugs::BugReporter
   abstract class
   function addObserver(BugReporterObserver) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable observerList defined in edu::umd::cs::findbugs::AbstractBugReporter
   function doReportBug(BugInstance) in line 281
      1 lines of code
      1 parameters
      1 conditional paths
   function getMissingClassName(ClassNotFoundException) in line 132
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getProjectStats() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::AbstractBugReporter
   function logError(String) in line 206
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorCount defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function logError(String,Throwable) in line 215
      protection public
      24 lines of code
      2 parameters
      5 conditional paths
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorCount defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
   function logMissingClass(String) in line 192
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable missingClassMessageSet defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
   function notifyObservers(BugInstance) in line 270
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable observerList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function doReportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportAnalysisError(AnalysisError) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportAnalysisError(AnalysisError) in line 288
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportBug(BugInstance) in line 115
      protection public
      16 lines of code
      1 parameters
      6 conditional paths
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable analysisUnderway defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function doReportBug(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportMissingClass(ClassNotFoundException) in line 150
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses function getMissingClassName(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function logMissingClass(String) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportMissingClass(ClassDescriptor) in line 178
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable verbosityLevel defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function logMissingClass(String) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function reportMissingClass(String) in line 295
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportQueuedErrors() in line 240
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable errorSet defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function getSequence() defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses function reportAnalysisError(AnalysisError) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable missingClassMessageList defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function reportSkippedAnalysis(MethodDescriptor) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setErrorVerbosity(int) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setPriorityThreshold(int) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable analysisUnderway in line 98
   variable DEBUG_MISSING_CLASSES in line 42
   variable errorCount in line 104
   variable errorSet in line 101
   variable missingClassMessageList in line 100
   variable missingClassMessageSet in line 99
   variable observerList in line 102
   variable priorityThreshold in line 97
   variable projectStats in line 103
   variable verbosityLevel in line 96
module edu::umd::cs::findbugs::AbstractBugReporter::Error
   function equals(Object) in line 82
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function Error(int,String) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses function equals(Object) defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getCause() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getMessage() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function getSequence() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function hashCode() in line 72
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function Error(int,String) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   function Error(int,String,Throwable) in line 53
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable message defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
      uses variable cause defined in edu::umd::cs::findbugs::AbstractBugReporter::Error
   variable cause in line 47
   variable message in line 46
   variable sequence in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/AddAnnotation.java
module edu::umd::cs::findbugs::AddAnnotation
   function execute() in line 56
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function annotationTextContainsWord(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses function setAnnotationText(String) defined in edu::umd::cs::findbugs::BugInstance
   function getBugCollection() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
   function getProject() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::AddAnnotation
   function main(String[]) in line 76
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
      uses function AddAnnotation(BugCollection,Project,String) defined in edu::umd::cs::findbugs::AddAnnotation
      uses function execute() defined in edu::umd::cs::findbugs::AddAnnotation
      uses function getBugCollection() defined in edu::umd::cs::findbugs::AddAnnotation
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::AddAnnotation
   function AddAnnotation(BugCollection,Project,String) in line 36
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses variable project defined in edu::umd::cs::findbugs::AddAnnotation
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
   function AddAnnotation(String,String) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable annotation defined in edu::umd::cs::findbugs::AddAnnotation
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddAnnotation
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses variable project defined in edu::umd::cs::findbugs::AddAnnotation
   variable annotation in line 34
   variable bugCollection in line 32
   variable project in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/AddMessages.java
module edu::umd::cs::findbugs::AddMessages
   function addBugCategories(Set< String >) in line 110
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugCategory
   function addBugCodes(Set< String >) in line 139
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function getBugTypeDescription(String) defined in edu::umd::cs::findbugs::I18N
   function addBugPatterns(Set< String >) in line 149
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function execute() in line 61
      protection public
      43 lines of code
      0 parameters
      3 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddMessages
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function addBugCategories(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
      uses function addBugPatterns(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
      uses function addBugCodes(Set< String >) defined in edu::umd::cs::findbugs::AddMessages
   function main(String[]) in line 170
      protection public
      26 lines of code
      1 parameters
      2 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
      uses function toDocument(Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function AddMessages(BugCollection,Document) defined in edu::umd::cs::findbugs::AddMessages
      uses function execute() defined in edu::umd::cs::findbugs::AddMessages
   function AddMessages(BugCollection,Document) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::AddMessages
      uses variable document defined in edu::umd::cs::findbugs::AddMessages
   variable bugCollection in line 44
   variable document in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/AnalysisCacheToRepositoryAdapter.java
module edu::umd::cs::findbugs::AnalysisCacheToRepositoryAdapter
   inherits from org::apache::bcel::util::Repository
   function clear() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function findClass(String) in line 61
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function probeClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getClassPath() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function loadClass(String) in line 77
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function loadClass(Class) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function loadClass(String) defined in edu::umd::cs::findbugs::AnalysisCacheToRepositoryAdapter
   function removeClass(JavaClass) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function storeClass(JavaClass) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AnalysisCacheToRepositoryAdapter() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/AnalysisError.java
module edu::umd::cs::findbugs::AnalysisError
   function getExceptionMessage() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
   function getMessage() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function getStackTrace() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function setExceptionMessage(String) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
   function setMessage(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function setStackTrace(String[]) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   function AnalysisError(String) in line 20
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
   function AnalysisError(String,Throwable) in line 30
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable message defined in edu::umd::cs::findbugs::AnalysisError
      uses variable exceptionMessage defined in edu::umd::cs::findbugs::AnalysisError
      uses variable stackTrace defined in edu::umd::cs::findbugs::AnalysisError
   variable exceptionMessage in line 12
   variable message in line 11
   variable stackTrace in line 13
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/AnalysisLocal.java
module edu::umd::cs::findbugs::AnalysisLocal
   function get() in line 34
      protection public
      16 lines of code
      0 parameters
      1 conditional paths
   function getMap() in line 29
      4 lines of code
      0 parameters
      1 conditional paths
   function initialValue() in line 25
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 54
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function set(T) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/AppVersion.java
module edu::umd::cs::findbugs::AppVersion
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function clone() in line 71
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getCodeSize() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function getNumClasses() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function getReleaseName() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
   function getSequenceNumber() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function getTimestamp() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
   function setCodeSize(int) in line 162
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function setNumClasses(int) in line 149
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function setReleaseName(String) in line 111
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
   function setTimestamp(long) in line 103
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
   function toString() in line 133
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
   function writeXML(XMLOutput) in line 119
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::AppVersion
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
      uses variable timestamp defined in edu::umd::cs::findbugs::AppVersion
      uses variable releaseName defined in edu::umd::cs::findbugs::AppVersion
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable codeSize defined in edu::umd::cs::findbugs::AppVersion
      uses variable numClasses defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long,long,String) in line 50
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long,Date,String) in line 55
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   function AppVersion(long) in line 60
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::AppVersion
   variable codeSize in line 48
   variable ELEMENT_NAME in line 42
      protection public
   variable numClasses in line 47
   variable releaseName in line 46
   variable sequence in line 44
   variable timestamp in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/asm/ClassNodeDetector.java
module edu::umd::cs::findbugs::asm::ClassNodeDetector
   inherits from org::objectweb::asm::tree::ClassNode
   inherits from edu::umd::cs::findbugs::Detector2
   abstract class
   function finishPass() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 55
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function ClassNodeDetector(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
   variable bugReporter in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AbstractBlockOrder.java
module edu::umd::cs::findbugs::ba::AbstractBlockOrder
   inherits from edu::umd::cs::findbugs::ba::BlockOrder
   abstract class
   function blockIterator() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable blockList defined in edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function AbstractBlockOrder(CFG,Comparator< BasicBlock >) in line 38
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable blockList defined in edu::umd::cs::findbugs::ba::AbstractBlockOrder
   variable blockList in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AbstractClassMember.java
module edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   abstract class
   function compareTo(ClassMember) in line 97
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function equals(Object) in line 129
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function AbstractClassMember(String,String,String,int) defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getAccessFlags() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getClassName() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getName() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getPackageName() in line 64
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function getSignature() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function hashCode() in line 121
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isFinal() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isPrivate() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isProtected() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isPublic() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isReferenceType() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isResolved() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resolved defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function toString() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function AbstractClassMember(String,String,String,int) in line 36
      19 lines of code
      4 parameters
      5 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable signature defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable name defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   variable accessFlags in line 27
   variable cachedHashCode in line 29
   variable className in line 24
   variable name in line 25
   variable resolved in line 28
   variable signature in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AbstractDataflow.java
module edu::umd::cs::findbugs::ba::AbstractDataflow
   inherits from Dataflow< Fact, AnalysisType >
   function getFactAfterLocation(Location) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactOnEdge(Edge) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractDataflow(CFG,AnalysisType) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AbstractDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
   abstract class
   function getFactAfterLocation(Location) in line 88
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 74
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(Fact) in line 63
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,Fact,Fact) in line 102
      protection public
      20 lines of code
      4 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,Fact) in line 56
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   variable DEBUG in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AbstractDominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   inherits from BasicAbstractDataflowAnalysis< BitSet >
   abstract class
   function copy(BitSet,BitSet) in line 86
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAllDominatedBy(BasicBlock) in line 158
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getResultFact(BasicBlock) defined in BasicAbstractDataflowAnalysis< BitSet >
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getAllDominatorsOf(BasicBlock) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getResultFact(BasicBlock) defined in BasicAbstractDataflowAnalysis< BitSet >
   function initEntryFact(BitSet) in line 91
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(BitSet) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeFactTop(BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function isTop(BitSet) in line 100
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
   function makeFactTop(BitSet) in line 105
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
   function meetInto(BitSet,Edge,BitSet) in line 124
      protection public
      12 lines of code
      3 parameters
      4 conditional paths
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function choose(Edge) defined in edu::umd::cs::findbugs::ba::EdgeChooser
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function same(BitSet,BitSet) in line 110
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,BitSet,BitSet) in line 114
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function AbstractDominatorsAnalysis(CFG,final boolean) in line 60
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
   function AbstractDominatorsAnalysis(CFG,EdgeChooser) in line 77
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   variable cfg in line 51
   variable edgeChooser in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AbstractField.java
module edu::umd::cs::findbugs::ba::AbstractField
   inherits from edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::XField
   abstract class
   function isVolatile() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function AbstractField(String,String,String,int) in line 26
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AbstractFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from org::apache::bcel::classfile::Visitor
   abstract class
   function analyzeInstruction(Instruction) in line 74
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getCPG() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDefaultValue() in line 126
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFrame() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLocation() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumWordsConsumed(Instruction) in line 131
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getNumWordsProduced(Instruction) in line 141
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function handleLoadInstruction(LoadInstruction) in line 278
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function handleNormalInstruction(Instruction) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function handleStoreInstruction(StoreInstruction) in line 254
      protection public
      18 lines of code
      1 parameters
      1 conditional paths
   function illegalBytecode(Instruction) in line 153
      3 lines of code
      1 parameters
      1 conditional paths
   function modelInstruction(Instruction,int,int,Value) in line 327
      protection public
      15 lines of code
      4 parameters
      1 conditional paths
   function modelNormalInstruction(Instruction,int,int) in line 311
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
   function setFrameAndLocation(FrameType,Location) in line 98
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function visitAALOAD(AALOAD) in line 915
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitAASTORE(AASTORE) in line 927
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitACONST_NULL(ACONST_NULL) in line 515
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitAllocationInstruction(AllocationInstruction) in line 218
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitALOAD(ALOAD) in line 371
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitANEWARRAY(ANEWARRAY) in line 1023
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitARETURN(ARETURN) in line 931
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitArithmeticInstruction(ArithmeticInstruction) in line 206
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitArrayInstruction(ArrayInstruction) in line 215
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitARRAYLENGTH(ARRAYLENGTH) in line 559
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitASTORE(ASTORE) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitATHROW(ATHROW) in line 551
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBALOAD(BALOAD) in line 851
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBASTORE(BASTORE) in line 535
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBIPUSH(BIPUSH) in line 683
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBranchInstruction(BranchInstruction) in line 167
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitBREAKPOINT(BREAKPOINT) in line 507
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCALOAD(CALOAD) in line 579
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCASTORE(CASTORE) in line 671
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitCHECKCAST(CHECKCAST) in line 539
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitConstantPushInstruction(ConstantPushInstruction) in line 227
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitConversionInstruction(ConversionInstruction) in line 179
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCPInstruction(CPInstruction) in line 209
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitD2F(D2F) in line 943
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitD2I(D2I) in line 919
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitD2L(D2L) in line 871
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDADD(DADD) in line 591
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDALOAD(DALOAD) in line 711
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDASTORE(DASTORE) in line 643
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCMPG(DCMPG) in line 867
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCMPL(DCMPL) in line 555
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDCONST(DCONST) in line 607
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDDIV(DDIV) in line 651
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDLOAD(DLOAD) in line 375
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDMUL(DMUL) in line 795
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDNEG(DNEG) in line 959
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDREM(DREM) in line 571
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDRETURN(DRETURN) in line 639
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDSTORE(DSTORE) in line 351
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDSUB(DSUB) in line 719
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitDUP(DUP) in line 403
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2(DUP2) in line 439
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2_X1(DUP2_X1) in line 452
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function visitDUP2_X2(DUP2_X2) in line 467
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function visitDUP_X1(DUP_X1) in line 413
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function visitDUP_X2(DUP_X2) in line 425
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
   function visitExceptionThrower(ExceptionThrower) in line 230
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitF2D(F2D) in line 731
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitF2I(F2I) in line 955
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitF2L(F2L) in line 687
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFADD(FADD) in line 1031
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFALOAD(FALOAD) in line 823
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFASTORE(FASTORE) in line 895
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCMPG(FCMPG) in line 543
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCMPL(FCMPL) in line 999
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFCONST(FCONST) in line 843
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFDIV(FDIV) in line 967
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFieldInstruction(FieldInstruction) in line 173
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFieldOrMethod(FieldOrMethod) in line 224
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFLOAD(FLOAD) in line 379
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFMUL(FMUL) in line 691
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFNEG(FNEG) in line 935
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFREM(FREM) in line 675
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFRETURN(FRETURN) in line 1027
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFSTORE(FSTORE) in line 355
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitFSUB(FSUB) in line 699
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 811
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETSTATIC(GETSTATIC) in line 519
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGOTO(GOTO) in line 947
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGOTO_W(GOTO_W) in line 939
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGotoInstruction(GotoInstruction) in line 188
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitI2B(I2B) in line 971
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2C(I2C) in line 1003
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2D(I2D) in line 587
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2F(I2F) in line 547
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2L(I2L) in line 735
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitI2S(I2S) in line 743
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIADD(IADD) in line 987
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIALOAD(IALOAD) in line 647
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIAND(IAND) in line 599
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIASTORE(IASTORE) in line 759
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitICONST(ICONST) in line 963
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIDIV(IDIV) in line 663
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ACMPEQ(IF_ACMPEQ) in line 855
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ACMPNE(IF_ACMPNE) in line 739
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPEQ(IF_ICMPEQ) in line 923
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPGE(IF_ICMPGE) in line 655
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPGT(IF_ICMPGT) in line 727
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPLE(IF_ICMPLE) in line 803
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPLT(IF_ICMPLT) in line 523
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIF_ICMPNE(IF_ICMPNE) in line 903
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFEQ(IFEQ) in line 747
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFGE(IFGE) in line 575
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFGT(IFGT) in line 883
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIfInstruction(IfInstruction) in line 176
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIFLE(IFLE) in line 831
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFLT(IFLT) in line 531
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNE(IFNE) in line 799
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNONNULL(IFNONNULL) in line 791
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIFNULL(IFNULL) in line 615
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIINC(IINC) in line 635
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitILOAD(ILOAD) in line 383
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMPDEP1(IMPDEP1) in line 499
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMPDEP2(IMPDEP2) in line 503
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIMUL(IMUL) in line 983
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINEG(INEG) in line 771
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINSTANCEOF(INSTANCEOF) in line 827
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitInvokeInstruction(InvokeInstruction) in line 212
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 767
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 595
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKESTATIC(INVOKESTATIC) in line 563
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 891
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIOR(IOR) in line 751
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIREM(IREM) in line 755
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIRETURN(IRETURN) in line 899
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISHL(ISHL) in line 1015
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISHR(ISHR) in line 627
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISTORE(ISTORE) in line 359
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitISUB(ISUB) in line 951
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIUSHR(IUSHR) in line 847
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitIXOR(IXOR) in line 887
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJSR(JSR) in line 695
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJSR_W(JSR_W) in line 779
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitJsrInstruction(JsrInstruction) in line 185
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitL2D(L2D) in line 875
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitL2F(L2F) in line 723
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitL2I(L2I) in line 623
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLADD(LADD) in line 815
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLALOAD(LALOAD) in line 1019
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLAND(LAND) in line 659
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLASTORE(LASTORE) in line 583
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLCMP(LCMP) in line 775
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLCONST(LCONST) in line 567
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDC(LDC) in line 679
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDC2_W(LDC2_W) in line 807
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDIV(LDIV) in line 907
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLLOAD(LLOAD) in line 387
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLMUL(LMUL) in line 1007
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLNEG(LNEG) in line 975
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLoadClass(LoadClass) in line 170
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLoadInstruction(LoadInstruction) in line 233
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLocalVariableInstruction(LocalVariableInstruction) in line 164
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLOOKUPSWITCH(LOOKUPSWITCH) in line 995
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLOR(LOR) in line 667
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLREM(LREM) in line 979
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLRETURN(LRETURN) in line 839
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSHL(LSHL) in line 863
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSHR(LSHR) in line 991
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSTORE(LSTORE) in line 363
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLSUB(LSUB) in line 619
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLUSHR(LUSHR) in line 1011
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLXOR(LXOR) in line 835
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMONITORENTER(MONITORENTER) in line 859
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMONITOREXIT(MONITOREXIT) in line 527
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 783
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNEW(NEW) in line 611
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNEWARRAY(NEWARRAY) in line 763
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitNOP(NOP) in line 819
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPOP(POP) in line 395
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPOP2(POP2) in line 399
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPopInstruction(PopInstruction) in line 182
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPushInstruction(PushInstruction) in line 203
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitPUTFIELD(PUTFIELD) in line 603
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitPUTSTATIC(PUTSTATIC) in line 911
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitRET(RET) in line 879
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitRETURN(RETURN) in line 707
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitReturnInstruction(ReturnInstruction) in line 221
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSALOAD(SALOAD) in line 787
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSASTORE(SASTORE) in line 703
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSelect(Select) in line 197
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSIPUSH(SIPUSH) in line 715
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitStackConsumer(StackConsumer) in line 242
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStackInstruction(StackInstruction) in line 161
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStackProducer(StackProducer) in line 239
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitStoreInstruction(StoreInstruction) in line 191
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSWAP(SWAP) in line 484
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function visitTABLESWITCH(TABLESWITCH) in line 631
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitTypedInstruction(TypedInstruction) in line 194
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitUnconditionalBranch(UnconditionalBranch) in line 200
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitVariableLengthInstruction(VariableLengthInstruction) in line 236
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function AbstractFrameModelingVisitor(ConstantPoolGen) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable cpg in line 54
   variable frame in line 52
   variable location in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AbstractMethod.java
module edu::umd::cs::findbugs::ba::AbstractMethod
   inherits from edu::umd::cs::findbugs::ba::AbstractClassMember
   inherits from edu::umd::cs::findbugs::ba::XMethod
   abstract class
   function getNumParams() in line 28
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function isNative() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function isSynchronized() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   function toString() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractMethod(String,String,String,int) in line 24
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AnalysisCacheToAnalysisContextAdapter.java
module edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
   inherits from edu::umd::cs::findbugs::ba::AnalysisContext
   function addApplicationClassToRepository(JavaClass) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addClasspathEntry(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function clearClassContextCache() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function clearRepository() in line 128
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getAnnotationRetentionDatabase() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCheckReturnAnnotationDatabase() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getClassContext(JavaClass) in line 154
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getClassContextStats() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFieldStoreTypeDatabase() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInnerClassAccessMap() in line 271
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses function getDatabase(Class< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function getJCIPAnnotationDatabase() in line 190
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLookupFailureCallback() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
   function getNullnessAnnotationDatabase() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReturnValueNullnessPropertyDatabase() in line 332
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getSourceFinder() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceInfoMap() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubtypes() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUnconditionalDerefParamDatabase() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initDatabases() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupClass(String) in line 254
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function setAppClassList(List< ClassDescriptor >) in line 297
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function getSubtypes() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function getClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function addApplicationClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function updateDatabases(int) in line 320
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCheckReturnAnnotationDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses function getNullnessAnnotationDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
   function AnalysisCacheToAnalysisContextAdapter() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable lookupFailureCallback in line 91
module edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter::DelegatingRepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   function logError(String) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassDescriptor) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AnalysisContext.java
module edu::umd::cs::findbugs::ba::AnalysisContext
   abstract class
   function addApplicationClassToRepository(JavaClass) in line 262
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addClasspathEntry(String) in line 255
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function clearClassContextCache() in line 247
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearRepository() in line 241
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function create(RepositoryLookupFailureCallback) in line 136
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function setCurrentAnalysisContext(AnalysisContext) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function initDatabases() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function updateDatabases(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function currentAnalysisContext() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function currentXFactory() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAnalysisLocals() in line 594
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisLocals defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getInnerClassAccessMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getAnnotationRetentionDatabase() in line 102
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBoolProperty(int) in line 424
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable boolPropertySet defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getCheckReturnAnnotationDatabase() in line 101
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassContext(JavaClass) in line 363
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getClassContextStats() in line 370
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDatabaseInputDir() in line 448
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable databaseInputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getDatabaseOutputDir() in line 467
      protection public
      3 lines of code
      0 parameters
      7 conditional paths
      uses variable databaseOutputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldStoreTypeDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getReturnValueNullnessPropertyDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDatabaseInputDir() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function read(InputStream) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
   function getFieldStoreTypeDatabase() in line 477
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getInnerClassAccessMap() in line 598
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getJCIPAnnotationDatabase() in line 103
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLookupFailureCallback() in line 217
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNullnessAnnotationDatabase() in line 100
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReturnValueNullnessPropertyDatabase() in line 492
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceFinder() in line 229
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSourceInfoMap() in line 431
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSubtypes() in line 236
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUnconditionalDerefParamDatabase() in line 485
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUnreadFields() in line 165
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function initDatabases() in line 145
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isApplicationClass(JavaClass) in line 271
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSubtypes() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function isApplicationClass(String) in line 282
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function lookupClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isApplicationClass(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function loadDefaultInterproceduralDatabases() in line 395
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable IGNORE_BUILTIN_MODELS defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_RESOURCE defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getReturnValueNullnessPropertyDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_RESOURCE defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function loadInterproceduralDatabases() in line 375
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function getFieldStoreTypeDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEFAULT_FILENAME defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getReturnValueNullnessPropertyDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function logError(String,Exception) in line 191
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String) in line 200
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function lookupClass(@NonNull String) in line 300
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function lookupClass(@NonNull ClassDescriptor) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function lookupClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function lookupSourceFile(@NonNull String) in line 341
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function lookupClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassContextStats() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function lookupSystemClass(@NonNull String) in line 326
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable originalRepository defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function reportMissingClass(ClassNotFoundException) in line 177
      protection public
      10 lines of code
      1 parameters
      6 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setBoolProperty(int,boolean) in line 413
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable boolPropertySet defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setCurrentAnalysisContext(AnalysisContext) in line 605
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function currentAnalysisContext() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setDatabaseInputDir(String) in line 438
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseInputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setDatabaseOutputDir(String) in line 457
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable databaseOutputDir defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setMissingClassWarningsSuppressed(boolean) in line 209
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setSourcePath(List< String >) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setSourceBaseList(List< String >) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getSubtypes() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function clearRepository() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function clearClassContextCache() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClasspathEntry(String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addApplicationClassToRepository(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function setUnreadFields(@NonNull UnreadFields) in line 169
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function updateDatabases(int) in line 152
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function AnalysisContext() in line 124
      4 lines of code
      0 parameters
      1 conditional paths
   variable analysisLocals in line 120
   variable boolPropertySet in line 119
   variable currentAnalysisContext in line 89
   variable currentXFactory in line 92
   variable databaseInputDir in line 121
   variable databaseOutputDir in line 122
   variable DEBUG in line 72
      protection public
   variable DEFAULT_CACHE_SIZE in line 115
   variable DEFAULT_CHECK_FOR_NULL_PARAM_DATABASE_FILENAME in line 78
      protection public
   variable DEFAULT_NONNULL_PARAM_DATABASE_FILENAME in line 75
      protection public
   variable DEFAULT_NULL_RETURN_VALUE_ANNOTATION_DATABASE in line 79
      protection public
   variable DEFAULT_NULL_RETURN_VALUE_DB_FILENAME in line 87
      protection public
   variable IGNORE_BUILTIN_MODELS in line 73
      protection public
   variable NONNULL_RETURN_DB_FILENAME in line 82
      protection public
   variable NONNULL_RETURN_DB_RESOURCE in line 85
      protection public
   variable originalRepository in line 108
   variable UNCONDITIONAL_DEREF_DB_FILENAME in line 81
      protection public
   variable UNCONDITIONAL_DEREF_DB_RESOURCE in line 84
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AnalysisException.java
module edu::umd::cs::findbugs::ba::AnalysisException
   inherits from java::lang::RuntimeException
   function AnalysisException(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AnalysisException(String,Throwable) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Throwable) in line 65
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,InstructionHandle) in line 76
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Instruction) in line 87
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,InstructionHandle,Throwable) in line 99
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function AnalysisException(String,MethodGen,Instruction,Throwable) in line 112
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AnalysisFeatures.java
module edu::umd::cs::findbugs::ba::AnalysisFeatures
   variable ACCURATE_EXCEPTIONS in line 35
      protection public
   variable CONSERVE_SPACE in line 41
      protection public
   variable INTERATIVE_OPCODE_STACK_ANALYSIS in line 56
      protection public
   variable MODEL_INSTANCEOF in line 46
      protection public
   variable NUM_BOOLEAN_ANALYSIS_PROPERTIES in line 77
      protection public
   variable SKIP_HUGE_METHODS in line 51
      protection public
   variable TRACK_GUARANTEED_VALUE_DEREFS_IN_NULL_POINTER_ANALYSIS in line 62
      protection public
   variable TRACK_VALUE_NUMBERS_IN_NULL_POINTER_ANALYSIS in line 71
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AnnotationDatabase.java
module edu::umd::cs::findbugs::ba::AnnotationDatabase
   function addDefaultAnnotation(String,String,AnnotationEnum) in line 101
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
   function addDefaultMethodAnnotation(String,AnnotationEnum) in line 309
      9 lines of code
      2 parameters
      1 conditional paths
   function addDirectAnnotation(Object,AnnotationEnum) in line 96
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addFieldAnnotation(String,String,String,boolean,AnnotationEnum) in line 319
      6 lines of code
      5 parameters
      1 conditional paths
   function addMethodAnnotation(String,String,String,boolean,AnnotationEnum) in line 326
      6 lines of code
      5 parameters
      1 conditional paths
   function addMethodParameterAnnotation(String,String,String,boolean,int,AnnotationEnum) in line 337
      18 lines of code
      6 parameters
      1 conditional paths
   function addSyntheticElement(Object) in line 90
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function annotationIsDirect(Object) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function anyAnnotations(AnnotationEnum) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function classDefinesMethod(JavaClass,XMethod) in line 266
      8 lines of code
      2 parameters
      1 conditional paths
   function getResolvedAnnotation(Object,boolean) in line 119
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
   function getUncachedResolvedAnnotation(final Object,boolean) in line 137
      protection public
      128 lines of code
      2 parameters
      1 conditional paths
   function loadAuxiliaryAnnotations() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookInOverriddenMethod(final Object,String,XMethod,boolean) in line 275
      27 lines of code
      4 parameters
      1 conditional paths
   function onlyAppliesToReferenceParameters(AnnotationEnum) in line 333
      4 lines of code
      1 parameters
      1 conditional paths
   function setAddClassOnly(boolean) in line 304
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function AnnotationDatabase() in line 73
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   variable ANY in line 62
      protection public
   variable DEFAULT_ANNOTATION_ANNOTATION_CLASS in line 64
   variable defaultAnnotation in line 70
   variable directAnnotations in line 66
   variable FIELD in line 47
      protection public
   variable IGNORE_BUILTIN_ANNOTATIONS in line 42
      protection public
   variable METHOD in line 52
      protection public
   variable PARAMETER in line 57
      protection public
   variable seen in line 89
   variable subtypes in line 72
   variable syntheticElements in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AnnotationEnumeration.java
module edu::umd::cs::findbugs::ba::AnnotationEnumeration
   inherits from Comparable
   function compareTo(E) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 35
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getIndex() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AnnotationEnumeration(String,int) in line 30
      4 lines of code
      2 parameters
      1 conditional paths
   variable index in line 26
   variable name in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AnnotationRetentionDatabase.java
module edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function hasClassfileRetention(String) in line 27
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function lacksClassfileRetention(String) in line 34
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   function setClassfileRetention(String,boolean) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable annotationRetention defined in edu::umd::cs::findbugs::ba::AnnotationRetentionDatabase
   variable annotationRetention in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AssertionMethods.java
module edu::umd::cs::findbugs::ba::AssertionMethods
   inherits from org::apache::bcel::Constants
   function init(JavaClass) in line 104
      54 lines of code
      1 parameters
      8 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses function isUserAssertionMethod(String,String) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable assertionMethodRefSet defined in edu::umd::cs::findbugs::ba::AssertionMethods
   function isAssertionCall(InvokeInstruction) in line 194
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable assertionMethodRefSet defined in edu::umd::cs::findbugs::ba::AssertionMethods
   function isAssertionInstruction(Instruction,ConstantPoolGen) in line 174
      protection public
      18 lines of code
      2 parameters
      5 conditional paths
      uses function isAssertionCall(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function isUserAssertionMethod(String,String) in line 159
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable userAssertionMethodList defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function AssertionMethods(JavaClass) in line 99
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function init(JavaClass) defined in edu::umd::cs::findbugs::ba::AssertionMethods
   variable assertionMethodRefSet in line 56
   variable DEBUG in line 51
   variable userAssertionMethodList in line 76
module edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function getClassName() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function getMethodName() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   function UserAssertionMethod(String,String) in line 62
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
      uses variable methodName defined in edu::umd::cs::findbugs::ba::AssertionMethods::UserAssertionMethod
   variable className in line 59
   variable methodName in line 60
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/AssignedFieldMap.java
module edu::umd::cs::findbugs::ba::AssignedFieldMap
   inherits from org::apache::bcel::Constants
   function build() in line 47
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::AssignedFieldMap
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function scanFields(JavaClass,Set< XField >) defined in edu::umd::cs::findbugs::ba::AssignedFieldMap
      uses function scanMethod(Method,Set< XField >) defined in edu::umd::cs::findbugs::ba::AssignedFieldMap
   function getAssignedFieldSetForMethod(Method) in line 68
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable assignedFieldSetForMethodMap defined in edu::umd::cs::findbugs::ba::AssignedFieldMap
   function scanFields(JavaClass,Set< XField >) in line 77
      26 lines of code
      2 parameters
      6 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::AssignedFieldMap
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function scanMethod(Method,Set< XField >) in line 104
      24 lines of code
      2 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::AssignedFieldMap
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAssignedFieldSetForMethod(Method) defined in edu::umd::cs::findbugs::ba::AssignedFieldMap
   function AssignedFieldMap(ClassContext) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::AssignedFieldMap
   variable assignedFieldSetForMethodMap in line 40
   variable classContext in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/BackwardDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   abstract class
   function getBlockOrder(CFG) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getReverseDepthFirstSearch() in line 41
      3 lines of code
      0 parameters
      1 conditional paths
   function isForwards() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BackwardDataflowAnalysis(ReverseDepthFirstSearch,DepthFirstSearch) in line 35
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable dfs in line 33
   variable rdfs in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/BasicAbstractDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysis
   abstract class
   function edgeTransfer(Edge,Fact) in line 163
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function factToString(Fact) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function finishIteration() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFactAfterLocation(Location) in line 108
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function getFactAtLocation(Location) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFactOnEdge(Edge) in line 131
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function getLastUpdateTimestamp(Fact) in line 177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lookupOrCreateFact(Map< BasicBlock, Fact >,BasicBlock) in line 168
      8 lines of code
      2 parameters
      1 conditional paths
   function resultFactIterator() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLastUpdateTimestamp(Fact,int) in line 180
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BasicAbstractDataflowAnalysis() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable resultFactMap in line 42
   variable startFactMap in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/BasicBlock.java
module edu::umd::cs::findbugs::ba::BasicBlock
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   inherits from edu::umd::cs::findbugs::ba::Debug
   function addInstruction(InstructionHandle) in line 209
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
   function containsInstruction(InstructionHandle) in line 368
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function containsInstructionWithOffset(int) in line 385
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getExceptionGen() in line 348
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getExceptionThrower() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getFirstInstruction() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getId() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function getLastInstruction() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getPredecessorOf(InstructionHandle) in line 194
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getSuccessorOf(InstructionHandle) in line 178
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function instructionIterator() in line 288
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function instructionReverseIterator() in line 324
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isEmpty() in line 331
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstInstruction defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isExceptionHandler() in line 338
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isExceptionThrower() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isInJSRSubroutine() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable inJSRSubroutine defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isNullCheck() in line 148
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable nullCheckInstructionSet defined in edu::umd::cs::findbugs::ba::BasicBlock
   function setExceptionGen(CodeExceptionGen) in line 358
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionGen defined in edu::umd::cs::findbugs::ba::BasicBlock
   function setExceptionThrower(InstructionHandle) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionThrower defined in edu::umd::cs::findbugs::ba::BasicBlock
   function toString() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractVertex
   function BasicBlock() in line 95
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   variable exceptionGen in line 85
   variable exceptionThrower in line 84
   variable firstInstruction in line 82
   variable inJSRSubroutine in line 86
   variable lastInstruction in line 83
   variable nullCheckInstructionSet in line 47
module edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   inherits from java::util::Iterator
   function duplicate() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function equals(Object) in line 254
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function InstructionIterator(InstructionHandle,InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function getBasicBlock() in line 269
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 262
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function hashCode() defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function hasNext() in line 233
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function next() in line 237
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function remove() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 274
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function InstructionIterator(InstructionHandle,InstructionHandle) in line 228
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable next in line 226
module edu::umd::cs::findbugs::ba::BasicBlock::InstructionReverseIterator
   inherits from java::util::Iterator
   function hasNext() in line 303
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function next() in line 307
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function remove() in line 315
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InstructionReverseIterator(InstructionHandle,InstructionHandle) in line 298
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable next in line 296
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/Binding.java
module edu::umd::cs::findbugs::ba::bcp::Binding
   function getVariable() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function getVarName() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function toString() in line 59
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
   function Binding(String,Variable) in line 38
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable variable defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::Binding
   variable variable in line 30
   variable varName in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/BindingSet.java
module edu::umd::cs::findbugs::ba::bcp::BindingSet
   function lookup(String) in line 51
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVarName() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   function toString() in line 58
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   function BindingSet(Binding,BindingSet) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable binding defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses variable parent defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
   variable binding in line 31
   variable parent in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/ByteCodePattern.java
module edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function add(PatternElement) in line 43
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addInterElementWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function addElement(PatternElement) in line 108
      9 lines of code
      1 parameters
      2 conditional paths
      uses function setIndex(int) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable numElements defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function setNext(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function addInterElementWild() in line 103
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable interElementWild defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function isLastWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function addWild(int) in line 58
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function isLastWild() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
      uses function setMinAndMax(int,int) defined in edu::umd::cs::findbugs::ba::bcp::Wild
      uses function addElement(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function dummyVariable() in line 96
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable dummyVariableCount defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function getFirst() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable first defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function isLastWild() in line 118
      6 lines of code
      0 parameters
      2 conditional paths
   function setInterElementWild(int) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable dummyVariableCount in line 35
   variable first in line 32
   variable interElementWild in line 33
   variable numElements in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/ByteCodePatternMatch.java
module edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function getBindingSet() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function getFirstLabeledMatch(String) in line 59
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLabeledInstruction(String) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getLabeledInstruction(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLastLabeledMatch(String) in line 65
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getLastLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function patternElementMatchIterator() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElementMatchList defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
   function ByteCodePatternMatch(BindingSet,PatternElementMatch) in line 32
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses variable lastElementMatch defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses variable patternElementMatchList defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function getPrev() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   variable bindingSet in line 28
   variable lastElementMatch in line 29
   variable patternElementMatchList in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/FieldAccess.java
module edu::umd::cs::findbugs::ba::bcp::FieldAccess
   inherits from edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   inherits from org::apache::bcel::Constants
   abstract class
   function checkConsistent(Variable,Variable,BindingSet) in line 64
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function isLongOrDouble(FieldInstruction,ConstantPoolGen) in line 82
      5 lines of code
      2 parameters
      1 conditional paths
   function snarfFieldValue(FieldInstruction,ConstantPoolGen,ValueNumberFrame) in line 97
      13 lines of code
      3 parameters
      2 conditional paths
      uses function isLongOrDouble(FieldInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function FieldAccess(String,String) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   variable fieldVarName in line 40
   variable valueVarName in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/FieldVariable.java
module edu::umd::cs::findbugs::ba::bcp::FieldVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function getClassName() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function getFieldName() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function getFieldSig() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function isStatic() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function sameAs(Variable) in line 85
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function FieldVariable(String,String,String) defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function toString() in line 98
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function FieldVariable(String,String,String) in line 38
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function FieldVariable(@Nullable ValueNumber,String,String,String) in line 50
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable ref defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable className defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldName defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses variable fieldSig defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   variable className in line 27
   variable fieldName in line 28
   variable fieldSig in line 29
   variable ref in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/IfNull.java
module edu::umd::cs::findbugs::ba::bcp::IfNull
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function acceptBranch(Edge,InstructionHandle) in line 55
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 40
      protection public
      13 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function IfNull(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/Invoke.java
module edu::umd::cs::findbugs::ba::bcp::Invoke
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 216
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function createClassMatcher(String) in line 168
      5 lines of code
      1 parameters
      1 conditional paths
      uses function createMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   function createMatcher(String) in line 174
      5 lines of code
      1 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 181
      protection public
      33 lines of code
      5 parameters
      7 conditional paths
      uses variable STATIC defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable INSTANCE defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable mode defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable methodNameMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses function match(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
      uses variable methodSigMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable classNameMatcher defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   function maxOccur() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Invoke(String,String,String,int,@Nullable RepositoryLookupFailureCallback) in line 160
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses function createClassMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses function createMatcher(String) defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable mode defined in edu::umd::cs::findbugs::ba::bcp::Invoke
   variable ANY in line 99
      protection public
   variable classNameMatcher in line 146
   variable CONSTRUCTOR in line 89
      protection public
   variable INSTANCE in line 79
      protection public
   variable methodNameMatcher in line 147
   variable methodSigMatcher in line 148
   variable mode in line 149
   variable ORDINARY_METHOD in line 94
      protection public
   variable STATIC in line 84
      protection public
module edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 102
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::bcp::Invoke::ExactStringMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ExactStringMatcher(String) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable value in line 106
module edu::umd::cs::findbugs::ba::bcp::Invoke::RegexpStringMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function RegexpStringMatcher(String) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable pattern in line 118
module edu::umd::cs::findbugs::ba::bcp::Invoke::SubclassMatcher
   inherits from edu::umd::cs::findbugs::ba::bcp::Invoke::StringMatcher
   function match(String) in line 136
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function SubclassMatcher(String) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable className in line 130
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/Load.java
module edu::umd::cs::findbugs::ba::bcp::Load
   inherits from edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 53
      protection public
      22 lines of code
      5 parameters
      3 conditional paths
      uses function checkConsistent(Variable,Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function Load(String,String) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/LocalVariable.java
module edu::umd::cs::findbugs::ba::bcp::LocalVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 31
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function LocalVariable(ValueNumber) defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LocalVariable(ValueNumber) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::bcp::LocalVariable
   variable valueNumber in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/LongOrDoubleLocalVariable.java
module edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
   inherits from edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 32
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function LongOrDoubleLocalVariable(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
      uses variable topValue defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LongOrDoubleLocalVariable(ValueNumber,ValueNumber) in line 27
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable topValue defined in edu::umd::cs::findbugs::ba::bcp::LongOrDoubleLocalVariable
   variable topValue in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/MatchAny.java
module edu::umd::cs::findbugs::ba::bcp::MatchAny
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 89
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function label(String) in line 56
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 75
      protection public
      12 lines of code
      5 parameters
      3 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
   function maxOccur() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setAllowTrailingEdges(boolean) in line 64
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
      uses function setAllowTrailingEdges(boolean) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function MatchAny(PatternElement[]) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable childList defined in edu::umd::cs::findbugs::ba::bcp::MatchAny
   variable childList in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/MatchResult.java
module edu::umd::cs::findbugs::ba::bcp::MatchResult
   function getBindingSet() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function getPatternElement() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function MatchResult(PatternElement,BindingSet) in line 43
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   variable bindingSet in line 35
   variable patternElement in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/Monitorenter.java
module edu::umd::cs::findbugs::ba::bcp::Monitorenter
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 47
      protection public
      13 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function Monitorenter(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/New.java
module edu::umd::cs::findbugs::ba::bcp::New
   inherits from edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 48
      protection public
      10 lines of code
      5 parameters
      2 conditional paths
      uses function addOrCheckDefinition(Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function New(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/OneVariableInstruction.java
module edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   inherits from edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   abstract class
   function addOrCheckDefinition(Variable,BindingSet) in line 51
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   function OneVariableInstruction(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable varName defined in edu::umd::cs::findbugs::ba::bcp::OneVariableInstruction
   variable varName in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/Opcode.java
module edu::umd::cs::findbugs::ba::bcp::Opcode
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 59
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 48
      protection public
      9 lines of code
      5 parameters
      2 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::ba::bcp::Opcode
   function maxOccur() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Opcode(int) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::ba::bcp::Opcode
   variable opcode in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ca/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ch/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/constant/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/heap/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/interproc/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/rta/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/package-info.java
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/PatternElement.java
module edu::umd::cs::findbugs::ba::bcp::PatternElement
   abstract class
   function acceptBranch(Edge,InstructionHandle) in line 162
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function addOrCheckDefinition(String,Variable,BindingSet) in line 188
      13 lines of code
      3 parameters
      4 conditional paths
      uses function lookup(String,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function sameAs(Variable) defined in edu::umd::cs::findbugs::ba::bcp::Variable
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function allowTrailingEdges() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function dominatedBy(String) in line 82
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable dominatedBy defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getDominatedBy() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dominatedBy defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getLabel() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function getNext() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function label(String) in line 63
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable label defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function lookup(String,BindingSet) in line 131
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function acceptBranch(Edge,InstructionHandle) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function minOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function maxOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 152
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function maxOccur() in line 174
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAllowTrailingEdges(boolean) in line 112
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function setIndex(int) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function setNext(PatternElement) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 203
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   variable allowTrailingEdges in line 41
   variable DEBUG in line 35
   variable dominatedBy in line 39
   variable index in line 40
   variable label in line 38
   variable next in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/PatternElementMatch.java
module edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function allowTrailingEdges() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable allowTrailingEdges defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function equals(Object) in line 163
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function PatternElementMatch(PatternElement,InstructionHandle,BasicBlock,int,PatternElementMatch) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getBasicBlock() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getFirstLabeledMatch(String) in line 110
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getLabel() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLabeledInstruction(String) in line 101
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getLastLabeledMatch(String) in line 125
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getLabel() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getMatchCount() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getMatchedInstructionInstructionHandle() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPatternElement() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPrev() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function hashCode() in line 157
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 145
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function PatternElementMatch(PatternElement,InstructionHandle,BasicBlock,int,PatternElementMatch) in line 51
      protection public
      9 lines of code
      5 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchedInstruction defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable prev defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   variable basicBlock in line 36
   variable matchCount in line 37
   variable matchedInstruction in line 35
   variable patternElement in line 34
   variable prev in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/PatternMatcher.java
module edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function attemptMatch(BasicBlock,BasicBlock.InstructionIterator) in line 138
      4 lines of code
      2 parameters
      1 conditional paths
      uses function work(State) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable pattern defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function byteCodePatternMatchIterator() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resultList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   function execute() in line 97
      protection public
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable workList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable visitedBlockMap defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function attemptMatch(BasicBlock,BasicBlock.InstructionIterator) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function successorIterator(final VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function work(State) in line 405
      74 lines of code
      1 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable resultList defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function advanceToNextElement() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable dfs defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function advanceToSuccessor(Edge,MatchResult) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function PatternMatcher(ByteCodePattern,ClassContext,Method) in line 77
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
   variable cfg in line 61
   variable cpg in line 62
   variable DEBUG in line 57
   variable dfs in line 63
   variable domAnalysis in line 65
   variable pattern in line 60
   variable resultList in line 68
   variable SHOW_WILD in line 58
   variable visitedBlockMap in line 67
   variable vnaDataflow in line 64
   variable workList in line 66
module edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function advanceToNextElement() in line 236
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function minOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getNext() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function advanceToSuccessor(Edge,MatchResult) in line 306
      protection public
      13 lines of code
      2 parameters
      2 conditional paths
      uses function getPatternElement() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses function acceptBranch(Edge,InstructionHandle) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function getLastMatchedInstruction() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function canAdvanceToNextBasicBlock() in line 286
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function allowTrailingEdges() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function currentElementCanContinue() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function maxOccur() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
   function dominatedInstructionStateIterator() in line 332
      protection public
      35 lines of code
      0 parameters
      8 conditional paths
      uses function lookForDominatedInstruction() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getDominatedBy() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses variable cfg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable domAnalysis defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::BasicAbstractDataflowAnalysis
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
   function duplicate() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getBasicBlock() in line 196
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getCurrentMatch() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getLastMatchedInstruction() in line 293
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getMatchedInstructionInstructionHandle() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
   function getPatternElement() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function getResult() in line 226
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function isComplete() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function isComplete() in line 217
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function lookForDominatedInstruction() in line 324
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getDominatedBy() defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function matchLocation(Location) in line 368
      27 lines of code
      1 parameters
      4 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable SHOW_WILD defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::PatternElement
      uses variable cpg defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function getPatternElement() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
      uses function getBindingSet() defined in edu::umd::cs::findbugs::ba::bcp::MatchResult
   function matchNextInBasicBlock() in line 274
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function moreInstructionsInBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses function matchLocation(Location) defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function moreInstructionsInBasicBlock() in line 265
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement) in line 166
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   function State(BasicBlock,BasicBlock.InstructionIterator,PatternElement,int,@Nullable PatternElementMatch,@Nullable BindingSet,boolean) in line 174
      protection public
      11 lines of code
      7 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable instructionIterator defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable patternElement defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable matchCount defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable currentMatch defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable bindingSet defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
      uses variable canFork defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher::State
   variable basicBlock in line 149
   variable bindingSet in line 154
   variable canFork in line 155
   variable currentMatch in line 153
   variable instructionIterator in line 150
   variable matchCount in line 152
   variable patternElement in line 151
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/SingleInstruction.java
module edu::umd::cs::findbugs::ba::bcp::SingleInstruction
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   abstract class
   function acceptBranch(Edge,InstructionHandle) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function maxOccur() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/Store.java
module edu::umd::cs::findbugs::ba::bcp::Store
   inherits from edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 52
      protection public
      25 lines of code
      5 parameters
      3 conditional paths
      uses function checkConsistent(Variable,Variable,BindingSet) defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
   function Store(String,String) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
      uses variable valueVarName defined in edu::umd::cs::findbugs::ba::bcp::FieldAccess
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/Variable.java
module edu::umd::cs::findbugs::ba::bcp::Variable
   function sameAs(Variable) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/bcp/Wild.java
module edu::umd::cs::findbugs::ba::bcp::Wild
   inherits from edu::umd::cs::findbugs::ba::bcp::PatternElement
   function acceptBranch(Edge,InstructionHandle) in line 91
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function match(InstructionHandle,ConstantPoolGen,ValueNumberFrame,ValueNumberFrame,BindingSet) in line 96
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
   function maxOccur() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function minOccur() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   function setMinAndMax(int,int) in line 75
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   function Wild() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function Wild(int) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function Wild(int,int) in line 64
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable min defined in edu::umd::cs::findbugs::ba::bcp::Wild
   variable min in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/BetterCFGBuilder2.java
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   inherits from edu::umd::cs::findbugs::ba::CFGBuilder
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::Debug
   function build() in line 539
      protection public
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable topLevelSubroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable subroutineWorkList defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getStartInstruction() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function inlineAll() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkIntegrity() defined in edu::umd::cs::findbugs::ba::CFG
   function build(Subroutine) in line 581
      103 lines of code
      1 parameters
      19 conditional paths
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getStartInstruction() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses function isPEI(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function handleExceptions(Subroutine,InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable jsrSubroutineMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable subroutineWorkList defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable cpg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function isEndOfBasicBlock() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsThrow() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsExit() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function instructionIsReturn() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function targetIterator() defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses function getTargetInstruction() defined in edu::umd::cs::findbugs::ba::Target
      uses function getEdgeType() defined in edu::umd::cs::findbugs::ba::Target
      uses function isMerge(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function getCFG() in line 564
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function handleExceptions(Subroutine,InstructionHandle,BasicBlock) in line 692
      27 lines of code
      3 parameters
      6 conditional paths
      uses function setExceptionThrower(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable exceptionHandlerMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getHandlerList(InstructionHandle) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function addEdgeAndExplore(BasicBlock,InstructionHandle,int) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function setUnhandledExceptionBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
   function inline(Context) in line 790
      protection public
      152 lines of code
      1 parameters
      14 conditional paths
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function addInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setExceptionThrower(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setExceptionGen(CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable jsrSubroutineMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getStartBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function createEdge(BasicBlock,BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getBlock(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function mapBlock(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getExit() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function escapeTargetIterator(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getTarget() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
      uses function getCaller() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getSubroutine() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function containsInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getEdgeType() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
      uses function isReturnBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isExitBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isUnhandledExceptionBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function inlineAll() in line 770
      14 lines of code
      0 parameters
      1 conditional paths
      uses variable topLevelSubroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function mapBlock(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getExit() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getBlock(BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses function getStartBlock() defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
      uses function createEdge(BasicBlock,BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isMerge(InstructionHandle) in line 750
      12 lines of code
      1 parameters
      4 conditional paths
   function isPEI(InstructionHandle) in line 726
      18 lines of code
      1 parameters
      9 conditional paths
   function main(String[]) in line 946
      protection public
      33 lines of code
      1 parameters
      5 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function BetterCFGBuilder2(@NonNull MethodGen) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function BetterCFGBuilder2(@NonNull MethodGen) in line 530
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   variable cfg in line 519
   variable cpg in line 513
   variable DEBUG in line 66
   variable emptyEscapeTargetList in line 143
   variable exceptionHandlerMap in line 514
   variable jsrSubroutineMap in line 517
   variable methodGen in line 512
   variable subroutineWorkList in line 516
   variable topLevelSubroutine in line 518
   variable usedInstructionSet in line 515
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getBasicBlock() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getStartInstruction() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function WorkListItem(InstructionHandle,BasicBlock) in line 87
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   variable basicBlock in line 79
   variable start in line 78
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::EscapeTarget
   function getEdgeType() in line 138
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function EscapeTarget(InstructionHandle,int) in line 123
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable edgeType in line 114
   variable target in line 113
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Subroutine
   function addEdge(BasicBlock,BasicBlock,int) in line 372
      protection public
      9 lines of code
      3 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function createEdge(BasicBlock,BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
   function addEdgeAndExplore(BasicBlock,InstructionHandle,int) in line 349
      protection public
      15 lines of code
      3 parameters
      3 conditional paths
      uses variable usedInstructionSet defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function addInstruction(InstructionHandle) in line 250
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable usedInstructionSet defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function addItem(WorkListItem) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function allocateBasicBlock() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function containsInstruction(InstructionHandle) in line 261
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function escapeTargetIterator(BasicBlock) in line 388
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable emptyEscapeTargetList defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function getBlock(InstructionHandle) in line 274
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
      uses variable exceptionHandlerMap defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getHandlerForStartInstruction(InstructionHandle) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function setExceptionGen(CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function WorkListItem(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getCFG() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
   function getEntry() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
   function getExit() in line 224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   function getStartBlock() in line 232
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function getStartInstruction() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   function hasMoreWork() in line 203
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExitBlock(BasicBlock) in line 318
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isReturnBlock(BasicBlock) in line 302
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isUnhandledExceptionBlock(BasicBlock) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function nextItem() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExitBlock(BasicBlock) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function setReturnBlock(BasicBlock) in line 295
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function setUnhandledExceptionBlock(BasicBlock) in line 328
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function Subroutine(InstructionHandle) in line 167
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable start defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::WorkListItem
   variable blockMap in line 155
   variable cfg in line 154
   variable escapeTargetListMap in line 156
   variable exitBlockSet in line 158
   variable instructionSet in line 153
   variable returnBlockSet in line 157
   variable start in line 152
   variable unhandledExceptionBlockSet in line 159
   variable workList in line 160
module edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
   function addItem(BasicBlock) in line 448
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function checkForRecursion() in line 497
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable subroutine defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
      uses variable caller defined in edu::umd::cs::findbugs::ba::BetterCFGBuilder2::Context
   function getBlock(BasicBlock) in line 484
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getCaller() in line 427
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResult() in line 441
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSubroutine() in line 434
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasMoreWork() in line 455
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function mapBlock(BasicBlock,BasicBlock) in line 473
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function nextItem() in line 462
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Context(@Nullable Context,Subroutine,CFG) in line 416
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
   variable blockMap in line 406
   variable caller in line 403
   variable result in line 405
   variable subroutine in line 404
   variable workList in line 407
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/BlockOrder.java
module edu::umd::cs::findbugs::ba::BlockOrder
   function blockIterator() in line 31
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/BlockType.java
module edu::umd::cs::findbugs::ba::BlockType
   inherits from java::util::BitSet
   function copyFrom(BlockType) in line 148
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable isValid defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function getDepth() in line 83
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function getTopValue() in line 91
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function isBottom() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
   function isNormal() in line 100
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::BlockType
   function isTop() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
   function isValid() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function mergeWith(BlockType) in line 193
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function copyFrom(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isValid() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function push(boolean) in line 238
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function pushCatch() in line 211
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function push(boolean) defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable CATCH defined in edu::umd::cs::findbugs::ba::BlockType
   function pushFinally() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function push(boolean) defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable FINALLY defined in edu::umd::cs::findbugs::ba::BlockType
   function sameAs(BlockType) in line 165
      protection public
      22 lines of code
      1 parameters
      6 conditional paths
      uses variable isValid defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
   function setBottom() in line 138
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setNormal() in line 108
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setTop() in line 123
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 223
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::BlockType
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable depth defined in edu::umd::cs::findbugs::ba::BlockType
      uses variable CATCH defined in edu::umd::cs::findbugs::ba::BlockType
   variable CATCH in line 56
      protection public
   variable depth in line 61
   variable FINALLY in line 57
      protection public
   variable isTop in line 60
   variable isValid in line 59
   variable serialVersionUID in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/BlockTypeAnalysis.java
module edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   inherits from BasicAbstractDataflowAnalysis< BlockType >
   function copy(BlockType,BlockType) in line 58
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
   function createFact() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   function initEntryFact(BlockType) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(BlockType) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeFactTop(BlockType) defined in edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   function isForwards() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(BlockType) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::BlockType
   function main(String[]) in line 113
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses function getBlockTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(BlockType) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::BlockType
   function meetInto(BlockType,Edge,BlockType) in line 109
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(BlockType,BlockType) in line 84
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(BlockType) defined in edu::umd::cs::findbugs::ba::BlockType
   function transfer(BasicBlock,@CheckForNull InstructionHandle,BlockType,BlockType) in line 88
      protection public
      20 lines of code
      4 parameters
      4 conditional paths
   function BlockTypeAnalysis(DepthFirstSearch) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BlockTypeAnalysis
   variable dfs in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/BytecodeScanner.java
module edu::umd::cs::findbugs::ba::BytecodeScanner
   inherits from org::apache::bcel::Constants
   function extractInt(byte[],int) in line 70
      6 lines of code
      2 parameters
      1 conditional paths
   function scan(byte[],Callback) in line 85
      protection public
      307 lines of code
      2 parameters
      209 conditional paths
      uses function unsignedValueOf(byte) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function handleInstruction(int,int) defined in edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses variable PAD defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function extractInt(byte[],int) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
   function unsignedValueOf(byte) in line 53
      10 lines of code
      1 parameters
      2 conditional paths
   variable DEBUG in line 32
   variable PAD in line 77
module edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function handleInstruction(int,int) in line 44
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ca/Call.java
module edu::umd::cs::findbugs::ba::ca::Call
   function equals(Object) in line 46
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function Call(String,String,String) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function getClassName() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
   function getMethodName() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
   function getMethodSig() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   function Call(String,String,String) in line 26
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodName defined in edu::umd::cs::findbugs::ba::ca::Call
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::ca::Call
   variable className in line 22
   variable methodName in line 23
   variable methodSig in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ca/CallList.java
module edu::umd::cs::findbugs::ba::ca::CallList
   function add(Call) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function callIterator() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function clear() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function copyFrom(CallList) in line 77
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function equals(Object) in line 107
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function CallList() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function get(int) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function hashCode() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isBottom() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function merge(CallList,CallList) in line 84
      protection public
      20 lines of code
      2 parameters
      6 conditional paths
      uses function CallList() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function size() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function get(int) defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::Call
      uses function add(Call) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function setBottom() in line 54
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setTop() in line 48
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function size() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function toString() in line 121
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable callList defined in edu::umd::cs::findbugs::ba::ca::CallList
   function CallList() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable callList in line 26
   variable isTop in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ca/CallListAnalysis.java
module edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   function buildCallMap(CFG,ConstantPoolGen) in line 58
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable callMap defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
   function copy(CallList,CallList) in line 113
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function createFact() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   function initEntryFact(CallList) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function initResultFact(CallList) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isFactValid(CallList) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function isForwards() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(CallList) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::ca::CallList
   function main(String[]) in line 131
      protection public
      27 lines of code
      1 parameters
      2 conditional paths
      uses function CallListAnalysis(CFG,DepthFirstSearch,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable cfg defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(CallList) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::ca::CallList
   function meetInto(CallList,Edge,CallList) in line 107
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function copyFrom(CallList) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function same(CallList,CallList) in line 103
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::ca::CallList
   function transferInstruction(InstructionHandle,BasicBlock,CallList) in line 118
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable callMap defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   function CallListAnalysis(CFG,DepthFirstSearch,ConstantPoolGen) in line 51
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
      uses function buildCallMap(CFG,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::ca::CallListAnalysis
   variable callMap in line 49
   variable cfg in line 46
   variable dfs in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ca/CallListDataflow.java
module edu::umd::cs::findbugs::ba::ca::CallListDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function getFactAfterLocation(Location) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function getFactAtLocation(Location) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function CallListDataflow(CFG,CallListAnalysis) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CFG.java
module edu::umd::cs::findbugs::ba::CFG
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   inherits from edu::umd::cs::findbugs::ba::Debug
   function allocate() in line 357
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function allocateEdge(BasicBlock,BasicBlock) in line 397
      3 lines of code
      2 parameters
      1 conditional paths
   function blockIterator() in line 207
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function vertexIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function checkIntegrity() in line 381
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function createEdge(BasicBlock,BasicBlock,int) in line 182
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function setType(int) defined in edu::umd::cs::findbugs::ba::Edge
   function getBlocks(BitSet) in line 225
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getBlocksContainingInstructionWithOffset(int) in line 243
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function containsInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getEdgeWithType(Iterator< Edge >,int) in line 344
      8 lines of code
      2 parameters
      3 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
   function getEntry() in line 153
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable entry defined in edu::umd::cs::findbugs::ba::CFG
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getExceptionThrowerLocation(Edge) in line 304
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSuccessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function getExit() in line 163
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function allocate() defined in edu::umd::cs::findbugs::ba::CFG
   function getIncomingEdgeWithType(BasicBlock,int) in line 329
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEdgeWithType(Iterator< Edge >,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getLocationsContainingInstructionWithOffset(int) in line 260
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getMaxEdgeId() in line 377
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumEdgeLabels() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getMethodGen() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::CFG
   function getMethodName() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::CFG
      uses variable flags defined in edu::umd::cs::findbugs::ba::CFG
   function getNumBasicBlocks() in line 368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getOutgoingEdgeWithType(BasicBlock,int) in line 340
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEdgeWithType(Iterator< Edge >,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getPredecessorWithEdgeType(BasicBlock,int) in line 279
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getIncomingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getSuccessorWithEdgeType(BasicBlock,int) in line 292
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getOutgoingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function locationIterator() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function LocationIterator() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function lookupEdgeById(int) in line 194
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getId() defined in edu::umd::cs::findbugs::ba::Edge
   function setMethodGen(MethodGen) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::CFG
   function setMethodName(String) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::CFG
   function CFG() in line 115
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable entry in line 103
   variable flags in line 104
   variable methodGen in line 106
   variable methodName in line 105
module edu::umd::cs::findbugs::ba::CFG::LocationIterator
   inherits from java::util::Iterator
   function findNext() in line 81
      16 lines of code
      0 parameters
      5 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable instructionIter defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable blockIter defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses variable curBlock defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function hasNext() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function next() in line 69
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   function remove() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function LocationIterator() in line 59
      4 lines of code
      0 parameters
      1 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function findNext() defined in edu::umd::cs::findbugs::ba::CFG::LocationIterator
   variable blockIter in line 54
   variable curBlock in line 55
   variable instructionIter in line 56
   variable next in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CFGBuilder.java
module edu::umd::cs::findbugs::ba::CFGBuilder
   function build() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCFG() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CFGBuilderException.java
module edu::umd::cs::findbugs::ba::CFGBuilderException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function CFGBuilderException(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CFGBuilderFactory.java
module edu::umd::cs::findbugs::ba::CFGBuilderFactory
   function create(@NonNull MethodGen) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CFGPrinter.java
module edu::umd::cs::findbugs::ba::CFGPrinter
   function blockAnnotate(BasicBlock) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function blockStartAnnotate(BasicBlock) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function edgeAnnotate(Edge) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function instructionAnnotate(InstructionHandle,BasicBlock) in line 104
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function instructionIterator(BasicBlock) in line 108
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function instructionReverseIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isForwards() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 115
      protection public
      41 lines of code
      1 parameters
      7 conditional paths
      uses function getClassContext(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function CFGPrinter(CFG) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function print(PrintStream) in line 62
      protection public
      29 lines of code
      1 parameters
      6 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function blockStartAnnotate(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function instructionIterator(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function instructionAnnotate(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function blockAnnotate(BasicBlock) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function incomingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
      uses function edgeAnnotate(Edge) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function setIsForwards(boolean) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function CFGPrinter(CFG) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
   variable cfg in line 43
   variable isForwards in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ch/Subtypes.java
module edu::umd::cs::findbugs::ba::ch::Subtypes
   function addApplicationClass(JavaClass) in line 224
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG_HIERARCHY defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable applicationClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function learnFieldsAndMethods(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable computed defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function addClass(JavaClass) in line 238
      protection public
      17 lines of code
      1 parameters
      7 conditional paths
      uses variable allClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable DEBUG_HIERARCHY defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable immediateSubtypes defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable computed defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function addNamedClass(String) in line 201
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable referenced defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function learnFieldsAndMethods(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function addParent(JavaClass,JavaClass) in line 268
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable DEBUG_HIERARCHY defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addParents(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable immediateSubtypes defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function addParents(JavaClass) in line 256
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable parentsAdded defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addParent(JavaClass,JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function addReferencedClasses(JavaClass) in line 152
      42 lines of code
      1 parameters
      11 conditional paths
      uses variable DEBUG_HIERARCHY defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function extractClassName(String) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addNamedClass(String) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function compute() in line 280
      21 lines of code
      0 parameters
      7 conditional paths
      uses variable computed defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable DEBUG_HIERARCHY defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable transitiveSubtypes defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable applicationClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addReferencedClasses(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable allClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addParents(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable parentsAdded defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function compute(JavaClass) in line 302
      42 lines of code
      1 parameters
      8 conditional paths
      uses variable DEBUG_HIERARCHY defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable immediateSubtypes defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable transitiveSubtypes defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function compute() defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function extractClassName(String) in line 345
      protection public
      11 lines of code
      1 parameters
      5 conditional paths
   function getAllClasses() in line 101
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function compute() defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable allClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function getImmediateSubtypes(JavaClass) in line 76
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable allClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function compute() defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable immediateSubtypes defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function getTransitiveCommonSubtypes(JavaClass,JavaClass) in line 131
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
      uses function getTransitiveSubtypes(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function getTransitiveSubtypes(JavaClass) in line 113
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable allClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function compute() defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable transitiveSubtypes defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function hasSubtypes(JavaClass) in line 89
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable allClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function addClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function compute() defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable immediateSubtypes defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function isApplicationClass(JavaClass) in line 363
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable applicationClasses defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable DEBUG_HIERARCHY defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function learnFieldsAndMethods(JavaClass) in line 195
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
   function Subtypes() in line 67
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable allClasses in line 57
   variable applicationClasses in line 59
   variable computed in line 53
   variable DEBUG_HIERARCHY in line 51
   variable immediateSubtypes in line 63
   variable parentsAdded in line 61
   variable referenced in line 55
   variable transitiveSubtypes in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CheckReturnAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   inherits from AnnotationDatabase< CheckReturnValueAnnotation >
   function getResolvedAnnotation(Object,boolean) in line 100
      protection public
      30 lines of code
      2 parameters
      9 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable throwableClass defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable CHECK_RETURN_VALUE_VERY_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function loadAuxiliaryAnnotations() in line 38
      protection public
      60 lines of code
      0 parameters
      4 conditional paths
      uses variable IGNORE_BUILTIN_ANNOTATIONS defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addMethodAnnotation(String,String,String,boolean,AnnotationEnum) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function addDefaultMethodAnnotation(String,AnnotationEnum) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses variable throwableClass defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   function CheckReturnAnnotationDatabase() in line 31
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setAddClassOnly(boolean) defined in AnnotationDatabase< CheckReturnValueAnnotation >
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
   variable throwableClass in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CheckReturnValueAnnotation.java
module edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   inherits from AnnotationEnumeration< CheckReturnValueAnnotation >
   function getPriority() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parse(String,String) in line 52
      protection public
      12 lines of code
      2 parameters
      6 conditional paths
      uses variable CHECK_RETURN_VALUE_MEDIUM defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_HIGH defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses variable CHECK_RETURN_VALUE_LOW defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function values() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable myValues defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
   function CheckReturnValueAnnotation(String,int,int) in line 71
      5 lines of code
      3 parameters
      1 conditional paths
   variable CHECK_RETURN_VALUE_HIGH in line 34
      protection public
   variable CHECK_RETURN_VALUE_IGNORE in line 41
      protection public
   variable CHECK_RETURN_VALUE_LOW in line 39
      protection public
   variable CHECK_RETURN_VALUE_MEDIUM in line 37
      protection public
   variable CHECK_RETURN_VALUE_UNKNOWN in line 31
      protection public
   variable CHECK_RETURN_VALUE_VERY_HIGH in line 43
      protection public
   variable myValues in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ClassContext.java
module edu::umd::cs::findbugs::ba::ClassContext
   function dumpDataflowInformation(Method) in line 1818
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function dumpDataflowInformation(Method,CFG,ValueNumberDataflow,IsNullValueDataflow,UnconditionalValueDerefDataflow,TypeDataflow) in line 1838
      protection public
      22 lines of code
      6 parameters
      5 conditional paths
   function dumpTypeDataflow(Method,CFG,TypeDataflow) in line 1866
      protection public
      15 lines of code
      3 parameters
      3 conditional paths
   function getAnalysisContext() in line 1285
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
   function getAssertionMethods() in line 1686
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getAssignedFieldMap() in line 1674
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable assignedFieldMap defined in edu::umd::cs::findbugs::ba::ClassContext
   function getBlockTypeDataflow(Method) in line 1661
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable blockTypeDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getBytecodeSet(Method) in line 1434
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getBytecodeSet() defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getBytecodeSet(JavaClass,Method) in line 1448
      protection public
      25 lines of code
      2 parameters
      4 conditional paths
      uses function get(Object) defined in edu::umd::cs::findbugs::util::MapCache
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getUnpackedCode() defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedBytecodeCallback
      uses function getBytecodeSet() defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
   function getCallListDataflow(Method) in line 1738
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable callListDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getCFG(Method) in line 1332
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable cfgFactory defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getRefinedCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext::CFGFactory
   function getCompactLocationNumbering(Method) in line 1787
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable compactLocationNumberingFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getConstantDataflow(Method) in line 1701
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable constantDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getConstantPoolGen() in line 1352
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable classGen defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getDefinitelyNullSetDataflow(Method) in line 1800
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable definitelyNullSetDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getDepthFirstSearch(Method) in line 1405
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfsFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getExceptionSetFactory(Method) in line 1619
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionSetFactoryFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getIsNullValueDataflow(Method) in line 1385
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable invDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getJavaClass() in line 1218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLiveLocalStoreDataflow(Method) in line 1650
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable liveLocalStoreDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLoadDataflow(Method) in line 1714
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loadDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLoadedFieldSet(Method) in line 1640
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loadedFieldSetFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLockChecker(Method) in line 1562
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lockCheckerFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLockDataflow(Method) in line 1546
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable lockDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getLookupFailureCallback() in line 1294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getLoopExitBranches(Method,MethodGen) in line 1474
      protection public
      21 lines of code
      2 parameters
      18 conditional paths
      uses function get(Object) defined in edu::umd::cs::findbugs::util::MapCache
   function getMethod(MethodGen) in line 1228
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
   function getMethodGen(Method) in line 1306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGenFactory defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAnalysis(Method) defined in edu::umd::cs::findbugs::ba::ClassContext::NoExceptionAnalysisFactory
   function getMethodsInCallOrder() in line 1241
      protection public
      38 lines of code
      0 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
   function getNonExceptionDominatorsAnalysis(Method) in line 1584
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable nonExceptionDominatorsAnalysisFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getNonExceptionPostDominatorsAnalysis(Method) in line 1608
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable nonExceptionPostDominatorsAnalysisFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getNonImplicitExceptionDominatorsAnalysis(Method) in line 1596
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable nonImplicitExceptionPostDominatorsAnalysisFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getOffsetToOpcodeMap(Method) in line 1535
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable unpackedCodeFactory defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getOffsetToBytecodeMap() defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
   function getParameterSignatureList(Method) in line 1630
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable parameterSignatureListFactory defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getAnalysis(Method) defined in edu::umd::cs::findbugs::ba::ClassContext::NoExceptionAnalysisFactory
   function getRawCFG(Method) in line 1317
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfgFactory defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getRawCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext::CFGFactory
   function getReturnPathDataflow(Method) in line 1572
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable returnPathDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getReturnPathTypeDataflow(Method) in line 1813
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable returnPathTypeDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getReverseDepthFirstSearch(Method) in line 1415
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable rdfsFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getStoreDataflow(Method) in line 1726
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable storeDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getTypeDataflow(Method) in line 1395
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getUnconditionalValueDerefDataflow(Method) in line 1775
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable unconditionalValueDerefDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getUsagesRequiringNonNullValues(Method) in line 1365
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable derefFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function getValueNumberDataflow(Method) in line 1375
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable vnaDataflowFactory defined in edu::umd::cs::findbugs::ba::ClassContext
   function indent() in line 144
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::ClassContext
   function linesMentionedMultipleTimes(Method) in line 1744
      protection public
      22 lines of code
      1 parameters
      6 conditional paths
   function ClassContext(JavaClass,AnalysisContext) in line 1194
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable analysisFactoryList defined in edu::umd::cs::findbugs::ba::ClassContext
   variable analysisContext in line 545
   variable analysisFactoryList in line 548
   variable assertionMethods in line 1183
   variable assignedFieldMap in line 1182
   variable blockTypeDataflowFactory in line 1049
   variable busyCFGSet in line 357
   variable callListDataflowFactory in line 1066
   variable cfgFactory in line 578
   variable classGen in line 1181
   variable compactLocationNumberingFactory in line 1124
   variable constantDataflowFactory in line 881
   variable DEBUG in line 99
      protection public
   variable DEBUG_CFG in line 107
   variable definitelyNullSetDataflowFactory in line 1140
   variable depth in line 142
   variable derefFactory in line 580
   variable dfsFactory in line 700
   variable DUMP_DATAFLOW_ANALYSIS in line 108
   variable exceptionSetFactoryFactory in line 860
   variable fieldInstructionOpcodeSet in line 957
   variable invDataflowFactory in line 631
   variable jclass in line 544
   variable liveLocalStoreDataflowFactory in line 1029
   variable loadDataflowFactory in line 923
   variable loadedFieldSetFactory in line 978
   variable lockCheckerFactory in line 782
   variable lockDataflowFactory in line 765
   variable methodGenFactory in line 552
   variable nonExceptionDominatorsAnalysisFactory in line 809
   variable nonExceptionPostDominatorsAnalysisFactory in line 823
   variable nonImplicitExceptionPostDominatorsAnalysisFactory in line 837
   variable parameterSignatureListFactory in line 868
   variable PRUNED_INFEASIBLE_EXCEPTIONS in line 101
   variable PRUNED_UNCONDITIONAL_THROWERS in line 102
   variable rdfsFactory in line 711
   variable REFINED in line 103
   variable returnPathDataflowFactory in line 796
   variable returnPathTypeDataflowFactory in line 1162
   variable storeDataflowFactory in line 940
   variable TIME_ANALYSES in line 105
   variable typeDataflowFactory in line 668
   variable unconditionalValueDerefDataflowFactory in line 1084
   variable unpackedCodeFactory in line 743
   variable vnaDataflowFactory in line 598
module edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
   function getBytecodeSet() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
   function getOffsetToBytecodeMap() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable offsetToBytecodeMap defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
   function UnpackedCode(BitSet,short[]) in line 122
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
      uses variable offsetToBytecodeMap defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
   variable bytecodeSet in line 120
   variable offsetToBytecodeMap in line 121
module edu::umd::cs::findbugs::ba::ClassContext::AnalysisResult
   function getAnalysis() in line 164
      protection public
      11 lines of code
      0 parameters
      5 conditional paths
   function setAnalysis(@Nullable Analysis) in line 181
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setAnalysisException(AnalysisException) in line 192
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setCFGBuilderException(CFGBuilderException) in line 202
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setDataflowAnalysisException(DataflowAnalysisException) in line 212
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable analysis in line 159
   variable analysisException in line 160
   variable analysisSetExplicitly in line 158
   variable cfgBuilderException in line 161
   variable dataflowAnalysisException in line 162
module edu::umd::cs::findbugs::ba::ClassContext::AnalysisFactory
   abstract class
   function analyze(Method) in line 290
      1 lines of code
      1 parameters
      1 conditional paths
   function getAnalysis(Method) in line 247
      protection public
      42 lines of code
      1 parameters
      1 conditional paths
   function isDataflow() in line 297
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function purge(Method) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AnalysisFactory(String) in line 231
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable analysisName in line 222
   variable map in line 223
module edu::umd::cs::findbugs::ba::ClassContext::NoExceptionAnalysisFactory
   inherits from edu::umd::cs::findbugs::ba::ClassContext::AnalysisFactory
   abstract class
   function getAnalysis(Method) in line 315
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function isDataflow() in line 329
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NoExceptionAnalysisFactory(String) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::ClassContext::NoDataflowAnalysisFactory
   inherits from edu::umd::cs::findbugs::ba::ClassContext::AnalysisFactory
   abstract class
   function getAnalysis(Method) in line 340
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function isDataflow() in line 352
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NoDataflowAnalysisFactory(String) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::ClassContext::CFGFactory
   inherits from AnalysisFactory< CFG >
   function analyze(Method) in line 503
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function toMethodDescriptor() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function build() defined in edu::umd::cs::findbugs::ba::CFGBuilder
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::CFGBuilder
   function getAnalysis(Method) in line 366
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getRawCFG(Method) in line 374
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getRefinedCFG(Method) in line 378
      protection public
      123 lines of code
      1 parameters
      19 conditional paths
      uses function getRawCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable REFINED defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable jclass defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function toMethodDescriptor() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function setMethodName(String) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setMethodGen(MethodGen) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable DEBUG_CFG defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function indent() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable busyCFGSet defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function removeEdge(EdgeType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBoolProperty(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable PRUNED_INFEASIBLE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function wasCFGModified() defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable CONSERVE_SPACE defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable PRUNED_UNCONDITIONAL_THROWERS defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function wasCFGModified() defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   function isDataflow() in line 519
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function CFGFactory() in line 361
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::ClassContext::DataflowAnalysisFactory
   inherits from edu::umd::cs::findbugs::ba::ClassContext::AnalysisFactory
   abstract class
   function isDataflow() in line 535
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::ClassContext::UnpackedBytecodeCallback
   inherits from edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function getUnpackedCode() in line 738
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function UnpackedCode(BitSet,short[]) defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
   function handleInstruction(int,int) in line 733
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bytecodeSet defined in edu::umd::cs::findbugs::ba::ClassContext::UnpackedCode
   function UnpackedBytecodeCallback(int) in line 725
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bytecodeSet in line 722
   variable offsetToOpcodeMap in line 723
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ClassHash.java
module edu::umd::cs::findbugs::ba::ClassHash
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Comparable
   function compareTo(ClassHash) in line 317
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function computeHash(JavaClass) in line 140
      protection public
      62 lines of code
      1 parameters
      6 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function work(MessageDigest,String,CharsetEncoder) defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function computeHash(Method) defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function equals(Object) in line 310
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function isSameHash(ClassHash) defined in edu::umd::cs::findbugs::ba::ClassHash
   function getClassHash() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function getClassName() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
   function getMethodHash(XMethod) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
   function hashCode() in line 298
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function hashToString(byte[]) in line 249
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable HEX_CHARS defined in edu::umd::cs::findbugs::ba::ClassHash
   function hexDigitValue(char) in line 258
      10 lines of code
      1 parameters
      4 conditional paths
   function isSameHash(ClassHash) in line 293
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function setClassHash(byte[]) in line 119
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   function setMethodHash(XMethod,byte[]) in line 90
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
   function stringToHash(String) in line 275
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function hexDigitValue(char) defined in edu::umd::cs::findbugs::ba::ClassHash
   function toString() in line 328
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function hashToString(byte[]) defined in edu::umd::cs::findbugs::ba::ClassHash
   function work(MessageDigest,String,CharsetEncoder) in line 203
      17 lines of code
      3 parameters
      2 conditional paths
   function writeXML(XMLOutput) in line 221
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable CLASS_HASH_ELEMENT_NAME defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
      uses function hashToString(byte[]) defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable methodHashMap defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable METHOD_HASH_ELEMENT_NAME defined in edu::umd::cs::findbugs::ba::ClassHash
   function ClassHash() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ClassHash(String,byte[]) in line 77
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::ClassHash
      uses variable classHash defined in edu::umd::cs::findbugs::ba::ClassHash
   variable CLASS_HASH_ELEMENT_NAME in line 53
      protection public
   variable classHash in line 62
   variable className in line 61
   variable HEX_CHARS in line 239
   variable METHOD_HASH_ELEMENT_NAME in line 58
      protection public
   variable methodHashMap in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ClassMember.java
module edu::umd::cs::findbugs::ba::ClassMember
   inherits from Comparable
   inherits from java::io::Serializable
   function getAccessFlags() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getClassName() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getName() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPackageName() in line 45
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSignature() in line 51
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isFinal() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPrivate() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isProtected() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isPublic() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isResolved() in line 86
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ClassNotFoundExceptionParser.java
module edu::umd::cs::findbugs::ba::ClassNotFoundExceptionParser
   function getMissingClassName(ClassNotFoundException) in line 66
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable patternList defined in edu::umd::cs::findbugs::ba::ClassNotFoundExceptionParser
   variable BCEL_MISSING_CLASS_PATTERN in line 42
   variable patternList in line 49
   variable TYPE_REPOSITORY_MISSING_CLASS_PATTERN in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CompactLocationNumbering.java
module edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function build(CFG) in line 79
      9 lines of code
      1 parameters
      2 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
      uses variable numberToLocationMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getLocation(int) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numberToLocationMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getNumber(Location) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function getSize() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationToNumberMap defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   function CompactLocationNumbering(CFG) in line 41
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function build(CFG) defined in edu::umd::cs::findbugs::ba::CompactLocationNumbering
   variable locationToNumberMap in line 33
   variable numberToLocationMap in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/CompoundMethodChooser.java
module edu::umd::cs::findbugs::ba::CompoundMethodChooser
   inherits from edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function choose(JavaClassAndMethod) in line 32
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function CompoundMethodChooser(JavaClassAndMethodChooser[]) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/constant/Constant.java
module edu::umd::cs::findbugs::ba::constant::Constant
   function equals(Object) in line 111
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function Constant(@Nullable Object) defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::constant::Constant
   function getConstantInt() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function getConstantString() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function hashCode() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstant() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstantInteger() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function isConstantString() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function merge(Constant,Constant) in line 101
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function toString() in line 130
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function isConstant() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   function Constant(@Nullable Object) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::constant::Constant
   variable NOT_CONSTANT in line 36
      protection public
   variable value in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/constant/ConstantAnalysis.java
module edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function createFact() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   function initEntryFact(ConstantFrame) in line 56
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
   function main(String[]) in line 106
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses function getConstantDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function meetInto(ConstantFrame,Edge,ConstantFrame) in line 74
      protection public
      21 lines of code
      3 parameters
      4 conditional paths
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function mergeInto(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function mergeValues(ConstantFrame,ConstantFrame,int) in line 97
      5 lines of code
      3 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,ConstantFrame) in line 66
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function ConstantAnalysis(MethodGen,DepthFirstSearch) in line 46
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::constant::ConstantAnalysis
   variable methodGen in line 43
   variable visitor in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/constant/ConstantDataflow.java
module edu::umd::cs::findbugs::ba::constant::ConstantDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function getFactAfterLocation(Location) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function getFactAtLocation(Location) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function ConstantDataflow(CFG,ConstantAnalysis) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/constant/ConstantFrame.java
module edu::umd::cs::findbugs::ba::constant::ConstantFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function ConstantFrame(int) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/constant/ConstantFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::constant::ConstantFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function getDefaultValue() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
   function visitBIPUSH(BIPUSH) in line 74
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitICONST(ICONST) in line 66
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitIINC(IINC) in line 53
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantInteger() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantInt() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable NOT_CONSTANT defined in edu::umd::cs::findbugs::ba::constant::Constant
   function visitLDC(LDC) in line 89
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 96
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitSIPUSH(SIPUSH) in line 81
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function ConstantFrameModelingVisitor(ConstantPoolGen) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/Dataflow.java
module edu::umd::cs::findbugs::ba::Dataflow
   function blockId(BasicBlock) in line 315
      5 lines of code
      1 parameters
      1 conditional paths
   function debug(BasicBlock,String) in line 320
      5 lines of code
      2 parameters
      1 conditional paths
   function debug(BasicBlock,BasicBlock,Edge,String) in line 326
      4 lines of code
      4 parameters
      1 conditional paths
   function execute() in line 105
      protection public
      209 lines of code
      0 parameters
      1 conditional paths
   function getAnalysis() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCFG() in line 362
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getFullyQualifiedMethodName() in line 92
      8 lines of code
      0 parameters
      1 conditional paths
   function getNumIterations() in line 334
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 348
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 341
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function logicalEntryBlock() in line 380
      3 lines of code
      0 parameters
      1 conditional paths
   function logicalPredecessorEdgeIterator(BasicBlock) in line 371
      3 lines of code
      1 parameters
      1 conditional paths
   function Dataflow(CFG,AnalysisType) in line 64
      protection public
      24 lines of code
      2 parameters
      1 conditional paths
   variable analysis in line 51
   variable blockOrder in line 52
   variable cfg in line 50
   variable isForwards in line 53
   variable MAX_ITERS in line 90
   variable numIterations in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DataflowAnalysis.java
module edu::umd::cs::findbugs::ba::DataflowAnalysis
   function copy(Fact,Fact) in line 56
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function edgeTransfer(Edge,Fact) in line 128
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function finishIteration() in line 149
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 91
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getLastUpdateTimestamp(Fact) in line 151
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getResultFact(BasicBlock) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getStartFact(BasicBlock) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function initEntryFact(Fact) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(Fact) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isForwards() in line 83
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isTop(Fact) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function makeFactTop(Fact) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function meetInto(Fact,Edge,Fact) in line 138
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function same(Fact,Fact) in line 96
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(Fact,int) in line 153
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 144
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function transfer(BasicBlock,@CheckForNull InstructionHandle,Fact,Fact) in line 112
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DataflowAnalysisException.java
module edu::umd::cs::findbugs::ba::DataflowAnalysisException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function DataflowAnalysisException() in line 39
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function DataflowAnalysisException(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function DataflowAnalysisException(String,Throwable) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function DataflowAnalysisException(String,MethodGen,InstructionHandle) in line 68
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function DataflowAnalysisException(String,MethodGen,InstructionHandle,Throwable) in line 80
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DataflowCFGPrinter.java
module edu::umd::cs::findbugs::ba::DataflowCFGPrinter
   inherits from edu::umd::cs::findbugs::ba::CFGPrinter
   function blockAnnotate(BasicBlock) in line 63
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
   function blockStartAnnotate(BasicBlock) in line 55
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
   function edgeAnnotate(Edge) in line 44
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function instructionAnnotate(InstructionHandle,BasicBlock) in line 71
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
      uses function isForwards() defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function printCFG(Dataflow< Fact, AnalysisType >,PrintStream) in line 95
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function DataflowCFGPrinter(Dataflow< Fact, AnalysisType >) in line 33
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable dataflow defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function setIsForwards(boolean) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   variable dataflow in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DataflowTestDriver.java
module edu::umd::cs::findbugs::ba::DataflowTestDriver
   abstract class
   function configureAnalysisContext(AnalysisContext) in line 104
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable KNOB_LIST defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
      uses function setBoolProperty(int,boolean) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function createDataflow(ClassContext,Method) in line 142
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function examineResults(CFG,Dataflow< Fact, AnalysisType >) in line 152
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function execute(String) in line 53
      protection public
      29 lines of code
      1 parameters
      4 conditional paths
      uses function parse() defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
      uses function setBoolProperty(int,boolean) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function configureAnalysisContext(AnalysisContext) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
      uses function getClassContext(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function execute(ClassContext,Method) in line 117
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses function createDataflow(ClassContext,Method) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
      uses function getNumIterations() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function examineResults(CFG,Dataflow< Fact, AnalysisType >) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
      uses function overrideIsForwards() defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
      uses function setIsForwards(boolean) defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable isForwards defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses function print(PrintStream) defined in edu::umd::cs::findbugs::ba::CFGPrinter
   function overrideIsForwards() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable KNOB_LIST in line 93
   variable overrideIsForwards in line 42
module edu::umd::cs::findbugs::ba::DataflowTestDriver::Knob
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DataflowValueChooser.java
module edu::umd::cs::findbugs::ba::DataflowValueChooser
   function choose(Value) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/Debug.java
module edu::umd::cs::findbugs::ba::Debug
   variable VERIFY_INTEGRITY in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/Debug.java
module edu::umd::cs::findbugs::gui2::Debug
   function main(String[]) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function println(Object) in line 30
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function println(Exception) in line 36
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DebugRepositoryLookupFailureCallback.java
module edu::umd::cs::findbugs::ba::DebugRepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   function logError(String) in line 62
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 71
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::DebugRepositoryLookupFailureCallback
   function reportMissingClass(ClassNotFoundException) in line 40
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function reportMissingClass(ClassDescriptor) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DepthFirstSearch.java
module edu::umd::cs::findbugs::ba::DepthFirstSearch
   inherits from DepthFirstSearch< CFG, Edge, BasicBlock >
   function getNextSearchTreeRoot() in line 44
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::DepthFirstSearch
   function DepthFirstSearch(CFG) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::DepthFirstSearch
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
   variable firstRoot in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/DepthFirstSearch.java
module edu::umd::cs::findbugs::graph::DepthFirstSearch
   inherits from AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
   function getSource(EdgeType) in line 59
      3 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 54
      3 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 49
      3 lines of code
      2 parameters
      1 conditional paths
   function DepthFirstSearch(GraphType) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefAnalysis.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   inherits from edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
   function checkInstance(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 438
      53 lines of code
      3 parameters
      10 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getPredecessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceSlot(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable IGNORE_DEREF_OF_NCP defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkNonNullParams(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 403
      25 lines of code
      3 parameters
      5 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
   function checkNonNullPutField(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 369
      22 lines of code
      3 parameters
      6 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function checkNonNullReturnValue(XMethod,Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 341
      16 lines of code
      4 parameters
      7 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,UnconditionalValueDerefSet) in line 239
      89 lines of code
      3 parameters
      23 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG_CHECK_CALLS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function copyFrom(ParameterNullnessProperty) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses function intersectWith(ParameterNullnessProperty) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function reportDereference(IsNullValueFrame,int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function clearDerefsOnNonNullBranches(IsNullValueDataflow) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) in line 522
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function makeSameAs(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function createFact() in line 529
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function duplicateFact(UnconditionalValueDerefSet) in line 724
      6 lines of code
      1 parameters
      1 conditional paths
      uses function createFact() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function findValueKnownNonnullOnBranch(UnconditionalValueDerefSet,Edge) in line 739
      23 lines of code
      2 parameters
      5 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getDecision() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function getLastUpdateTimestamp(UnconditionalValueDerefSet) in line 789
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLastUpdateTimestamp() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function initEntryFact(UnconditionalValueDerefSet) in line 536
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(UnconditionalValueDerefSet) in line 544
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setIsTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isAssertion(InstructionHandle) in line 512
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isAssertionInstruction(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function isExceptionEdge(Edge) in line 769
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function isFactValid(UnconditionalValueDerefSet) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isTop(UnconditionalValueDerefSet) in line 555
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function main(String[]) in line 796
      protection public
      21 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable overrideIsForwards defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(UnconditionalValueDerefSet) in line 551
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setIsTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function meetInto(UnconditionalValueDerefSet,Edge,UnconditionalValueDerefSet) in line 561
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function meetInto(UnconditionalValueDerefSet,Edge,UnconditionalValueDerefSet,boolean) in line 568
      protection public
      74 lines of code
      4 parameters
      18 conditional paths
      uses function isExceptionEdge(Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isFactValid(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function propagateDerefSetsToMergeInputValues(UnconditionalValueDerefSet,Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function findValueKnownNonnullOnBranch(UnconditionalValueDerefSet,Edge) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function duplicateFact(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function copy(UnconditionalValueDerefSet,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable ASSUME_NONZERO_TRIP_LOOPS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function propagateDerefSetsToMergeInputValues(UnconditionalValueDerefSet,Edge) in line 655
      62 lines of code
      2 parameters
      14 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function duplicateFact(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function clearDerefSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function setDerefSet(ValueNumber,Set< Location >) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getUnconditionalDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function valueNumbersForLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function cleanDerefSet(@CheckForNull Location,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function reportDereference(IsNullValueFrame,int) in line 494
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function reportDereference(IsNullValue) in line 498
      7 lines of code
      1 parameters
      4 conditional paths
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable IGNORE_DEREF_OF_NCP defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isNullOnComplicatedPath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function same(UnconditionalValueDerefSet,UnconditionalValueDerefSet) in line 779
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function isSameAs(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setLastUpdateTimestamp(UnconditionalValueDerefSet,int) in line 793
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function setLastUpdateTimestamp(int) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setTypeDataflow(TypeDataflow) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function startIteration() in line 784
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,UnconditionalValueDerefSet) in line 162
      protection public
      67 lines of code
      3 parameters
      13 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function isAssertion(InstructionHandle) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function makeFactTop(UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable CHECK_CALLS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkUnconditionalDerefDatabase(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable CHECK_ANNOTATIONS defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullParams(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullReturnValue(XMethod,Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkNonNullPutField(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function checkInstance(Location,ValueNumberFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   function UnconditionalValueDerefAnalysis(ReverseDepthFirstSearch,DepthFirstSearch,CFG,Method,MethodGen,ValueNumberDataflow,AssertionMethods) in line 112
      protection public
      19 lines of code
      7 parameters
      2 conditional paths
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
   variable assertionMethods in line 96
   variable ASSUME_NONZERO_TRIP_LOOPS in line 81
      protection public
   variable cfg in line 92
   variable CHECK_ANNOTATIONS in line 85
      protection public
   variable CHECK_CALLS in line 87
      protection public
   variable DEBUG in line 80
      protection public
   variable DEBUG_CHECK_CALLS in line 89
      protection public
   variable IGNORE_DEREF_OF_NCP in line 82
      protection public
   variable invDataflow in line 98
   variable method in line 93
   variable methodGen in line 94
   variable typeDataflow in line 99
   variable VERBOSE_NULLARG_DEBUG in line 328
      protection public
   variable vnaDataflow in line 95
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefDataflow.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function UnconditionalValueDerefDataflow(CFG,UnconditionalValueDerefAnalysis) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/deref/UnconditionalValueDerefSet.java
module edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function addDeref(ValueNumber,Location) in line 235
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function cleanDerefSet(@CheckForNull Location,ValueNumberFrame) in line 402
      protection public
      19 lines of code
      2 parameters
      4 conditional paths
      uses function allSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function valueNumbersForLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses function getValueNumbersThatAreUnconditionallyDereferenced() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function retainOnlyTheseValueNumbers(Collection< ValueNumber >) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function clearDerefSet(ValueNumber) in line 268
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getDerefLocationSet(ValueNumber) in line 282
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getDerefLocationSet(int) in line 389
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getLastUpdateTimestamp() in line 432
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getUnconditionalDerefLocationSet(ValueNumber) in line 328
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function getValueNumbersThatAreUnconditionallyDereferenced() in line 301
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isBottom() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isEmpty() in line 439
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isSameAs(UnconditionalValueDerefSet) in line 146
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isTop() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function isUnconditionallyDereferenced(ValueNumber) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function makeSameAs(UnconditionalValueDerefSet) in line 123
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function mergeWith(UnconditionalValueDerefSet,@CheckForNull ValueNumber,ValueNumberFactory) in line 160
      protection public
      43 lines of code
      3 parameters
      11 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function retainOnlyTheseValueNumbers(Collection< ValueNumber >) in line 310
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function setDerefSet(ValueNumber,Set< Location >) in line 252
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setIsBottom() in line 85
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setIsTop() in line 102
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function setLastUpdateTimestamp(int) in line 425
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lastUpdateTimestamp defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function toString() in line 340
      protection public
      48 lines of code
      0 parameters
      9 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function unionWith(UnconditionalValueDerefSet,ValueNumberFactory) in line 203
      protection public
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefAnalysis
      uses variable valueNumbersUnconditionallyDereferenced defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable derefLocationSetMap defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function UnconditionalValueDerefSet(int) in line 66
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable numValueNumbersInMethod defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   variable derefLocationSetMap in line 53
   variable lastUpdateTimestamp in line 57
   variable numValueNumbersInMethod in line 46
   variable valueNumbersUnconditionallyDereferenced in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DFSCFGPrinter.java
module edu::umd::cs::findbugs::ba::DFSCFGPrinter
   inherits from edu::umd::cs::findbugs::ba::CFGPrinter
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function edgeAnnotate(Edge) in line 31
      protection public
      17 lines of code
      1 parameters
      6 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DFSCFGPrinter
      uses variable UNKNOWN_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable TREE_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable CROSS_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses variable FORWARD_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
   function DFSCFGPrinter(CFG,DepthFirstSearch) in line 25
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::CFGPrinter
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DFSCFGPrinter
   variable dfs in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DFSEdgeTypes.java
module edu::umd::cs::findbugs::ba::DFSEdgeTypes
   inherits from edu::umd::cs::findbugs::graph::DFSEdgeTypes
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/DFSEdgeTypes.java
module edu::umd::cs::findbugs::graph::DFSEdgeTypes
   variable BACK_EDGE in line 41
      protection public
   variable CROSS_EDGE in line 52
      protection public
   variable FORWARD_EDGE in line 46
      protection public
   variable TREE_EDGE in line 36
      protection public
   variable UNKNOWN_EDGE in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/DominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::DominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function getBlockOrder(CFG) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DominatorsAnalysis
   function isForwards() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 61
      protection public
      32 lines of code
      1 parameters
      2 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DominatorsAnalysis
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function DominatorsAnalysis(CFG,DepthFirstSearch,boolean) defined in edu::umd::cs::findbugs::ba::DominatorsAnalysis
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function DominatorsAnalysis(CFG,DepthFirstSearch,boolean) in line 48
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::DominatorsAnalysis
   variable dfs in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/Edge.java
module edu::umd::cs::findbugs::ba::Edge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::Debug
   function compareTo(Edge) in line 126
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function edgeTypeToString(int) in line 208
      protection public
      33 lines of code
      1 parameters
      15 conditional paths
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_TARGET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_SOURCE_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function equals(Object) in line 109
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function Edge(BasicBlock,BasicBlock) defined in edu::umd::cs::findbugs::ba::Edge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
   function formatAsString(boolean) in line 163
      protection public
      41 lines of code
      1 parameters
      6 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function edgeTypeToString(int) defined in edu::umd::cs::findbugs::ba::Edge
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function getFlags() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::Edge
   function getId() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getLabel() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getType() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function hashCode() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function isBackwardInBytecode() in line 138
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function isExceptionEdge() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isFlagSet(int) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlags(int) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::Edge
   function setType(int) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::Edge
   function sourceIsTopOfLoop(Set< Integer >) in line 150
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function stringToEdgeType(String) in line 245
      protection public
      34 lines of code
      1 parameters
      15 conditional paths
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable JSR_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable RETURN_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable HANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable START_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_TARGET_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable BACKEDGE_SOURCE_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function toString() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
   function Edge(BasicBlock,BasicBlock) in line 55
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
   variable flags in line 43
   variable type in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/EdgeChooser.java
module edu::umd::cs::findbugs::ba::EdgeChooser
   function choose(Edge) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/EdgeTypes.java
module edu::umd::cs::findbugs::ba::EdgeTypes
   variable BACKEDGE_SOURCE_EDGE in line 92
      protection public
   variable BACKEDGE_TARGET_EDGE in line 88
      protection public
   variable CHECKED_EXCEPTIONS_FLAG in line 105
      protection public
   variable EXIT_EDGE in line 96
      protection public
   variable EXPLICIT_EXCEPTIONS_FLAG in line 110
      protection public
   variable FALL_THROUGH_EDGE in line 41
      protection public
   variable GOTO_EDGE in line 65
      protection public
   variable HANDLED_EXCEPTION_EDGE in line 80
      protection public
   variable IFCMP_EDGE in line 45
      protection public
   variable JSR_EDGE in line 57
      protection public
   variable RET_EDGE in line 61
      protection public
   variable RETURN_EDGE in line 69
      protection public
   variable START_EDGE in line 84
      protection public
   variable SWITCH_DEFAULT_EDGE in line 53
      protection public
   variable SWITCH_EDGE in line 49
      protection public
   variable UNHANDLED_EXCEPTION_EDGE in line 75
      protection public
   variable UNKNOWN_EDGE in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ExceptionHandlerMap.java
module edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function addHandler(InstructionHandle,CodeExceptionGen) in line 116
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function build(MethodGen) in line 81
      34 lines of code
      1 parameters
      6 conditional paths
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function addHandler(InstructionHandle,CodeExceptionGen) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function getHandlerForStartInstruction(InstructionHandle) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function getHandlerList(InstructionHandle) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   function ExceptionHandlerMap(MethodGen) in line 48
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable codeToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses variable startInstructionToHandlerMap defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
      uses function build(MethodGen) defined in edu::umd::cs::findbugs::ba::ExceptionHandlerMap
   variable codeToHandlerMap in line 40
   variable startInstructionToHandlerMap in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/FileSourceFileDataSource.java
module edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   inherits from edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   function open() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   function FileSourceFileDataSource(String) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::ba::FileSourceFileDataSource
   variable fileName in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ForwardDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflowAnalysis
   abstract class
   function getBlockOrder(CFG) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDepthFirstSearch() in line 39
      3 lines of code
      0 parameters
      1 conditional paths
   function isForwards() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ForwardDataflowAnalysis(DepthFirstSearch) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable dfs in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/Frame.java
module edu::umd::cs::findbugs::ba::Frame
   abstract class
   function allSlots() in line 640
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function clearStack() in line 481
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function copyFrom(Frame< ValueType >) in line 576
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
   function getArgument(InvokeInstruction,ConstantPoolGen,int,int) in line 382
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
   function getArgument(InvokeInstruction,ConstantPoolGen,int,SignatureParser) in line 400
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
   function getArgumentSet(InvokeInstruction,ConstantPoolGen,DataflowValueChooser< ValueType >) in line 461
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
   function getArgumentSlot(int,int) in line 418
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function getInstance(Instruction,ConstantPoolGen) in line 272
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function getInstanceSlot(Instruction,ConstantPoolGen) in line 316
      protection public
      14 lines of code
      2 parameters
      1 conditional paths
   function getInstanceStackLocation(Instruction,ConstantPoolGen) in line 296
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function getLastUpdateTimestamp() in line 657
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumArguments(InvokeInstruction,ConstantPoolGen) in line 342
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function getNumArgumentsIncludingObjectInstance(InvokeInstruction,ConstantPoolGen) in line 359
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function getNumLocals() in line 499
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumSlots() in line 506
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOperand(StackConsumer,ConstantPoolGen,int) in line 437
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
   function getStackDepth() in line 492
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStackLocation(int) in line 252
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getStackValue(int) in line 233
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
   function getTopStackWords(ValueType[]) in line 215
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function getTopValue() in line 201
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getValue(int) in line 517
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function isBottom() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 162
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function popValue() in line 187
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function pushValue(ValueType) in line 172
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function sameAs(Frame< ValueType >) in line 547
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
   function setBottom() in line 147
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setLastUpdateTimestamp(int) in line 650
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTop() in line 129
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setValid() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setValue(int,ValueType) in line 531
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 598
      protection public
      29 lines of code
      0 parameters
      1 conditional paths
   function valueToString(ValueType) in line 633
      3 lines of code
      1 parameters
      1 conditional paths
   function Frame(int) in line 109
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable DEFAULT_STACK_CAPACITY in line 95
   variable isBottom in line 90
   variable isTop in line 84
   variable lastUpdateTimestamp in line 68
   variable numLocals in line 73
   variable slotList in line 78
   variable STACK_ONLY in line 591
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/FrameDataflowAnalysis.java
module edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from ForwardDataflowAnalysis< FrameType >
   abstract class
   function copy(FrameType,FrameType) in line 37
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getLastUpdateTimestamp(FrameType) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(FrameType) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isFactValid(FrameType) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(FrameType) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function makeFactTop(FrameType) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function mergeInto(FrameType,FrameType) in line 115
      34 lines of code
      2 parameters
      1 conditional paths
   function mergeValues(FrameType,FrameType,int) in line 158
      1 lines of code
      3 parameters
      1 conditional paths
   function modifyFrame(FrameType,@Nullable FrameType) in line 100
      7 lines of code
      2 parameters
      1 conditional paths
   function same(FrameType,FrameType) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(FrameType,int) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FrameDataflowAnalysis(DepthFirstSearch) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/generic/GenericObjectType.java
module edu::umd::cs::findbugs::ba::generic::GenericObjectType
   inherits from org::apache::bcel::generic::ObjectType
   function getExtension() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumParameters() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getObjectType() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getParameterAt(int) in line 113
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getParameters() in line 120
      protection public
      4 lines of code
      0 parameters
      3 conditional paths
   function getTypeCategory() in line 77
      protection public
      16 lines of code
      0 parameters
      6 conditional paths
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable PARAMETERS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable TYPE_VARIABLE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD_EXTENDS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD_SUPER defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function getUpperBound() in line 54
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function getVariable() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasParameters() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString(boolean) in line 179
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/generic/GenericSignatureParser.java
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function compareSignatures(String,String) in line 221
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getGenericSignatureIterator(Method) in line 185
      protection public
      31 lines of code
      1 parameters
      8 conditional paths
      uses function compareSignatures(String,String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getNumParameters() in line 158
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getNumParametersForInvocation(InvokeInstruction,ConstantPoolGen) in line 174
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function getReturnTypeSignature() in line 146
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function main(String[]) in line 235
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses function GenericSignatureParser(String) defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function parameterSignatureIterator() in line 137
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function GenericSignatureParser(String) in line 122
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   variable signature in line 114
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
   inherits from java::util::Iterator
   function hasNext() in line 48
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function next() in line 53
      protection public
      55 lines of code
      0 parameters
      20 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses variable index defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser::ParameterSignatureIterator
   function remove() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable index in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/generic/GenericUtilities.java
module edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function getString(Type) in line 161
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function asString(GenericObjectType) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function getType(String) in line 179
      protection public
      37 lines of code
      1 parameters
      8 conditional paths
      uses function lastMatchedLeftAngleBracket(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function getTypes(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function nextUnmatchedRightAngleBracket(String,int) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses function removeMatchedAngleBrackets(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function getTypeCategory(Type) in line 141
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable PLAIN_OBJECT_TYPE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable ARRAY_TYPE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable NON_REFERENCE_TYPE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function getTypes(String) in line 272
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
      uses function getType(String) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   function isPlainObject(Type) in line 154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTypeCategory(Type) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
      uses variable PLAIN_OBJECT_TYPE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function lastMatchedLeftAngleBracket(String) in line 251
      protection public
      15 lines of code
      1 parameters
      6 conditional paths
   function merge(GenericObjectType,ObjectType) in line 217
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function getParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function nextUnmatchedRightAngleBracket(String,int) in line 237
      protection public
      14 lines of code
      2 parameters
      6 conditional paths
   function removeMatchedAngleBrackets(String) in line 222
      protection public
      15 lines of code
      1 parameters
      6 conditional paths
module edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   abstract class
   function asString(GenericObjectType) in line 126
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function asString(ArrayType) in line 128
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getString(Type) defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities
   variable ARRAY_TYPE in line 61
      protection public
   variable NON_REFERENCE_TYPE in line 42
      protection public
   variable PARAMETERS in line 71
      protection public
   variable PLAIN_OBJECT_TYPE in line 51
      protection public
   variable TYPE_VARIABLE in line 86
      protection public
   variable WILDCARD in line 96
      protection public
   variable WILDCARD_EXTENDS in line 107
      protection public
   variable WILDCARD_SUPER in line 118
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/heap/FieldSet.java
module edu::umd::cs::findbugs::ba::heap::FieldSet
   function addField(XField) in line 69
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function clear() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function contains(XField) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function copyFrom(FieldSet) in line 97
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isBottom() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isIntersectionNonEmpty(FieldSet) in line 104
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isTop() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function mergeWith(FieldSet) in line 79
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function copyFrom(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sameAs(FieldSet) in line 91
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function setBottom() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function setTop() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function toString() in line 113
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function FieldSet() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSet defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   variable fieldSet in line 32
   variable isTop in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/heap/FieldSetAnalysis.java
module edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   inherits from edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   abstract class
   function copy(FieldSet,FieldSet) in line 90
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function createFact() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCPG() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function handleInstruction(InstructionHandle,BasicBlock,FieldSet) in line 110
      34 lines of code
      3 parameters
      11 conditional paths
      uses function lookupField(InstructionHandle,FieldInstruction) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawLoad(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawStore(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function initEntryFact(FieldSet) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(FieldSet) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeFactTop(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function isFactValid(FieldSet) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function isTop(FieldSet) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function lookupField(InstructionHandle,FieldInstruction) in line 145
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable instructionToFieldMap defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawLoad(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function sawStore(FieldSet,XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function makeFactTop(FieldSet) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function meetInto(FieldSet,Edge,FieldSet) in line 72
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(FieldSet,FieldSet) in line 76
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sawLoad(FieldSet,XField) in line 154
      1 lines of code
      2 parameters
      1 conditional paths
   function sawStore(FieldSet,XField) in line 155
      1 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,FieldSet) in line 95
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses function isFactValid(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
      uses function handleInstruction(InstructionHandle,BasicBlock,FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function FieldSetAnalysis(DepthFirstSearch,ConstantPoolGen) in line 48
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   variable cpg in line 44
   variable instructionToFieldMap in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/heap/LoadAnalysis.java
module edu::umd::cs::findbugs::ba::heap::LoadAnalysis
   inherits from edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function sawLoad(FieldSet,XField) in line 34
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addField(XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function sawStore(FieldSet,XField) in line 40
      2 lines of code
      2 parameters
      1 conditional paths
   function LoadAnalysis(DepthFirstSearch,ConstantPoolGen) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/heap/LoadDataflow.java
module edu::umd::cs::findbugs::ba::heap::LoadDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function LoadDataflow(CFG,LoadAnalysis) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/heap/StoreAnalysis.java
module edu::umd::cs::findbugs::ba::heap::StoreAnalysis
   inherits from edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
   function sawLoad(FieldSet,XField) in line 40
      2 lines of code
      2 parameters
      1 conditional paths
   function sawStore(FieldSet,XField) in line 48
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addField(XField) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function StoreAnalysis(DepthFirstSearch,ConstantPoolGen) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable cpg defined in edu::umd::cs::findbugs::ba::heap::FieldSetAnalysis
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/heap/StoreDataflow.java
module edu::umd::cs::findbugs::ba::heap::StoreDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function StoreDataflow(CFG,StoreAnalysis) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/Hierarchy.java
module edu::umd::cs::findbugs::ba::Hierarchy
   function accessFlagsAreConcrete(int) in line 495
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function findConcreteMethod(JavaClass,String,String) in line 447
      protection public
      22 lines of code
      3 parameters
      5 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function accessFlagsAreConcrete(int) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findDeclaredExceptions(InvokeInstruction,ConstantPoolGen) in line 373
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function findExactMethod(InvokeInstruction,ConstantPoolGen) in line 209
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findExactMethod(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 223
      protection public
      11 lines of code
      3 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findField(String,String) in line 774
      protection public
      16 lines of code
      2 parameters
      4 conditional paths
   function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) in line 294
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen,JavaClassAndMethodChooser) in line 300
      protection public
      63 lines of code
      3 parameters
      11 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable STATIC_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findExactMethod(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass,String,String) in line 400
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass,String,String,JavaClassAndMethodChooser) in line 414
      protection public
      24 lines of code
      4 parameters
      7 conditional paths
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function choose(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function findMethod(JavaClass[],String,String) in line 538
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findMethod(JavaClass[],String,String,JavaClassAndMethodChooser) in line 553
      protection public
      11 lines of code
      4 parameters
      3 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findXField(String,String,String) in line 825
      protection public
      29 lines of code
      3 parameters
      5 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function findXField(FieldInstruction,@NonNull ConstantPoolGen) in line 864
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function findXField(String,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
   function findXMethod(JavaClass,String,String,JavaClassAndMethodChooser) in line 478
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function findXMethod(JavaClass[],String,String) in line 574
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function findXMethod(JavaClass,String,String,JavaClassAndMethodChooser) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ANY_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function findXMethod(JavaClass[],String,String,JavaClassAndMethodChooser) in line 589
      protection public
      10 lines of code
      4 parameters
      3 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function choose(JavaClassAndMethod) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 900
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function isInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 887
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function isMonitorNotify(String,String) in line 175
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function isMonitorNotify(Instruction,ConstantPoolGen) in line 187
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function isMonitorNotify(String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isMonitorWait(String,String) in line 141
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function isMonitorWait(Instruction,ConstantPoolGen) in line 154
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function isMonitorWait(String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isSubtype(String,String) in line 83
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function isSubtype(ReferenceType,ReferenceType) in line 97
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
   function isUncheckedException(ObjectType) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isSubtype(String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable RUNTIME_EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable ERROR_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
   function isUniversalExceptionHandler(ObjectType) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) in line 611
      protection public
      47 lines of code
      3 parameters
      7 conditional paths
      uses function findInvocationLeastUpperBound(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable CONCRETE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen) in line 670
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function resolveMethodCallTargets(InvokeInstruction,TypeFrame,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function resolveMethodCallTargets(ReferenceType,InvokeInstruction,ConstantPoolGen,boolean) in line 689
      protection public
      65 lines of code
      4 parameters
      10 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function lookupClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable CONCRETE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable DEBUG_METHOD_LOOKUP defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getSubtypes() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getTransitiveSubtypes(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function visitSuperClassMethods(JavaClassAndMethod,JavaClassAndMethodChooser) in line 243
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   function visitSuperInterfaceMethods(JavaClassAndMethod,JavaClassAndMethodChooser) in line 260
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function findMethod(JavaClass,String,String) defined in edu::umd::cs::findbugs::ba::Hierarchy
   variable ANY_METHOD in line 487
      protection public
   variable CONCRETE_METHOD in line 503
      protection public
   variable DEBUG_METHOD_LOOKUP in line 58
   variable ERROR_TYPE in line 68
      protection public
   variable EXCEPTION_TYPE in line 64
      protection public
   variable INSTANCE_METHOD in line 523
      protection public
   variable RUNTIME_EXCEPTION_TYPE in line 72
      protection public
   variable STATIC_METHOD in line 514
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/IncompatibleTypes.java
module edu::umd::cs::findbugs::ba::IncompatibleTypes
   function containsAtLeastOneInstantiableClass(Set< JavaClass >) in line 160
      8 lines of code
      1 parameters
      3 conditional paths
   function getMsg() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriority() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriorityForAssumingCompatible(Type,Type) in line 74
      protection public
      39 lines of code
      2 parameters
      10 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_OBJECT defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function getPriorityForAssumingCompatible(ObjectType,ObjectType) in line 114
      protection public
      45 lines of code
      2 parameters
      6 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function lookupClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INCOMPATIBLE_CLASSES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getSubtypes() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getTransitiveCommonSubtypes(JavaClass,JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function containsAtLeastOneInstantiableClass(Set< JavaClass >) defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_INTERFACES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function toString() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IncompatibleTypes(String,int) in line 38
      4 lines of code
      2 parameters
      1 conditional paths
   variable ARRAY_AND_NON_ARRAY in line 59
      protection public
   variable ARRAY_AND_OBJECT in line 62
      protection public
   variable INCOMPATIBLE_CLASSES in line 65
      protection public
   variable SEEMS_OK in line 56
      protection public
   variable UNRELATED_CLASS_AND_INTERFACE in line 68
      protection public
   variable UNRELATED_INTERFACES in line 71
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/InnerClassAccess.java
module edu::umd::cs::findbugs::ba::InnerClassAccess
   function getField() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function getMethodName() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function getMethodSignature() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   function isLoad() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStatic() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
   function InnerClassAccess(String,String,XField,boolean) in line 28
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable field defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isLoad() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
   variable field in line 25
   variable isLoad in line 26
   variable methodName in line 23
   variable methodSig in line 24
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/InnerClassAccessMap.java
module edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function clearCache() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classToAccessMap defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function create() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function InnerClassAccessMap() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getAccessMapForClass(String) in line 314
      46 lines of code
      1 parameters
      11 conditional paths
      uses variable classToAccessMap defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses function getException() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
      uses function getAccess() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
      uses variable emptyMap defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getIndex(byte[],int) in line 141
      3 lines of code
      2 parameters
      1 conditional paths
      uses function toInt(byte) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getInnerClassAccess(String,String) in line 87
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getAccessMapForClass(String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getInnerClassAccess(INVOKESTATIC,ConstantPoolGen) in line 100
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getInnerClassAccess(String,String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function toInt(byte) in line 131
      6 lines of code
      1 parameters
      2 conditional paths
   function InnerClassAccessMap() in line 124
      3 lines of code
      0 parameters
      1 conditional paths
   variable classToAccessMap in line 64
   variable DEBUG in line 54
   variable emptyMap in line 305
module edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
   inherits from java::lang::RuntimeException
   function getException() in line 156
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exception defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
   function LookupFailure(ClassNotFoundException) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exception defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
   variable exception in line 150
   variable serialVersionUID in line 149
module edu::umd::cs::findbugs::ba::InnerClassAccessMap::InstructionCallback
   inherits from edu::umd::cs::findbugs::ba::BytecodeScanner::Callback
   function getAccess() in line 210
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleInstruction(int,int) in line 190
      protection public
      12 lines of code
      2 parameters
      5 conditional paths
      uses function getIndex(byte[],int) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function isValidAccessMethod(String,XField,boolean) in line 258
      45 lines of code
      3 parameters
      8 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function setField(int,boolean,boolean) in line 221
      27 lines of code
      3 parameters
      4 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function LookupFailure(ClassNotFoundException) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap::LookupFailure
   function InstructionCallback(JavaClass,String,String,byte[]) in line 181
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
   variable access in line 170
   variable accessCount in line 171
   variable instructionList in line 169
   variable javaClass in line 166
   variable methodName in line 167
   variable methodSig in line 168
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/InstanceField.java
module edu::umd::cs::findbugs::ba::InstanceField
   inherits from edu::umd::cs::findbugs::ba::AbstractField
   function isStatic() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InstanceField(String,String,String,int) in line 28
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   variable serialVersionUID in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/InstanceMethod.java
module edu::umd::cs::findbugs::ba::InstanceMethod
   inherits from edu::umd::cs::findbugs::ba::AbstractMethod
   function isStatic() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function InstanceMethod(String,String,String,int) in line 23
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   variable serialVersionUID in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/interproc/FieldPropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::FieldPropertyDatabase
   inherits from PropertyDatabase< XField, Property >
   abstract class
   function parseKey(String) in line 45
      18 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,XField) in line 69
      9 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/interproc/MethodPropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   inherits from PropertyDatabase< XMethod, Property >
   abstract class
   function parseKey(String) in line 41
      14 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,XMethod) in line 57
      9 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/interproc/PropertyDatabase.java
module edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
   abstract class
   function decodeProperty(String) in line 244
      1 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(ValueType) in line 254
      1 lines of code
      1 parameters
      1 conditional paths
   function getKeys() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProperty(KeyType) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function intern(XFactory,KeyType) in line 166
      12 lines of code
      2 parameters
      1 conditional paths
   function isEmpty() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parseKey(String) in line 226
      1 lines of code
      1 parameters
      1 conditional paths
   function read(InputStream) in line 124
      protection public
      30 lines of code
      1 parameters
      1 conditional paths
   function readFromFile(String) in line 111
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function removeProperty(KeyType) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProperty(KeyType,ValueType) in line 68
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function write(OutputStream) in line 186
      protection public
      32 lines of code
      1 parameters
      1 conditional paths
   function writeKey(Writer,KeyType) in line 234
      1 lines of code
      2 parameters
      1 conditional paths
   function writeToFile(String) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PropertyDatabase() in line 58
      3 lines of code
      0 parameters
      1 conditional paths
   variable propertyMap in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/interproc/PropertyDatabaseFormatException.java
module edu::umd::cs::findbugs::ba::interproc::PropertyDatabaseFormatException
   inherits from Exception
   function PropertyDatabaseFormatException(String) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/InvalidBytecodeException.java
module edu::umd::cs::findbugs::ba::InvalidBytecodeException
   inherits from java::lang::RuntimeException
   function InvalidBytecodeException(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function InvalidBytecodeException(String,Throwable) in line 52
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function InvalidBytecodeException(String,MethodGen,InstructionHandle) in line 63
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function InvalidBytecodeException(String,MethodGen,InstructionHandle,Throwable) in line 75
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/JavaClassAndMethod.java
module edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function equals(Object) in line 115
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function JavaClassAndMethod(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getJavaClass() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getMethod() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function getSlashedClassName() in line 105
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function hashCode() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toMethodDescriptor() in line 97
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getSlashedClassName() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toString() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function toXMethod() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function JavaClassAndMethod(JavaClass,Method) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function JavaClassAndMethod(XMethod) in line 57
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   variable javaClass in line 37
   variable method in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/JavaClassAndMethodChooser.java
module edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function choose(JavaClassAndMethod) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/JCIPAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function getClassAnnotation(String,String) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClass(String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function getEntryForClass(String) in line 62
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function getEntryForClassMember(ClassMember) in line 52
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function getFieldAnnotation(XField,String) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function getMethodAnnotation(XMethod,String) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasClassAnnotation(String,String) in line 35
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClass(String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasFieldAnnotation(XField,String) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function hasMethodAnnotation(XMethod,String) in line 48
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getEntryForClassMember(ClassMember) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/LegacyAnalysisContext.java
module edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   inherits from edu::umd::cs::findbugs::ba::AnalysisContext
   function addApplicationClassToRepository(JavaClass) in line 201
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable subtypes defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses function addApplicationClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function addClasspathEntry(String) in line 195
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addURL(String) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function clearClassContextCache() in line 189
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable classContextCache defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function clearRepository() in line 165
      protection public
      22 lines of code
      0 parameters
      2 conditional paths
      uses function clearClassContextCache() defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses function getInnerClassAccessMap() defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses function clearCache() defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
   function getAnnotationRetentionDatabase() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationRetentionDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getCheckReturnAnnotationDatabase() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getClassContext(JavaClass) in line 224
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable classContextCache defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses function getBoolProperty(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable CONSERVE_SPACE defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable DEFAULT_CACHE_SIZE defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getClassContextStats() in line 239
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable classContextCache defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getFieldStoreTypeDatabase() in line 250
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable fieldStoreTypeDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getInnerClassAccessMap() in line 272
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable innerClassAccessMap defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getJCIPAnnotationDatabase() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable jcipAnnotationDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getLookupFailureCallback() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getNullnessAnnotationDatabase() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nullnessAnnotationDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getReturnValueNullnessPropertyDatabase() in line 283
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable returnValueNullnessDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getSourceFinder() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFinder defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getSourceInfoMap() in line 245
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceInfoMap defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getSubtypes() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable subtypes defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function getUnconditionalDerefParamDatabase() in line 258
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function initDatabases() in line 134
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses variable annotationRetentionDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses variable jcipAnnotationDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses variable nullnessAnnotationDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
   function lookupClass(@NonNull String) in line 207
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function updateDatabases(int) in line 143
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses variable nullnessAnnotationDatabase defined in edu::umd::cs::findbugs::ba::LegacyAnalysisContext
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
   variable annotationRetentionDatabase in line 70
   variable checkReturnAnnotationDatabase in line 63
   variable classContextCache in line 45
   variable DEFAULT_CACHE_SIZE in line 94
   variable fieldStoreTypeDatabase in line 52
   variable innerClassAccessMap in line 48
   variable jcipAnnotationDatabase in line 77
   variable lookupFailureCallback in line 43
   variable nullnessAnnotationDatabase in line 56
   variable originalRepository in line 87
   variable returnValueNullnessDatabase in line 54
   variable sourceFinder in line 44
   variable sourceInfoMap in line 47
   variable subtypes in line 46
   variable unconditionalDerefParamDatabase in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/LineNumberMap.java
module edu::umd::cs::findbugs::ba::LineNumberMap
   function build() in line 66
      protection public
      40 lines of code
      0 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function checkTable(LineNumberTable) defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable LINE_NUMBER_BUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function hasLineNumbers() defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function checkTable(LineNumberTable) in line 107
      11 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function hasLineNumbers() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function lookupLineNumber(InstructionHandle) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
   function LineNumberMap(MethodGen) in line 56
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::LineNumberMap
      uses function hasLineNumbers() defined in edu::umd::cs::findbugs::ba::LineNumberMap
   variable DEBUG in line 39
   variable hasLineNumbers in line 49
   variable LINE_NUMBER_BUG in line 45
   variable lineNumberMap in line 48
   variable methodGen in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/LiveLocalStoreAnalysis.java
module edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   inherits from BackwardDataflowAnalysis< BitSet >
   inherits from edu::umd::cs::findbugs::ba::Debug
   function copy(BitSet,BitSet) in line 62
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function factToString(BitSet) in line 141
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function initEntryFact(BitSet) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(BitSet) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeFactTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function isFactValid(BitSet) in line 132
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function isStoreAlive(BitSet,int) in line 161
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function isTop(BitSet) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function killedByStore(BitSet,int) in line 169
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable killedByStoreOffset defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function main(String[]) in line 173
      protection public
      21 lines of code
      1 parameters
      2 conditional paths
      uses function getLiveLocalStoreDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(BitSet) in line 75
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable topBit defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function meetInto(BitSet,Edge,BitSet) in line 84
      protection public
      16 lines of code
      3 parameters
      3 conditional paths
      uses function isFactValid(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function isTop(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses function copy(BitSet,BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function same(BitSet,BitSet) in line 80
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,BitSet) in line 102
      protection public
      28 lines of code
      3 parameters
      3 conditional paths
      uses function isFactValid(BitSet) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
      uses variable killedByStoreOffset defined in edu::umd::cs::findbugs::ba::LiveLocalStoreAnalysis
   function LiveLocalStoreAnalysis(MethodGen,ReverseDepthFirstSearch,DepthFirstSearch) in line 52
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable rdfs defined in BackwardDataflowAnalysis< BitSet >
      uses variable dfs defined in BackwardDataflowAnalysis< BitSet >
   variable killedByStoreOffset in line 50
   variable topBit in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/LiveLocalStoreDataflow.java
module edu::umd::cs::findbugs::ba::LiveLocalStoreDataflow
   inherits from Dataflow< BitSet, LiveLocalStoreAnalysis >
   function getFactAfterLocation(Location) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< BitSet, LiveLocalStoreAnalysis >
   function getFactAtLocation(Location) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< BitSet, LiveLocalStoreAnalysis >
   function LiveLocalStoreDataflow(CFG,LiveLocalStoreAnalysis) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< BitSet, LiveLocalStoreAnalysis >
      uses variable analysis defined in Dataflow< BitSet, LiveLocalStoreAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/Location.java
module edu::umd::cs::findbugs::ba::Location
   inherits from Comparable
   function compareTo(Location) in line 106
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function equals(Object) in line 122
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function Location(@NonNull InstructionHandle,@NonNull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function getBasicBlock() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
   function getFirstLocation(@NonNull BasicBlock) in line 58
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function Location(@NonNull InstructionHandle,@NonNull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
   function getHandle() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function getLastLocation(@NonNull BasicBlock) in line 64
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function Location(@NonNull InstructionHandle,@NonNull BasicBlock) defined in edu::umd::cs::findbugs::ba::Location
   function hashCode() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
   function isFirstInstructionInBasicBlock() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function isLastInstructionInBasicBlock() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function toString() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function Location(@NonNull InstructionHandle,@NonNull BasicBlock) in line 51
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::Location
      uses variable basicBlock defined in edu::umd::cs::findbugs::ba::Location
   variable basicBlock in line 43
   variable handle in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/LockAnalysis.java
module edu::umd::cs::findbugs::ba::LockAnalysis
   inherits from ForwardDataflowAnalysis< LockSet >
   function copy(LockSet,LockSet) in line 66
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function createFact() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initEntryFact(LockSet) in line 70
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable isSynchronized defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vna defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getThisValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getClassObjectValue(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
   function initResultFact(LockSet) in line 83
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
   function isFactValid(LockSet) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(LockSet) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::LockSet
   function lockOp(LockSet,int,int) in line 123
      10 lines of code
      3 parameters
      4 conditional paths
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
   function main(String[]) in line 139
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function getLockDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(LockSet) in line 88
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
   function meetInto(LockSet,Edge,LockSet) in line 99
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function same(LockSet,LockSet) in line 95
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function transferInstruction(InstructionHandle,BasicBlock,LockSet) in line 104
      protection public
      18 lines of code
      3 parameters
      4 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function lockOp(LockSet,int,int) defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isSynchronized defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable isStatic defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vna defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getThisValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LockAnalysis(MethodGen,ValueNumberDataflow,DepthFirstSearch) in line 52
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< LockSet >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::LockAnalysis
   variable DEBUG in line 44
   variable isStatic in line 50
   variable isSynchronized in line 49
   variable methodGen in line 46
   variable vna in line 48
   variable vnaDataflow in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/LockChecker.java
module edu::umd::cs::findbugs::ba::LockChecker
   function execute() in line 71
      protection public
      9 lines of code
      0 parameters
      4 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getLockDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function getFactAtLocation(Location) in line 88
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable lockDataflow defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockDataflow
      uses variable cache defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable method defined in edu::umd::cs::findbugs::ba::LockChecker
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function LockChecker(ClassContext,Method) in line 59
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::LockChecker
      uses variable method defined in edu::umd::cs::findbugs::ba::LockChecker
   variable cache in line 51
   variable classContext in line 47
   variable lockDataflow in line 49
   variable method in line 48
   variable vnaDataflow in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/LockDataflow.java
module edu::umd::cs::findbugs::ba::LockDataflow
   inherits from Dataflow< LockSet, LockAnalysis >
   function getFactAtLocation(Location) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< LockSet, LockAnalysis >
   function LockDataflow(CFG,LockAnalysis) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< LockSet, LockAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/LockSet.java
module edu::umd::cs::findbugs::ba::LockSet
   function addEntry(int,int,int) in line 292
      26 lines of code
      3 parameters
      3 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function clear() in line 148
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function containsReturnValue(ValueNumberFactory) in line 199
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function copyFrom(LockSet) in line 137
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
   function findIndex(int) in line 281
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function getLockCount(int) in line 83
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function findIndex(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function getLockedValueNumbers(ValueNumberFrame) in line 356
      protection public
      8 lines of code
      1 parameters
      4 conditional paths
      uses function allSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function getNumLockedObjects() in line 121
      protection public
      10 lines of code
      0 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable INVALID defined in edu::umd::cs::findbugs::ba::LockSet
   function identicalSubset(LockSet) in line 254
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function intersectWith(LockSet) in line 219
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function isEmpty() in line 242
      protection public
      11 lines of code
      0 parameters
      4 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function isTop() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
   function meetWith(LockSet) in line 160
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function mergeValues(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setLockCount(int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function setDefaultLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
   function mergeValues(int,int) in line 268
      12 lines of code
      2 parameters
      5 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
   function sameAs(LockSet) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function identicalSubset(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
   function setDefaultLockCount(int) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
   function setLockCount(int,int) in line 100
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function findIndex(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function addEntry(int,int,int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
   function toString() in line 320
      protection public
      31 lines of code
      0 parameters
      8 conditional paths
      uses variable defaultLockCount defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable array defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::LockSet
   function LockSet() in line 71
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_CAPACITY defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable TOP defined in edu::umd::cs::findbugs::ba::LockSet
      uses function clear() defined in edu::umd::cs::findbugs::ba::LockSet
   variable array in line 59
   variable BOTTOM in line 48
      protection public
   variable DEFAULT_CAPACITY in line 51
   variable defaultLockCount in line 64
   variable INVALID in line 50
   variable TOP in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/MethodChooser.java
module edu::umd::cs::findbugs::ba::MethodChooser
   function choose(Method) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/MethodHash.java
module edu::umd::cs::findbugs::ba::MethodHash
   inherits from Comparable
   function compareHashes(byte[],byte[]) in line 163
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function toUnsigned(byte) defined in edu::umd::cs::findbugs::ba::MethodHash
   function compareTo(MethodHash) in line 146
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function compareHashes(byte[],byte[]) defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function computeHash(Method) in line 103
      protection public
      29 lines of code
      1 parameters
      3 conditional paths
      uses function scan(byte[],Callback) defined in edu::umd::cs::findbugs::ba::BytecodeScanner
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function equals(Object) in line 151
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function isSameHash(MethodHash) defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodHash() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodName() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::MethodHash
   function getMethodSig() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::MethodHash
   function hashCode() in line 157
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function isSameHash(MethodHash) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   function isStatic() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toUnsigned(byte) in line 179
      7 lines of code
      1 parameters
      2 conditional paths
   function MethodHash() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function MethodHash(String,String,boolean,byte[]) in line 59
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable methodSig defined in edu::umd::cs::findbugs::ba::MethodHash
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::MethodHash
      uses variable hash defined in edu::umd::cs::findbugs::ba::MethodHash
   variable hash in line 39
   variable isStatic in line 42
   variable METHOD_HASH_ELEMENT_NAME in line 37
      protection public
   variable methodName in line 40
   variable methodSig in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/MethodUnprofitableException.java
module edu::umd::cs::findbugs::ba::MethodUnprofitableException
   inherits from edu::umd::cs::findbugs::ba::CFGBuilderException
   function getMethod() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   function MethodUnprofitableException(JavaClassAndMethod) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   function MethodUnprofitableException(JavaClass,Method) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::MethodUnprofitableException
   variable method in line 31
   variable serialVersionUID in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/MissingClassException.java
module edu::umd::cs::findbugs::ba::MissingClassException
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysisException
   function getClassName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::MissingClassException
   function getClassNotFoundException() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MissingClassException(String) in line 33
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::MissingClassException
   function MissingClassException(ClassNotFoundException) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable className in line 31
   variable serialVersionUID in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/MissingClassException.java
module edu::umd::cs::findbugs::classfile::MissingClassException
   inherits from edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function getClassDescriptor() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
   function MissingClassException(ClassDescriptor) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
   function MissingClassException(ClassDescriptor,Throwable) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::MissingClassException
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   variable classDescriptor in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/DerefFinder.java
module edu::umd::cs::findbugs::ba::npe::DerefFinder
   function getAnalysis(ClassContext,Method) in line 66
      protection public
      126 lines of code
      2 parameters
      26 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getMethodNullnessAnnotation(ClassContext,Method) defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function add(Location,ValueNumber,PointerUsageRequiringNonNullValue) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
   function getMethodNullnessAnnotation(ClassContext,Method) in line 193
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   variable DEBUG in line 65
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/IsNullConditionDecision.java
module edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function equals(Object) in line 67
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function IsNullConditionDecision(@CheckForNull ValueNumber,@CheckForNull IsNullValue,@CheckForNull IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function getDecision(int) in line 110
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function getValue() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function hashCode() in line 60
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function isEdgeFeasible(int) in line 98
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function isRedundant() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function toString() in line 119
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   function IsNullConditionDecision(@CheckForNull ValueNumber,@CheckForNull IsNullValue,@CheckForNull IsNullValue) in line 50
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
   variable fallThroughDecision in line 40
   variable ifcmpDecision in line 39
   variable value in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValue.java
module edu::umd::cs::findbugs::ba::npe::IsNullValue
   inherits from edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   inherits from edu::umd::cs::findbugs::ba::Debug
   function checkedNonNullValue() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkedNullValue() in line 242
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function checkNoKaboomNNLocation() in line 129
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function createInstanceByFlagList() in line 92
      20 lines of code
      0 parameters
      2 conditional paths
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function downgradeOnControlSplit() in line 464
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable NCP_EXTRA_BRANCH defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function nullOnComplexPathValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function nullOnComplexPathValue3() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function equals(Object) in line 136
      protection public
      9 lines of code
      1 parameters
      5 conditional paths
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
   function getBaseKind() in line 154
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function getFlags() in line 158
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_MASK defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function getLocationOfKaBoom() in line 454
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function hashCode() in line 147
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
   function isChecked() in line 188
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isDefinitelyNotNull() in line 411
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isDefinitelyNull() in line 370
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isException() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isFieldValue() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnComplicatedPath() in line 393
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isNullOnSomePath() in line 378
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP_EXTRA_BRANCH defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isParamValue() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function isReturnValue() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function markInformationAsComingFromFieldValue(XField) in line 225
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function markInformationAsComingFromReturnValueOfMethod(XMethod) in line 216
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function merge(IsNullValue,IsNullValue) in line 332
      protection public
      34 lines of code
      2 parameters
      6 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable mergeMatrix defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function noKaboomNonNullValue(@NonNull Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function mightBeNull() in line 404
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function noKaboomNonNullValue(@NonNull Location) in line 266
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nonNullValue() in line 249
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nonReportingNotNullValue() in line 291
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnComplexPathValue() in line 302
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnComplexPathValue3() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP3 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullOnSimplePathValue() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function nullValue() in line 233
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function parameterMarkedAsMightBeNull(XMethodParameter) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function pathSensitiveNonNullValue() in line 325
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function pathSensitiveNullValue() in line 318
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function toBaseValue() in line 199
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function toExceptionValue() in line 206
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function IsNullValue(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable instanceByFlagsList defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FLAG_SHIFT defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function toString() in line 417
      protection public
      37 lines of code
      0 parameters
      16 conditional paths
      uses variable DEBUG_EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable PARAM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable RETURN_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable FIELD_VAL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG_KABOOM defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NULL defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable CHECKED_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NN_UNKNOWN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NCP2 defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function wouldHaveBeenAKaboom() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getBaseKind() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NO_KABOOM_NN defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function IsNullValue(int) in line 117
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkNoKaboomNNLocation() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function IsNullValue(int,Location) in line 123
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable locationOfKaBoom defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkNoKaboomNNLocation() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   variable CHECKED_NN in line 51
   variable CHECKED_NULL in line 46
   variable DEBUG_EXCEPTION in line 40
   variable DEBUG_KABOOM in line 41
   variable EXCEPTION in line 68
   variable FIELD_VAL in line 73
   variable FLAG_MASK in line 75
   variable FLAG_SHIFT in line 65
   variable instanceByFlagsList in line 90
   variable kind in line 114
   variable locationOfKaBoom in line 115
   variable mergeMatrix in line 77
   variable NCP2 in line 61
   variable NCP3 in line 63
   variable NN in line 49
   variable NN_UNKNOWN in line 59
   variable NO_KABOOM_NN in line 53
   variable NSP in line 57
   variable NULL in line 44
   variable PARAM in line 70
   variable RETURN_VAL in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueAnalysis.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) in line 496
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function createFact() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function endTransfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame) in line 199
      protection public
      15 lines of code
      3 parameters
      3 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getDecision(BasicBlock,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getClassAndMethod() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getDecision(BasicBlock,IsNullValueFrame) in line 523
      144 lines of code
      2 parameters
      26 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable nullComparisonInstructionSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function getFactAtMidEdge(Edge) in line 741
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses function isForwards() defined in ForwardDataflowAnalysis< FrameType >
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function meetInto(IsNullValueFrame,Edge,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function getLocationWhereValueBecomesNullSet() in line 501
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function initEntryFact(IsNullValueFrame) in line 139
      protection public
      41 lines of code
      1 parameters
      7 conditional paths
      uses variable cachedEntryFact defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function main(String[]) in line 759
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function meetInto(IsNullValueFrame,Edge,IsNullValueFrame) in line 287
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function meetInto(IsNullValueFrame,Edge,IsNullValueFrame,boolean) in line 291
      protection public
      175 lines of code
      4 parameters
      34 conditional paths
      uses variable NO_SPLIT_DOWNGRADE_NSP defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable numNonExceptionSuccessorMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function downgradeOnControlSplit() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable NO_SWITCH_DEFAULT_AS_EXCEPTION defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function toExceptionValues() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getDecision(BasicBlock,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function isEdgeFeasible(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getDecision(int) defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function availableLoadMapAsString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function replaceValues(IsNullValueFrame,IsNullValueFrame,ValueNumber,ValueNumberFrame,ValueNumberFrame,IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function useNewValueNumberForLoad(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function mergeInto(IsNullValueFrame,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function mergeInto(IsNullValueFrame,IsNullValueFrame) in line 471
      13 lines of code
      2 parameters
      4 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function mergeValues(IsNullValueFrame,IsNullValueFrame,int) in line 506
      5 lines of code
      3 parameters
      1 conditional paths
   function replaceValues(IsNullValueFrame,IsNullValueFrame,ValueNumber,ValueNumberFrame,ValueNumberFrame,IsNullValue) in line 683
      57 lines of code
      6 parameters
      14 conditional paths
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function setKnownValue(@NonNull ValueNumber,@NonNull IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
   function setClassAndMethod(JavaClassAndMethod) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function startIteration() in line 489
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable locationWhereValueBecomesNullSet defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function startTransfer() in line 194
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function transfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame,IsNullValueFrame) in line 183
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses function startTransfer() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function endTransfer(BasicBlock,@CheckForNull InstructionHandle,IsNullValueFrame) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
   function transferInstruction(InstructionHandle,BasicBlock,IsNullValueFrame) in line 216
      protection public
      60 lines of code
      3 parameters
      8 conditional paths
      uses variable lastFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function copyFrom(Frame< IsNullValue >) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable instanceOfFrame defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getSlotContainingNewNullValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function addLocationWhereValueBecomesNull(LocationWhereValueBecomesNull) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   function IsNullValueAnalysis(MethodGen,CFG,ValueNumberDataflow,DepthFirstSearch,AssertionMethods) in line 94
      protection public
      30 lines of code
      5 parameters
      4 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable TRACK_VALUE_NUMBERS_IN_NULL_POINTER_ANALYSIS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
      uses function getNumBasicBlocks() defined in edu::umd::cs::findbugs::ba::CFG
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable numNonExceptionSuccessorMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysis
   variable cachedEntryFact in line 90
   variable classAndMethod in line 92
   variable instanceOfFrame in line 89
   variable lastFrame in line 88
   variable locationWhereValueBecomesNullSet in line 85
   variable methodGen in line 81
   variable nullComparisonInstructionSet in line 277
   variable numNonExceptionSuccessorMap in line 84
   variable trackValueNumbers in line 86
   variable visitor in line 82
   variable vnaDataflow in line 83
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueAnalysisFeatures.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueAnalysisFeatures
   variable NCP_EXTRA_BRANCH in line 52
      protection public
   variable NO_SPLIT_DOWNGRADE_NSP in line 38
      protection public
   variable NO_SWITCH_DEFAULT_AS_EXCEPTION in line 44
      protection public
   variable UNKNOWN_VALUES_ARE_NSP in line 59
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueDataflow.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function getFactAtLocation(Location) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< Fact, AnalysisType >
   function getFactAtMidEdge(Edge) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in Dataflow< Fact, AnalysisType >
   function IsNullValueDataflow(CFG,IsNullValueAnalysis) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueFrame.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function cleanStaleKnowledge(ValueNumberFrame) in line 50
      protection public
      14 lines of code
      1 parameters
      7 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function copyFrom(Frame< IsNullValue >) in line 171
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function IsNullValueFrame(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function downgradeOnControlSplit() in line 220
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function downgradeOnControlSplit() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getDecision() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValue(ValueNumber) in line 111
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValueMapEntrySet() in line 124
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function getKnownValues() in line 116
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function mergeKnownValuesWith(IsNullValueFrame) in line 132
      protection public
      34 lines of code
      1 parameters
      7 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function sameAs(Frame< IsNullValue >) in line 180
      protection public
      9 lines of code
      1 parameters
      5 conditional paths
      uses function IsNullValueFrame(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setDecision(@CheckForNull IsNullConditionDecision) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setKnownValue(@NonNull ValueNumber,@NonNull IsNullValue) in line 93
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function setTop() in line 65
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function toExceptionValues() in line 72
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function toString() in line 190
      protection public
      25 lines of code
      0 parameters
      5 conditional paths
      uses variable decision defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe::IsNullConditionDecision
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function useNewValueNumberForLoad(ValueNumber,ValueNumber) in line 102
      protection public
      9 lines of code
      2 parameters
      4 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
      uses variable knownValueMap defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function IsNullValueFrame(int,boolean) in line 42
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   variable decision in line 38
   variable knownValueMap in line 40
   variable trackValueNumbers in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/IsNullValueFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function analyzeInstruction(Instruction) in line 85
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function checkForKnownValue(Instruction) in line 338
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function getDefaultValue() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSlotContainingNewNullValue() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function handleInvoke(InvokeInstruction) in line 135
      67 lines of code
      1 parameters
      15 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable MODEL_NONNULL_RETURN defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromReturnValueOfMethod(XMethod) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NULLABLE defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function modelInstruction(Instruction,int,int,Value) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function newValueOnTOS() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable NO_ASSERT_HACK defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function isAssertionCall(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function newValueOnTOS() in line 207
      22 lines of code
      0 parameters
      6 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable slotContainingNewNullValue defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
   function produce(IsNullValue) in line 118
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function newValueOnTOS() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function produce2(IsNullValue) in line 124
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitACONST_NULL(ACONST_NULL) in line 363
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitANEWARRAY(ANEWARRAY) in line 377
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 397
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 261
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function checkForKnownValue(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromFieldValue(XField) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function visitGETSTATIC(GETSTATIC) in line 292
      protection public
      34 lines of code
      1 parameters
      7 conditional paths
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function checkForKnownValue(Instruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function markInformationAsComingFromFieldValue(XField) defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 409
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 405
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 401
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 413
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitLDC(LDC) in line 387
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 392
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce2(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 382
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitNEW(NEW) in line 367
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitNEWARRAY(NEWARRAY) in line 372
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function modelNormalInstruction(Instruction,int,int) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function produce(IsNullValue) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 231
      protection public
      28 lines of code
      1 parameters
      7 conditional paths
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getAvailableLoad(AvailableLoad) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   function IsNullValueFrameModelingVisitor(ConstantPoolGen,AssertionMethods,ValueNumberDataflow,boolean) in line 70
      protection public
      10 lines of code
      4 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
      uses variable trackValueNumbers defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrameModelingVisitor
   variable assertionMethods in line 65
   variable MODEL_NONNULL_RETURN in line 64
   variable NO_ASSERT_HACK in line 63
   variable slotContainingNewNullValue in line 68
   variable trackValueNumbers in line 67
   variable vnaDataflow in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/LocationWhereValueBecomesNull.java
module edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   inherits from Comparable
   function compareTo(LocationWhereValueBecomesNull) in line 62
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function compareTo(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function equals(Object) in line 75
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function LocationWhereValueBecomesNull(Location,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function getLocation() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function getValueNumber() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   function hashCode() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function LocationWhereValueBecomesNull(Location,ValueNumber) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe::LocationWhereValueBecomesNull
   variable location in line 31
   variable valueNumber in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/MayReturnNullPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::MayReturnNullPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 35
      4 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(Boolean) in line 42
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function readFromFile(String) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses variable DEFAULT_NULL_RETURN_VALUE_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/NonNullContractCollector.java
module edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
   inherits from edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function checkSpecifications(int,SpecificationBuilder) in line 93
      protection public
      37 lines of code
      2 parameters
      11 conditional paths
      uses variable specificationList defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
      uses function checkParam(int) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
      uses function setCheckForNullParam(int,NonNullSpecification) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
      uses function setNonNullParam(int,NonNullSpecification) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
   function choose(JavaClassAndMethod) in line 59
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable nonNullParamDatabase defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses variable possiblyNullParamDatabase defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
      uses variable specificationList defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
   function findContractForCallSite(InvokeInstruction,ConstantPoolGen) in line 75
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function findContractForMethod(JavaClassAndMethod) in line 79
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function getAnnotationSets(int,final BitSet,final BitSet) in line 163
      protection public
      16 lines of code
      3 parameters
      1 conditional paths
      uses function checkParam(int) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
      uses function setNonNullParam(int,NonNullSpecification) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
      uses function setCheckForNullParam(int,NonNullSpecification) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
      uses function checkSpecifications(int,SpecificationBuilder) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
   function getViolationList(int,final BitSet,final List< NonNullParamViolation >,final BitSet) in line 131
      protection public
      31 lines of code
      4 parameters
      5 conditional paths
      uses function checkParam(int) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
      uses function setNonNullParam(int,NonNullSpecification) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
      uses function getClassAndMethod() defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses function setCheckForNullParam(int,NonNullSpecification) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
      uses function checkSpecifications(int,SpecificationBuilder) defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
   function NonNullContractCollector(ParameterNullnessPropertyDatabase,ParameterNullnessPropertyDatabase) in line 52
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable nonNullParamDatabase defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
      uses variable possiblyNullParamDatabase defined in edu::umd::cs::findbugs::ba::npe::NonNullContractCollector
   variable DEBUG_NULLARG in line 46
   variable nonNullParamDatabase in line 48
   variable possiblyNullParamDatabase in line 49
   variable specificationList in line 50
module edu::umd::cs::findbugs::ba::npe::NonNullContractCollector::SpecificationBuilder
   function checkParam(int) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setCheckForNullParam(int,NonNullSpecification) in line 90
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setNonNullParam(int,NonNullSpecification) in line 89
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/NonNullParamViolation.java
module edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function getClassAndMethod() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function getParam() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable param defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   function NonNullParamViolation(JavaClassAndMethod,int) in line 28
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
      uses variable param defined in edu::umd::cs::findbugs::ba::npe::NonNullParamViolation
   variable classAndMethod in line 25
   variable param in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/NonNullReturnValueAnnotationChecker.java
module edu::umd::cs::findbugs::ba::npe::NonNullReturnValueAnnotationChecker
   inherits from edu::umd::cs::findbugs::ba::JavaClassAndMethodChooser
   function choose(JavaClassAndMethod) in line 36
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function toXMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NonNullReturnValueAnnotationChecker
      uses variable database defined in edu::umd::cs::findbugs::ba::npe::NonNullReturnValueAnnotationChecker
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
   function getAnnotatedMethod() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotatedMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullReturnValueAnnotationChecker
   function getProperty() in line 28
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable property defined in edu::umd::cs::findbugs::ba::npe::NonNullReturnValueAnnotationChecker
   function NonNullReturnValueAnnotationChecker(MayReturnNullPropertyDatabase) in line 24
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::ba::npe::NonNullReturnValueAnnotationChecker
   variable annotatedMethod in line 20
   variable database in line 19
   variable DEBUG in line 17
   variable property in line 21
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/NonNullSpecification.java
module edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getCheckForNullProperty() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getClassAndMethod() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function getNonNullProperty() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function toString() in line 48
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses variable nonNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   function NonNullSpecification(JavaClassAndMethod,ParameterNullnessProperty,ParameterNullnessProperty) in line 29
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable classAndMethod defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
      uses variable possiblyNullProperty defined in edu::umd::cs::findbugs::ba::npe::NonNullSpecification
   variable classAndMethod in line 25
   variable nonNullProperty in line 26
   variable possiblyNullProperty in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonCollector.java
module edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function foundGuaranteedNullDeref(Set< Location >,Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,BugAnnotation,NullValueUnconditionalDeref,boolean) in line 75
      protection public
      1 lines of code
      8 parameters
      1 conditional paths
   function foundNullDeref(ClassContext,Location,ValueNumber,IsNullValue,ValueNumberFrame) in line 50
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function foundRedundantNullCheck(Location,RedundantBranch) in line 59
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/NullDerefAndRedundantComparisonFinder.java
module edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function analyzeIfNullBranch(BasicBlock,InstructionHandle) in line 612
      52 lines of code
      2 parameters
      10 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLineNumber(Method,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getOutgoingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setInfeasibleEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function analyzeNullCheck(ClassContext,Method,IsNullValueDataflow,BasicBlock) in line 665
      35 lines of code
      4 parameters
      6 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundNullDeref(ClassContext,Location,ValueNumber,IsNullValue,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function analyzeRefComparisonBranch(BasicBlock,InstructionHandle) in line 556
      54 lines of code
      2 parameters
      11 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLineNumber(Method,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getOutgoingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function setInfeasibleEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function checkForUnconditionallyDereferencedNullValues(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,ValueNumberFrame,IsNullValueFrame,UnconditionalValueDerefSet) in line 428
      55 lines of code
      6 parameters
      9 conditional paths
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable MY_DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function noteUnconditionallyDereferencedNullValue(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,UnconditionalValueDerefSet,IsNullValue,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getKnownValueMapEntrySet() defined in edu::umd::cs::findbugs::ba::npe::IsNullValueFrame
   function examineBasicBlocks() in line 161
      31 lines of code
      0 parameters
      8 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function analyzeNullCheck(ClassContext,Method,IsNullValueDataflow,BasicBlock) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function analyzeRefComparisonBranch(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function analyzeIfNullBranch(BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function examineNullValues() in line 201
      191 lines of code
      0 parameters
      38 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable uvdDataflow defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function noteUnconditionallyDereferencedNullValue(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,UnconditionalValueDerefSet,IsNullValue,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable assertionMethods defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isAssertionInstruction(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::AssertionMethods
      uses function checkForUnconditionallyDereferencedNullValues(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,ValueNumberFrame,IsNullValueFrame,UnconditionalValueDerefSet) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function formatAsString(boolean) defined in edu::umd::cs::findbugs::ba::Edge
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getFactOnEdge(Edge) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getFactAtMidEdge(Edge) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable PRUNE_GUARANTEED_DEREFERENCES defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getNonExceptionPostDominatorsAnalysis(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function removeStrictlyPostDominatedLocations(Set< Location >,PostDominatorsAnalysis) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundGuaranteedNullDeref(Set< Location >,Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,BugAnnotation,NullValueUnconditionalDeref,boolean) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function examineRedundantBranches() in line 529
      26 lines of code
      0 parameters
      6 conditional paths
      uses variable redundantBranchList defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable undeterminedBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelySameBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable definitelyDifferentBranchSet defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable lineMentionedMultipleTimes defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function foundRedundantNullCheck(Location,RedundantBranch) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function execute() in line 126
      protection public
      27 lines of code
      0 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable findGuaranteedDerefs defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable DEBUG_DEREFS defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function examineBasicBlocks() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function examineNullValues() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function examineRedundantBranches() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 755
      protection public
      13 lines of code
      4 parameters
      3 conditional paths
      uses function findLocalAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function isSignificant() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function findFieldAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findFieldAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 714
      protection public
      9 lines of code
      4 parameters
      2 conditional paths
      uses function findXFieldFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findLocalAnnotationFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 724
      protection public
      22 lines of code
      4 parameters
      5 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function findXFieldFromValueNumber(Method,Location,ValueNumber,ValueNumberFrame) in line 701
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function getLineNumber(Method,InstructionHandle) in line 769
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
   function noteUnconditionallyDereferencedNullValue(Location,Map< ValueNumber, SortedSet< Location >>,Map< ValueNumber, NullValueUnconditionalDeref >,UnconditionalValueDerefSet,IsNullValue,ValueNumber) in line 494
      31 lines of code
      6 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function add(IsNullValue,Set< Location >) defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function getUnconditionalDerefLocationSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
   function removeStrictlyPostDominatedLocations(Set< Location >,PostDominatorsAnalysis) in line 393
      23 lines of code
      2 parameters
      6 conditional paths
      uses function getAllDominatedBy(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function equals(Object) defined in edu::umd::cs::findbugs::graph::AbstractVertex
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function NullDerefAndRedundantComparisonFinder(ClassContext,Method,NullDerefAndRedundantComparisonCollector) in line 107
      protection public
      18 lines of code
      3 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable method defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses variable collector defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function getAnalysisContext() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBoolProperty(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable TRACK_GUARANTEED_VALUE_DEREFS_IN_NULL_POINTER_ANALYSIS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function getAssertionMethods() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable assertionMethods in line 94
   variable classContext in line 80
   variable collector in line 82
   variable DEBUG in line 75
   variable DEBUG_DEREFS in line 78
   variable definitelyDifferentBranchSet in line 87
   variable definitelySameBranchSet in line 86
   variable findGuaranteedDerefs in line 83
   variable invDataflow in line 91
   variable lineMentionedMultipleTimes in line 89
   variable method in line 81
   variable MY_DEBUG in line 417
   variable PRUNE_GUARANTEED_DEREFERENCES in line 76
   variable redundantBranchList in line 85
   variable undeterminedBranchSet in line 88
   variable uvdDataflow in line 93
   variable vnaDataflow in line 92
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/NullValueUnconditionalDeref.java
module edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function add(IsNullValue,Set< Location >) in line 29
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysOnExceptionPath defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable alwaysMethodReturnValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses variable values defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses variable derefLocationSet defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function getDerefLocationSet() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable derefLocationSet defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isAlwaysOnExceptionPath() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysOnExceptionPath defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function isMethodReturnValue() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable alwaysMethodReturnValue defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
   function NullValueUnconditionalDeref() in line 19
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable alwaysMethodReturnValue in line 15
   variable alwaysOnExceptionPath in line 14
   variable derefLocationSet in line 16
   variable values in line 17
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/ParameterNullnessProperty.java
module edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function copyFrom(ParameterNullnessProperty) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function getAsBitSet() in line 121
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function getViolatedParamSet(BitSet) in line 113
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function intersectWith(ParameterNullnessProperty) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function isEmpty() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function isNonNull(int) in line 98
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function setNonNull(int,boolean) in line 82
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function setNonNullParamSet(BitSet) in line 70
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function setNonNull(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function toString() in line 140
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function ParameterNullnessProperty() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nonNullParamSet defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   variable MAX_PARAMS in line 34
      protection public
   variable nonNullParamSet in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/ParameterNullnessPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::ParameterNullnessPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 38
      11 lines of code
      1 parameters
      2 conditional paths
   function encodeProperty(ParameterNullnessProperty) in line 55
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/PointerUsageRequiringNonNullValue.java
module edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   abstract class
   function getDescription() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNonNullField() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNonNullParameter() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPassedAsNonNullParameter(final XMethod,final int) in line 85
      protection public
      15 lines of code
      2 parameters
      1 conditional paths
      uses function getNonNullParameter() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getPointerDereference() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getReturnFromNonNullMethod() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getReturnFromNonNullMethod(XMethod) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nonNullReturnInstance defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function getStoredIntoNonNullField(final XField) in line 101
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function getNonNullField() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
   function isDirect() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 53
   variable nonNullReturnInstance in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/RedundantBranch.java
module edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function setInfeasibleEdge(Edge) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable infeasibleEdge defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function toString() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses function toString() defined in edu::umd::cs::findbugs::ba::Location
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function RedundantBranch(Location,int,IsNullValue,IsNullValue) in line 51
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   function RedundantBranch(Location,int,IsNullValue) in line 69
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable lineNumber defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
   variable firstValue in line 35
      protection public
   variable infeasibleEdge in line 37
      protection public
   variable lineNumber in line 33
      protection public
   variable location in line 31
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathType.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function canReturnNormally() in line 55
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function copyFrom(ReturnPathType) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function isTop() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function isValid() in line 132
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function mergeWith(ReturnPathType) in line 100
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function copyFrom(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function setCanReturnNormally(boolean) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CANNOT_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function setTop() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function toString() in line 140
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CAN_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable CANNOT_RETURN_NORMALLY defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function ReturnPathType() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses variable TOP defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   variable CAN_RETURN_NORMALLY in line 37
   variable CANNOT_RETURN_NORMALLY in line 38
   variable TOP in line 39
   variable type in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeAnalysis.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   inherits from edu::umd::cs::findbugs::ba::DataflowAnalysis
   function copy(ReturnPathType,ReturnPathType) in line 64
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function createFact() in line 71
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function edgeTransfer(Edge,ReturnPathType) in line 80
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
   function finishIteration() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBlockOrder(CFG) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   function getLastUpdateTimestamp(ReturnPathType) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getOrCreateFact(HashMap< BasicBlock, ReturnPathType >,BasicBlock) in line 134
      8 lines of code
      2 parameters
      2 conditional paths
      uses function createFact() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   function getResultFact(BasicBlock) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getOrCreateFact(HashMap< BasicBlock, ReturnPathType >,BasicBlock) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable resultFactMap defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   function getStartFact(BasicBlock) in line 122
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getOrCreateFact(HashMap< BasicBlock, ReturnPathType >,BasicBlock) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable startFactMap defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   function initEntryFact(ReturnPathType) in line 146
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(ReturnPathType) in line 159
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeFactTop(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   function isForwards() in line 166
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop(ReturnPathType) in line 173
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function makeFactTop(ReturnPathType) in line 180
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function meetInto(ReturnPathType,Edge,ReturnPathType) in line 187
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function same(ReturnPathType,ReturnPathType) in line 195
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function setLastUpdateTimestamp(ReturnPathType,int) in line 202
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function startIteration() in line 209
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function transfer(BasicBlock,InstructionHandle,ReturnPathType,ReturnPathType) in line 216
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
   function ReturnPathTypeAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 53
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeAnalysis
   variable cfg in line 40
   variable dfs in line 41
   variable rdfs in line 42
   variable resultFactMap in line 44
   variable startFactMap in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeDataflow.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function getFactAfterLocation(Location) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
   function getFactAtLocation(Location) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
   function ReturnPathTypeDataflow(CFG,ReturnPathTypeAnalysis) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/ReturnValueNullnessPropertyDatabase.java
module edu::umd::cs::findbugs::ba::npe::ReturnValueNullnessPropertyDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::MethodPropertyDatabase
   function decodeProperty(String) in line 38
      4 lines of code
      1 parameters
      1 conditional paths
   function encodeProperty(Boolean) in line 50
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/UnconditionalDerefAnalysis.java
module edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
   inherits from edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
   function copy(UnconditionalDerefSet,UnconditionalDerefSet) in line 90
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createFact() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numParams defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
   function initEntryFact(UnconditionalDerefSet) in line 99
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(UnconditionalDerefSet) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeFactTop(UnconditionalDerefSet) defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
   function isFactValid(UnconditionalDerefSet) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function isTop(UnconditionalDerefSet) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function main(String[]) in line 180
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(UnconditionalDerefSet) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function meetInto(UnconditionalDerefSet,Edge,UnconditionalDerefSet) in line 115
      protection public
      18 lines of code
      3 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable EXPLICIT_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function copy(UnconditionalDerefSet,UnconditionalDerefSet) defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
   function same(UnconditionalDerefSet,UnconditionalDerefSet) in line 134
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,UnconditionalDerefSet) in line 144
      protection public
      35 lines of code
      3 parameters
      8 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
      uses function getPredecessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function makeFactTop(UnconditionalDerefSet) defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable valueNumberToParamMap defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
   function UnconditionalDerefAnalysis(ReverseDepthFirstSearch,DepthFirstSearch,CFG,MethodGen,ValueNumberDataflow,TypeDataflow) in line 71
      protection public
      18 lines of code
      6 parameters
      2 conditional paths
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
      uses function getValueNumberToParamMap(Method) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefAnalysis
   variable cfg in line 62
   variable DEBUG in line 60
   variable methodGen in line 63
   variable numParams in line 67
   variable valueNumberToParamMap in line 66
   variable vnaDataflow in line 65
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/UnconditionalDerefDataflow.java
module edu::umd::cs::findbugs::ba::npe::UnconditionalDerefDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function UnconditionalDerefDataflow(CFG,UnconditionalDerefAnalysis) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/UnconditionalDerefSet.java
module edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   inherits from java::util::BitSet
   function isBottom() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numParams defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function isTop() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numParams defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function isValid() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function setBottom() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable numParams defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function setTop() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable numParams defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function toString() in line 60
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   function UnconditionalDerefSet(int) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable numParams defined in edu::umd::cs::findbugs::ba::npe::UnconditionalDerefSet
   variable numParams in line 31
   variable serialVersionUID in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/UsagesRequiringNonNullValues.java
module edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
   function add(Location,ValueNumber,PointerUsageRequiringNonNullValue) in line 65
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::DerefFinder
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
   function get(Location,ValueNumber) in line 74
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
   function getPairs(Location) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function get(K) defined in edu::umd::cs::findbugs::util::MultiMap
   function toString() in line 54
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function keySet() defined in edu::umd::cs::findbugs::util::MultiMap
      uses function getPairs(Location) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
module edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
   function toString() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vn defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues::Pair
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   variable pu in line 38
      protection public
   variable vn in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/WillBeDereferencedAnalysis.java
module edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
   inherits from edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
   function copy(WillBeDereferencedInfo,WillBeDereferencedInfo) in line 78
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(WillBeDereferencedInfo) defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedInfo
   function createFact() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initEntryFact(WillBeDereferencedInfo) in line 86
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(WillBeDereferencedInfo) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeFactTop(WillBeDereferencedInfo) defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
   function isFactValid(WillBeDereferencedInfo) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(WillBeDereferencedInfo) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function makeFactTop(WillBeDereferencedInfo) in line 97
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function meetInto(WillBeDereferencedInfo,Edge,WillBeDereferencedInfo) in line 105
      protection public
      9 lines of code
      3 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable EXPLICIT_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function same(WillBeDereferencedInfo,WillBeDereferencedInfo) in line 115
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedInfo
   function transferInstruction(InstructionHandle,BasicBlock,WillBeDereferencedInfo) in line 125
      protection public
      31 lines of code
      3 parameters
      6 conditional paths
      uses function isFactValid(WillBeDereferencedInfo) defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
      uses function getPredecessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function isNullCheck() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function makeFactTop(WillBeDereferencedInfo) defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function WillBeDereferencedAnalysis(ReverseDepthFirstSearch,DepthFirstSearch,CFG,MethodGen,ValueNumberDataflow,TypeDataflow) in line 62
      protection public
      15 lines of code
      6 parameters
      1 conditional paths
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::BackwardDataflowAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedAnalysis
   variable cfg in line 54
   variable DEBUG in line 52
   variable methodGen in line 55
   variable vnaDataflow in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe/WillBeDereferencedInfo.java
module edu::umd::cs::findbugs::ba::npe::WillBeDereferencedInfo
   function copy() in line 38
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function copyFrom(WillBeDereferencedInfo) defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedInfo
   function copyFrom(WillBeDereferencedInfo) in line 44
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 66
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe::WillBeDereferencedInfo
   function getTop() in line 32
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 61
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function meet(WillBeDereferencedInfo) in line 49
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe2/AcmpCondition.java
module edu::umd::cs::findbugs::ba::npe2::AcmpCondition
   inherits from edu::umd::cs::findbugs::ba::npe2::Condition
   function getDecision(Edge) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getValueNumber() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function refresh(ValueNumberFrame,DefinitelyNullSet) in line 64
      protection public
      33 lines of code
      2 parameters
      1 conditional paths
   function AcmpCondition(Location) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe2::Condition
   variable fallThroughDecision in line 36
   variable ifcmpDecision in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe2/Condition.java
module edu::umd::cs::findbugs::ba::npe2::Condition
   abstract class
   function getDecision(Edge) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getLocation() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function refresh(ValueNumberFrame,DefinitelyNullSet) defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getValueNumber() defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getDecision(Edge) defined in edu::umd::cs::findbugs::ba::npe2::Condition
   function getValueNumber() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function refresh(ValueNumberFrame,DefinitelyNullSet) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function Condition(Location) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe2::Condition
   variable location in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe2/Decision.java
module edu::umd::cs::findbugs::ba::npe2::Decision
   function getNullnessValue() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nullnessValue defined in edu::umd::cs::findbugs::ba::npe2::Decision
   function isFeasible() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable feasible defined in edu::umd::cs::findbugs::ba::npe2::Decision
   function Decision(boolean,NullnessValue) in line 31
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable feasible defined in edu::umd::cs::findbugs::ba::npe2::Decision
      uses variable nullnessValue defined in edu::umd::cs::findbugs::ba::npe2::Decision
   variable feasible in line 28
   variable nullnessValue in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe2/DefinitelyNullSet.java
module edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function addAssignedNullLocation(int,int) in line 116
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function bottomBit() in line 136
      3 lines of code
      0 parameters
      1 conditional paths
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function clear() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function clearAssignNullLocations(int) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 152
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DefinitelyNullSet(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function getAssignedNullLocationSet(ValueNumber) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNulllessValue(ValueNumber) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNullnessValue(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getNullnessValue(int) in line 45
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getStartIndex(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function getStartIndex(int) in line 124
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isBottom() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isTop() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isValid() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function lastUsedBit() in line 128
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numValueNumbers defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function makeSameAs(DefinitelyNullSet) in line 93
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function mergeWith(DefinitelyNullSet) in line 98
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function makeSameAs(DefinitelyNullSet) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function setBottom() in line 80
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function setNullnessValue(ValueNumber,NullnessValue) in line 58
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getStartIndex(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function setTop() in line 71
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable contents defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function topBit() in line 132
      3 lines of code
      0 parameters
      1 conditional paths
      uses function lastUsedBit() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function toString() in line 165
      protection public
      30 lines of code
      0 parameters
      6 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses variable numValueNumbers defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function getNullnessValue(int) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function DefinitelyNullSet(int) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numValueNumbers defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   variable contents in line 33
   variable numValueNumbers in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe2/DefinitelyNullSetAnalysis.java
module edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
   inherits from edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   function changeNullnessOfValue(ValueNumber,Location,DefinitelyNullSet,NullnessValue) in line 222
      16 lines of code
      4 parameters
      2 conditional paths
   function copy(DefinitelyNullSet,DefinitelyNullSet) in line 242
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function makeSameAs(DefinitelyNullSet) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function createFact() in line 249
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function edgeTransfer(Edge,DefinitelyNullSet) in line 166
      protection public
      31 lines of code
      2 parameters
      5 conditional paths
      uses function getCondition(BasicBlock) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getDecision(Edge) defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function isFeasible() defined in edu::umd::cs::findbugs::ba::npe2::Decision
      uses function getValueNumber() defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getNullnessValue() defined in edu::umd::cs::findbugs::ba::npe2::Decision
      uses function changeNullnessOfValue(ValueNumber,Location,DefinitelyNullSet,NullnessValue) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::npe2::Condition
   function getCondition(BasicBlock) in line 143
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable conditionMap defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses variable IFNULL_OPCODE_SET defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses variable IFACMP_OPCODE_SET defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
   function initEntryFact(DefinitelyNullSet) in line 257
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function initResultFact(DefinitelyNullSet) in line 265
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isFactValid(DefinitelyNullSet) in line 94
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function isTop(DefinitelyNullSet) in line 275
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function main(String[]) in line 294
      protection public
      19 lines of code
      1 parameters
      2 conditional paths
      uses function getDefinitelyNullSetDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(DefinitelyNullSet) in line 272
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function meetInto(DefinitelyNullSet,Edge,DefinitelyNullSet) in line 281
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function same(DefinitelyNullSet,DefinitelyNullSet) in line 290
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
   function setTOS(ValueNumberFrame,Location,DefinitelyNullSet,NullnessValue) in line 207
      5 lines of code
      4 parameters
      1 conditional paths
      uses function changeNullnessOfValue(ValueNumber,Location,DefinitelyNullSet,NullnessValue) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,DefinitelyNullSet) in line 102
      protection public
      32 lines of code
      3 parameters
      6 conditional paths
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setTOS(ValueNumberFrame,Location,DefinitelyNullSet,NullnessValue) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses variable REFCMP_OPCODE_SET defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function getCondition(BasicBlock) defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses function refresh(ValueNumberFrame,DefinitelyNullSet) defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
   function DefinitelyNullSetAnalysis(DepthFirstSearch,ValueNumberDataflow,CompactLocationNumbering) in line 80
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable vnaDataflow defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
      uses variable compactLocationNumbering defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetAnalysis
   variable compactLocationNumbering in line 54
   variable conditionMap in line 55
   variable IFACMP_OPCODE_SET in line 58
   variable IFNULL_OPCODE_SET in line 57
   variable REFCMP_OPCODE_SET in line 59
   variable vnaDataflow in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe2/DefinitelyNullSetDataflow.java
module edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSetDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function DefinitelyNullSetDataflow(CFG,DefinitelyNullSetAnalysis) in line 28
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe2/IfNullCondition.java
module edu::umd::cs::findbugs::ba::npe2::IfNullCondition
   inherits from edu::umd::cs::findbugs::ba::npe2::Condition
   function getDecision(Edge) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
   function getValueNumber() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
   function refresh(ValueNumberFrame,DefinitelyNullSet) in line 63
      protection public
      37 lines of code
      2 parameters
      2 conditional paths
      uses variable valueNumber defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::npe2::Condition
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable ifcmpDecision defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
      uses function toCheckedValue() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable fallThroughDecision defined in edu::umd::cs::findbugs::ba::npe2::IfNullCondition
   function IfNullCondition(Location) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ba::npe2::Condition
   variable fallThroughDecision in line 37
   variable ifcmpDecision in line 36
   variable valueNumber in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/npe2/NullnessValue.java
module edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function definitelyNotNullValue() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function definitelyNullValue() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isChecked() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function isDefinitelyNotNull() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function isDefinitelyNull() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function isFlagSet(int) in line 92
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable instanceList defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function isNoKaboom() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isFlagSet(int) defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function toCheckedValue() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceList defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable flags defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function toNoKaboomValue() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceList defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses variable flags defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function toString() in line 116
      protection public
      23 lines of code
      0 parameters
      5 conditional paths
      uses function isChecked() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isNoKaboom() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function unknownValue() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NullnessValue(int) in line 44
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   variable flags in line 42
   variable instanceList in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/NullnessAnnotation.java
module edu::umd::cs::findbugs::ba::NullnessAnnotation
   inherits from AnnotationEnumeration< NullnessAnnotation >
   function values() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable myValues defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function NullnessAnnotation(String,int) in line 57
      4 lines of code
      2 parameters
      1 conditional paths
   variable CHECK_FOR_NULL in line 28
      protection public
   variable myValues in line 40
   variable NONNULL in line 31
      protection public
   variable NULLABLE in line 34
      protection public
   variable UNKNOWN_NULLNESS in line 37
      protection public
module edu::umd::cs::findbugs::ba::NullnessAnnotation::Parser
   function parse(String) in line 45
      protection public
      7 lines of code
      1 parameters
      4 conditional paths
      uses variable myValues defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/NullnessAnnotationDatabase.java
module edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
   inherits from AnnotationDatabase< NullnessAnnotation >
   function getResolvedAnnotation(final Object,boolean) in line 143
      protection public
      26 lines of code
      2 parameters
      9 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function loadAuxiliaryAnnotations() in line 35
      protection public
      95 lines of code
      0 parameters
      2 conditional paths
      uses variable IGNORE_BUILTIN_ANNOTATIONS defined in AnnotationDatabase< NullnessAnnotation >
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addDefaultAnnotation(String,String,AnnotationEnum) defined in AnnotationDatabase< NullnessAnnotation >
      uses variable METHOD defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function addFieldAnnotation(String,String,String,boolean,AnnotationEnum) defined in AnnotationDatabase< NullnessAnnotation >
      uses function addMethodAnnotation(String,String,String,boolean,AnnotationEnum) defined in AnnotationDatabase< NullnessAnnotation >
      uses function addMethodParameterAnnotation(String,String,String,boolean,int,AnnotationEnum) defined in AnnotationDatabase< NullnessAnnotation >
      uses variable PARAMETER defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses variable CHECK_FOR_NULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function parameterMustBeNonNull(XMethod,int) in line 130
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function anyAnnotations(AnnotationEnum) defined in AnnotationDatabase< NullnessAnnotation >
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function getResolvedAnnotation(final Object,boolean) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function NullnessAnnotationDatabase() in line 29
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setAddClassOnly(boolean) defined in AnnotationDatabase< NullnessAnnotation >
      uses function loadAuxiliaryAnnotations() defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ObjectTypeFactory.java
module edu::umd::cs::findbugs::ba::ObjectTypeFactory
   function getInstance(String) in line 38
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable map defined in edu::umd::cs::findbugs::ba::ObjectTypeFactory
   variable map in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/NonexistentObligationException.java
module edu::umd::cs::findbugs::ba::obl::NonexistentObligationException
   inherits from Exception
   function NonexistentObligationException(Obligation) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   variable serialVersionUID in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/Obligation.java
module edu::umd::cs::findbugs::ba::obl::Obligation
   function getClassName() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function getId() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function getType() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function toString() in line 61
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function Obligation(String,int) in line 42
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses variable id defined in edu::umd::cs::findbugs::ba::obl::Obligation
   variable className in line 38
   variable id in line 40
   variable type in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/ObligationAnalysis.java
module edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   inherits from edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
   function addsObligation(InstructionHandle) in line 141
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addsOrDeletesObligation(InstructionHandle,int) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase
   function addsOrDeletesObligation(InstructionHandle,int) in line 149
      33 lines of code
      2 parameters
      4 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function lookup(String,String,String,boolean,int) defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function comparesObligationTypeToNull(Edge) in line 340
      47 lines of code
      1 parameters
      7 conditional paths
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getObligationByType(ObjectType) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function copy(StateSet,StateSet) in line 206
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(StateSet) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function createFact() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function deleteObligation(StateSet,Obligation,InstructionHandle) in line 192
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function deletesObligation(InstructionHandle) in line 145
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addsOrDeletesObligation(InstructionHandle,int) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase
   function endTransfer(BasicBlock,@CheckForNull InstructionHandle,StateSet) in line 132
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function append(int) defined in edu::umd::cs::findbugs::ba::obl::Path
   function initEntryFact(StateSet) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function initResultFact(StateSet) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function isFactValid(StateSet) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function isPossibleIfComparison(Edge) in line 335
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function isTop(StateSet) in line 230
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function makeFactTop(StateSet) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function meetInto(StateSet,Edge,StateSet) in line 244
      protection public
      90 lines of code
      3 parameters
      13 conditional paths
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function deletesObligation(InstructionHandle) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function deleteObligation(StateSet,Obligation,InstructionHandle) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function isPossibleIfComparison(Edge) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function comparesObligationTypeToNull(Edge) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses function copy(StateSet,StateSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getPath() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getLength() defined in edu::umd::cs::findbugs::ba::obl::Path
      uses function copyFrom(Path) defined in edu::umd::cs::findbugs::ba::obl::Path
   function same(StateSet,StateSet) in line 237
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function transfer(BasicBlock,@CheckForNull InstructionHandle,StateSet,StateSet) in line 127
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function endTransfer(BasicBlock,@CheckForNull InstructionHandle,StateSet) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,StateSet) in line 106
      protection public
      16 lines of code
      3 parameters
      5 conditional paths
      uses function addsObligation(InstructionHandle) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::Obligation
      uses function deletesObligation(InstructionHandle) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses function deleteObligation(StateSet,Obligation,InstructionHandle) defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   function ObligationAnalysis(DepthFirstSearch,TypeDataflow,MethodGen,ObligationFactory,PolicyDatabase,RepositoryLookupFailureCallback) in line 81
      protection public
      14 lines of code
      6 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ForwardDataflowAnalysis
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable database defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::obl::ObligationAnalysis
   variable database in line 67
   variable DEBUG in line 62
   variable factory in line 66
   variable lookupFailureCallback in line 68
   variable methodGen in line 65
   variable typeDataflow in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/ObligationFactory.java
module edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function addObligation(String) in line 76
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function createObligationSet() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMaxObligationTypes() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getMaxObligationTypes() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getObligationById(int) in line 86
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function getObligationByType(ObjectType) in line 66
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function obligationIterator() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getType() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function obligationIterator() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classNameToObligationMap defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
   function ObligationFactory() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable classNameToObligationMap in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/ObligationSet.java
module edu::umd::cs::findbugs::ba::obl::ObligationSet
   function add(Obligation) in line 51
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getId() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function duplicate() in line 119
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function ObligationSet(int,ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function equals(Object) in line 83
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function ObligationSet(int,ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function getCount(int) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function getMaxObligationTypes() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function hashCode() in line 126
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function invalidate() in line 137
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function remove(Obligation) in line 56
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function toString() in line 101
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getObligationById(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::Obligation
   function ObligationSet(int,ObligationFactory) in line 41
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   variable cachedHashCode in line 39
   variable countList in line 37
   variable factory in line 38
   variable INVALID_HASH_CODE in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/Path.java
module edu::umd::cs::findbugs::ba::obl::Path
   function append(int) in line 47
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function grow(int) defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::obl::Path
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::Path
   function copyFrom(Path) in line 78
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function grow(int) defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::obl::Path
   function duplicate() in line 67
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function Path() defined in edu::umd::cs::findbugs::ba::obl::Path
      uses function copyFrom(Path) defined in edu::umd::cs::findbugs::ba::obl::Path
   function equals(Object) in line 102
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function Path() defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::obl::Path
   function getBlockIdAt(int) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::obl::Path
   function getLength() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::obl::Path
   function grow(int) in line 131
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::obl::Path
   function hashCode() in line 90
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable length defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::obl::Path
   function invalidate() in line 85
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::ba::obl::Path
   function toString() in line 119
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable length defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable blockIdList defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable SYMBOLS defined in edu::umd::cs::findbugs::ba::obl::Path
   function Path() in line 41
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_CAPACITY defined in edu::umd::cs::findbugs::ba::obl::Path
      uses function invalidate() defined in edu::umd::cs::findbugs::ba::obl::Path
   variable blockIdList in line 37
   variable cachedHashCode in line 39
   variable DEFAULT_CAPACITY in line 34
   variable INVALID_HASH_CODE in line 35
   variable length in line 38
   variable SYMBOLS in line 115
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/PolicyDatabase.java
module edu::umd::cs::findbugs::ba::obl::PolicyDatabase
   function addEntry(String,String,String,boolean,int,Obligation) in line 94
      protection public
      5 lines of code
      6 parameters
      1 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase
      uses function Entry(String,String,String,boolean,int,Obligation) defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   function lookup(String,String,String,boolean,int) in line 100
      protection public
      15 lines of code
      5 parameters
      3 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   function PolicyDatabase() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable ADD in line 39
      protection public
   variable DEL in line 41
      protection public
   variable entryList in line 88
module edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   function getAction() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   function getClassName() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   function getMethodName() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   function getObligation() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   function getSignature() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   function isStatic() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Entry(String,String,String,boolean,int,Obligation) in line 51
      protection public
      10 lines of code
      6 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable methodName defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable signature defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable action defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
      uses variable obligation defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase::Entry
   variable action in line 48
   variable className in line 44
   variable isStatic in line 47
   variable methodName in line 45
   variable obligation in line 49
   variable signature in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/State.java
module edu::umd::cs::findbugs::ba::obl::State
   function duplicate() in line 60
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function State() defined in edu::umd::cs::findbugs::ba::obl::State
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::Path
   function equals(Object) in line 69
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function State() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::obl::Path
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
   function getObligationSet() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
   function getPath() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
   function hashCode() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::obl::Path
   function toString() in line 83
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable obligationSet defined in edu::umd::cs::findbugs::ba::obl::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses variable path defined in edu::umd::cs::findbugs::ba::obl::State
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::Path
   function State() in line 38
      2 lines of code
      0 parameters
      1 conditional paths
   function State(int,ObligationFactory) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable obligationSet in line 35
   variable path in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/obl/StateSet.java
module edu::umd::cs::findbugs::ba::obl::StateSet
   function addObligation(final Obligation) in line 145
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function applyToAllStatesAndUpdateMap(StateCallback,Map< ObligationSet, State >) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function apply(State) defined in edu::umd::cs::findbugs::ba::obl::StateSet::StateCallback
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function add(Obligation) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function applyToAllStates(StateCallback) in line 248
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function applyToAllStatesAndUpdateMap(StateCallback,Map< ObligationSet, State >) in line 236
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function applyToAllStates(StateCallback) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function copyFrom(StateSet) in line 119
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isBottom defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
   function createEmptyMap() in line 224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function deleteObligation(final Obligation) in line 167
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
      uses function applyToAllStatesAndUpdateMap(StateCallback,Map< ObligationSet, State >) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function apply(State) defined in edu::umd::cs::findbugs::ba::obl::StateSet::StateCallback
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function remove(Obligation) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
   function duplicate() in line 134
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function StateSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function copyFrom(StateSet) defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function equals(Object) in line 185
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function StateSet(ObligationFactory) defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isTop defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable isBottom defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function getStateWithObligationSet(ObligationSet) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function hashCode() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initEntryFact(ObligationFactory) in line 105
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getMaxObligationTypes() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
   function isBottom() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isTop() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isValid() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function setBottom() in line 66
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setTop() in line 57
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function stateIterator() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stateMap defined in edu::umd::cs::findbugs::ba::obl::StateSet
   function toString() in line 200
      protection public
      19 lines of code
      0 parameters
      5 conditional paths
      uses function isTop() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function toString() defined in edu::umd::cs::findbugs::ba::obl::State
   function StateSet(ObligationFactory) in line 51
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::obl::StateSet
   variable factory in line 49
   variable isBottom in line 47
   variable isTop in line 46
   variable stateMap in line 48
module edu::umd::cs::findbugs::ba::obl::StateSet::StateCallback
   function apply(State) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/PostDominatorsAnalysis.java
module edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   inherits from edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
   function getBlockOrder(CFG) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function isForwards() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 76
      protection public
      32 lines of code
      1 parameters
      2 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses function getReverseDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function PostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch,EdgeChooser) defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function PostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch,EdgeChooser) in line 47
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable edgeChooser defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   function PostDominatorsAnalysis(CFG,ReverseDepthFirstSearch,DepthFirstSearch,boolean) in line 61
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
      uses variable dfs defined in edu::umd::cs::findbugs::ba::PostDominatorsAnalysis
   variable dfs in line 37
   variable rdfs in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/PruneInfeasibleExceptionEdges.java
module edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function execute() in line 114
      protection public
      51 lines of code
      0 parameters
      11 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isSingleton(String) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getMethodGen() defined in edu::umd::cs::findbugs::ba::CFG
      uses function containsCheckedExceptions() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function containsExplicitExceptions() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable CHECKED_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXPLICIT_EXCEPTIONS_FLAG defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function MarkedEdge(Edge,int) defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function removeEdge(EdgeType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable STATS defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable numEdgesPruned defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   function wasCFGModified() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   function PruneInfeasibleExceptionEdges(CFG,MethodGen,TypeDataflow) in line 99
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
      uses variable typeDataflow defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges
   variable cfg in line 87
   variable cfgModified in line 89
   variable DEBUG in line 47
   variable numEdgesPruned in line 49
   variable STATS in line 48
   variable typeDataflow in line 88
module edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
   function apply() in line 80
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable flag defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses function setFlags(int) defined in edu::umd::cs::findbugs::ba::Edge
   function MarkedEdge(Edge,int) in line 75
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
      uses variable flag defined in edu::umd::cs::findbugs::ba::PruneInfeasibleExceptionEdges::MarkedEdge
   variable edge in line 72
   variable flag in line 73
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/PruneUnconditionalExceptionThrowerEdges.java
module edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function doesMethodUnconditionallyThrowException(XMethod,JavaClass,Method) in line 240
      protection public
      28 lines of code
      3 parameters
      8 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function get() defined in edu::umd::cs::findbugs::AnalysisLocal
      uses variable classContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable RETURN_OPCODE_SET defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   function execute() in line 86
      protection public
      147 lines of code
      0 parameters
      34 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getBoolProperty(int) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable CONSERVE_SPACE defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses variable classContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable cpg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable CONCRETE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function hasSubtypes(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function doesMethodUnconditionallyThrowException(XMethod,JavaClass,Method) defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getClassContext(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getReturnPathDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getKind() defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable RETURNS defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses function get() defined in edu::umd::cs::findbugs::AnalysisLocal
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable DEBUG_DIFFERENCES defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses function getOutgoingEdgeWithType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function removeEdge(EdgeType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   function wasCFGModified() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cfgModified defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   function PruneUnconditionalExceptionThrowerEdges(ClassContext,JavaClass,Method,MethodGen,CFG,ConstantPoolGen,AnalysisContext) in line 68
      protection public
      10 lines of code
      7 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable javaClass defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable method defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cfg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable cpg defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
      uses variable analysisContext defined in edu::umd::cs::findbugs::ba::PruneUnconditionalExceptionThrowerEdges
   variable analysisContext in line 53
   variable cfg in line 51
   variable cfgModified in line 54
   variable classContext in line 55
   variable cpg in line 52
   variable DEBUG in line 46
   variable DEBUG_DIFFERENCES in line 47
   variable javaClass in line 56
   variable method in line 50
   variable methodGen in line 49
   variable RETURN_OPCODE_SET in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/RepositoryClassParser.java
module edu::umd::cs::findbugs::ba::RepositoryClassParser
   function parse() in line 76
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(InputStream,String) in line 44
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(String) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   function RepositoryClassParser(String,String) in line 65
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classParser defined in edu::umd::cs::findbugs::ba::RepositoryClassParser
   variable classParser in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/RepositoryLookupFailureCallback.java
module edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::classfile::IErrorLogger
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ResourceTracker.java
module edu::umd::cs::findbugs::ba::ResourceTracker
   function createVisitor(Resource,ConstantPoolGen) in line 70
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function ignoreExceptionEdge(Edge,Resource,ConstantPoolGen) in line 96
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Resource) in line 84
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isParamInstance(Resource,int) in line 108
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Resource,ResourceValueFrame) in line 59
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 44
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ResourceValue.java
module edu::umd::cs::findbugs::ba::ResourceValue
   function instance() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInstance() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function merge(ResourceValue,ResourceValue) in line 37
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function notInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function notInstance() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function instance() defined in edu::umd::cs::findbugs::ba::ResourceValue
   function ResourceValue() in line 23
      2 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 26
   variable notInstance in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ResourceValueAnalysis.java
module edu::umd::cs::findbugs::ba::ResourceValueAnalysis
   inherits from FrameDataflowAnalysis< ResourceValue, ResourceValueFrame >
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function createFact() in line 58
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::Frame
   function initEntryFact(ResourceValueFrame) in line 64
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isParamInstance(Resource,int) defined in edu::umd::cs::findbugs::ba::ResourceTracker
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
   function meetInto(ResourceValueFrame,Edge,ResourceValueFrame) in line 74
      protection public
      84 lines of code
      3 parameters
      18 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function ignoreExceptionEdge(Edge,Resource,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::ResourceTracker
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function setStatus(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getSuccessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Resource,ResourceValueFrame) defined in edu::umd::cs::findbugs::ba::ResourceTracker
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable NONEXISTENT defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function mergeInto(ResourceValueFrame,ResourceValueFrame) in line 160
      8 lines of code
      2 parameters
      1 conditional paths
   function mergeValues(ResourceValueFrame,ResourceValueFrame,int) in line 171
      4 lines of code
      3 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock,ResourceValueFrame) in line 177
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function transferInstruction(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function ResourceValueAnalysis(MethodGen,CFG,DepthFirstSearch,ResourceTracker< Resource >,Resource) in line 45
      protection public
      12 lines of code
      5 parameters
      1 conditional paths
      uses function createVisitor(Resource,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::ResourceTracker
      uses function ignoreImplicitExceptions(Resource) defined in edu::umd::cs::findbugs::ba::ResourceTracker
   variable cfg in line 39
   variable DEBUG in line 36
   variable ignoreImplicitExceptions in line 43
   variable methodGen in line 38
   variable resource in line 41
   variable resourceTracker in line 40
   variable visitor in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ResourceValueAnalysisTestDriver.java
module edu::umd::cs::findbugs::ba::ResourceValueAnalysisTestDriver
   abstract class
   function createResourceTracker(ClassContext,Method) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function execute(String,String,int) in line 38
      protection public
      67 lines of code
      3 parameters
      9 conditional paths
      uses function getClassContext(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function createResourceTracker(ClassContext,Method) defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysisTestDriver
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ResourceValueFrame.java
module edu::umd::cs::findbugs::ba::ResourceValueFrame
   inherits from Frame< ResourceValue >
   function copyFrom(Frame< ResourceValue >) in line 78
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function ResourceValueFrame(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function getStatus() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function sameAs(Frame< ResourceValue >) in line 69
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ResourceValueFrame(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function setStatus(int) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function toString() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable statusList defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable status defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function ResourceValueFrame(int) in line 55
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable NONEXISTENT defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   variable CLOSED in line 41
      protection public
   variable CREATED in line 46
      protection public
   variable ESCAPED in line 26
      protection public
   variable NONEXISTENT in line 51
      protection public
   variable OPEN in line 31
      protection public
   variable OPEN_ON_EXCEPTION_PATH in line 36
      protection public
   variable status in line 53
   variable statusList in line 84
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ResourceValueFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   inherits from AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   abstract class
   function getDefaultValue() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable notInstance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function transferInstruction(InstructionHandle,BasicBlock) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function handleFieldStore(FieldInstruction) in line 57
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function handleInvoke(InvokeInstruction) in line 94
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getNumWordsConsumed(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function instanceEscapes(InvokeInstruction,int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function instanceEscapes(InvokeInstruction,int) in line 90
      3 lines of code
      2 parameters
      1 conditional paths
   function transferInstruction(InstructionHandle,BasicBlock) in line 49
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function visitARETURN(ARETURN) in line 150
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function handleNormalInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
   function visitCHECKCAST(CHECKCAST) in line 116
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable ESCAPED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleInvoke(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleFieldStore(FieldInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function visitPUTSTATIC(PUTSTATIC) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function handleFieldStore(FieldInstruction) defined in edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function ResourceValueFrameModelingVisitor(ConstantPoolGen) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ReturnPath.java
module edu::umd::cs::findbugs::ba::ReturnPath
   function copyFrom(ReturnPath) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function getKind() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function mergeWith(ReturnPath) in line 75
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable mergeMatrix defined in edu::umd::cs::findbugs::ba::ReturnPath
   function sameAs(ReturnPath) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function setKind(int) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   function toString() in line 82
      protection public
      16 lines of code
      0 parameters
      6 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT_UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable RETURNS defined in edu::umd::cs::findbugs::ba::ReturnPath
   function ReturnPath(int) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::ba::ReturnPath
   variable EXIT in line 30
      protection public
   variable EXIT_UE in line 38
      protection public
   variable kind in line 44
   variable mergeMatrix in line 66
   variable RETURNS in line 42
      protection public
   variable TOP in line 26
      protection public
   variable UE in line 34
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ReturnPathAnalysis.java
module edu::umd::cs::findbugs::ba::ReturnPathAnalysis
   inherits from ForwardDataflowAnalysis< ReturnPath >
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function copy(ReturnPath,ReturnPath) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(ReturnPath) defined in edu::umd::cs::findbugs::ba::ReturnPath
   function createFact() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function initEntryFact(ReturnPath) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setKind(int) defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable RETURNS defined in edu::umd::cs::findbugs::ba::ReturnPath
   function initResultFact(ReturnPath) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setKind(int) defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function isFactValid(ReturnPath) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isTop(ReturnPath) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getKind() defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function main(String[]) in line 81
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function getReturnPathDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(ReturnPath) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setKind(int) defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable TOP defined in edu::umd::cs::findbugs::ba::ReturnPath
   function meetInto(ReturnPath,Edge,ReturnPath) in line 68
      protection public
      12 lines of code
      3 parameters
      3 conditional paths
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable UE defined in edu::umd::cs::findbugs::ba::ReturnPath
      uses variable EXIT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable EXIT defined in edu::umd::cs::findbugs::ba::ReturnPath
   function same(ReturnPath,ReturnPath) in line 53
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(ReturnPath) defined in edu::umd::cs::findbugs::ba::ReturnPath
   function transferInstruction(InstructionHandle,BasicBlock,ReturnPath) in line 58
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function ReturnPathAnalysis(DepthFirstSearch) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< ReturnPath >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ReturnPathDataflow.java
module edu::umd::cs::findbugs::ba::ReturnPathDataflow
   inherits from Dataflow< ReturnPath, ReturnPathAnalysis >
   function ReturnPathDataflow(CFG,ReturnPathAnalysis) in line 23
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< ReturnPath, ReturnPathAnalysis >
      uses variable analysis defined in Dataflow< ReturnPath, ReturnPathAnalysis >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ReverseDepthFirstSearch.java
module edu::umd::cs::findbugs::ba::ReverseDepthFirstSearch
   inherits from ReverseDepthFirstSearch< CFG, Edge, BasicBlock >
   function getNextSearchTreeRoot() in line 45
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable firstRoot defined in edu::umd::cs::findbugs::ba::ReverseDepthFirstSearch
   function ReverseDepthFirstSearch(CFG) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
   variable firstRoot in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/ReverseDepthFirstSearch.java
module edu::umd::cs::findbugs::graph::ReverseDepthFirstSearch
   inherits from AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
   function getSource(EdgeType) in line 60
      3 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 55
      3 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 50
      3 lines of code
      2 parameters
      1 conditional paths
   function ReverseDepthFirstSearch(GraphType) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ReverseDFSOrder.java
module edu::umd::cs::findbugs::ba::ReverseDFSOrder
   inherits from edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function ReverseDFSOrder(CFG,ReverseDepthFirstSearch,DepthFirstSearch) in line 59
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses function ReverseDFSComparator(ReverseDepthFirstSearch,DepthFirstSearch) defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   variable dfs in line 37
      protection public
   variable rdfs in line 36
      protection public
module edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   inherits from java::util::Comparator
   function compare(BasicBlock,BasicBlock) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   function ReverseDFSComparator(ReverseDepthFirstSearch,DepthFirstSearch) in line 41
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses variable rdfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReverseDFSOrder::ReverseDFSComparator
   variable dfs in line 40
      protection public
   variable rdfs in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ReversePostOrder.java
module edu::umd::cs::findbugs::ba::ReversePostOrder
   inherits from edu::umd::cs::findbugs::ba::AbstractBlockOrder
   function ReversePostOrder(CFG,DepthFirstSearch) in line 58
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function ReversePostfixComparator(DepthFirstSearch) defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
module edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   inherits from java::util::Comparator
   function compare(BasicBlock,BasicBlock) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   function ReversePostfixComparator(DepthFirstSearch) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dfs defined in edu::umd::cs::findbugs::ba::ReversePostOrder::ReversePostfixComparator
   variable dfs in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/rta/RapidTypeAnalysis.java
module edu::umd::cs::findbugs::ba::rta::RapidTypeAnalysis
   inherits from edu::umd::cs::findbugs::classfile::IClassObserver
   function execute() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function observeClass(ClassDescriptor) in line 50
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable observedClassSet defined in edu::umd::cs::findbugs::ba::rta::RapidTypeAnalysis
   function RapidTypeAnalysis() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable observedClassSet in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/SignatureConverter.java
module edu::umd::cs::findbugs::ba::SignatureConverter
   function convert(String) in line 230
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function SignatureConverter(String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(JavaClass,Method) in line 140
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function convertMethodSignature(MethodGen) in line 150
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(InvokeInstruction,ConstantPoolGen) in line 161
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(String,String,String) in line 173
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function convertMethodSignature(XMethod) in line 184
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function convertMethodSignature(JavaClass,Method) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
   function convertMethodSignature(String,String,String,String) in line 198
      protection public
      25 lines of code
      4 parameters
      3 conditional paths
      uses function SignatureConverter(String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function shorten(String,String) defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function getFirst() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function parseNext() in line 75
      protection public
      57 lines of code
      0 parameters
      15 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function shorten(String,String) in line 234
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function skip() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function SignatureConverter(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureConverter
   variable signature in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/SignatureParser.java
module edu::umd::cs::findbugs::ba::SignatureParser
   function calculateOffsets() in line 38
      16 lines of code
      0 parameters
      5 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getNumParameters() in line 160
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getNumParametersForInvocation(InvokeInstruction,ConstantPoolGen) in line 185
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function SignatureParser(String) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getParameter(int) in line 169
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getReturnTypeSignature() in line 148
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function getSlotsFromTopOfStackForParameter(int) in line 55
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function calculateOffsets() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function main(String[]) in line 190
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function SignatureParser(String) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function parameterSignatureIterator() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function SignatureParser(String) in line 128
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   variable signature in line 117
module edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
   inherits from java::util::Iterator
   function hasNext() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable index defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
   function next() in line 69
      protection public
      42 lines of code
      0 parameters
      15 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
      uses variable signature defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable index defined in edu::umd::cs::findbugs::ba::SignatureParser::ParameterSignatureIterator
   function remove() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable index in line 62
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/SimplePathEnumerator.java
module edu::umd::cs::findbugs::ba::SimplePathEnumerator
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   inherits from edu::umd::cs::findbugs::ba::DFSEdgeTypes
   function enumerate() in line 88
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses variable work defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function iterator() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathList defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function work(LinkedList< Edge >) in line 109
      36 lines of code
      1 parameters
      7 conditional paths
      uses variable pathList defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable dfs defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable BACK_EDGE defined in edu::umd::cs::findbugs::graph::DFSEdgeTypes
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable work defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function SimplePathEnumerator(CFG,int,int) in line 63
      protection public
      9 lines of code
      3 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable dfs defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxWork defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   function SimplePathEnumerator(CFG,int) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable maxPaths defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
      uses variable DEFAULT_MAX_WORK defined in edu::umd::cs::findbugs::ba::SimplePathEnumerator
   variable cfg in line 41
   variable DEBUG in line 48
   variable DEFAULT_MAX_WORK in line 53
      protection public
   variable dfs in line 42
   variable maxPaths in line 43
   variable maxWork in line 44
   variable pathList in line 46
   variable work in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/SourceFile.java
module edu::umd::cs::findbugs::ba::SourceFile
   function addLineOffset(int) in line 147
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable numLines defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function getFullFileName() in line 113
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getInputStream() in line 123
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function loadFileData() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
   function getInputStreamFromOffset(int) in line 135
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function loadFileData() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function getLineOffset(int) in line 168
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable numLines defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable lineNumberMap defined in edu::umd::cs::findbugs::ba::SourceFile
   function intValueOf(byte) in line 36
      3 lines of code
      1 parameters
      1 conditional paths
   function loadFileData() in line 174
      29 lines of code
      0 parameters
      5 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function open() defined in edu::umd::cs::findbugs::ba::SourceFileDataSource
      uses function addLineOffset(int) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function LineNumberMapBuilder(SourceFile) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function addData(byte[],int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function eof() defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function setData(byte[]) defined in edu::umd::cs::findbugs::ba::SourceFile
   function setData(byte[]) in line 209
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
   function SourceFile(SourceFileDataSource) in line 104
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable dataSource defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable DEFAULT_SIZE defined in edu::umd::cs::findbugs::ba::SourceFile
   variable data in line 94
   variable dataSource in line 93
   variable DEFAULT_SIZE in line 91
   variable lineNumberMap in line 95
   variable numLines in line 96
module edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function add(int) in line 67
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses function addLineOffset(int) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable offset defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
      uses variable lastSeen defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function addData(byte[],int) in line 55
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function intValueOf(byte) defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable data defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function add(int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function eof() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function add(int) defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   function LineNumberMapBuilder(SourceFile) in line 49
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::ba::SourceFile::LineNumberMapBuilder
   variable lastSeen in line 47
   variable offset in line 46
   variable sourceFile in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/SourceFileDataSource.java
module edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function open() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/SourceFinder.java
module edu::umd::cs::findbugs::ba::SourceFinder
   function findSourceFile(SourceLineAnnotation) in line 211
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
   function findSourceFile(String,String) in line 232
      protection public
      36 lines of code
      2 parameters
      6 conditional paths
      uses variable cache defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
   function openSource(String,String) in line 203
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
   function openSource(SourceLineAnnotation) in line 207
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
   function setSourceBaseList(List< String >) in line 176
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
   function SourceFinder() in line 167
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable repositoryList defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses variable cache defined in edu::umd::cs::findbugs::ba::SourceFinder
   variable cache in line 158
   variable CACHE_SIZE in line 47
   variable DEBUG in line 46
   variable repositoryList in line 157
module edu::umd::cs::findbugs::ba::SourceFinder::Cache
   inherits from java::util::LinkedHashMap
   function removeEldestEntry(Map.Entry< String, SourceFile >) in line 65
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable CACHE_SIZE defined in edu::umd::cs::findbugs::ba::SourceFinder
   variable serialVersionUID in line 62
module edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(String) in line 78
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceFinder::DirectorySourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 95
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
   function getDataSource(String) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFullFileName(String) in line 110
      3 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceFinder
   function isPlatformDependent() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DirectorySourceRepository(String) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable baseDir in line 85
module edu::umd::cs::findbugs::ba::SourceFinder::JarURLConnectionSourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::ZipSourceRepository
   function JarURLConnectionSourceRepository(String) in line 117
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceFinder::ZipSourceRepository
   inherits from edu::umd::cs::findbugs::ba::SourceFinder::SourceRepository
   function contains(String) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDataSource(String) in line 148
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isPlatformDependent() in line 144
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ZipSourceRepository(ZipFile) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/SourceInfoMap.java
module edu::umd::cs::findbugs::ba::SourceInfoMap
   function addClassLine(String,SourceLineRange) in line 241
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function addFieldLine(String,String,SourceLineRange) in line 218
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function addMethodLine(String,String,String,SourceLineRange) in line 230
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function createRange(String,String) in line 399
      3 lines of code
      2 parameters
      1 conditional paths
   function expect(StringTokenizer,String) in line 391
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function fallBackToClassfile() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getClassLine(String) in line 274
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getFieldLine(String,String) in line 252
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getMethodLine(String,String,String) in line 264
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function isEmpty() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function parseVersionNumber(String) in line 372
      10 lines of code
      1 parameters
      2 conditional paths
      uses function expect(StringTokenizer,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function read(InputStream) in line 287
      protection public
      77 lines of code
      1 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function parseVersionNumber(String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable DIGITS defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function createRange(String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable classLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable methodLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable fieldLineMap defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function SourceInfoMap() in line 205
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable classLineMap in line 193
   variable DEBUG in line 189
   variable DIGITS in line 278
   variable fieldLineMap in line 191
   variable methodLineMap in line 192
module edu::umd::cs::findbugs::ba::SourceInfoMap::FieldDescriptor
   inherits from Comparable
   function compareTo(FieldDescriptor) in line 65
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 84
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FieldDescriptor(String,String) in line 53
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::SourceInfoMap::MethodDescriptor
   inherits from Comparable
   function compareTo(MethodDescriptor) in line 109
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 132
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 122
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function MethodDescriptor(String,String,String) in line 97
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable className in line 93
   variable methodName in line 94
   variable methodSignature in line 95
module edu::umd::cs::findbugs::ba::SourceInfoMap::SourceLineRange
   function getEnd() in line 176
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStart() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SourceLineRange(@NonNull Integer) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SourceLineRange(@NonNull Integer,@NonNull Integer) in line 161
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable start in line 146
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/StackDepth.java
module edu::umd::cs::findbugs::ba::StackDepth
   function getDepth() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function setDepth(int) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function toString() in line 54
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   function StackDepth(int) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable depth defined in edu::umd::cs::findbugs::ba::StackDepth
   variable depth in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/StackDepthAnalysis.java
module edu::umd::cs::findbugs::ba::StackDepthAnalysis
   inherits from ForwardDataflowAnalysis< StackDepth >
   function copy(StackDepth,StackDepth) in line 70
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
   function createFact() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function initEntryFact(StackDepth) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
   function initResultFact(StackDepth) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeFactTop(StackDepth) defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function isFactValid(StackDepth) in line 65
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function isTop(StackDepth) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function main(String[]) in line 121
      protection public
      24 lines of code
      1 parameters
      2 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< StackDepth >
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function StackDepthAnalysis(ConstantPoolGen,DepthFirstSearch) defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(StackDepth) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function meetInto(StackDepth,Edge,StackDepth) in line 101
      protection public
      16 lines of code
      3 parameters
      4 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
      uses variable TOP defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses function setDepth(int) defined in edu::umd::cs::findbugs::ba::StackDepth
   function same(StackDepth,StackDepth) in line 82
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getDepth() defined in edu::umd::cs::findbugs::ba::StackDepth
   function transferInstruction(InstructionHandle,BasicBlock,StackDepth) in line 87
      protection public
      13 lines of code
      3 parameters
      3 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
      uses variable BOTTOM defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   function StackDepthAnalysis(ConstantPoolGen,DepthFirstSearch) in line 48
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< StackDepth >
      uses variable cpg defined in edu::umd::cs::findbugs::ba::StackDepthAnalysis
   variable BOTTOM in line 38
      protection public
   variable cpg in line 40
   variable TOP in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/StaticField.java
module edu::umd::cs::findbugs::ba::StaticField
   inherits from edu::umd::cs::findbugs::ba::AbstractField
   function isStatic() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function StaticField(String,String,String,int) in line 26
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   variable serialVersionUID in line 25
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/StaticMethod.java
module edu::umd::cs::findbugs::ba::StaticMethod
   inherits from edu::umd::cs::findbugs::ba::AbstractMethod
   function isStatic() in line 27
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function StaticMethod(String,String,String,int) in line 23
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::ba::AbstractClassMember
      uses variable accessFlags defined in edu::umd::cs::findbugs::ba::AbstractClassMember
   variable serialVersionUID in line 22
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/Target.java
module edu::umd::cs::findbugs::ba::Target
   function getEdgeType() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edgeType defined in edu::umd::cs::findbugs::ba::Target
   function getTargetInstruction() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable targetInstruction defined in edu::umd::cs::findbugs::ba::Target
   function Target(InstructionHandle,int) in line 37
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable targetInstruction defined in edu::umd::cs::findbugs::ba::Target
      uses variable edgeType defined in edu::umd::cs::findbugs::ba::Target
   variable edgeType in line 29
   variable targetInstruction in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/TargetEnumeratingVisitor.java
module edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   inherits from org::apache::bcel::generic::EmptyVisitor
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function instructionIsExit() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instructionIsReturn() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instructionIsThrow() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEndOfBasicBlock() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function targetIterator() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function visitATHROW(ATHROW) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGotoInstruction(GotoInstruction) in line 102
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function visitIfInstruction(IfInstruction) in line 110
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable handle defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function visitINVOKESTATIC(INVOKESTATIC) in line 148
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable constPoolGen defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   function visitReturnInstruction(ReturnInstruction) in line 138
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitSelect(Select) in line 120
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
   function TargetEnumeratingVisitor(InstructionHandle,ConstantPoolGen) in line 56
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable constPoolGen defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable targetList defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
      uses variable isBranch defined in edu::umd::cs::findbugs::ba::TargetEnumeratingVisitor
   variable constPoolGen in line 46
   variable handle in line 45
   variable isBranch in line 48
   variable targetList in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/BottomType.java
module edu::umd::cs::findbugs::ba::type::BottomType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::BottomType
   function BottomType() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 37
   variable theInstance in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/DoubleExtraType.java
module edu::umd::cs::findbugs::ba::type::DoubleExtraType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::DoubleExtraType
   function DoubleExtraType() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_DOUBLE_EXTRA defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 39
   variable theInstance in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/ExceptionObjectType.java
module edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   inherits from org::apache::bcel::generic::ObjectType
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 81
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function ExceptionObjectType(String,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function fromExceptionSet(ExceptionSet) in line 57
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function getCommonSupertype() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function ExceptionObjectType(String,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   function getExceptionSet() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   function getType() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function hashCode() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 100
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function ExceptionObjectType(String,ExceptionSet) in line 45
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionObjectType
   variable exceptionSet in line 37
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/ExceptionSet.java
module edu::umd::cs::findbugs::ba::type::ExceptionSet
   inherits from java::io::Serializable
   function add(ObjectType,boolean) in line 227
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addAll(ExceptionSet) in line 243
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function countBits(BitSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addExplicit(ObjectType) in line 207
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function addImplicit(ObjectType) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function add(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function clear() in line 263
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function containsCheckedExceptions() in line 289
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function containsExplicitExceptions() in line 301
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function countBits(BitSet) in line 251
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function duplicate() in line 114
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable size defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function equals(Object) in line 133
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function getCommonSupertype() in line 148
      protection public
      27 lines of code
      0 parameters
      5 conditional paths
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function hashCode() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isEmpty() in line 186
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isSingleton(String) in line 196
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function iterator() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sawUniversal() in line 274
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function sawUniversalHandler() in line 282
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable universalHandler defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function size() in line 329
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 311
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   variable commonSupertype in line 52
   variable exceptionSet in line 48
   variable explicitSet in line 49
   variable factory in line 47
   variable serialVersionUID in line 45
   variable size in line 50
   variable universalHandler in line 51
module edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   inherits from java::util::Iterator
   function findNext() in line 89
      8 lines of code
      0 parameters
      3 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function hasNext() in line 64
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses function next() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses function findNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function isExplicit() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function next() in line 70
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable factory defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
   function remove() in line 82
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable last defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable explicitSet defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function size() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable commonSupertype defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   variable last in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/ExceptionSetFactory.java
module edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   inherits from java::io::Serializable
   function createExceptionSet() in line 41
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable typeIndexMap defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses variable typeList defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function ExceptionSetFactory() in line 36
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 32
   variable typeIndexMap in line 33
   variable typeList in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/ExtendedTypes.java
module edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable T_AVAIL_TYPE in line 83
      protection public
   variable T_BOTTOM in line 58
      protection public
   variable T_DOUBLE_EXTRA in line 53
      protection public
   variable T_EXCEPTION in line 76
      protection public
   variable T_LONG_EXTRA in line 46
      protection public
   variable T_NULL in line 67
      protection public
   variable T_TOP in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/FieldStoreType.java
module edu::umd::cs::findbugs::ba::type::FieldStoreType
   function addTypeSignature(String) in line 49
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses variable typeSignatureSet defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function computeLoadType(ReferenceType) in line 65
      33 lines of code
      1 parameters
      7 conditional paths
      uses function signatureIterator() defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function getLoadType(ReferenceType) in line 58
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable loadType defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
      uses function computeLoadType(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function signatureIterator() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable typeSignatureSet defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function FieldStoreType() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable loadType in line 42
   variable typeSignatureSet in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/FieldStoreTypeDatabase.java
module edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
   inherits from edu::umd::cs::findbugs::ba::interproc::FieldPropertyDatabase
   function decodeProperty(String) in line 59
      9 lines of code
      1 parameters
      2 conditional paths
   function encodeProperty(FieldStoreType) in line 71
      10 lines of code
      1 parameters
      3 conditional paths
      uses function signatureIterator() defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   function purgeBoringEntries() in line 42
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses function getKeys() defined in PropertyDatabase< XField, Property >
      uses function getProperty(KeyType) defined in PropertyDatabase< XField, Property >
      uses function removeProperty(KeyType) defined in PropertyDatabase< XField, Property >
      uses function getLoadType(ReferenceType) defined in edu::umd::cs::findbugs::ba::type::FieldStoreType
   variable DEFAULT_FILENAME in line 40
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/LongExtraType.java
module edu::umd::cs::findbugs::ba::type::LongExtraType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::LongExtraType
   function LongExtraType() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_LONG_EXTRA defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 39
   variable theInstance in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/NullType.java
module edu::umd::cs::findbugs::ba::type::NullType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::NullType
   function NullType() in line 42
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 39
   variable theInstance in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/StandardTypeMerger.java
module edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   inherits from edu::umd::cs::findbugs::ba::type::TypeMerger
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function isIntegerType(byte) in line 111
      3 lines of code
      1 parameters
      1 conditional paths
   function isObjectType(byte) in line 101
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function isReferenceType(byte) in line 93
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function mergeReferenceTypes(ReferenceType,ReferenceType) in line 132
      32 lines of code
      2 parameters
      6 conditional paths
      uses function isObjectType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable T_EXCEPTION defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function updateExceptionSet(ExceptionSet,ObjectType) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function mergeTypes(Type,Type) in line 57
      protection public
      29 lines of code
      2 parameters
      10 conditional paths
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function isReferenceType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function mergeReferenceTypes(ReferenceType,ReferenceType) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses function isIntegerType(byte) defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   function updateExceptionSet(ExceptionSet,ObjectType) in line 115
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addAll(ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function addExplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
   function StandardTypeMerger(RepositoryLookupFailureCallback,ExceptionSetFactory) in line 51
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   variable exceptionSetFactory in line 42
   variable lookupFailureCallback in line 41
   variable OBJECT_TYPE in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/ThrownException.java
module edu::umd::cs::findbugs::ba::type::ThrownException
   function duplicate() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function ThrownException(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function equals(Object) in line 88
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses function ThrownException(ObjectType,boolean) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
      uses variable explicit defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function getType() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function hashCode() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   function isExplicit() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExplicit(boolean) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function ThrownException(ObjectType,boolean) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::ba::type::ThrownException
   variable explicit in line 41
   variable type in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/TopType.java
module edu::umd::cs::findbugs::ba::type::TopType
   inherits from org::apache::bcel::generic::Type
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function equals(Object) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function instance() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::ba::type::TopType
   function TopType() in line 40
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
   variable serialVersionUID in line 37
   variable theInstance in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/TypeAnalysis.java
module edu::umd::cs::findbugs::ba::type::TypeAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   inherits from edu::umd::cs::findbugs::ba::EdgeTypes
   function computeBlockExceptionSet(BasicBlock,TypeFrame) in line 687
      22 lines of code
      2 parameters
      2 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses function addExplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function createFact() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function copy(TypeFrame,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function CachedExceptionSet(TypeFrame,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeEdgeExceptionSet(Edge,ExceptionSet) in line 726
      68 lines of code
      2 parameters
      11 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable UNHANDLED_EXCEPTION_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function iterator() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function hasNext() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet::ThrownExceptionIterator
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) in line 438
      60 lines of code
      3 parameters
      11 conditional paths
      uses variable FORCE_ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function getCachedExceptionSet(BasicBlock) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function isUpToDate(TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isExceptionEdge() defined in edu::umd::cs::findbugs::ba::Edge
      uses function computeBlockExceptionSet(BasicBlock,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setEdgeExceptionSet(Edge,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function getExceptionSet() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function duplicate() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function computeEdgeExceptionSet(Edge,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function computeThrownExceptionTypes(BasicBlock) in line 802
      100 lines of code
      1 parameters
      14 conditional paths
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
      uses function addImplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses variable ERROR_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses function clear() defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function addExplicit(ObjectType) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function addAll(ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::ExceptionSet
      uses function getExceptionSet() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
      uses variable RUNTIME_EXCEPTION_TYPE defined in edu::umd::cs::findbugs::ba::Hierarchy
   function copy(TypeFrame,TypeFrame) in line 354
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function copyFrom(Frame< Type >) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function createFact() in line 294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function getCachedExceptionSet(BasicBlock) in line 655
      19 lines of code
      1 parameters
      2 conditional paths
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function makeFactTop(TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function CachedExceptionSet(TypeFrame,ExceptionSet) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function getEdgeExceptionSet(Edge) in line 289
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable thrownExceptionSetMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function handleInstanceOfBranch(TypeFrame,TypeFrame,Edge) in line 560
      69 lines of code
      3 parameters
      12 conditional paths
      uses variable instanceOfCheckMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function initEntryFact(TypeFrame) in line 298
      protection public
      54 lines of code
      1 parameters
      8 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function initResultFact(TypeFrame) in line 359
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function setTop() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function isFactValid(TypeFrame) in line 373
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
   function main(String[]) in line 903
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function makeFactTop(TypeFrame) in line 368
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setTop() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function meetInto(TypeFrame,Edge,TypeFrame) in line 499
      protection public
      60 lines of code
      3 parameters
      10 conditional paths
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function modifyFrame(FrameType,@Nullable FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses function getExceptionGen() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable FORCE_ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable ACCURATE_EXCEPTIONS defined in edu::umd::cs::findbugs::ba::AnalysisFeatures
      uses function getCachedExceptionSet(BasicBlock) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getEdgeExceptionSet(Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function handleInstanceOfBranch(TypeFrame,TypeFrame,Edge) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function mergeInto(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function mergeValues(TypeFrame,TypeFrame,int) in line 631
      14 lines of code
      3 parameters
      1 conditional paths
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function mergeTypes(Type,Type) defined in edu::umd::cs::findbugs::ba::type::TypeMerger
   function same(TypeFrame,TypeFrame) in line 378
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function sameAs(Frame< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
   function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function setValueNumberDataflow(ValueNumberDataflow) in line 266
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setValueNumberDataflow(ValueNumberDataflow) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function transfer(BasicBlock,@CheckForNull InstructionHandle,TypeFrame,TypeFrame) in line 417
      protection public
      20 lines of code
      4 parameters
      3 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function startBasicBlock() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses function computeThrownExceptionTypes(BasicBlock,@CheckForNull InstructionHandle,TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable instanceOfCheckMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function isInstanceOfFollowedByBranch() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getInstanceOfValueNumber() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getInstanceOfType() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function transferInstruction(InstructionHandle,BasicBlock,TypeFrame) in line 383
      protection public
      29 lines of code
      3 parameters
      8 conditional paths
      uses variable typeTable defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable startOfLocalTypedVariables defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,TypeFrameModelingVisitor,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 194
      protection public
      29 lines of code
      8 parameters
      7 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable typeTable defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable startOfLocalTypedVariables defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,TypeMerger,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 234
      protection public
      7 lines of code
      7 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable typeMerger defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   function TypeAnalysis(Method,MethodGen,CFG,DepthFirstSearch,RepositoryLookupFailureCallback,ExceptionSetFactory) in line 251
      protection public
      7 lines of code
      6 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable cfg defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
   variable cfg in line 171
   variable DEBUG in line 95
      protection public
   variable exceptionSetFactory in line 178
   variable FORCE_ACCURATE_EXCEPTIONS in line 100
      protection public
   variable instanceOfCheckMap in line 180
   variable lookupFailureCallback in line 177
   variable method in line 170
   variable methodGen in line 169
   variable startOfLocalTypedVariables in line 175
   variable thrownExceptionSetMap in line 176
   variable typeMerger in line 172
   variable typeTable in line 174
   variable valueNumberDataflow in line 179
   variable visitor in line 173
module edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function getEdgeExceptionSet(Edge) in line 132
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable edgeExceptionMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSetFactory defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function createExceptionSet() defined in edu::umd::cs::findbugs::ba::type::ExceptionSetFactory
   function getExceptionSet() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function isUpToDate(TypeFrame) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function setEdgeExceptionSet(Edge,ExceptionSet) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable edgeExceptionMap defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   function CachedExceptionSet(TypeFrame,ExceptionSet) in line 114
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable result defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
      uses variable exceptionSet defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis::CachedExceptionSet
   variable edgeExceptionMap in line 112
   variable exceptionSet in line 111
   variable result in line 110
module edu::umd::cs::findbugs::ba::type::TypeAnalysis::InstanceOfCheck
   function getType() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getValueNumber() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/TypeDataflow.java
module edu::umd::cs::findbugs::ba::type::TypeDataflow
   inherits from edu::umd::cs::findbugs::ba::Dataflow
   function getEdgeExceptionSet(Edge) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function getFactAfterLocation(Location) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function getFactAtLocation(Location) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
   function getLocationAndFactForInstruction(int) in line 57
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable location defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses variable frame defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
   function TypeDataflow(CFG,TypeAnalysis) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable analysis defined in edu::umd::cs::findbugs::ba::Dataflow
module edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
   variable frame in line 33
      protection public
   variable location in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/TypeFrame.java
module edu::umd::cs::findbugs::ba::type::TypeFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   function clearExactSet() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function copyFrom(Frame< Type >) in line 87
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function clearExactSet() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function TypeFrame(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function copyFrom(Frame< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
   function getBottomType() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDoubleExtraType() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLongExtraType() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNullType() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTopType() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExact(int) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function popValue() in line 158
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
   function pushValue(Type) in line 138
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
   function setExact(int,boolean) in line 57
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable exactTypeSet defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function setTop() in line 81
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function clearExactSet() defined in edu::umd::cs::findbugs::ba::type::TypeFrame
   function valueToString(Type) in line 98
      3 lines of code
      1 parameters
      1 conditional paths
   function TypeFrame(int) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
   variable exactTypeSet in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/TypeFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from org::apache::bcel::Constants
   inherits from edu::umd::cs::findbugs::ba::Debug
   function analyzeInstruction(Instruction) in line 151
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable lastOpcode defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function consumeStack(Instruction) in line 172
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function getDefaultValue() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getInstanceOfType() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function getInstanceOfValueNumber() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function getLastOpcode() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastOpcode defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function handleToArray(InvokeInstruction) in line 385
      29 lines of code
      1 parameters
      5 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable COLLECTION_TYPE defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function isInstanceOfFollowedByBranch() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function modelFieldLoad(FieldInstruction) in line 302
      protection public
      46 lines of code
      1 parameters
      8 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable database defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function modelNormalInstruction(Instruction,int,int) in line 221
      protection public
      7 lines of code
      3 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
   function pushReturnType(InvokeInstruction) in line 209
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function pushValue(Type) in line 194
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setFieldStoreTypeDatabase(FieldStoreTypeDatabase) in line 141
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function setTopOfStackIsExact() in line 926
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setValueNumberDataflow(ValueNumberDataflow) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function startBasicBlock() in line 162
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable lastOpcode defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitAALOAD(AALOAD) in line 824
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitACONST_NULL(ACONST_NULL) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitANEWARRAY(ANEWARRAY) in line 908
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitARRAYLENGTH(ARRAYLENGTH) in line 818
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitATHROW(ATHROW) in line 243
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitBALOAD(BALOAD) in line 844
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitBIPUSH(BIPUSH) in line 283
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitCALOAD(CALOAD) in line 850
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 415
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitD2F(D2F) in line 516
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitD2I(D2I) in line 522
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitD2L(D2L) in line 528
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDADD(DADD) in line 676
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDALOAD(DALOAD) in line 856
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCMPG(DCMPG) in line 504
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCMPL(DCMPL) in line 498
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDCONST(DCONST) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDDIV(DDIV) in line 748
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDMUL(DMUL) in line 724
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDNEG(DNEG) in line 800
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitDREM(DREM) in line 772
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitDSUB(DSUB) in line 700
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2D(F2D) in line 534
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2I(F2I) in line 540
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitF2L(F2L) in line 546
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFADD(FADD) in line 682
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFALOAD(FALOAD) in line 862
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCMPG(FCMPG) in line 492
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCMPL(FCMPL) in line 486
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFCONST(FCONST) in line 258
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFDIV(FDIV) in line 754
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFMUL(FMUL) in line 730
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFNEG(FNEG) in line 804
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitFREM(FREM) in line 778
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitFSUB(FSUB) in line 706
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitGETFIELD(GETFIELD) in line 298
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function modelFieldLoad(FieldInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitGETSTATIC(GETSTATIC) in line 293
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function modelFieldLoad(FieldInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2B(I2B) in line 552
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2C(I2C) in line 558
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2D(I2D) in line 564
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2F(I2F) in line 570
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2L(I2L) in line 576
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitI2S(I2S) in line 582
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIADD(IADD) in line 688
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIALOAD(IALOAD) in line 868
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIAND(IAND) in line 604
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitICONST(ICONST) in line 263
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIDIV(IDIV) in line 760
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFEQ(IFEQ) in line 946
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastOpcode defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFGT(IFGT) in line 953
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastOpcode defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFLE(IFLE) in line 960
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastOpcode defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNE(IFNE) in line 967
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastOpcode defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNONNULL(IFNONNULL) in line 464
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIFNULL(IFNULL) in line 442
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses variable instanceOfFollowedByBranch defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIINC(IINC) in line 796
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitIMUL(IMUL) in line 736
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINEG(INEG) in line 808
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINSTANCEOF(INSTANCEOF) in line 421
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable valueNumberDataflow defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getLocation() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfValueNumber defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instanceOfType defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 362
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function handleToArray(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 356
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 350
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 369
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function handleToArray(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushReturnType(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIOR(IOR) in line 616
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIREM(IREM) in line 784
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISHL(ISHL) in line 664
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISHR(ISHR) in line 640
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitISUB(ISUB) in line 712
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIUSHR(IUSHR) in line 646
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitIXOR(IXOR) in line 628
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitJSR(JSR) in line 932
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitJSR_W(JSR_W) in line 937
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2D(L2D) in line 586
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2F(L2F) in line 592
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitL2I(L2I) in line 598
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLADD(LADD) in line 694
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLALOAD(LALOAD) in line 874
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLAND(LAND) in line 610
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLCMP(LCMP) in line 510
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLCONST(LCONST) in line 268
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLDC(LDC) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC2_W(LDC2_W) in line 278
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDIV(LDIV) in line 766
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLMUL(LMUL) in line 742
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLNEG(LNEG) in line 814
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitLOR(LOR) in line 622
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLREM(LREM) in line 790
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSHL(LSHL) in line 670
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSHR(LSHR) in line 652
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLSUB(LSUB) in line 718
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLUSHR(LUSHR) in line 658
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitLXOR(LXOR) in line 634
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitMULTIANEWARRAY(MULTIANEWARRAY) in line 918
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitNEW(NEW) in line 888
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitNEWARRAY(NEWARRAY) in line 898
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function setTopOfStackIsExact() defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitRET(RET) in line 942
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitSALOAD(SALOAD) in line 880
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function consumeStack(Instruction) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function visitSIPUSH(SIPUSH) in line 288
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function pushValue(Type) defined in edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function TypeFrameModelingVisitor(ConstantPoolGen) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   variable COLLECTION_TYPE in line 57
   variable database in line 67
   variable instanceOfFollowedByBranch in line 63
   variable instanceOfType in line 64
   variable instanceOfValueNumber in line 65
   variable lastOpcode in line 62
   variable valueNumberDataflow in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/type/TypeMerger.java
module edu::umd::cs::findbugs::ba::type::TypeMerger
   function mergeTypes(Type,Type) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/URLClassPath.java
module edu::umd::cs::findbugs::ba::URLClassPath
   inherits from java::io::Serializable
   function addURL(String) in line 264
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses function getURLProtocol(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function getFileExtension(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function isArchiveExtension(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function close() in line 407
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function getClassPath() in line 302
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
   function getFileExtension(String) in line 434
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getInputStreamForResource(String) in line 321
      36 lines of code
      1 parameters
      6 conditional paths
      uses variable entryList defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function getURLProtocol(String) in line 419
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable knownURLProtocolSet defined in edu::umd::cs::findbugs::FindBugs
   function isArchiveExtension(String) in line 448
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ARCHIVE_EXTENSION_SET defined in edu::umd::cs::findbugs::util::Archive
   function lookupClass(String) in line 366
      protection public
      37 lines of code
      1 parameters
      6 conditional paths
      uses variable classesThatCantBeFound defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function getInputStreamForResource(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
   function URLClassPath() in line 250
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable classesThatCantBeFound in line 357
   variable entryList in line 244
   variable serialVersionUID in line 51
module edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ba::URLClassPath::LocalArchiveEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 112
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getURL() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 98
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function LocalArchiveEntry(String) in line 85
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   variable zipFile in line 83
module edu::umd::cs::findbugs::ba::URLClassPath::LocalDirectoryEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 143
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function LocalDirectoryEntry(String) in line 134
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   variable dirName in line 126
module edu::umd::cs::findbugs::ba::URLClassPath::RemoteArchiveEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 182
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function RemoteArchiveEntry(URL) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable remoteArchiveURL in line 169
module edu::umd::cs::findbugs::ba::URLClassPath::RemoteDirectoryEntry
   inherits from edu::umd::cs::findbugs::ba::URLClassPath::Entry
   function close() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getURL() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function openStream(String) in line 222
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function RemoteDirectoryEntry(URL) in line 215
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable remoteDirURL in line 209
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/URLClassPathRepository.java
module edu::umd::cs::findbugs::ba::URLClassPathRepository
   inherits from org::apache::bcel::Repository
   function addURL(String) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function addURL(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
   function clear() in line 158
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function destroy() in line 67
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function close() defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function dumpStack() in line 112
      3 lines of code
      0 parameters
      1 conditional paths
   function findClass(@NonNull String) in line 119
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function getClassPath() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function getClassPath() defined in edu::umd::cs::findbugs::ba::URLClassPath
   function loadClass(@NonNull String) in line 133
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function findClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable urlClassPath defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function lookupClass(String) defined in edu::umd::cs::findbugs::ba::URLClassPath
      uses function storeClass(JavaClass) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function loadClass(Class) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function loadClass(@NonNull String) defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function removeClass(JavaClass) in line 104
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function storeClass(JavaClass) in line 87
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses variable nameToClassMap defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function dumpStack() defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
   function URLClassPathRepository() in line 59
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 52
      protection public
   variable nameToClassMap in line 56
   variable serialVersionUID in line 54
   variable urlClassPath in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/AvailableLoad.java
module edu::umd::cs::findbugs::ba::vna::AvailableLoad
   inherits from Comparable
   function compareTo(AvailableLoad) in line 91
      protection public
      13 lines of code
      1 parameters
      5 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function compareTo(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function equals(Object) in line 111
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function AvailableLoad(StaticField) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function getField() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function getReference() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function hashCode() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function matchesReference(ValueNumber) in line 77
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function AvailableLoad(StaticField) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function AvailableLoad(ValueNumber,InstanceField) in line 61
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable reference defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable field defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   variable field in line 43
   variable reference in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/LoadedFieldSet.java
module edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function addLoad(InstructionHandle,XField) in line 99
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable loadHandleSet defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function addStore(InstructionHandle,XField) in line 111
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function getField(InstructionHandle) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable handleToFieldMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function getLoadStoreCount(XField) in line 84
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable loadStoreCountMap defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function instructionIsLoad(InstructionHandle) in line 145
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable loadHandleSet defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function isLoaded(XField) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function LoadedFieldSet(MethodGen) in line 71
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   variable handleToFieldMap in line 62
   variable loadHandleSet in line 63
   variable loadStoreCountMap in line 61
module edu::umd::cs::findbugs::ba::vna::LoadedFieldSet::LoadStoreCount
   function getLoadCount() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getStoreCount() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/MergeTree.java
module edu::umd::cs::findbugs::ba::vna::MergeTree
   function getInputSet(ValueNumber) in line 73
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable outputToInputMap defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getTransitiveInputSet(ValueNumber) in line 92
      protection public
      36 lines of code
      1 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getInputSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function forNumber(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function mapInputToOutput(ValueNumber,ValueNumber) in line 57
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getInputSet(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   function MergeTree(ValueNumberFactory) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   variable DEBUG in line 36
      protection public
   variable factory in line 38
   variable outputToInputMap in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumber.java
module edu::umd::cs::findbugs::ba::vna::ValueNumber
   inherits from Comparable
   function compareTo(ValueNumber) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 102
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getFlags() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumber() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hasFlag(int) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setFlag(int) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFlags(int) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 92
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   variable ARRAY_VALUE in line 55
      protection public
   variable CONSTANT_CLASS_OBJECT in line 57
      protection public
   variable PHI_NODE in line 59
      protection public
   variable RETURN_VALUE in line 53
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberAnalysis.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   inherits from edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function compactValueNumbers(Dataflow< ValueNumberFrame, ValueNumberAnalysis >) in line 311
      protection public
      26 lines of code
      1 parameters
      4 conditional paths
      uses function ValueCompacter(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function factIterator() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function markFrameValues(ValueNumberFrame,ValueCompacter) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function compact(int[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable discovered defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable numValuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function createFact() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function factIterator() in line 262
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factAtLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getClassObjectValue(String) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable visitor defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getClassObjectValue(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function getEntryValue(int) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getExceptionValueNumber(BasicBlock) in line 383
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable exceptionHandlerValueNumberMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getFactAfterLocation(Location) in line 246
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable factAfterLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function getFactAtLocation(Location) in line 235
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable factAtLocationMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function makeFactTop(FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
   function getFactory() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getMergeTree() in line 106
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function getNumValuesAllocated() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getThisValue() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisValue defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function initEntryFact(ValueNumberFrame) in line 134
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function setValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function isThisValue(ValueNumber) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable thisValue defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function main(String[]) in line 360
      protection public
      22 lines of code
      1 parameters
      3 conditional paths
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function markFrameValues(ValueNumberFrame,ValueCompacter) in line 341
      15 lines of code
      2 parameters
      4 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isUsed(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable discovered defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses function allocateValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses function setUsed(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function meetInto(ValueNumberFrame,Edge,ValueNumberFrame) in line 161
      protection public
      21 lines of code
      3 parameters
      2 conditional paths
      uses function getExceptionValueNumber(BasicBlock) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFact() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function copyFrom(Frame< ValueNumber >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function clearStack() defined in edu::umd::cs::findbugs::ba::Frame
      uses function pushValue(ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses function mergeInto(ValueNumberFrame,ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function mergeInto(ValueNumberFrame,ValueNumberFrame) in line 184
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function mergeValues(ValueNumberFrame,ValueNumberFrame,int) in line 190
      5 lines of code
      3 parameters
      1 conditional paths
   function mergeValues(ValueNumberFrame,int,ValueNumber,ValueNumber) in line 196
      37 lines of code
      4 parameters
      5 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function setFlags(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function mapInputToOutput(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
   function setMergeTree(MergeTree) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergeTree defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function transferInstruction(InstructionHandle,BasicBlock,ValueNumberFrame) in line 145
      protection public
      15 lines of code
      3 parameters
      1 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function copy(FrameType,FrameType) defined in edu::umd::cs::findbugs::ba::FrameDataflowAnalysis
      uses variable visitor defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function setFrameAndLocation(FrameType,Location) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function setHandle(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function analyzeInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   function ValueNumberAnalysis(MethodGen,DepthFirstSearch,LoadedFieldSet,RepositoryLookupFailureCallback) in line 70
      protection public
      29 lines of code
      4 parameters
      4 conditional paths
      uses variable dfs defined in ForwardDataflowAnalysis< FrameType >
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable entryLocalValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis
   variable DEBUG in line 58
      protection public
   variable entryLocalValueList in line 63
   variable exceptionHandlerValueNumberMap in line 64
   variable factAfterLocationMap in line 67
   variable factAtLocationMap in line 66
   variable factory in line 61
   variable mergeTree in line 68
   variable methodGen in line 60
   variable thisValue in line 65
   variable visitor in line 62
module edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function allocateValue() in line 293
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numValuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function isUsed(int) in line 285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function setUsed(int) in line 289
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable valuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   function ValueCompacter(int) in line 272
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable valuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable numValuesUsed defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
      uses variable discovered defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysis::ValueCompacter
   variable discovered in line 270
      protection public
   variable numValuesUsed in line 269
      protection public
   variable valuesUsed in line 268
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberAnalysisFeatures.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   variable REDUNDANT_LOAD_ELIMINATION in line 41
      protection public
   variable RLE_DEBUG in line 46
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberCache.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function addOutputValues(Entry,ValueNumber[]) in line 129
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable entryToOutputMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function lookupOutputValues(Entry) in line 113
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses variable entryToOutputMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   variable DEBUG in line 40
   variable entryToOutputMap in line 104
module edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function equals(Object) in line 59
      protection public
      15 lines of code
      1 parameters
      6 conditional paths
      uses function Entry(InstructionHandle,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function hashCode() in line 76
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function toString() in line 90
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   function Entry(InstructionHandle,ValueNumber[]) in line 52
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
      uses variable inputValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache::Entry
   variable cachedHashCode in line 49
   variable handle in line 47
      protection public
   variable inputValueList in line 48
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberDataflow.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberDataflow
   inherits from edu::umd::cs::findbugs::ba::AbstractDataflow
   function getValueNumberToParamMap(Method) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getValueNumberToParamMap(String,boolean) in line 56
      protection public
      16 lines of code
      2 parameters
      2 conditional paths
      uses function getStartFact(BasicBlock) defined in Dataflow< Fact, AnalysisType >
      uses function getCFG() defined in Dataflow< Fact, AnalysisType >
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function ValueNumberDataflow(CFG,ValueNumberAnalysis) in line 33
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable cfg defined in Dataflow< Fact, AnalysisType >
      uses variable analysis defined in Dataflow< Fact, AnalysisType >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFactory.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function compact(int[],int) in line 70
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function createFreshValue() in line 42
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function forNumber(int) in line 51
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getNumValuesAllocated() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getNumValuesAllocated() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable allocatedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   variable allocatedValueList in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFrame.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   inherits from edu::umd::cs::findbugs::ba::Frame
   inherits from edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function addAvailableLoad(AvailableLoad,@NonNull ValueNumber[]) in line 101
      protection public
      11 lines of code
      2 parameters
      4 conditional paths
      uses function getUpdateableAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateablePreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function assignPreviouslyKnownAs(Frame< ValueNumber >) in line 294
      12 lines of code
      1 parameters
      2 conditional paths
      uses function ValueNumberFrame(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function availableLoadMapAsString() in line 63
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function copyFrom(Frame< ValueNumber >) in line 268
      protection public
      25 lines of code
      1 parameters
      5 conditional paths
      uses variable mergedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function ValueNumberFrame(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateableAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function assignPreviouslyKnownAs(Frame< ValueNumber >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function extractPackageName(String) in line 184
      3 lines of code
      1 parameters
      19 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function availableLoadMapAsString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isBottom() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable PHI_NODE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getMergedLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function getUpdateableMergedLoads() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function mapInputToOutput(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::MergeTree
      uses function setFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function assignPreviouslyKnownAs(Frame< ValueNumber >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getUpdateablePreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable mergedValueList defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function fromMatchingLoads(ValueNumber,ValueNumber) in line 361
      protection public
      9 lines of code
      2 parameters
      5 conditional paths
      uses function getLoad(ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getPreviouslyKnownAs() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
   function fuzzyMatch(ValueNumber,ValueNumber) in line 354
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function fromMatchingLoads(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function haveMatchingFlags(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getAvailableLoad(AvailableLoad) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getAvailableLoadMap() in line 404
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getLoad(ValueNumber) in line 76
      protection public
      9 lines of code
      1 parameters
      6 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getMergedLoads() in line 422
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getPreviouslyKnownAs() in line 442
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateableAvailableLoadMap() in line 407
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateableMergedLoads() in line 425
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function getUpdateablePreviouslyKnownAs() in line 463
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function haveMatchingFlags(ValueNumber,ValueNumber) in line 376
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getFlags() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function killAllLoads() in line 135
      protection public
      12 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function killAllLoadsOf(@CheckForNull ValueNumber) in line 152
      protection public
      11 lines of code
      1 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getReference() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function killLoadsOfField(XField) in line 118
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function killLoadsWithSimilarName(String,String) in line 164
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function extractPackageName(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function getField() defined in edu::umd::cs::findbugs::ba::vna::AvailableLoad
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) in line 397
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable availableLoadMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function setMergedLoads(Map< AvailableLoad, ValueNumber >) in line 415
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mergedLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) in line 435
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable previouslyKnownAs defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function toString() in line 312
      protection public
      26 lines of code
      0 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function valueToString(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable phiNodeForLoads defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function valueNumbersForLoads() in line 382
      protection public
      11 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getAvailableLoadMap() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   function valueToString(ValueNumber[]) in line 339
      14 lines of code
      1 parameters
      3 conditional paths
   function ValueNumberFrame(int) in line 54
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable numLocals defined in edu::umd::cs::findbugs::ba::Frame
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function setAvailableLoadMap(Map< AvailableLoad, ValueNumber[]>) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setMergedLoads(Map< AvailableLoad, ValueNumber >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setPreviouslyKnownAs(Map< ValueNumber, AvailableLoad >) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
   variable availableLoadMap in line 49
   variable mergedLoads in line 50
   variable mergedValueList in line 48
   variable phiNodeForLoads in line 52
      protection public
   variable previouslyKnownAs in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/vna/ValueNumberFrameModelingVisitor.java
module edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::Debug
   inherits from edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
   function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) in line 185
      20 lines of code
      3 parameters
      5 conditional paths
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function doForwardSubstitution() in line 166
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
      uses function isLoaded(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
   function doRedundantLoadElimination() in line 139
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isReferenceType() defined in edu::umd::cs::findbugs::ba::XField
      uses function getLoadStoreCount(XField) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function getLoadCount() defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet::LoadStoreCount
   function getClassObjectValue(String) in line 736
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable classObjectValueMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function setFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function getDefaultValue() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
   function getOutputValues(ValueNumber[],int) in line 528
      3 lines of code
      2 parameters
      1 conditional paths
   function getOutputValues(ValueNumber[],int,int) in line 532
      21 lines of code
      3 parameters
      5 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function lookupOutputValues(Entry) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function setFlags(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function vlts(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function addOutputValues(Entry,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function killLoadsOfObjectsPassed(InvokeInstruction) in line 387
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function loadInstanceField(InstanceField,Instruction) in line 569
      43 lines of code
      2 parameters
      8 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function vlts(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function loadStaticField(StaticField,Instruction) in line 619
      28 lines of code
      2 parameters
      6 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsProduced(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable EMPTY_INPUT_VALUE_LIST defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function modelNormalInstruction(Instruction,int,int) in line 210
      protection public
      23 lines of code
      3 parameters
      4 conditional paths
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ARRAY_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getOutputValues(ValueNumber[],int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function popInputValues(int) in line 499
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function pushOutputValues(ValueNumber[]) in line 519
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function setHandle(InstructionHandle) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function storeInstanceField(InstanceField,Instruction,boolean) in line 656
      37 lines of code
      3 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function storeStaticField(StaticField,Instruction,boolean) in line 702
      28 lines of code
      3 parameters
      5 conditional paths
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getNumWordsConsumed(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function popInputValues(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function pushOutputValues(ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkConsumedAndProducedValues(Instruction,ValueNumber[],ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   function visitCHECKCAST(CHECKCAST) in line 487
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 235
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function loadInstanceField(InstanceField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitGETSTATIC(GETSTATIC) in line 270
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getClassObjectValue(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function loadStaticField(StaticField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitIINC(IINC) in line 462
      protection public
      23 lines of code
      1 parameters
      3 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function lookupOutputValues(Entry) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses function addOutputValues(Entry,ValueNumber[]) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberCache
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 418
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 410
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function killLoadsOfObjectsPassed(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKESTATIC(INVOKESTATIC) in line 320
      protection public
      66 lines of code
      1 parameters
      13 conditional paths
      uses variable REDUNDANT_LOAD_ELIMINATION defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable frame defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses variable stringConstantMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable RLE_DEBUG defined in edu::umd::cs::findbugs::ba::vna::ValueNumberAnalysisFeatures
      uses function getClassObjectValue(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable handle defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getField(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function instructionIsLoad(InstructionHandle) defined in edu::umd::cs::findbugs::ba::vna::LoadedFieldSet
      uses function doRedundantLoadElimination() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function loadStaticField(StaticField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function loadInstanceField(InstanceField,Instruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function storeStaticField(StaticField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function storeInstanceField(InstanceField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 428
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function killLoadsOfObjectsPassed(InvokeInstruction) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitLDC(LDC) in line 438
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses variable cpg defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function getClassObjectValue(String) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable constantValueMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function createFreshValue() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFactory
      uses variable stringConstantMap defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitMONITORENTER(MONITORENTER) in line 402
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getFrame() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitPUTFIELD(PUTFIELD) in line 252
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function storeInstanceField(InstanceField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function visitPUTSTATIC(PUTSTATIC) in line 304
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function doForwardSubstitution() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function getCPG() defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
      uses function storeStaticField(StaticField,Instruction,boolean) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function handleNormalInstruction(Instruction) defined in edu::umd::cs::findbugs::ba::AbstractFrameModelingVisitor
   function vlts(ValueNumber[]) in line 554
      8 lines of code
      1 parameters
      3 conditional paths
   function ValueNumberFrameModelingVisitor(MethodGen,ValueNumberFactory,ValueNumberCache,LoadedFieldSet,RepositoryLookupFailureCallback) in line 98
      protection public
      15 lines of code
      5 parameters
      1 conditional paths
      uses variable methodGen defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable factory defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable cache defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable loadedFieldSet defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrameModelingVisitor
   variable cache in line 77
   variable classObjectValueMap in line 79
   variable constantValueMap in line 80
   variable EMPTY_INPUT_VALUE_LIST in line 267
   variable factory in line 76
   variable handle in line 83
   variable loadedFieldSet in line 78
   variable lookupFailureCallback in line 82
   variable methodGen in line 75
   variable stringConstantMap in line 81
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/XFactory.java
module edu::umd::cs::findbugs::ba::XFactory
   function addCalledMethod(XMethod) in line 73
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable calledMethods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable calledMethodsIsInterned defined in edu::umd::cs::findbugs::ba::XFactory
   function canonicalizeString(String) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createReferencedXField(DismantleBytecode) in line 361
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function createXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRefFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function createReferencedXMethod(DismantleBytecode) in line 367
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function createXField(String,String,String,boolean) in line 225
      protection public
      19 lines of code
      4 parameters
      4 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function intern(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function resolve(XField) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(FieldInstruction,ConstantPoolGen) in line 352
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(FieldAnnotation) in line 374
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
   function createXField(JavaClass,Field) in line 378
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function createXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(String,Field) in line 388
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(String,String,String,int) in line 395
      protection public
      13 lines of code
      4 parameters
      2 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function intern(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXField(PreorderVisitor) in line 444
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(String,Method) in line 125
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
   function createXMethod(String,String,String,int) in line 134
      protection public
      16 lines of code
      4 parameters
      2 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function intern(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(JavaClass,Method) in line 158
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(String,String,String,boolean) in line 168
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function intern(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function resolve(XField) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(MethodAnnotation) in line 180
      protection public
      3 lines of code
      1 parameters
      5 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable DEBUG_CIRCULARITY defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(InvokeInstruction,ConstantPoolGen) in line 415
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(PreorderVisitor) in line 430
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(MethodGen) in line 451
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
   function createXMethod(JavaClassAndMethod) in line 473
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function deprecate(ClassMember) in line 464
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable deprecated defined in edu::umd::cs::findbugs::ba::XFactory
   function fail(String,@CheckForNull JavaClass,@CheckForNull JavaClass) in line 284
      13 lines of code
      3 parameters
      4 conditional paths
      uses variable DEBUG_CIRCULARITY defined in edu::umd::cs::findbugs::ba::XFactory
   function getDeprecated() in line 468
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable deprecatedView defined in edu::umd::cs::findbugs::ba::XFactory
   function getFields() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldsView defined in edu::umd::cs::findbugs::ba::XFactory
   function getMethods() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodsView defined in edu::umd::cs::findbugs::ba::XFactory
   function intern(XMethod) in line 92
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
   function intern(XField) in line 100
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function isCalled(XMethod) in line 78
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable calledMethodsIsInterned defined in edu::umd::cs::findbugs::ba::XFactory
      uses variable calledMethods defined in edu::umd::cs::findbugs::ba::XFactory
      uses function intern(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
   function isInterned(XMethod) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
   function resolve(XField) in line 250
      33 lines of code
      1 parameters
      10 conditional paths
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function fail(String,@CheckForNull JavaClass,@CheckForNull JavaClass) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXField(String,String,String,boolean) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function intern(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses variable fields defined in edu::umd::cs::findbugs::ba::XFactory
   function resolve(XMethod) in line 303
      48 lines of code
      1 parameters
      11 conditional paths
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function fail(String,@CheckForNull JavaClass,@CheckForNull JavaClass) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createXMethod(String,Method) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable methods defined in edu::umd::cs::findbugs::ba::XFactory
   function XFactory() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   variable calledMethods in line 70
   variable calledMethodsIsInterned in line 71
   variable DEBUG_CIRCULARITY in line 245
      protection public
   variable deprecated in line 60
   variable deprecatedView in line 61
   variable fields in line 62
   variable fieldsView in line 67
   variable methods in line 58
   variable methodsView in line 64
module edu::umd::cs::findbugs::ba::XFactory::RecursionDepth
   function dump() in line 192
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function enter(Object) in line 197
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function exit() in line 204
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 189
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable depth in line 186
   variable MAX_DEPTH in line 185
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/XField.java
module edu::umd::cs::findbugs::ba::XField
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   function isReferenceType() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isVolatile() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/XMethod.java
module edu::umd::cs::findbugs::ba::XMethod
   inherits from edu::umd::cs::findbugs::ba::ClassMember
   function getNumParams() in line 24
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isNative() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSynchronized() in line 23
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/XMethodParameter.java
module edu::umd::cs::findbugs::ba::XMethodParameter
   inherits from Comparable
   function compareTo(XMethodParameter) in line 48
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function equals(Object) in line 39
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function XMethodParameter(XMethod,int) defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function getMethod() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function getParameterNumber() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function hashCode() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function toString() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
   function XMethodParameter(XMethod,int) in line 26
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses variable parameter defined in edu::umd::cs::findbugs::ba::XMethodParameter
   variable method in line 30
   variable parameter in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ba/ZipSourceFileDataSource.java
module edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   inherits from edu::umd::cs::findbugs::ba::SourceFileDataSource
   function getFullFileName() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   function open() in line 43
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable zipFile defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   function ZipSourceFileDataSource(ZipFile,String) in line 37
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable zipFile defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
      uses variable entryName defined in edu::umd::cs::findbugs::ba::ZipSourceFileDataSource
   variable entryName in line 34
   variable zipEntry in line 35
   variable zipFile in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/bcel/AnnotationDetector.java
module edu::umd::cs::findbugs::bcel::AnnotationDetector
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function getClassContext() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::AnnotationDetector
   function report() in line 52
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::AnnotationDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/bcel/OpcodeStackDetector.java
module edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   abstract class
   function afterOpcode(int) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function sawOpcode(int) defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function beforeOpcode(int) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function sawOpcode(int) in line 50
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable stack in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/bcel/PreorderDetector.java
module edu::umd::cs::findbugs::bcel::PreorderDetector
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function getClassContext() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::PreorderDetector
   function report() in line 50
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 36
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::bcel::PreorderDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugAccumulator.java
module edu::umd::cs::findbugs::BugAccumulator
   function accumulateBug(BugInstance,SourceLineAnnotation) in line 56
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
   function accumulateBug(BugInstance,BytecodeScanningDetector) in line 72
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
   function entrySetIterator() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
   function reportAccumulatedBugs() in line 92
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::BugAccumulator
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_ANOTHER_INSTANCE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable reporter defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function BugAccumulator(BugReporter) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::BugAccumulator
   variable map in line 38
   variable reporter in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugAnnotation.java
module edu::umd::cs::findbugs::BugAnnotation
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::XMLWriteableWithMessages
   inherits from java::io::Serializable
   inherits from Cloneable
   function accept(BugAnnotationVisitor) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function clone() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function format(String,ClassAnnotation) in line 54
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getDescription() in line 60
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isSignificant() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setDescription(String) in line 66
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable MESSAGE_TAG in line 35
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugAnnotationUtil.java
module edu::umd::cs::findbugs::BugAnnotationUtil
   abstract class
   function writeXML(XMLOutput,String,BugAnnotation,XMLAttributeList,boolean) in line 42
      protection public
      18 lines of code
      5 parameters
      2 conditional paths
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugAnnotationVisitor.java
module edu::umd::cs::findbugs::BugAnnotationVisitor
   function visitClassAnnotation(ClassAnnotation) in line 23
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitFieldAnnotation(FieldAnnotation) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitIntAnnotation(IntAnnotation) in line 29
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitLocalVariableAnnotation(LocalVariableAnnotation) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitMethodAnnotation(MethodAnnotation) in line 27
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitSourceLineAnnotation(SourceLineAnnotation) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitStringAnnotation(StringAnnotation) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function visitTypeAnnotation(TypeAnnotation) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugCategory.java
module edu::umd::cs::findbugs::BugCategory
   inherits from Comparable
   function compareTo(BugCategory) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function equals(Object) in line 114
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function BugCategory(String,String,String,String) defined in edu::umd::cs::findbugs::BugCategory
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function getAbbrev() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
   function getCategory() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function getDetailText() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function getShortDescription() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
   function hashCode() in line 109
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
   function setAbbrev(String) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
   function setDetailText(String) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function toString() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function BugCategory(String,String,String,String) in line 41
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCategory
      uses variable detailText defined in edu::umd::cs::findbugs::BugCategory
   function BugCategory(String,String) in line 54
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugCategory
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugCategory
   variable abbrev in line 30
   variable category in line 28
   variable detailText in line 31
   variable shortDescription in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugCode.java
module edu::umd::cs::findbugs::BugCode
   function getAbbrev() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function getDescription() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::BugCode
   function toString() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
   function BugCode(String,String) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugCode
      uses variable description defined in edu::umd::cs::findbugs::BugCode
   variable abbrev in line 32
   variable description in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugCollection.java
module edu::umd::cs::findbugs::BugCollection
   function add(BugInstance) in line 149
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function add(BugInstance,boolean) in line 160
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function addAppVersion(AppVersion) in line 129
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addError(String) in line 179
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addError(AnalysisError) in line 186
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addMissingClass(String) in line 193
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function appVersionIterator() in line 139
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearAppVersions() in line 123
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function clearClassFeatures() in line 201
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createEmptyCollectionWithMetadata() in line 282
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function findBug(String,String,int) in line 294
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getAnalysisTimestamp() in line 91
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getAppVersionFromSequenceNumber(long) in line 98
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getCollection() in line 267
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCurrentAppVersion() in line 134
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectStats() in line 66
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReleaseName() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSequenceNumber() in line 117
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTimestamp() in line 79
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getWithMessages() in line 292
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 262
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupFromUniqueId(String) in line 172
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function readXML(String,Project) in line 210
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function readXML(InputStream,Project) in line 222
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setAnalysisTimestamp(long) in line 86
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setClassFeatureSet(ClassFeatureSet) in line 195
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setReleaseName(String) in line 55
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSequenceNumber(long) in line 106
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setTimestamp(long) in line 73
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setWithMessages(boolean) in line 287
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function toDocument(Project) in line 275
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeEpilogue(XMLOutput) in line 199
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writePrologue(XMLOutput,Project) in line 197
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function writeXML(String,Project) in line 231
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function writeXML(OutputStream,Project) in line 241
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function writeXML(XMLOutput,Project) in line 256
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   variable ANALYSIS_ERROR_ELEMENT_NAME in line 39
      protection public
   variable APP_CLASS_ELEMENT_NAME in line 46
      protection public
   variable CLASS_HASHES_ELEMENT_NAME in line 47
      protection public
   variable ERROR_ELEMENT_NAME in line 40
      protection public
   variable ERROR_EXCEPTION_ELEMENT_NAME in line 42
      protection public
   variable ERROR_MESSAGE_ELEMENT_NAME in line 41
      protection public
   variable ERROR_STACK_TRACE_ELEMENT_NAME in line 43
      protection public
   variable ERRORS_ELEMENT_NAME in line 38
      protection public
   variable HISTORY_ELEMENT_NAME in line 48
      protection public
   variable MISSING_CLASS_ELEMENT_NAME in line 44
      protection public
   variable PROJECT_ELEMENT_NAME in line 37
      protection public
   variable ROOT_ELEMENT_NAME in line 35
      protection public
   variable SRCMAP_ELEMENT_NAME in line 36
      protection public
   variable SUMMARY_HTML_ELEMENT_NAME in line 45
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugCollectionBugReporter.java
module edu::umd::cs::findbugs::BugCollectionBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   inherits from edu::umd::cs::findbugs::ba::Debug
   function doReportBug(BugInstance) in line 79
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable VERIFY_INTEGRITY defined in edu::umd::cs::findbugs::ba::Debug
      uses function checkBugInstance(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function finish() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBugCollection() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function getProject() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function getRealBugReporter() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function logError(String) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function logError(String,Throwable) in line 56
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function observeClass(ClassDescriptor) in line 46
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 71
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function BugCollectionBugReporter(Project) in line 31
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getProjectStats() defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::SortedBugCollection
   variable bugCollection in line 28
   variable project in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugDesignation.java
module edu::umd::cs::findbugs::BugDesignation
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from java::io::Serializable
   function getAnnotationText() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function getDesignationKey() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
   function getTimestamp() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function getUser() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   function merge(@CheckForNull BugDesignation) in line 120
      protection public
      22 lines of code
      1 parameters
      7 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function setAnnotationText(String) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   function setDesignationKey(String) in line 74
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
   function setTimestamp(long) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
   function setUser(String) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
   function writeXML(XMLOutput) in line 100
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable designation defined in edu::umd::cs::findbugs::BugDesignation
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable user defined in edu::umd::cs::findbugs::BugDesignation
      uses variable timestamp defined in edu::umd::cs::findbugs::BugDesignation
      uses variable annotationText defined in edu::umd::cs::findbugs::BugDesignation
   variable annotationText in line 52
   variable designation in line 43
   variable timestamp in line 48
   variable UNCLASSIFIED in line 38
      protection public
   variable user in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugInstance.java
module edu::umd::cs::findbugs::BugInstance
   inherits from Comparable
   inherits from edu::umd::cs::findbugs::XMLWriteableWithMessages
   inherits from java::io::Serializable
   inherits from Cloneable
   function add(BugAnnotation) in line 1655
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
   function addAnnotations(Collection<?extends BugAnnotation >) in line 754
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addCalledMethod(DismantleBytecode) in line 1182
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
   function addCalledMethod(String,String,String,boolean) in line 1195
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
   function addCalledMethod(MethodGen,InvokeInstruction) in line 1207
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(String,String) in line 836
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(String) in line 849
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(ClassNode) in line 862
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(ClassDescriptor) in line 875
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(JavaClass) in line 887
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addClass(PreorderVisitor) in line 898
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodDescriptor) in line 765
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(PreorderVisitor) in line 778
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodAnnotation) in line 790
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(MethodGen,String) in line 803
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addClassAndMethod(JavaClass,Method) in line 817
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addField(String,String,String,boolean) in line 961
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function addField(String,String,String,int) in line 975
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addField(PreorderVisitor) in line 979
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addField(FieldAnnotation) in line 989
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addField(FieldVariable) in line 1000
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldSig() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
   function addField(XField) in line 1020
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
   function addField(FieldDescriptor) in line 1029
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addFoundAndExpectedType(String,String) in line 937
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable EXPECTED_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function addInt(int) in line 1250
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(String,String,String,boolean) in line 1085
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
   function addMethod(String,String,String,int) in line 1100
      protection public
      4 lines of code
      4 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(MethodGen,String) in line 1115
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(JavaClass,Method) in line 1134
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(JavaClassAndMethod) in line 1154
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function addMethod(PreorderVisitor) in line 1166
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(XMethod) in line 1223
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addMethod(MethodAnnotation) in line 1235
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalAnnotation(@CheckForNull BugAnnotation) in line 1651
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addOptionalField(@CheckForNull XField) in line 1010
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addProperty(BugProperty) in line 735
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   function addReferencedField(DismantleBytecode) in line 1044
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addReferencedField(FieldAnnotation) in line 1053
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(SourceLineAnnotation) in line 1276
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(BytecodeScanningDetector,int) in line 1291
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,PreorderVisitor,int) in line 1310
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,MethodGen,String,@NonNull InstructionHandle) in line 1329
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,MethodGen,String,InstructionHandle,InstructionHandle) in line 1347
      protection public
      13 lines of code
      5 parameters
      3 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(ClassContext,Method,Location) in line 1369
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function addSourceLine(ClassContext,Method,InstructionHandle) in line 1380
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLine(BytecodeScanningDetector) in line 1437
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLineRange(BytecodeScanningDetector,int,int) in line 1399
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLineRange(ClassContext,PreorderVisitor,int,int) in line 1420
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSourceLinesForMethod(MethodAnnotation,SourceLineAnnotation) in line 1668
      11 lines of code
      2 parameters
      2 conditional paths
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function addString(String) in line 1261
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addSuperclass(PreorderVisitor) in line 911
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function addType(String) in line 931
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addTypeOfNamedClass(String) in line 943
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addUnknownSourceLine(String,String) in line 1453
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function addVisitedField(PreorderVisitor) in line 1065
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function annotationIterator() in line 445
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function annotationTextContainsWord(String) in line 531
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getTextAnnotationWords() defined in edu::umd::cs::findbugs::BugInstance
   function boundedPriority(int) in line 314
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function boundPriority() in line 153
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function clone() in line 158
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses function BugInstance(String,int) defined in edu::umd::cs::findbugs::BugInstance
      uses function clone() defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(BugProperty) defined in edu::umd::cs::findbugs::BugInstance
   function compareTo(BugInstance) in line 1715
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function deleteProperty(String) in line 703
      protection public
      31 lines of code
      1 parameters
      6 conditional paths
      uses variable prev defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function describe(String) in line 1540
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function equals(Object) in line 1696
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
      uses function BugInstance(String,int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function findAnnotationOfType(Class<?extends BugAnnotation >) in line 375
      8 lines of code
      1 parameters
      3 conditional paths
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
   function getAbbrev() in line 454
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function getAbridgedMessage() in line 1486
      protection public
      17 lines of code
      0 parameters
      3 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
   function getAnnotationText() in line 516
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugDesignation
   function getBugPattern() in line 242
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
   function getCategoryAbbrev() in line 281
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategoryAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function getFirstVersion() in line 1752
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceHash() in line 1817
      protection public
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable DONT_HASH defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceKey() in line 417
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function isSignificant() defined in edu::umd::cs::findbugs::MethodAnnotation
   function getInstanceOccurrenceMax() in line 1860
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOccurrenceMax defined in edu::umd::cs::findbugs::BugInstance
   function getInstanceOccurrenceNum() in line 1846
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceOccurrenceNum defined in edu::umd::cs::findbugs::BugInstance
   function getLastVersion() in line 1769
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
   function getMessage() in line 1508
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getMessageWithoutPrefix() in line 1469
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function format(BugAnnotation[],ClassAnnotation) defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLongDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
   function getMessageWithPriorityType() in line 1526
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityTypeString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function getMessageWithPriorityTypeAbbreviation() in line 1530
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityTypeAbbreviation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   function getNonnullUserDesignation() in line 478
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function getPrimaryClass() in line 340
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findAnnotationOfType(Class<?extends BugAnnotation >) defined in edu::umd::cs::findbugs::BugInstance
   function getPrimaryField() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findAnnotationOfType(Class<?extends BugAnnotation >) defined in edu::umd::cs::findbugs::BugInstance
   function getPrimaryLocalVariableAnnotation() in line 384
      protection public
      6 lines of code
      0 parameters
      3 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
   function getPrimaryMethod() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findAnnotationOfType(Class<?extends BugAnnotation >) defined in edu::umd::cs::findbugs::BugInstance
   function getPrimarySourceLineAnnotation() in line 397
      protection public
      19 lines of code
      0 parameters
      6 conditional paths
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function inspectPackageMemberSourceLines(PackageMemberAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
   function getPriority() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityAbbreviation() in line 304
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityString() defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityString() in line 287
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function getPriorityTypeAbbreviation() in line 275
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getPriorityAbbreviation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategoryAbbrev() defined in edu::umd::cs::findbugs::BugInstance
   function getPriorityTypeString() in line 263
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function getPriorityString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
   function getProperty(String) in line 631
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function lookupProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function getProperty(String,String) in line 645
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getProperty(String) defined in edu::umd::cs::findbugs::BugInstance
   function getTextAnnotationWords() in line 538
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
   function getType() in line 235
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
   function getUniqueId() in line 556
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable uniqueId defined in edu::umd::cs::findbugs::BugInstance
   function getUserDesignation() in line 470
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function getUserDesignationKey() in line 496
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
   function hashCode() in line 1681
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
   function inspectPackageMemberSourceLines(PackageMemberAnnotation) in line 438
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceLines() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function isExperimental() in line 332
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugPattern
   function isInstanceHashConsistent() in line 1833
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable oldInstanceHash defined in edu::umd::cs::findbugs::BugInstance
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
   function isIntroducedByChangeOfExistingClass() in line 1783
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
   function isRemovedByChangeOfPersistingClass() in line 1797
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
   function lookupProperty(String) in line 684
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function lowerPriority() in line 321
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function lowerPriorityALot() in line 325
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function lowerPriorityIfDeprecated() in line 358
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function lowerPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
   function propertyIterator() in line 655
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function raisePriority() in line 317
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function setAdjustExperimental(boolean) in line 224
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::BugInstance
   function setAnnotationText(String) in line 507
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setAnnotationText(String) defined in edu::umd::cs::findbugs::BugDesignation
   function setFirstVersion(long) in line 1742
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceHash(String) in line 1804
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceHash defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceOccurrenceMax(int) in line 1853
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOccurrenceMax defined in edu::umd::cs::findbugs::BugInstance
   function setInstanceOccurrenceNum(int) in line 1839
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceOccurrenceNum defined in edu::umd::cs::findbugs::BugInstance
   function setIntroducedByChangeOfExistingClass(boolean) in line 1776
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
   function setLastVersion(long) in line 1759
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
   function setOldInstanceHash(String) in line 1810
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable oldInstanceHash defined in edu::umd::cs::findbugs::BugInstance
   function setPriority(int) in line 310
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function boundedPriority(int) defined in edu::umd::cs::findbugs::BugInstance
   function setProperty(String,String) in line 666
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function lookupProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setValue(String) defined in edu::umd::cs::findbugs::BugProperty
      uses function addProperty(BugProperty) defined in edu::umd::cs::findbugs::BugInstance
   function setRemovedByChangeOfPersistingClass(boolean) in line 1790
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
   function setUserDesignation(BugDesignation) in line 461
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
   function toString() in line 1554
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getShortMessage(String) defined in edu::umd::cs::findbugs::I18N
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
   function writeXML(XMLOutput) in line 1562
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 1566
      protection public
      77 lines of code
      2 parameters
      17 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getUniqueId() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceNum() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceMax() defined in edu::umd::cs::findbugs::BugInstance
      uses variable firstVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable lastVersion defined in edu::umd::cs::findbugs::BugInstance
      uses variable introducedByChangeOfExistingClass defined in edu::umd::cs::findbugs::BugInstance
      uses variable removedByChangeOfPersistingClass defined in edu::umd::cs::findbugs::BugInstance
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::BugInstance
      uses variable userDesignation defined in edu::umd::cs::findbugs::BugInstance
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::BugDesignation
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function toString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setSynthetic(boolean) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::BugProperty
   function BugInstance(String,int) in line 135
      protection public
      17 lines of code
      2 parameters
      4 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses variable annotationList defined in edu::umd::cs::findbugs::BugInstance
      uses variable cachedHashCode defined in edu::umd::cs::findbugs::BugInstance
      uses variable INVALID_HASH_CODE defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugTypes defined in edu::umd::cs::findbugs::BugInstance
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses variable adjustExperimental defined in edu::umd::cs::findbugs::BugInstance
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function boundPriority() defined in edu::umd::cs::findbugs::BugInstance
   function BugInstance(Detector,String,int) in line 187
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function getFactoryByClassName(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPriorityAdjustment() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function boundPriority() defined in edu::umd::cs::findbugs::BugInstance
   function BugInstance(Detector2,String,int) in line 210
      protection public
      14 lines of code
      3 parameters
      3 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::BugInstance
      uses function getFactoryByClassName(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getDetectorClassName() defined in edu::umd::cs::findbugs::Detector2
      uses function getPriorityAdjustment() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function boundPriority() defined in edu::umd::cs::findbugs::BugInstance
   variable adjustExperimental in line 125
   variable annotationList in line 95
   variable bugTypes in line 127
   variable cachedHashCode in line 96
   variable DONT_HASH in line 1813
   variable ELEMENT_NAME in line 1644
   variable firstVersion in line 110
   variable instanceHash in line 101
   variable instanceOccurrenceMax in line 103
   variable instanceOccurrenceNum in line 102
   variable introducedByChangeOfExistingClass in line 112
   variable INVALID_HASH_CODE in line 119
   variable lastVersion in line 111
   variable oldInstanceHash in line 100
   variable priority in line 94
   variable propertyListHead in line 98
   variable removedByChangeOfPersistingClass in line 113
   variable serialVersionUID in line 91
   variable type in line 93
   variable uniqueId in line 99
   variable USER_ANNOTATION_ELEMENT_NAME in line 1645
   variable userDesignation in line 97
module edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
   inherits from java::util::Iterator
   function findNext() in line 618
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   function hasNext() in line 585
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
   function next() in line 591
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable prev defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable removed defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
   function remove() in line 604
      protection public
      13 lines of code
      0 parameters
      4 conditional paths
      uses variable removed defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable prev defined in edu::umd::cs::findbugs::BugInstance::BugPropertyIterator
      uses variable propertyListHead defined in edu::umd::cs::findbugs::BugInstance
   variable prev in line 579
   variable removed in line 580
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugPattern.java
module edu::umd::cs::findbugs::BugPattern
   inherits from Comparable
   function compareTo(BugPattern) in line 149
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function equals(Object) in line 159
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function BugPattern(String,String,String,boolean,String,String,String) defined in edu::umd::cs::findbugs::BugPattern
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function getAbbrev() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
   function getCategory() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable category defined in edu::umd::cs::findbugs::BugPattern
   function getCategoryAbbrev() in line 92
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
   function getDetailHTML() in line 133
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses variable detailHTML defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function getDetailText() in line 126
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   function getLongDescription() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable longDescription defined in edu::umd::cs::findbugs::BugPattern
   function getShortDescription() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugPattern
   function getType() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function hashCode() in line 154
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
   function isExperimental() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable experimental defined in edu::umd::cs::findbugs::BugPattern
   function BugPattern(String,String,String,boolean,String,String,String) in line 54
      protection public
      10 lines of code
      7 parameters
      1 conditional paths
      uses variable type defined in edu::umd::cs::findbugs::BugPattern
      uses variable abbrev defined in edu::umd::cs::findbugs::BugPattern
      uses variable category defined in edu::umd::cs::findbugs::BugPattern
      uses variable experimental defined in edu::umd::cs::findbugs::BugPattern
      uses variable shortDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable longDescription defined in edu::umd::cs::findbugs::BugPattern
      uses variable detailText defined in edu::umd::cs::findbugs::BugPattern
   variable abbrev in line 34
   variable category in line 35
   variable detailHTML in line 40
   variable detailText in line 39
   variable experimental in line 36
   variable longDescription in line 38
   variable shortDescription in line 37
   variable type in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugProperty.java
module edu::umd::cs::findbugs::BugProperty
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from java::io::Serializable
   inherits from Cloneable
   function clone() in line 65
      7 lines of code
      0 parameters
      2 conditional paths
   function getName() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::BugProperty
   function getValue() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::BugProperty
   function getValueAsBoolean() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function getValueAsInt() in line 107
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function setValue(String) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::BugProperty
      uses variable next defined in edu::umd::cs::findbugs::BugProperty
   function writeXML(XMLOutput) in line 141
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   variable IS_BUG in line 42
      protection public
   variable name in line 48
   variable next in line 50
   variable serialVersionUID in line 37
   variable SEVERITY in line 45
      protection public
   variable value in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugReporter.java
module edu::umd::cs::findbugs::BugReporter
   inherits from edu::umd::cs::findbugs::ba::RepositoryLookupFailureCallback
   inherits from edu::umd::cs::findbugs::classfile::IClassObserver
   function addObserver(BugReporterObserver) in line 88
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 76
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectStats() in line 94
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRealBugReporter() in line 103
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function reportBug(@NonNull BugInstance) in line 69
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportQueuedErrors() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setErrorVerbosity(int) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setPriorityThreshold(int) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable NORMAL in line 45
      protection public
   variable SILENT in line 40
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BugReporterObserver.java
module edu::umd::cs::findbugs::BugReporterObserver
   function reportBug(BugInstance) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ByteCodePatternDetector.java
module edu::umd::cs::findbugs::ByteCodePatternDetector
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function getBugReporter() in line 48
      1 lines of code
      0 parameters
      1 conditional paths
   function getDetectorName() in line 102
      8 lines of code
      0 parameters
      2 conditional paths
   function getPattern() in line 117
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function prescreen(Method,ClassContext) in line 138
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function report() in line 111
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
      uses function getPattern() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function prescreen(Method,ClassContext) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function reportMatch(ClassContext,Method,ByteCodePatternMatch) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
   function reportMatch(ClassContext,Method,ByteCodePatternMatch) in line 148
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 50
      protection public
      51 lines of code
      1 parameters
      11 conditional paths
      uses function getPattern() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable METHOD defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses variable DEBUG defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function prescreen(Method,ClassContext) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function byteCodePatternMatchIterator() defined in edu::umd::cs::findbugs::ba::bcp::PatternMatcher
      uses function patternElementMatchIterator() defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses function toString() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function reportMatch(ClassContext,Method,ByteCodePatternMatch) defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function getBugReporter() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getDetectorName() defined in edu::umd::cs::findbugs::ByteCodePatternDetector
   variable DEBUG in line 45
   variable METHOD in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/BytecodeScanningDetector.java
module edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::Detector
   function getClassContext() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   variable classContext in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/CallGraph.java
module edu::umd::cs::findbugs::CallGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function addNode(Method) in line 41
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function addVertex(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses variable methodToNodeMap defined in edu::umd::cs::findbugs::CallGraph
   function allocateEdge(CallGraphNode,CallGraphNode) in line 54
      3 lines of code
      2 parameters
      1 conditional paths
   function createEdge(CallGraphNode,CallGraphNode,CallSite) in line 35
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   function getNodeForMethod(Method) in line 49
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodToNodeMap defined in edu::umd::cs::findbugs::CallGraph
   function CallGraph() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable methodToNodeMap in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/CallGraphEdge.java
module edu::umd::cs::findbugs::CallGraphEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function getCalledMethod() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCallingMethod() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCallSite() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callSite defined in edu::umd::cs::findbugs::CallGraphEdge
   variable callSite in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/CallGraphNode.java
module edu::umd::cs::findbugs::CallGraphNode
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function getMethod() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallGraphNode
   variable method in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/CallSite.java
module edu::umd::cs::findbugs::CallSite
   function equals(Object) in line 83
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function CallSite(Method,BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::CallSite
      uses variable method defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::CallSite
   function getBasicBlock() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
   function getHandle() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getLocation() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::CallSite
   function getMethod() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
   function hashCode() in line 76
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::CallSite
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable location defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function CallSite(Method,BasicBlock,InstructionHandle) in line 42
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::CallSite
   variable location in line 33
   variable method in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/CategoryFilteringBugReporter.java
module edu::umd::cs::findbugs::CategoryFilteringBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function reportBug(BugInstance) in line 36
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses variable categorySet defined in edu::umd::cs::findbugs::CategoryFilteringBugReporter
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function CategoryFilteringBugReporter(BugReporter,Set< String >) in line 30
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable categorySet defined in edu::umd::cs::findbugs::CategoryFilteringBugReporter
   variable categorySet in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ClassAnnotation.java
module edu::umd::cs::findbugs::ClassAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 61
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitClassAnnotation(ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 99
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function ClassAnnotation(String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function contains(ClassAnnotation) in line 90
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function equals(Object) in line 83
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function ClassAnnotation(String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 66
      10 lines of code
      2 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromClassDescriptor(ClassDescriptor) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ClassAnnotation(String) defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getSourceLines() in line 110
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassLine(String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function getTopLevelClass() in line 93
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function ClassAnnotation(String) defined in edu::umd::cs::findbugs::ClassAnnotation
   function hashCode() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function writeXML(XMLOutput) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 141
      protection public
      17 lines of code
      2 parameters
      3 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function ClassAnnotation(String) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::ClassAnnotation
   variable DEFAULT_ROLE in line 40
   variable ELEMENT_NAME in line 135
   variable serialVersionUID in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassData.java
module edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getClassDescriptor() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getCodeBaseEntry() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getData() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function getInputStream() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function ClassData(ClassDescriptor,ICodeBaseEntry,byte[]) in line 44
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable data defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   variable classDescriptor in line 34
   variable codeBaseEntry in line 35
   variable data in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassInfo.java
module edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   inherits from edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function getFieldDescriptorList() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getMethodDescriptorList() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function getReferencedClassDescriptorList() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable referencedClassDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function setFieldDescriptorList(FieldDescriptor[]) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fieldDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function setMethodDescriptorList(MethodDescriptor[]) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable methodDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function setReferencedClassDescriptorList(ClassDescriptor[]) in line 111
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable referencedClassDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   function ClassInfo() in line 44
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function ClassInfo(ClassDescriptor,ClassDescriptor,ClassDescriptor[],ICodeBaseEntry,int,FieldDescriptor[],MethodDescriptor[],ClassDescriptor[]) in line 58
      protection public
      14 lines of code
      8 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable superclassDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable interfaceDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable accessFlags defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable fieldDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses variable methodDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses variable referencedClassDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
   variable fieldDescriptorList in line 35
   variable methodDescriptorList in line 36
   variable referencedClassDescriptorList in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/analysis/ClassNameAndSuperclassInfo.java
module edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function getAccessFlags() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function getClassDescriptor() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function getCodeBaseEntry() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function getInterfaceDescriptorList() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable interfaceDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function getSuperclassDescriptor() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable superclassDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function setAccessFlags(int) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable accessFlags defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function setClassDescriptor(ClassDescriptor) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function setCodeBaseEntry(ICodeBaseEntry) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function setInterfaceDescriptorList(ClassDescriptor[]) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable interfaceDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function setSuperclassDescriptor(ClassDescriptor) in line 129
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable superclassDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function ClassNameAndSuperclassInfo() in line 43
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function ClassNameAndSuperclassInfo(ClassDescriptor,ClassDescriptor,ClassDescriptor[],ICodeBaseEntry,int) in line 55
      protection public
      7 lines of code
      5 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable superclassDescriptor defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable interfaceDescriptorList defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable accessFlags defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   variable accessFlags in line 36
   variable classDescriptor in line 32
   variable codeBaseEntry in line 35
   variable interfaceDescriptorList in line 34
   variable superclassDescriptor in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/CheckedAnalysisException.java
module edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   inherits from Exception
   function CheckedAnalysisException() in line 32
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function CheckedAnalysisException(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function CheckedAnalysisException(String,Throwable) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/ClassDescriptor.java
module edu::umd::cs::findbugs::classfile::ClassDescriptor
   inherits from Comparable
   inherits from java::io::Serializable
   function compareTo(ClassDescriptor) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function equals(Object) in line 119
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ClassDescriptor(String) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function fromResourceName(String) in line 89
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isClassResource(String) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function ClassDescriptor(String) defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function getClassName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function hashCode() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function isClassResource(String) in line 102
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function toDottedClassName() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function toResourceName() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function toString() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function ClassDescriptor(String) in line 40
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   variable className in line 33
   variable serialVersionUID in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/ClassNameMismatchException.java
module edu::umd::cs::findbugs::classfile::ClassNameMismatchException
   inherits from edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getLoadedClassDescriptor() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable loadedClassDescriptor defined in edu::umd::cs::findbugs::classfile::ClassNameMismatchException
   function ClassNameMismatchException(ClassDescriptor,ClassDescriptor,ICodeBaseEntry) in line 39
      protection public
      12 lines of code
      3 parameters
      1 conditional paths
      uses variable loadedClassDescriptor defined in edu::umd::cs::findbugs::classfile::ClassNameMismatchException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   variable loadedClassDescriptor in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/asm/ClassNodeAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::asm::ClassNodeAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 43
      protection public
      17 lines of code
      2 parameters
      2 conditional paths
   function registerWith(IAnalysisCache) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function retainAnalysisResults() in line 71
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/asm/ClassReaderAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::asm::ClassReaderAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 40
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
   function registerWith(IAnalysisCache) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function retainAnalysisResults() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/asm/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 48
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
      uses variable methodAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
   function EngineRegistrar() in line 42
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classAnalysisEngineList in line 32
   variable methodAnalysisEngineList in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 76
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
      uses variable databaseFactoryList defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   variable classAnalysisEngineList in line 54
   variable databaseFactoryList in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/EngineRegistrar.java
module edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 50
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable classAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
      uses variable methodAnalysisEngineList defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
   function EngineRegistrar() in line 44
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classAnalysisEngineList in line 33
   variable methodAnalysisEngineList in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/ClassContextClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::bcel::ClassContextClassAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 45
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function registerWith(IAnalysisCache) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function retainAnalysisResults() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/bcel/JavaClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::bcel::JavaClassAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 55
      protection public
      27 lines of code
      2 parameters
      5 conditional paths
      uses function getInputStream() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses variable JVM_VERSION defined in edu::umd::cs::findbugs::classfile::engine::bcel::JavaClassAnalysisEngine
      uses variable DEBUG_MISSING_CLASSES defined in edu::umd::cs::findbugs::classfile::engine::bcel::JavaClassAnalysisEngine
   function registerWith(IAnalysisCache) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function retainAnalysisResults() in line 93
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG_MISSING_CLASSES in line 48
   variable JVM_VERSION in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/ClassDataAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::ClassDataAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 47
      protection public
      40 lines of code
      2 parameters
      5 conditional paths
      uses function getNumBytes() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function registerWith(IAnalysisCache) in line 91
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function retainAnalysisResults() in line 98
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/ClassInfoAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::engine::ClassInfoAnalysisEngine
   inherits from edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   function analyze(IAnalysisCache,ClassDescriptor) in line 51
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
      uses function getData() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function getCodeBaseEntry() defined in edu::umd::cs::findbugs::classfile::analysis::ClassData
      uses function parse(ClassNameAndSuperclassInfo) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function registerWith(IAnalysisCache) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
   function retainAnalysisResults() in line 82
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/engine/ClassParser.java
module edu::umd::cs::findbugs::classfile::engine::ClassParser
   function checkConstantPoolIndex(int) in line 355
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function checkConstantTag(Constant,int) in line 368
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function extractReferencedClasses() in line 180
      29 lines of code
      0 parameters
      7 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Class defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function extractReferencedClassesFromSignature(TreeSet< ClassDescriptor >,String) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Methodref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_Fieldref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_InterfaceMethodref defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getClassName(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getSignatureFromNameAndType(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function extractReferencedClassesFromSignature(TreeSet< ClassDescriptor >,String) in line 214
      18 lines of code
      2 parameters
      5 conditional paths
   function getClassDescriptor(int) in line 328
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getClassName(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function getClassName(int) in line 306
      14 lines of code
      1 parameters
      2 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Class defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function getSignatureFromNameAndType(int) in line 474
      6 lines of code
      1 parameters
      1 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_NameAndType defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function getUtf8String(int) in line 340
      6 lines of code
      1 parameters
      1 conditional paths
      uses function checkConstantPoolIndex(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function checkConstantTag(Constant,int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Utf8 defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function parse(ClassNameAndSuperclassInfo) in line 84
      protection public
      45 lines of code
      1 parameters
      6 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable constantPool defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function readConstant() defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_Double defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable CONSTANT_Long defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses function getClassDescriptor(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function parse(ClassInfo) in line 138
      protection public
      35 lines of code
      1 parameters
      6 conditional paths
      uses function parse(ClassNameAndSuperclassInfo) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function readField(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function readMethod(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function extractReferencedClasses() defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function readAttribute() in line 457
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function readConstant() in line 262
      35 lines of code
      0 parameters
      9 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable CONSTANT_FORMAT_MAP defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   function readField(ClassDescriptor) in line 387
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable ACC_STATIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
   function readMethod(ClassDescriptor) in line 407
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable ACC_STATIC defined in edu::umd::cs::findbugs::classfile::IClassConstants
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getUtf8String(int) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function readAttribute() defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function ClassParser(DataInputStream,ClassDescriptor,ICodeBaseEntry) in line 67
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable in defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable expectedClassDescriptor defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
   variable codeBaseEntry in line 57
   variable CONSTANT_FORMAT_MAP in line 239
   variable constantPool in line 58
   variable expectedClassDescriptor in line 56
   variable in in line 55
module edu::umd::cs::findbugs::classfile::engine::ClassParser::Constant
module edu::umd::cs::findbugs::classfile::engine::ClassParser::FieldOrMethodDescriptorCreator
   function create(String,String,String,int) in line 376
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/FieldDescriptor.java
module edu::umd::cs::findbugs::classfile::FieldDescriptor
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   inherits from Comparable
   function compareTo(FieldDescriptor) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FieldDescriptor(String,String,String,boolean) in line 39
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/FieldOrMethodDescriptor.java
module edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   abstract class
   function compareTo(FieldOrMethodDescriptor) in line 68
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable isStatic defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function equals(Object) in line 89
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function FieldOrMethodDescriptor(String,String,String,boolean) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable className defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable isStatic defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getClassName() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getName() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function getSignature() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function hashCode() in line 104
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function isStatic() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable className defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function FieldOrMethodDescriptor(String,String,String,boolean) in line 33
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable name defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses variable signature defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   variable className in line 28
   variable isStatic in line 31
   variable name in line 29
   variable signature in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/Global.java
module edu::umd::cs::findbugs::classfile::Global
   abstract class
   function getAnalysisCache() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisCacheThreadLocal defined in edu::umd::cs::findbugs::classfile::Global
   function setAnalysisCacheForCurrentThread(IAnalysisCache) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisCacheThreadLocal defined in edu::umd::cs::findbugs::classfile::Global
   variable analysisCacheThreadLocal in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IAnalysisCache.java
module edu::umd::cs::findbugs::classfile::IAnalysisCache
   function eagerlyPutMethodAnalysis(Class< E >,MethodDescriptor,Object) in line 96
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
   function getClassAnalysis(Class< E >,ClassDescriptor) in line 60
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getClassPath() in line 131
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDatabase(Class< E >) in line 124
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getErrorLogger() in line 138
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMethodAnalysis(Class< E >,MethodDescriptor) in line 82
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function probeClassAnalysis(Class< E >,ClassDescriptor) in line 71
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function purgeMethodAnalyses(MethodDescriptor) in line 105
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function registerClassAnalysisEngine(Class< E >,IClassAnalysisEngine) in line 37
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerDatabaseFactory(Class< E >,IDatabaseFactory< E >) in line 114
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerMethodAnalysisEngine(Class< E >,IMethodAnalysisEngine) in line 48
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IAnalysisEngine
   function analyze(IAnalysisCache,DescriptorType) in line 35
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 43
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function retainAnalysisResults() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IAnalysisEngineRegistrar.java
module edu::umd::cs::findbugs::classfile::IAnalysisEngineRegistrar
   function registerAnalysisEngines(IAnalysisCache) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IClassAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IClassAnalysisEngine
   inherits from IAnalysisEngine< ClassDescriptor >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IClassConstants.java
module edu::umd::cs::findbugs::classfile::IClassConstants
   variable ACC_ABSTRACT in line 49
      protection public
   variable ACC_FINAL in line 44
      protection public
   variable ACC_INTERFACE in line 48
      protection public
   variable ACC_PRIVATE in line 41
      protection public
   variable ACC_PROTECTED in line 42
      protection public
   variable ACC_PUBLIC in line 40
      protection public
   variable ACC_STATIC in line 43
      protection public
   variable ACC_SUPER in line 45
      protection public
   variable ACC_TRANSIENT in line 47
      protection public
   variable ACC_VOLATILE in line 46
      protection public
   variable CONSTANT_Class in line 28
      protection public
   variable CONSTANT_Double in line 36
      protection public
   variable CONSTANT_Fieldref in line 29
      protection public
   variable CONSTANT_Float in line 34
      protection public
   variable CONSTANT_Integer in line 33
      protection public
   variable CONSTANT_InterfaceMethodref in line 31
      protection public
   variable CONSTANT_Long in line 35
      protection public
   variable CONSTANT_Methodref in line 30
      protection public
   variable CONSTANT_NameAndType in line 37
      protection public
   variable CONSTANT_String in line 32
      protection public
   variable CONSTANT_Utf8 in line 38
      protection public
   variable MAGIC in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IClassFactory.java
module edu::umd::cs::findbugs::classfile::IClassFactory
   function createAnalysisCache(IClassPath,IErrorLogger) in line 38
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createClassPath() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function createClassPathBuilder(IErrorLogger) in line 31
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createFilesystemCodeBaseLocator(String) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createNestedArchiveCodeBaseLocator(ICodeBase,String) in line 36
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IClassObserver.java
module edu::umd::cs::findbugs::classfile::IClassObserver
   function observeClass(ClassDescriptor) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IClassPath.java
module edu::umd::cs::findbugs::classfile::IClassPath
   function addCodeBase(ICodeBase) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function appCodeBaseIterator() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function auxCodeBaseIterator() in line 56
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function close() in line 81
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupResource(String) in line 65
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function mapResourceNameToCodeBaseEntry(String,ICodeBaseEntry) in line 75
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IClassPathBuilder.java
module edu::umd::cs::findbugs::classfile::IClassPathBuilder
   function addCodeBase(ICodeBaseLocator,boolean) in line 44
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function build(IClassPath,IClassPathBuilderProgress) in line 64
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getAppClassList() in line 71
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scanNestedArchives(boolean) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IClassPathBuilderProgress.java
module edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
   function finishArchive() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/ICodeBase.java
module edu::umd::cs::findbugs::classfile::ICodeBase
   function close() in line 131
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function containsSourceFiles() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseLocator() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getHowDiscovered() in line 90
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLastModifiedTime() in line 126
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPathName() in line 106
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isApplicationCodeBase() in line 75
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function lookupResource(String) in line 61
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setApplicationCodeBase(boolean) in line 68
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setHowDiscovered(int) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setLastModifiedTime(long) in line 114
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   variable IN_JAR_MANIFEST in line 42
      protection public
   variable IN_SYSTEM_CLASSPATH in line 45
      protection public
   variable NESTED in line 39
      protection public
   variable SPECIFIED in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getClassDescriptor() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCodeBase() in line 59
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumBytes() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getResourceName() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openResource() in line 52
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function overrideResourceName(String) in line 79
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseIterator.java
module edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function next() in line 55
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/ICodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openCodeBase() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 57
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IDatabaseFactory.java
module edu::umd::cs::findbugs::classfile::IDatabaseFactory
   function createDatabase() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function registerWith(IAnalysisCache) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IErrorLogger.java
module edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String) in line 47
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function logError(String,Throwable) in line 55
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassDescriptor) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportSkippedAnalysis(MethodDescriptor) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IMethodAnalysisEngine.java
module edu::umd::cs::findbugs::classfile::IMethodAnalysisEngine
   inherits from IAnalysisEngine< MethodDescriptor >
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/AbstractScannableCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   inherits from edu::umd::cs::findbugs::classfile::IScannableCodeBase
   abstract class
   function addResourceNameTranslation(String,String) in line 128
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable resourceNameTranslationMap defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function containsSourceFiles() in line 67
      protection public
      16 lines of code
      0 parameters
      5 conditional paths
      uses variable checkedForSourceFiles defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function iterator() defined in edu::umd::cs::findbugs::classfile::IScannableCodeBase
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses function next() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getCodeBaseLocator() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function getHowDiscovered() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function getLastModifiedTime() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function isApplicationCodeBase() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setApplicationCodeBase(boolean) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setHowDiscovered(int) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function setLastModifiedTime(long) in line 115
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function translateResourceName(String) in line 132
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable resourceNameTranslationMap defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function AbstractScannableCodeBase(ICodeBaseLocator) in line 51
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   variable checkedForSourceFiles in line 44
   variable codeBaseLocator in line 43
   variable containsSourceFiles in line 45
   variable howDiscovered in line 47
   variable isAppCodeBase in line 46
   variable lastModifiedTime in line 48
   variable resourceNameTranslationMap in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/AbstractScannableCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   abstract class
   function getCodeBase() in line 28
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRealResourceName() in line 30
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getResourceName() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function getRealResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   function overrideResourceName(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
      uses function addResourceNameTranslation(String,String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function getRealResourceName() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/AnalysisCache.java
module edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   inherits from edu::umd::cs::findbugs::classfile::IAnalysisCache
   function findOrCreateDescriptorMap(final Map< Class<?>, Map< DescriptorType, Object >>,final Map< Class<?>,?extends IAnalysisEngine< DescriptorType >>,final Class< E >) in line 267
      25 lines of code
      3 parameters
      7 conditional paths
      uses variable CACHE_SIZE defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function retainAnalysisResults() defined in edu::umd::cs::findbugs::classfile::IAnalysisEngine
      uses variable classAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable methodAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable databaseFactoryMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable databaseMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function createDatabase() defined in edu::umd::cs::findbugs::classfile::IDatabaseFactory
   function getClassPath() in line 105
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable classPath defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable classAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable methodAnalysisMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable methodAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function findOrCreateDescriptorMap(final Map< Class<?>, Map< DescriptorType, Object >>,final Map< Class<?>,?extends IAnalysisEngine< DescriptorType >>,final Class< E >) defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function getErrorLogger() in line 353
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorLogger defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
   function purgeMethodAnalyses(MethodDescriptor) in line 158
      protection public
      17 lines of code
      1 parameters
      11 conditional paths
      uses variable methodAnalysisMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses variable methodAnalysisEngineMap defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function retainAnalysisResults() defined in edu::umd::cs::findbugs::classfile::IAnalysisEngine
      uses function findOrCreateDescriptorMap(final Map< Class<?>, Map< DescriptorType, Object >>,final Map< Class<?>,?extends IAnalysisEngine< DescriptorType >>,final Class< E >) defined in edu::umd::cs::findbugs::classfile::impl::AnalysisCache
      uses function analyze(IAnalysisCache,DescriptorType) defined in edu::umd::cs::findbugs::classfile::IAnalysisEngine
   variable CACHE_SIZE in line 51
   variable classAnalysisEngineMap in line 56
   variable classAnalysisMap in line 59
   variable classPath in line 54
   variable databaseFactoryMap in line 58
   variable databaseMap in line 61
   variable errorLogger in line 55
   variable methodAnalysisEngineMap in line 57
   variable methodAnalysisMap in line 60
module edu::umd::cs::findbugs::classfile::impl::AnalysisCache::AbnormalAnalysisResult
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/ClassFactory.java
module edu::umd::cs::findbugs::classfile::impl::ClassFactory
   inherits from edu::umd::cs::findbugs::classfile::IClassFactory
   function createAnalysisCache(IClassPath,IErrorLogger) in line 109
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function createClassPath() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function createClassPathBuilder(IErrorLogger) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function createFilesystemCodeBaseLocator(String) in line 67
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
   function createNestedArchiveCodeBaseLocator(ICodeBase,String) in line 82
      protection public
      3 lines of code
      2 parameters
      3 conditional paths
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function instance() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::classfile::impl::ClassFactory
   function ClassFactory() in line 43
      2 lines of code
      0 parameters
      1 conditional paths
   variable theInstance in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/ClassPathBuilder.java
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   inherits from edu::umd::cs::findbugs::classfile::IClassPathBuilder
   function addCodeBase(ICodeBaseLocator,boolean) in line 175
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable projectWorkList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable SPECIFIED defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function addToWorkList(LinkedList< WorkListItem >,WorkListItem) in line 551
      25 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function addWorkListItemsForClasspath(LinkedList< WorkListItem >,String) in line 291
      15 lines of code
      2 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function addWorkListItemsForExtDir(LinkedList< WorkListItem >,String) in line 313
      20 lines of code
      2 parameters
      3 conditional paths
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable IN_SYSTEM_CLASSPATH defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function build(IClassPath,IClassPathBuilderProgress) in line 189
      protection public
      60 lines of code
      2 parameters
      12 conditional paths
      uses function processWorkList(IClassPath,LinkedList< WorkListItem >,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable projectWorkList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable discoveredCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function lookupResource(String) defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function buildSystemCodebaseList() defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable appClassList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function dumpCodeBaseList(Iterator<?extends ICodeBase >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function buildSystemCodebaseList() in line 262
      22 lines of code
      0 parameters
      3 conditional paths
      uses function addWorkListItemsForClasspath(LinkedList< WorkListItem >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function addWorkListItemsForExtDir(LinkedList< WorkListItem >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function dumpCodeBaseList(Iterator<?extends ICodeBase >,String) in line 250
      11 lines of code
      2 parameters
      3 conditional paths
      uses function getCodeBaseLocator() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function toString() defined in edu::umd::cs::findbugs::classfile::ICodeBaseLocator
      uses function containsSourceFiles() defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function getAppClassList() in line 580
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appClassList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   function parseClassName(ICodeBaseEntry) in line 475
      19 lines of code
      1 parameters
      2 conditional paths
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function overrideResourceName(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable errorLogger defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function processWorkList(IClassPath,LinkedList< WorkListItem >,IClassPathBuilderProgress) in line 347
      70 lines of code
      3 parameters
      12 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable discoveredCodeBaseMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable discoveredCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function scanCodebase(IClassPath,LinkedList< WorkListItem >,DiscoveredCodeBase) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function scanJarManifestForClassPathEntries(LinkedList< WorkListItem >,ICodeBase) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable SPECIFIED defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable errorLogger defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function scanCodebase(IClassPath,LinkedList< WorkListItem >,DiscoveredCodeBase) in line 430
      37 lines of code
      3 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function iterator() defined in edu::umd::cs::findbugs::classfile::IScannableCodeBase
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses function next() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses variable VERBOSE defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable NO_PARSE_CLASS_NAMES defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function isApplicationCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function parseClassName(ICodeBaseEntry) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable classFactory defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses function createNestedArchiveCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable NESTED defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function scanJarManifestForClassPathEntries(LinkedList< WorkListItem >,ICodeBase) in line 502
      39 lines of code
      2 parameters
      6 conditional paths
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses function createRelativeCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseLocator
      uses function addToWorkList(LinkedList< WorkListItem >,WorkListItem) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
      uses variable IN_JAR_MANIFEST defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function scanNestedArchives(boolean) in line 182
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder
   variable appClassList in line 154
   variable classFactory in line 149
   variable DEBUG in line 67
   variable discoveredCodeBaseList in line 152
   variable discoveredCodeBaseMap in line 153
   variable errorLogger in line 150
   variable NO_PARSE_CLASS_NAMES in line 68
   variable projectWorkList in line 151
   variable scanNestedArchives in line 155
   variable VERBOSE in line 66
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder::WorkListItem
   function getCodeBaseLocator() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHowDiscovered() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isAppCodeBase() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function WorkListItem(ICodeBaseLocator,boolean,int) in line 86
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable codeBaseLocator in line 77
   variable howDiscovered in line 79
   variable isAppCodeBase in line 78
module edu::umd::cs::findbugs::classfile::impl::ClassPathBuilder::DiscoveredCodeBase
   function addCodeBaseEntry(ICodeBaseEntry) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCodeBase() in line 120
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getResourceList() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 132
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   function DiscoveredCodeBase(ICodeBase) in line 115
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/ClassPathImpl.java
module edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   inherits from edu::umd::cs::findbugs::classfile::IClassPath
   function addCodeBase(ICodeBase) in line 56
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function isApplicationCodeBase() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function appCodeBaseIterator() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function auxCodeBaseIterator() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function close() in line 84
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function lookupResource(String) in line 96
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses function search(List<?extends ICodeBase >,String) defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable appCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
      uses variable auxCodeBaseList defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function mapResourceNameToCodeBaseEntry(String,ICodeBaseEntry) in line 144
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBaseEntryMap defined in edu::umd::cs::findbugs::classfile::impl::ClassPathImpl
   function search(List<?extends ICodeBase >,String) in line 130
      10 lines of code
      2 parameters
      3 conditional paths
   function ClassPathImpl() in line 47
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   variable appCodeBaseList in line 43
   variable auxCodeBaseList in line 44
   variable codeBaseEntryMap in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/DelegatingCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function equals(Object) in line 95
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DelegatingCodeBaseEntry(ICodeBase,ICodeBaseEntry) defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function getClassDescriptor() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getCodeBase() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function getNumBytes() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getNumBytes() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getResourceName() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function hashCode() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function openResource() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function overrideResourceName(String) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses function overrideResourceName(String) defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function toString() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   function DelegatingCodeBaseEntry(ICodeBase,ICodeBaseEntry) in line 44
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
      uses variable delegateCodeBaseEntry defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseEntry
   variable delegateCodeBaseEntry in line 42
   variable frontEndCodeBase in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/DelegatingCodeBaseIterator.java
module edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseIterator defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
      uses function hasNext() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function next() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBaseIterator defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
      uses function next() defined in edu::umd::cs::findbugs::classfile::ICodeBaseIterator
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
   function DelegatingCodeBaseIterator(ICodeBase,IScannableCodeBase) in line 39
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable frontEndCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::DelegatingCodeBaseIterator
      uses function iterator() defined in edu::umd::cs::findbugs::classfile::IScannableCodeBase
   variable delegateCodeBase in line 36
   variable delegateCodeBaseIterator in line 37
   variable frontEndCodeBase in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/DirectoryCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   inherits from edu::umd::cs::findbugs::classfile::IScannableCodeBase
   function close() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getPathName() in line 117
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function iterator() in line 105
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable searchPerformed defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
      uses variable rfs defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
      uses function search() defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function lookupResource(String) in line 131
      protection public
      12 lines of code
      1 parameters
      6 conditional paths
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function toString() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   function DirectoryCodeBase(ICodeBaseLocator,File) in line 87
      protection public
      14 lines of code
      2 parameters
      2 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable directory defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase
   variable directory in line 77
   variable rfs in line 78
   variable searchPerformed in line 79
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBase::DirectoryCodeBaseIterator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseIterator
   function hasNext() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 60
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function getLastModifiedTime() defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/DirectoryCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function equals(Object) in line 90
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function DirectoryCodeBaseEntry(DirectoryCodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getClassDescriptor() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getCodeBase() in line 67
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getNumBytes() in line 48
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function getRealResourceName() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function hashCode() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function openResource() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   function toString() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function DirectoryCodeBaseEntry(DirectoryCodeBase,String) in line 40
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
      uses variable realResourceName defined in edu::umd::cs::findbugs::classfile::impl::DirectoryCodeBaseEntry
   variable codeBase in line 37
   variable realResourceName in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/FilesystemCodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 50
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses function FilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function equals(Object) in line 78
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function FilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses function equals(Object) defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function getPathName() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function hashCode() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function openCodeBase() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   function FilesystemCodeBaseLocator(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pathName defined in edu::umd::cs::findbugs::classfile::impl::FilesystemCodeBaseLocator
   variable pathName in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/NestedZipFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   inherits from edu::umd::cs::findbugs::classfile::IScannableCodeBase
   function close() in line 115
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function close() defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBase
      uses variable tempFile defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function getPathName() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function lookupResource(String) in line 100
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function lookupResource(String) defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   function NestedZipFileCodeBase(NestedZipFileCodeBaseLocator) in line 57
      protection public
      32 lines of code
      1 parameters
      4 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses variable tempFile defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function lookupResource(String) defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
      uses function openResource() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
      uses variable delegateCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBase
   variable delegateCodeBase in line 50
   variable parentCodeBase in line 47
   variable resourceName in line 48
   variable tempFile in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/NestedZipFileCodeBaseLocator.java
module edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseLocator
   function createRelativeCodeBaseLocator(String) in line 60
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function NestedZipFileCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function equals(Object) in line 84
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function NestedZipFileCodeBaseLocator(ICodeBase,String) defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function getParentCodeBase() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function getResourceName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function hashCode() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function openCodeBase() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses function getCodeBaseLocator() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   function NestedZipFileCodeBaseLocator(ICodeBase,String) in line 38
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parentCodeBase defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::NestedZipFileCodeBaseLocator
   variable parentCodeBase in line 35
   variable resourceName in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/SingleFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::IScannableCodeBase
   function close() in line 176
      protection public
      3 lines of code
      0 parameters
      7 conditional paths
      uses variable resourceNameKnown defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses function toResourceName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses function parse(ClassNameAndSuperclassInfo) defined in edu::umd::cs::findbugs::classfile::engine::ClassParser
      uses function getClassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
   function containsSourceFiles() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getCodeBaseLocator() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getHowDiscovered() in line 142
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getLastModifiedTime() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function getPathName() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function isApplicationCodeBase() in line 128
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function iterator() in line 83
      protection public
      23 lines of code
      0 parameters
      2 conditional paths
   function lookupResource(String) in line 110
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setApplicationCodeBase(boolean) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isAppCodeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setHowDiscovered(int) in line 135
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable howDiscovered defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function setLastModifiedTime(long) in line 149
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable lastModifiedTime defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function SingleFileCodeBase(ICodeBaseLocator,String) in line 60
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
      uses variable fileName defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   variable codeBaseLocator in line 52
   variable fileName in line 53
   variable howDiscovered in line 55
   variable isAppCodeBase in line 54
   variable lastModifiedTime in line 56
   variable resourceName in line 58
   variable resourceNameKnown in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/SingleFileCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function equals(Object) in line 75
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function SingleFileCodeBaseEntry(SingleFileCodeBase) defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getClassDescriptor() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getCodeBase() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getNumBytes() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function getResourceName() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function hashCode() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function openResource() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   function overrideResourceName(String) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBase
   function SingleFileCodeBaseEntry(SingleFileCodeBase) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::SingleFileCodeBaseEntry
   variable codeBase in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/ZipFileCodeBase.java
module edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBase
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function close() in line 140
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getPathName() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function iterator() in line 87
      protection public
      42 lines of code
      0 parameters
      5 conditional paths
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function lookupResource(String) in line 68
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function translateResourceName(String) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
   function toString() in line 152
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ZipFileCodeBase(ICodeBaseLocator,File) in line 55
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable codeBaseLocator defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
      uses function setLastModifiedTime(long) defined in edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBase
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/impl/ZipFileCodeBaseEntry.java
module edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::impl::AbstractScannableCodeBaseEntry
   inherits from edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function equals(Object) in line 87
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function ZipFileCodeBaseEntry(ZipFileCodeBase,ZipEntry) defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getClassDescriptor() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function getCodeBase() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getNumBytes() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function getRealResourceName() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function hashCode() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function openResource() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   function toString() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCodeBase() defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses function getResourceName() defined in edu::umd::cs::findbugs::classfile::ICodeBaseEntry
   function ZipFileCodeBaseEntry(ZipFileCodeBase,ZipEntry) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable codeBase defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
      uses variable zipEntry defined in edu::umd::cs::findbugs::classfile::impl::ZipFileCodeBaseEntry
   variable codeBase in line 38
   variable zipEntry in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/InvalidClassFileFormatException.java
module edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function getClassDescriptor() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getCodeBaseEntry() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function getMessage() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function InvalidClassFileFormatException(ClassDescriptor,ICodeBaseEntry) in line 29
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   function InvalidClassFileFormatException(ClassDescriptor,ICodeBaseEntry,Throwable) in line 35
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable classDescriptor defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses variable codeBaseEntry defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
      uses function InvalidClassFileFormatException(ClassDescriptor,ICodeBaseEntry) defined in edu::umd::cs::findbugs::classfile::InvalidClassFileFormatException
   variable classDescriptor in line 26
   variable codeBaseEntry in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/IScannableCodeBase.java
module edu::umd::cs::findbugs::classfile::IScannableCodeBase
   inherits from edu::umd::cs::findbugs::classfile::ICodeBase
   function iterator() in line 41
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/MethodDescriptor.java
module edu::umd::cs::findbugs::classfile::MethodDescriptor
   inherits from edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   inherits from Comparable
   function compareTo(MethodDescriptor) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function MethodDescriptor(String,String,String,boolean) in line 40
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/ReflectionDatabaseFactory.java
module edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   inherits from IDatabaseFactory< E >
   function createDatabase() in line 49
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses function createUsingStaticCreateMethod() defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
      uses function createUsingConstructor() defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function createUsingConstructor() in line 103
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function createUsingStaticCreateMethod() in line 72
      24 lines of code
      0 parameters
      5 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function registerWith(IAnalysisCache) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function registerDatabaseFactory(Class< E >,IDatabaseFactory< E >) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   function ReflectionDatabaseFactory(Class< E >) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable databaseClass defined in edu::umd::cs::findbugs::classfile::ReflectionDatabaseFactory
   variable databaseClass in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/classfile/ResourceNotFoundException.java
module edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function getResourceName() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function ResourceNotFoundException(String) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable MESSAGE_PREFIX defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   function ResourceNotFoundException(String,Throwable) in line 48
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable MESSAGE_PREFIX defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
      uses variable resourceName defined in edu::umd::cs::findbugs::classfile::ResourceNotFoundException
   variable MESSAGE_PREFIX in line 30
      protection public
   variable resourceName in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ClassScreener.java
module edu::umd::cs::findbugs::ClassScreener
   inherits from edu::umd::cs::findbugs::IClassScreener
   function addAllowedClass(String) in line 87
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function addAllowedPackage(String) in line 99
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
      uses variable JAVA_IDENTIFIER_PART defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function addAllowedPrefix(String) in line 116
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
      uses variable START defined in edu::umd::cs::findbugs::ClassScreener
      uses function dotsToRegex(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
   function dotsToRegex(String) in line 72
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable SEP defined in edu::umd::cs::findbugs::ClassScreener
   function matches(String) in line 129
      protection public
      20 lines of code
      1 parameters
      8 conditional paths
      uses variable patternList defined in edu::umd::cs::findbugs::ClassScreener
      uses variable DEBUG defined in edu::umd::cs::findbugs::ClassScreener
   function ClassScreener() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable DEBUG in line 43
   variable JAVA_IDENTIFIER_PART in line 52
   variable patternList in line 54
   variable SEP in line 47
   variable START in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ClassWarningSuppressor.java
module edu::umd::cs::findbugs::ClassWarningSuppressor
   inherits from edu::umd::cs::findbugs::WarningSuppressor
   function getClassAnnotation() in line 16
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 21
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function contains(ClassAnnotation) defined in edu::umd::cs::findbugs::ClassAnnotation
   function ClassWarningSuppressor(String,ClassAnnotation) in line 8
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/config/AnalysisFeatureSetting.java
module edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   function configure(AnalysisContext) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setBoolProperty(int,boolean) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable property defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
      uses variable enabled defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   function AnalysisFeatureSetting(int,boolean) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable property defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
      uses variable enabled defined in edu::umd::cs::findbugs::config::AnalysisFeatureSetting
   variable enabled in line 31
   variable property in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/config/CommandLine.java
module edu::umd::cs::findbugs::config::CommandLine
   abstract class
   function addOption(String,String,String) in line 103
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable argumentDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function addSwitch(String,String) in line 68
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function addSwitchWithOptionalExtraPart(String,String,String) in line 84
      protection public
      11 lines of code
      3 parameters
      2 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionExtraPartSynopsisMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function expandOptionFiles(String[],boolean,boolean) in line 124
      protection public
      40 lines of code
      3 parameters
      9 conditional paths
   function handleOption(String,String) in line 251
      1 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 260
      1 lines of code
      2 parameters
      1 conditional paths
   function parse(String,int,int,String) in line 169
      protection public
      27 lines of code
      4 parameters
      3 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function parse(String) in line 207
      protection public
      35 lines of code
      1 parameters
      8 conditional paths
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses function handleOptionWithArgument(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function handleOption(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   function printField(PrintStream,String,int) in line 294
      10 lines of code
      3 parameters
      3 conditional paths
      uses variable SPACES defined in edu::umd::cs::findbugs::config::CommandLine
   function printUsage(OutputStream) in line 267
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable optionList defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionExtraPartSynopsisMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable requiresArgumentSet defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable argumentDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
      uses function printField(PrintStream,String,int) defined in edu::umd::cs::findbugs::config::CommandLine
      uses variable optionDescriptionMap defined in edu::umd::cs::findbugs::config::CommandLine
   function CommandLine() in line 51
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   variable argumentDescriptionMap in line 48
   variable optionDescriptionMap in line 46
   variable optionExtraPartSynopsisMap in line 47
   variable optionList in line 44
   variable requiresArgumentSet in line 45
   variable SPACES in line 292
module edu::umd::cs::findbugs::config::CommandLine::HelpRequestedException
   inherits from Exception
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/config/ProjectFilterSettings.java
module edu::umd::cs::findbugs::config::ProjectFilterSettings
   inherits from Cloneable
   function addCategory(String) in line 288
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function clearAllCategories() in line 307
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function clone() in line 435
      protection public
      20 lines of code
      0 parameters
      2 conditional paths
      uses function ProjectFilterSettings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function containsCategory(String) in line 319
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function createDefault() in line 109
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function ProjectFilterSettings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function displayFalseWarnings() in line 354
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function displayWarning(BugInstance) in line 222
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getProperty(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable IS_BUG defined in edu::umd::cs::findbugs::BugProperty
   function equals(Object) in line 412
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function ProjectFilterSettings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function fromEncodedString(String) in line 124
      protection public
      61 lines of code
      1 parameters
      10 conditional paths
      uses function ProjectFilterSettings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FIELD_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable priorityNameToValueMap defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LISTITEM_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setDisplayFalseWarnings(boolean) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getActiveCategorySet() in line 333
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function getIntPriorityAsString(int) in line 470
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXPERIMENTAL_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable MEDIUM_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getMinPriority() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getMinPriorityAsInt() in line 279
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minPriorityAsInt defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function hashCode() in line 460
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function hiddenFromEncodedString(ProjectFilterSettings,String) in line 195
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable FIELD_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LISTITEM_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function hiddenToEncodedString() in line 363
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable hiddenBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LISTITEM_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FIELD_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function removeCategory(String) in line 298
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setDisplayFalseWarnings(boolean) in line 345
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function setMinPriority(String) in line 251
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable minPriority defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable priorityNameToValueMap defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function toEncodedString() in line 381
      protection public
      21 lines of code
      0 parameters
      3 conditional paths
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FIELD_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable activeBugCategorySet defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable LISTITEM_DELIMITER defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function displayFalseWarnings() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function toString() in line 404
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function ProjectFilterSettings() in line 92
      9 lines of code
      0 parameters
      1 conditional paths
      uses function getBugCategories() defined in edu::umd::cs::findbugs::I18N
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   variable activeBugCategorySet in line 82
   variable DEFAULT_PRIORITY in line 61
      protection public
   variable displayFalseWarnings in line 86
   variable EXPERIMENTAL_PRIORITY in line 58
      protection public
   variable FIELD_DELIMITER in line 75
   variable hiddenBugCategorySet in line 83
   variable HIGH_PRIORITY in line 49
      protection public
   variable LISTITEM_DELIMITER in line 79
   variable LOW_PRIORITY in line 55
      protection public
   variable MEDIUM_PRIORITY in line 52
      protection public
   variable minPriority in line 84
   variable minPriorityAsInt in line 85
   variable priorityNameToValueMap in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/config/SortedProperties.java
module edu::umd::cs::findbugs::config::SortedProperties
   inherits from java::util::Properties
   function keys() in line 20
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function sortKeys(Set< String >) defined in edu::umd::cs::findbugs::config::SortedProperties
   function sortKeys(Set< String >) in line 35
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/config/UserPreferences.java
module edu::umd::cs::findbugs::config::UserPreferences
   inherits from Cloneable
   function clone() in line 390
      protection public
      17 lines of code
      0 parameters
      2 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function clone() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function clone() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function createDefaultUserPreferences() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
   function enableAllDetectors(boolean) in line 311
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function enableDetector(DetectorFactory,boolean) in line 282
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function equals(Object) in line 369
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function UserPreferences() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getFilterSettings() in line 336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
   function getRecentProjects() in line 244
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
   function getUserDetectorThreshold() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getUserPreferences() in line 89
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable preferencesSingleton defined in edu::umd::cs::findbugs::config::UserPreferences
   function hashCode() in line 382
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function hashCode() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function isDetectorEnabled(DetectorFactory) in line 292
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function isDefaultEnabled() defined in edu::umd::cs::findbugs::DetectorFactory
   function read() in line 97
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable PREF_FILE_NAME defined in edu::umd::cs::findbugs::config::UserPreferences
   function read(InputStream) in line 115
      protection public
      63 lines of code
      1 parameters
      14 conditional paths
      uses variable MAX_RECENT_FILES defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable DETECTOR_THRESHOLD_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setUserDetectorThreshold(int) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS2_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
   function removeProject(String) in line 266
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
   function setProjectFilterSettings(ProjectFilterSettings) in line 327
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
   function setUserDetectorThreshold(int) in line 354
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function setUserDetectorThreshold(String) in line 364
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function useProject(String) in line 254
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function removeProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable MAX_RECENT_FILES defined in edu::umd::cs::findbugs::config::UserPreferences
   function write() in line 183
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable PREF_FILE_NAME defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function write(OutputStream) in line 199
      protection public
      38 lines of code
      1 parameters
      6 conditional paths
      uses variable recentProjectsList defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable detectorEnablementMap defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable FILTER_SETTINGS_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable filterSettings defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable FILTER_SETTINGS2_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function hiddenToEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DETECTOR_THRESHOLD_KEY defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function UserPreferences() in line 69
      3 lines of code
      0 parameters
      1 conditional paths
   variable DETECTOR_THRESHOLD_KEY in line 61
   variable detectorEnablementMap in line 65
   variable FILTER_SETTINGS2_KEY in line 63
   variable FILTER_SETTINGS_KEY in line 62
   variable filterSettings in line 66
   variable MAX_RECENT_FILES in line 60
   variable PREF_FILE_NAME in line 59
   variable preferencesSingleton in line 67
   variable recentProjectsList in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/DeepSubtypeAnalysis.java
module edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function containsConcreteClasses(Set< JavaClass >) in line 39
      6 lines of code
      1 parameters
      3 conditional paths
   function deepInstanceOf(String,String) in line 135
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function deepInstanceOf(JavaClass,JavaClass) in line 152
      protection public
      54 lines of code
      2 parameters
      13 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function getTransitiveSubtypes(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function getComponentClass(String) in line 93
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function isDeepRemote(String) in line 62
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable remote defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function deepInstanceOf(String,String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isDeepSerializable(String) in line 46
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function isPrimitiveComponentClass(String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isDeepSerializable(JavaClass) in line 103
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses function deepInstanceOf(String,String) defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable serializable defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable collection defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable map defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
      uses variable comparator defined in edu::umd::cs::findbugs::DeepSubtypeAnalysis
   function isPrimitiveComponentClass(String) in line 79
      13 lines of code
      1 parameters
      2 conditional paths
   variable collection in line 15
   variable comparator in line 16
   variable map in line 18
   variable remote in line 19
   variable serializable in line 13
   variable storedException in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/DelegatingBugReporter.java
module edu::umd::cs::findbugs::DelegatingBugReporter
   inherits from edu::umd::cs::findbugs::BugReporter
   function addObserver(BugReporterObserver) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
   function finish() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function finish() defined in edu::umd::cs::findbugs::BugReporter
   function getDelegate() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function getProjectStats() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
   function getRealBugReporter() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function getRealBugReporter() defined in edu::umd::cs::findbugs::BugReporter
   function logError(String) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function logError(String,Throwable) in line 115
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function observeClass(ClassDescriptor) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function observeClass(ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IClassObserver
   function reportBug(BugInstance) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function reportMissingClass(ClassNotFoundException) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function reportMissingClass(ClassDescriptor) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function reportQueuedErrors() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::BugReporter
   function reportSkippedAnalysis(MethodDescriptor) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setDelegate(BugReporter) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function setErrorVerbosity(int) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function setErrorVerbosity(int) defined in edu::umd::cs::findbugs::BugReporter
   function setPriorityThreshold(int) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::BugReporter
   function DelegatingBugReporter(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable delegate defined in edu::umd::cs::findbugs::DelegatingBugReporter
   variable delegate in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/Analyze.java
module edu::umd::cs::findbugs::detect::Analyze
   function containsConcreteClasses(Set< JavaClass >) in line 39
      6 lines of code
      1 parameters
      3 conditional paths
   function deepInstanceOf(String,String) in line 135
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function deepInstanceOf(JavaClass,JavaClass) in line 152
      protection public
      54 lines of code
      2 parameters
      13 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClass(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function getTransitiveSubtypes(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
   function getComponentClass(String) in line 93
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function isDeepRemote(String) in line 62
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable remote defined in edu::umd::cs::findbugs::detect::Analyze
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::detect::Analyze
      uses function deepInstanceOf(String,String) defined in edu::umd::cs::findbugs::detect::Analyze
   function isDeepSerializable(String) in line 46
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::detect::Analyze
      uses function isPrimitiveComponentClass(String) defined in edu::umd::cs::findbugs::detect::Analyze
      uses function getComponentClass(String) defined in edu::umd::cs::findbugs::detect::Analyze
   function isDeepSerializable(JavaClass) in line 103
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses variable storedException defined in edu::umd::cs::findbugs::detect::Analyze
      uses function deepInstanceOf(String,String) defined in edu::umd::cs::findbugs::detect::Analyze
      uses variable serializable defined in edu::umd::cs::findbugs::detect::Analyze
      uses variable collection defined in edu::umd::cs::findbugs::detect::Analyze
      uses variable map defined in edu::umd::cs::findbugs::detect::Analyze
      uses variable comparator defined in edu::umd::cs::findbugs::detect::Analyze
   function isPrimitiveComponentClass(String) in line 79
      13 lines of code
      1 parameters
      2 conditional paths
   variable collection in line 15
   variable comparator in line 16
   variable map in line 18
   variable remote in line 19
   variable serializable in line 13
   variable storedException in line 20
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/AnyMethodReturnValueStreamFactory.java
module edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 55
      protection public
      24 lines of code
      4 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
      uses function setIgnoreImplicitExceptions(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setBugType(String) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::AnyMethodReturnValueStreamFactory
   function AnyMethodReturnValueStreamFactory(String) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable baseClassType in line 42
   variable bugType in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/AtomicityProblem.java
module edu::umd::cs::findbugs::detect::AtomicityProblem
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 78
      protection public
      34 lines of code
      1 parameters
      12 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::AtomicityProblem
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Code) in line 64
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function AtomicityProblem(BugReporter) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::AtomicityProblem
   variable bugReporter in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BadAppletConstructor.java
module edu::umd::cs::findbugs::detect::BadAppletConstructor
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 77
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable inConstructor defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
   function visit(Code) in line 71
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable inConstructor defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
   function visitClassContext(ClassContext) in line 52
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable appletClass defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function BadAppletConstructor(BugReporter) in line 38
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses variable appletClass defined in edu::umd::cs::findbugs::detect::BadAppletConstructor
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   variable appletClass in line 35
   variable bugReporter in line 34
   variable inConstructor in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BadCastWarningProperty.java
module edu::umd::cs::findbugs::detect::BadCastWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function BadCastWarningProperty(String,PriorityAdjustment) in line 31
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BadlyOverriddenAdapter.java
module edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function visit(JavaClass) in line 49
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable isAdapter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 81
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable isAdapter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitAfter(JavaClass) in line 73
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function BadlyOverriddenAdapter(BugReporter) in line 40
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable methodMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
      uses variable badOverrideMap defined in edu::umd::cs::findbugs::detect::BadlyOverriddenAdapter
   variable badOverrideMap in line 38
   variable bugReporter in line 35
   variable isAdapter in line 36
   variable methodMap in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BadResultSetAccess.java
module edu::umd::cs::findbugs::detect::BadResultSetAccess
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 84
      protection public
      31 lines of code
      1 parameters
      6 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dbFieldTypesSet defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(Method) in line 78
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function BadResultSetAccess(BugReporter) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BadResultSetAccess
   variable bugReporter in line 70
   variable dbFieldTypesSet in line 39
   variable stack in line 69
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BadSyntaxForRegularExpression.java
module edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function getIntValue(int,int) in line 117
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawOpcode(int) in line 126
      protection public
      53 lines of code
      1 parameters
      8 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawRegExPattern(int) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
      uses function getIntValue(int,int) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
      uses function singleDotPatternWouldBeSilly(int,boolean) defined in edu::umd::cs::findbugs::detect::BadSyntaxForRegularExpression
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function sawRegExPattern(int) in line 88
      3 lines of code
      1 parameters
      1 conditional paths
   function sawRegExPattern(int,int) in line 91
      24 lines of code
      2 parameters
      5 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable FILE_SEPARATOR_STRING defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function singleDotPatternWouldBeSilly(int,boolean) in line 61
      26 lines of code
      2 parameters
      8 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 47
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 51
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function BadSyntaxForRegularExpression(BugReporter) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BadUseOfReturnValue.java
module edu::umd::cs::findbugs::detect::BadUseOfReturnValue
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 50
      protection public
      30 lines of code
      1 parameters
      7 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 42
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function BadUseOfReturnValue(BugReporter) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BCPMethodReturnCheck.java
module edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
   inherits from edu::umd::cs::findbugs::ByteCodePatternDetector
   function addMethodWhoseReturnMustBeChecked(String,String,String,int) in line 88
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function getPatternElementList() defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses variable localByteCodePattern defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
   function extractPackageName(String) in line 318
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function getBugReporter() in line 245
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
   function getPattern() in line 71
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses variable localByteCodePattern defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses function getPatternElementList() defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses function add(PatternElement) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePattern
   function getPatternElementList() in line 100
      132 lines of code
      0 parameters
      6 conditional paths
      uses variable localPatternElementList defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses variable INSTANCE defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable CONSTRUCTOR defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable CHECK_ALL defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses function isSameOrNewerThan(JavaVersion) defined in edu::umd::cs::findbugs::JavaVersion
      uses variable JAVA_1_5 defined in edu::umd::cs::findbugs::JavaVersion
   function prescreen(Method,ClassContext) in line 251
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function reportMatch(ClassContext,Method,ByteCodePatternMatch) in line 259
      protection public
      58 lines of code
      3 parameters
      8 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLabeledInstruction(String) defined in edu::umd::cs::findbugs::ba::bcp::ByteCodePatternMatch
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function extractPackageName(String) defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function BCPMethodReturnCheck(BugReporter) in line 238
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::BCPMethodReturnCheck
   variable bugReporter in line 57
   variable CHECK_ALL in line 59
   variable localByteCodePattern in line 61
   variable localPatternElementList in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BuildCheckReturnAnnotationDatabase.java
module edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visit(JavaClass) in line 68
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 74
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function visit(Method) in line 80
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function visit(Synthetic) in line 87
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAnnotation(String,Map< String, Object >,boolean) in line 103
      protection public
      36 lines of code
      3 parameters
      8 conditional paths
      uses variable defaultKind defined in edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function BuildCheckReturnAnnotationDatabase() in line 57
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   variable DEFAULT_ANNOTATION_ANNOTATION_CLASS in line 46
   variable defaultKind in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BuildNonNullAnnotationDatabase.java
module edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visit(Synthetic) in line 71
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 86
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 92
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function visit(Method) in line 99
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function visitAnnotation(String,Map< String, Object >,boolean) in line 107
      protection public
      40 lines of code
      3 parameters
      9 conditional paths
      uses variable defaultKind defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitParameterAnnotation(int,String,Map< String, Object >,boolean) in line 162
      protection public
      24 lines of code
      4 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function visitSyntheticParameterAnnotation(int,boolean) in line 148
      protection public
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function BuildNonNullAnnotationDatabase() in line 60
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   variable DEBUG in line 47
   variable DEFAULT_ANNOTATION_ANNOTATION_CLASS in line 49
   variable defaultKind in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BuildNonnullReturnDatabase.java
module edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function analyzeMethod(ClassContext,Method) in line 88
      43 lines of code
      2 parameters
      8 conditional paths
      uses variable returnsReference defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable returnsNonNull defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function considerMethod(ClassContext,Method) in line 79
      6 lines of code
      2 parameters
      3 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function visitClassContext(ClassContext) in line 68
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function considerMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   variable DEBUG in line 66
   variable returnsNonNull in line 86
   variable returnsReference in line 85
   variable VERBOSE_DEBUG in line 65
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/BuildUnconditionalParamDerefDatabase.java
module edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function analyzeMethod(ClassContext,Method) in line 92
      55 lines of code
      2 parameters
      9 conditional paths
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getUnconditionalValueDerefDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getResultFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isUnconditionallyDereferenced(ValueNumber) defined in edu::umd::cs::findbugs::ba::deref::UnconditionalValueDerefSet
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function dumpDataflowInformation(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable nonnullReferenceParameters defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function considerMethod(ClassContext,Method) in line 75
      13 lines of code
      2 parameters
      5 conditional paths
      uses variable referenceParameters defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function visitClassContext(ClassContext) in line 64
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable VERBOSE_DEBUG defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses function getMethodsInCallOrder() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function considerMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   variable DEBUG in line 62
   variable nonnullReferenceParameters in line 90
   variable referenceParameters in line 89
   variable VERBOSE_DEBUG in line 61
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/CalledMethods.java
module edu::umd::cs::findbugs::detect::CalledMethods
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function sawOpcode(int) in line 43
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function addCalledMethod(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
   function CalledMethods(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/CheckCalls.java
module edu::umd::cs::findbugs::detect::CheckCalls
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 85
      37 lines of code
      2 parameters
      5 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable TARGET_METHOD defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function report() in line 126
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 60
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::CheckCalls
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function CheckCalls(BugReporter) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable METHOD in line 48
   variable TARGET_METHOD in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/CheckImmutableAnnotation.java
module edu::umd::cs::findbugs::detect::CheckImmutableAnnotation
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(Field) in line 49
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitJavaClass(JavaClass) in line 40
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function hasClassAnnotation(String,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
   function CheckImmutableAnnotation(BugReporter) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/CloneIdiom.java
module edu::umd::cs::findbugs::detect::CloneIdiom
   inherits from edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function report() in line 64
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 75
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 68
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 89
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
   function visit(ConstantNameAndType) in line 149
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 158
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 123
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CloneIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function visitClassContext(ClassContext) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function CloneIdiom(BugReporter) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::CloneIdiom
   variable bugReporter in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/ComparatorIdiom.java
module edu::umd::cs::findbugs::detect::ComparatorIdiom
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 48
      protection public
      37 lines of code
      1 parameters
      9 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function ComparatorIdiom(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/ConfusedInheritance.java
module edu::umd::cs::findbugs::detect::ConfusedInheritance
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 62
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 44
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable cls defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitField(Field) in line 52
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable cls defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
   function ConfusedInheritance(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ConfusedInheritance
   variable bugReporter in line 35
   variable cls in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/ConfusionBetweenInheritedAndOuterMethod.java
module edu::umd::cs::findbugs::detect::ConfusionBetweenInheritedAndOuterMethod
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 73
      protection public
      42 lines of code
      1 parameters
      12 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isResolved() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPackageName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function stripLastDollar(String) in line 67
      5 lines of code
      1 parameters
      2 conditional paths
   function visit(Field) in line 55
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
   function visit(Code) in line 60
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function visitJavaClass(JavaClass) in line 45
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function ConfusionBetweenInheritedAndOuterMethod(BugReporter) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DeadLocalStoreProperty.java
module edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function DeadLocalStoreProperty(String,PriorityAdjustment) in line 12
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable BASE_VALUE in line 78
      protection public
   variable CACHING_VALUE in line 70
      protection public
   variable COPY_VALUE in line 74
      protection public
   variable DEAD_INCREMENT in line 29
      protection public
   variable DEAD_OBJECT_STORE in line 39
      protection public
   variable DEFENSIVE_CONSTANT_OPCODE in line 21
      protection public
   variable EXCEPTION_HANDLER in line 25
      protection public
   variable IS_PARAMETER in line 91
      protection public
   variable KILLED_BY_SUBSEQUENT_STORE in line 17
      protection public
   variable LOCAL_NAME in line 66
      protection public
   variable MANY_STORES in line 82
      protection public
   variable METHOD_RESULT in line 31
      protection public
   variable NO_LOADS in line 51
      protection public
   variable PARAM_DEAD_ON_ENTRY in line 62
      protection public
   variable SHADOWS_FIELD in line 55
      protection public
   variable SINGLE_DEAD_INCREMENT in line 35
      protection public
   variable SINGLE_STORE in line 47
      protection public
   variable STORE_OF_CONSTANT in line 88
      protection public
   variable STORE_OF_NULL in line 85
      protection public
   variable SYNTHETIC_NAME in line 58
      protection public
   variable TWO_STORES_MULTIPLE_LOADS in line 43
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DoInsideDoPrivileged.java
module edu::umd::cs::findbugs::detect::DoInsideDoPrivileged
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 59
      protection public
      29 lines of code
      1 parameters
      6 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 41
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 52
      protection public
      6 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function DoInsideDoPrivileged(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DontCatchIllegalMonitorStateException.java
module edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function report() in line 86
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visit(ExceptionTable) in line 54
      protection public
      9 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(CodeException) in line 65
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 81
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function DontCatchIllegalMonitorStateException(BugReporter) in line 45
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DontCatchIllegalMonitorStateException
   variable DEBUG in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DontUseEnum.java
module edu::umd::cs::findbugs::detect::DontUseEnum
   inherits from edu::umd::cs::findbugs::bcel::PreorderDetector
   function isReservedName(String) in line 53
      3 lines of code
      1 parameters
      1 conditional paths
   function isVisible(FieldOrMethod) in line 48
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 39
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function isVisible(FieldOrMethod) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Field) in line 58
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function isVisible(FieldOrMethod) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(LocalVariable) in line 67
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function isReservedName(String) defined in edu::umd::cs::findbugs::detect::DontUseEnum
      uses function getClassContext() defined in edu::umd::cs::findbugs::bcel::PreorderDetector
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function DontUseEnum(BugReporter) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DoomedCodeWarningProperty.java
module edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function DoomedCodeWarningProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable DOOMED_CODE in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DroppedException.java
module edu::umd::cs::findbugs::detect::DroppedException
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function catchBlockHasComment(SourceLineAnnotation) in line 347
      120 lines of code
      1 parameters
      32 conditional paths
      uses variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable NUM_CONTEXT_LINES defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable MAX_LINES defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function next() defined in edu::umd::cs::findbugs::Tokenizer
      uses function getKind() defined in edu::umd::cs::findbugs::Token
      uses variable EOF defined in edu::umd::cs::findbugs::Token
      uses variable EOL defined in edu::umd::cs::findbugs::Token
      uses variable WORD defined in edu::umd::cs::findbugs::Token
      uses function getLexeme() defined in edu::umd::cs::findbugs::Token
      uses variable START defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable CATCH defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable OPEN_PAREN defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable CLOSE_PAREN defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable OPEN_BRACE defined in edu::umd::cs::findbugs::detect::DroppedException
   function getNextExecutableLineNumber(LineNumberTable,int) in line 296
      21 lines of code
      2 parameters
      6 conditional paths
   function getUnsignedShort(byte[],int) in line 88
      4 lines of code
      2 parameters
      1 conditional paths
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 70
      protection public
      2 lines of code
      0 parameters
      4 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Code) in line 94
      protection public
      201 lines of code
      1 parameters
      52 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getUnsignedShort(byte[],int) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function getNextExecutableLineNumber(LineNumberTable,int) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function catchBlockHasComment(SourceLineAnnotation) defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 65
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DroppedException
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function DroppedException(BugReporter) in line 60
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DroppedException
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::DroppedException
   variable bugReporter in line 57
   variable CATCH in line 320
   variable classContext in line 58
   variable CLOSE_PAREN in line 322
   variable DEBUG in line 50
   variable LOOK_IN_SOURCE_TO_FIND_COMMENTED_CATCH_BLOCKS in line 51
   variable MAX_LINES in line 337
   variable NUM_CONTEXT_LINES in line 331
   variable OPEN_BRACE in line 323
   variable OPEN_PAREN in line 321
   variable START in line 319
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DumbMethodInvocations.java
module edu::umd::cs::findbugs::detect::DumbMethodInvocations
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 57
      66 lines of code
      2 parameters
      10 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::constant::ConstantDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantInteger() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getConstantInt() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function isAbsoluteFileName(String) defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function isAbsoluteFileName(String) in line 124
      12 lines of code
      1 parameters
      6 conditional paths
   function report() in line 137
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 35
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function DumbMethodInvocations(BugReporter) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethodInvocations
   variable bugReporter in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DumbMethods.java
module edu::umd::cs::findbugs::detect::DumbMethods
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function checkMonitorWait() in line 778
      29 lines of code
      0 parameters
      5 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getLocationAndFactForInstruction(int) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable frame defined in edu::umd::cs::findbugs::ba::type::TypeDataflow::LocationAndFactPair
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CONDITION_TYPE defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function flush() in line 828
      32 lines of code
      0 parameters
      8 conditional paths
      uses variable gcInvocationBugReport defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sawCurrentTimeMillis defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable exceptionTable defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable gcInvocationPC defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable OOM_CATCH_LEN defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::DumbMethods
   function getStackEntryOfListCallThatMustBeNonnegative() in line 768
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isMonitorWait(String,String) in line 808
      5 lines of code
      2 parameters
      1 conditional paths
   function isTestMethod(Method) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function sawOpcode(int) in line 143
      protection public
      583 lines of code
      1 parameters
      113 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSlotsFromTopOfStackForParameter(int) defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable prevOpcode defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable isEqualsObject defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable reportedBadCastInEquals defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sawInstanceofCheck defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getSizeOfSurroundingTryBlock(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function stackEntryThatMustBeNonnegative(int) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchLabels() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable MASKED_NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable checkForBitIorofSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable prevOpcodeWasReadLine defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sinceBufferedInputStreamReady defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable randomNextIntState defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable isPublicStaticVoidMain defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getRefConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isTestMethod(Method) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable gcInvocationBugReport defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable gcInvocationPC defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawCurrentTimeMillis defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable primitiveObjCtorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable ctorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable jdk15ChecksEnabled defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isMonitorWait(String,String) defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function checkMonitorWait() defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function stackEntryThatMustBeNonnegative(int) in line 734
      34 lines of code
      1 parameters
      21 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackEntryOfListCallThatMustBeNonnegative() defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visit(JavaClass) in line 96
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 114
      protection public
      25 lines of code
      1 parameters
      3 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable isPublicStaticVoidMain defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable prevOpcodeWasReadLine defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable primitiveObjCtorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable ctorSeen defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable randomNextIntState defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable checkForBitIorofSignedByte defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable isEqualsObject defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawInstanceofCheck defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable reportedBadCastInEquals defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable sinceBufferedInputStreamReady defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visit(Code) in line 815
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function flush() defined in edu::umd::cs::findbugs::detect::DumbMethods
   function visitAfter(JavaClass) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function DumbMethods(BugReporter) in line 85
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses variable jdk15ChecksEnabled defined in edu::umd::cs::findbugs::detect::DumbMethods
      uses function isSameOrNewerThan(JavaVersion) defined in edu::umd::cs::findbugs::JavaVersion
      uses variable JAVA_1_5 defined in edu::umd::cs::findbugs::JavaVersion
   variable accumulator in line 84
   variable alreadyReported in line 60
   variable bugReporter in line 61
   variable checkForBitIorofSignedByte in line 80
   variable CONDITION_TYPE in line 58
   variable ctorSeen in line 70
   variable exceptionTable in line 65
   variable gcInvocationBugReport in line 63
   variable gcInvocationPC in line 64
   variable isEqualsObject in line 74
   variable isPublicStaticVoidMain in line 73
   variable jdk15ChecksEnabled in line 82
   variable OOM_CATCH_LEN in line 823
   variable prevOpcode in line 72
   variable prevOpcodeWasReadLine in line 71
   variable primitiveObjCtorSeen in line 69
   variable randomNextIntState in line 79
   variable reportedBadCastInEquals in line 76
   variable sawCurrentTimeMillis in line 62
   variable sawInstanceofCheck in line 75
   variable sinceBufferedInputStreamReady in line 78
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/DuplicateBranches.java
module edu::umd::cs::findbugs::detect::DuplicateBranches
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function findIfElseDuplicates(CFG,Method,BasicBlock) in line 77
      56 lines of code
      3 parameters
      11 conditional paths
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable IFCMP_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function findThenFinish(CFG,BasicBlock,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCodeBytes(Method,int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addSourceLineRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::BugInstance
   function findSwitchDuplicates(CFG,Method,BasicBlock) in line 149
      72 lines of code
      3 parameters
      16 conditional paths
      uses function getNumOutgoingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable SWITCH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses variable SWITCH_DEFAULT_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getFinalTarget(CFG,int,Collection< InstructionHandle >) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCodeBytesAsBigInt(Method,int[],int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function updateMap(HashMap< BigInteger, Collection< Integer >>,int,BigInteger) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addSourceLineRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function findThenFinish(CFG,BasicBlock,int) in line 327
      22 lines of code
      3 parameters
      5 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getCodeBytes(Method,int,int) in line 293
      33 lines of code
      3 parameters
      6 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getCodeBytesAsBigInt(Method,int[],int,int) in line 234
      8 lines of code
      4 parameters
      2 conditional paths
      uses function getCodeBytes(Method,int,int) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDeepFirstInstruction(CFG,BasicBlock) in line 136
      12 lines of code
      2 parameters
      4 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function toString() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getFinalTarget(CFG,int,Collection< InstructionHandle >) in line 245
      47 lines of code
      3 parameters
      10 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function outgoingEdgeIterator(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getType() defined in edu::umd::cs::findbugs::ba::Edge
      uses function toString() defined in edu::umd::cs::findbugs::ba::Edge
      uses variable GOTO_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getDeepFirstInstruction(CFG,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function report() in line 350
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function updateMap(HashMap< BigInteger, Collection< Integer >>,int,BigInteger) in line 223
      9 lines of code
      3 parameters
      2 conditional paths
   function visitClassContext(ClassContext) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitMethod(Method) in line 52
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable classContext defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getNumOutgoingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function findIfElseDuplicates(CFG,Method,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function findSwitchDuplicates(CFG,Method,BasicBlock) defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DuplicateBranches
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function DuplicateBranches(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::DuplicateBranches
   variable bugReporter in line 39
   variable classContext in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/EmptyZipFileEntry.java
module edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 49
      protection public
      30 lines of code
      1 parameters
      4 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable streamType defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sawPutEntry defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(JavaClass) in line 39
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sawPutEntry defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
      uses variable streamType defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   function EmptyZipFileEntry(BugReporter) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::EmptyZipFileEntry
   variable bugReporter in line 28
   variable sawPutEntry in line 29
   variable streamType in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/EqStringTest.java
module edu::umd::cs::findbugs::detect::EqStringTest
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 48
      protection public
      25 lines of code
      1 parameters
      7 conditional paths
      uses function getRefConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::EqStringTest
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Method) in line 40
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function EqStringTest(BugReporter) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::EqStringTest
   variable bugReporter in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FinalizerNullsFields.java
module edu::umd::cs::findbugs::detect::FinalizerNullsFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 76
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addReferencedField(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Method) in line 45
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function visit(Field) in line 54
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 61
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FinalizerNullsFields(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindBadCast.java
module edu::umd::cs::findbugs::detect::FindBadCast
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 88
      protection public
      147 lines of code
      1 parameters
      34 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function printOpCode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable castTo defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable parameters defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(JavaClass) in line 61
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 65
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 77
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable parameters defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable castTo defined in edu::umd::cs::findbugs::detect::FindBadCast
   function FindBadCast(BugReporter) in line 37
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast
   variable abstractCollectionClasses in line 56
   variable castTo in line 31
   variable concreteCollectionClasses in line 55
   variable parameters in line 74
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindBadCast2.java
module edu::umd::cs::findbugs::detect::FindBadCast2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 140
      334 lines of code
      2 parameters
      65 conditional paths
      uses function isSynthetic(Method) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getStackLocation(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getParameterValueNumbers(ClassContext,Method,CFG) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable veryAbstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable ARRAY_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function addFoundAndExpectedType(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function getParameterValueNumbers(ClassContext,Method,CFG) in line 129
      11 lines of code
      3 parameters
      2 conditional paths
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getNumLocals() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function isSynthetic(Method) in line 121
      8 lines of code
      1 parameters
      3 conditional paths
   function prescreen(ClassContext,Method) in line 115
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 475
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 91
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindBadCast2(BugReporter) in line 68
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable veryAbstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable abstractCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
      uses variable concreteCollectionClasses defined in edu::umd::cs::findbugs::detect::FindBadCast2
   variable abstractCollectionClasses in line 63
   variable bugReporter in line 59
   variable concreteCollectionClasses in line 61
   variable DEBUG in line 66
   variable veryAbstractCollectionClasses in line 64
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindBadEqualsImplementation.java
module edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
   inherits from edu::umd::cs::findbugs::Detector
   function isEqualsMethod(Method) in line 82
      5 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 99
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function report() in line 91
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 54
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses variable checkedDatabase defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
      uses variable database defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function isEqualsMethod(Method) defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FindBadEqualsImplementation(BugReporter) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindBadEqualsImplementation
   variable bugReporter in line 43
   variable checkedDatabase in line 45
   variable database in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindBadForLoop.java
module edu::umd::cs::findbugs::detect::FindBadForLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 58
      protection public
      64 lines of code
      1 parameters
      7 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getCodeByte(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 39
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 43
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 48
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function FindBadForLoop(BugReporter) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindBugsSummaryStats.java
module edu::umd::cs::findbugs::detect::FindBugsSummaryStats
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::BugReporterObserver
   function report() in line 103
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function report(PrintStream) in line 106
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function reportBug(BugInstance) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stats defined in edu::umd::cs::findbugs::detect::FindBugsSummaryStats
      uses function addBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectStats
   function visit(JavaClass) in line 46
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(LineNumber) in line 84
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visitAfter(JavaClass) in line 67
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable stats defined in edu::umd::cs::findbugs::detect::FindBugsSummaryStats
      uses function addClass(String,boolean,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindBugsSummaryStats(BugReporter) in line 91
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugReporter
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
   function FindBugsSummaryStats() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable stats in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindCircularDependencies.java
module edu::umd::cs::findbugs::detect::FindCircularDependencies
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function removeDependencyLeaves(Map< String, Set< String >>) in line 104
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function removeLoopLinks(Map< String, Set< String >>,Set< String >) in line 130
      23 lines of code
      2 parameters
      12 conditional paths
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function report() in line 74
      protection public
      29 lines of code
      0 parameters
      5 conditional paths
      uses function removeDependencyLeaves(Map< String, Set< String >>) defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function removeLoopLinks(Map< String, Set< String >>,Set< String >) defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function sawOpcode(int) in line 45
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
      uses variable dependencyGraph defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function visit(JavaClass) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable clsName defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   function FindCircularDependencies(BugReporter) in line 34
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindCircularDependencies
   variable bugReporter in line 31
   variable clsName in line 32
   variable dependencyGraph in line 29
module edu::umd::cs::findbugs::detect::FindCircularDependencies::LoopFinder
   function findLoop(Map< String, Set< String >>,String) in line 161
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function findLoop(String) in line 171
      20 lines of code
      1 parameters
      1 conditional paths
   variable dGraph in line 156
   variable loop in line 159
   variable startClass in line 157
   variable visited in line 158
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindDeadLocalStores.java
module edu::umd::cs::findbugs::detect::FindDeadLocalStores
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 170
      255 lines of code
      2 parameters
      44 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function countLocalStoresLoadsAndIncrements(int[],int[],int[],CFG) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isStore(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable EXCEPTION_HANDLER defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable SYNTHETIC_NAME defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable EXCLUDED_LOCALS defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function setProperty(WarningProperty,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable LOCAL_NAME defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable IS_PARAMETER defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable STORE_OF_CONSTANT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable STORE_OF_NULL defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable SHADOWS_FIELD defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable BASE_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable KILLED_BY_SUBSEQUENT_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function getPredecessorOf(InstructionHandle) defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable defensiveConstantValueOpcodes defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable DEFENSIVE_CONSTANT_OPCODE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable CACHING_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable COPY_VALUE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable METHOD_RESULT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable DEAD_INCREMENT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable SINGLE_DEAD_INCREMENT defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function removeProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DEAD_OBJECT_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable TWO_STORES_MULTIPLE_LOADS defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function containsProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable SINGLE_STORE defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable NO_LOADS defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses variable PARAM_DEAD_ON_ENTRY defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable MANY_STORES defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
      uses function computePriority(int) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function suppressWarningsIfOneLiveStoreOnLine(BugAccumulator,BitSet) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function checkLocalVariableName(LocalVariableTable,int,int,WarningPropertySet) in line 505
      10 lines of code
      4 parameters
      3 conditional paths
      uses function setProperty(WarningProperty,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable LOCAL_NAME defined in edu::umd::cs::findbugs::detect::DeadLocalStoreProperty
   function countLocalStoresLoadsAndIncrements(int[],int[],int[],CFG) in line 468
      25 lines of code
      4 parameters
      6 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function isExceptionHandler() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isStore(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function isLoad(Location) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isLoad(Location) in line 535
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isStore(Location) in line 523
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function prescreen(ClassContext,Method) in line 144
      3 lines of code
      2 parameters
      1 conditional paths
   function report() in line 540
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function suppressWarningsIfOneLiveStoreOnLine(BugAccumulator,BitSet) in line 433
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable SUPPRESS_IF_AT_LEAST_ONE_LIVE_STORE_ON_LINE defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function entrySetIterator() defined in edu::umd::cs::findbugs::BugAccumulator
   function visitClassContext(ClassContext) in line 148
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindDeadLocalStores(BugReporter) in line 138
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindDeadLocalStores
   variable bugReporter in line 136
   variable DEBUG in line 86
   variable defensiveConstantValueOpcodes in line 124
   variable DO_EXCLUDE_LOCALS in line 96
   variable EXCLUDED_LOCALS in line 94
   variable FINDBUGS_EXCLUDED_LOCALS_PROP_NAME in line 91
   variable SUPPRESS_IF_AT_LEAST_ONE_LIVE_STORE_ON_LINE in line 115
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindDoubleCheck.java
module edu::umd::cs::findbugs::detect::FindDoubleCheck
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 61
      protection public
      92 lines of code
      1 parameters
      29 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDoubleCheck
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 47
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindDoubleCheck(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindDoubleCheck
   variable bugReporter in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindEmptySynchronizedBlock.java
module edu::umd::cs::findbugs::detect::FindEmptySynchronizedBlock
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 39
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindEmptySynchronizedBlock(BugReporter) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindFieldSelfAssignment.java
module edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 63
      protection public
      67 lines of code
      1 parameters
      18 conditional paths
      uses function getRefConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 50
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function FindFieldSelfAssignment(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFieldSelfAssignment
   variable bugReporter in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindFinalizeInvocations.java
module edu::umd::cs::findbugs::detect::FindFinalizeInvocations
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 80
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Method) in line 41
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 51
      protection public
      27 lines of code
      1 parameters
      7 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindFinalizeInvocations(BugReporter) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFinalizeInvocations
   variable bugReporter in line 30
   variable DEBUG in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindFloatEquality.java
module edu::umd::cs::findbugs::detect::FindFloatEquality
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isZero(Number) in line 70
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function okValueToCompareAgainst(Number) in line 76
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function sawOpcode(int) in line 84
      protection public
      72 lines of code
      1 parameters
      23 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable opStack defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isZero(Number) defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function okValueToCompareAgainst(Number) defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable SAW_COMP defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(Code) in line 44
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable opStack defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable state defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ROLE_ANOTHER_INSTANCE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatEquality
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FindFloatEquality(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatEquality
   variable bugReporter in line 32
   variable opStack in line 33
   variable priority in line 31
   variable SAW_COMP in line 30
   variable SAW_NOTHING in line 29
   variable state in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindFloatMath.java
module edu::umd::cs::findbugs::detect::FindFloatMath
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 35
      protection public
      31 lines of code
      1 parameters
      10 conditional paths
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatMath
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindFloatMath(BugReporter) in line 28
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindFloatMath
   variable bugReporter in line 26
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindHEmismatch.java
module edu::umd::cs::findbugs::detect::FindHEmismatch
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function check(int) in line 399
      22 lines of code
      1 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNHASHABLE_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function isHashableClassName(String) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 477
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function isHashableClassName(String) defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 375
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function check(int) defined in edu::umd::cs::findbugs::detect::FindHEmismatch
   function visit(JavaClass) in line 275
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 294
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
   function visit(Method) in line 303
      protection public
      61 lines of code
      1 parameters
      19 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Signature) in line 440
      protection public
      33 lines of code
      1 parameters
      9 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addVisitedField(PreorderVisitor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNHASHABLE_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
   function visitAfter(JavaClass) in line 94
      protection public
      179 lines of code
      1 parameters
      45 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function FindHEmismatch(BugReporter) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindHEmismatch
   variable bugReporter in line 87
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindInconsistentSync2.java
module edu::umd::cs::findbugs::detect::FindInconsistentSync2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method,Set< Method >) in line 377
      146 lines of code
      3 parameters
      25 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isGetterMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getInnerClassAccess(String,String) defined in edu::umd::cs::findbugs::ba::InnerClassAccessMap
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function getField() defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses variable isLoad defined in edu::umd::cs::findbugs::ba::InnerClassAccess
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function isFinal() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function containsReturnValue(ValueNumberFactory) defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable ADJUST_SUBCLASS_ACCESSES defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable READ defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function isConstructor(String) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function getStats(XField) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function addAccess(int) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addLocalLock() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addGetterMethodAccess() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findLockedMethods(ClassContext,SelfCalls,Set< CallSite >) in line 664
      53 lines of code
      3 parameters
      9 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getCallSite() defined in edu::umd::cs::findbugs::CallGraphEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallGraphNode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function findNotUnlockedMethods(ClassContext,SelfCalls,Set< CallSite >) in line 598
      60 lines of code
      3 parameters
      10 conditional paths
      uses function isConstructor(String) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getCallSite() defined in edu::umd::cs::findbugs::CallGraphEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallGraphNode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function findObviouslyLockedCallSites(ClassContext,SelfCalls) in line 776
      54 lines of code
      2 parameters
      6 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getLocation() defined in edu::umd::cs::findbugs::CallSite
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockChecker
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function findPublicReachableMethods(ClassContext,SelfCalls) in line 722
      50 lines of code
      2 parameters
      9 conditional paths
      uses function isConstructor(String) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getCallSite() defined in edu::umd::cs::findbugs::CallGraphEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallSite
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getMethod() defined in edu::umd::cs::findbugs::CallGraphNode
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function getStats(XField) in line 584
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable statMap defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function isConstructor(String) in line 362
      14 lines of code
      1 parameters
      1 conditional paths
   function isGetterMethod(ClassContext,Method) in line 532
      protection public
      48 lines of code
      2 parameters
      29 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 226
      protection public
      131 lines of code
      0 parameters
      26 conditional paths
      uses variable statMap defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldAnnotation(XField,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
      uses function hasClassAnnotation(String,String) defined in edu::umd::cs::findbugs::ba::JCIPAnnotationDatabase
      uses function getNumAccesses(int) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable READ_UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_UNLOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable READ_LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_LOCKED defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable WRITE_BIAS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ANNOTATED_AS_GUARDED_BY_THIS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable ANNOTATED_AS_THREAD_SAFE defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable EVAL defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable UNSYNC_FACTOR defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable MANY_BIASED_UNLOCKED defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable NEVER_WRITTEN defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable NEVER_READ defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function getNumLocalLocks() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable NO_LOCAL_LOCKS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses variable MIN_SYNC_PERCENT defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable BELOW_MIN_SYNC_PERCENT defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function getNumGetterMethodAccesses() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable ONLY_UNSYNC_IN_GETTERS defined in edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
      uses function computePriority(int) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isFalsePositive(int) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function unsyncAccessIterator() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SYNC_ACCESS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function syncAccessIterator() defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 170
      protection public
      55 lines of code
      1 parameters
      8 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function execute() defined in edu::umd::cs::findbugs::SelfCalls
      uses function getCallGraph() defined in edu::umd::cs::findbugs::SelfCalls
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function findObviouslyLockedCallSites(ClassContext,SelfCalls) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function findNotUnlockedMethods(ClassContext,SelfCalls,Set< CallSite >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function findLockedMethods(ClassContext,SelfCalls,Set< CallSite >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function findPublicReachableMethods(ClassContext,SelfCalls) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method,Set< Method >) defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   function FindInconsistentSync2(BugReporter) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
   variable ADJUST_SUBCLASS_ACCESSES in line 45
   variable bugReporter in line 159
   variable DEBUG in line 42
   variable EVAL in line 46
   variable LOCKED in line 92
   variable MIN_SYNC_PERCENT in line 58
   variable READ in line 93
   variable READ_LOCKED in line 98
   variable READ_UNLOCKED in line 96
   variable statMap in line 160
   variable SYNC_ACCESS in line 43
   variable UNLOCKED in line 91
   variable UNSYNC_FACTOR in line 84
   variable WRITE in line 94
   variable WRITE_BIAS in line 66
   variable WRITE_LOCKED in line 99
   variable WRITE_UNLOCKED in line 97
module edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function addAccess(int) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function addAccess(ClassContext,Method,InstructionHandle,boolean) in line 137
      protection public
      8 lines of code
      4 parameters
      3 conditional paths
      uses variable SYNC_ACCESS defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2
      uses variable syncAccessList defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
      uses variable unsyncAccessList defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function addGetterMethodAccess() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numGetterMethodAccesses defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function addLocalLock() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numLocalLocks defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function getNumAccesses(int) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable countList defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function getNumGetterMethodAccesses() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numGetterMethodAccesses defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function getNumLocalLocks() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable numLocalLocks defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function syncAccessIterator() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable syncAccessList defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   function unsyncAccessIterator() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable unsyncAccessList defined in edu::umd::cs::findbugs::detect::FindInconsistentSync2::FieldStats
   variable countList in line 107
   variable numGetterMethodAccesses in line 109
   variable numLocalLocks in line 108
   variable syncAccessList in line 111
   variable unsyncAccessList in line 110
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindJSR166LockMonitorenter.java
module edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 77
      60 lines of code
      2 parameters
      10 conditional paths
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable LOCK_TYPE defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function clone() in line 49
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function report() in line 138
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 57
      protection public
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   function FindJSR166LockMonitorenter(BugReporter) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindJSR166LockMonitorenter
   variable bugReporter in line 40
   variable LOCK_TYPE in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindLocalSelfAssignment2.java
module edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 57
      protection public
      33 lines of code
      1 parameters
      7 conditional paths
      uses variable previousGotoTarget defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable gotoCount defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable previousLoadOf defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable previousStores defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 47
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable previousLoadOf defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable previousGotoTarget defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable gotoCount defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
      uses variable previousStores defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   function FindLocalSelfAssignment2(BugReporter) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindLocalSelfAssignment2
   variable bugReporter in line 35
   variable gotoCount in line 38
   variable previousGotoTarget in line 37
   variable previousLoadOf in line 36
   variable previousStores in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindMaskedFields.java
module edu::umd::cs::findbugs::detect::FindMaskedFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 206
      protection public
      31 lines of code
      0 parameters
      12 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable rememberedBugs defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function getReadFields() defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getWrittenFields() defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getWrittenOutsideOfConstructorFields() defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(JavaClass) in line 80
      protection public
      74 lines of code
      1 parameters
      15 conditional paths
      uses variable classFields defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable maskedFields defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable rememberedBugs defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 156
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable numParms defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable staticMethod defined in edu::umd::cs::findbugs::detect::FindMaskedFields
   function visit(LocalVariableTable) in line 173
      protection public
      31 lines of code
      1 parameters
      8 conditional paths
      uses variable ENABLE_LOCALS defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable staticMethod defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable numParms defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses variable classFields defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 73
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindMaskedFields(BugReporter) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMaskedFields
   variable bugReporter in line 49
   variable classFields in line 52
   variable ENABLE_LOCALS in line 169
   variable maskedFields in line 51
   variable numParms in line 50
   variable rememberedBugs in line 56
   variable staticMethod in line 53
module edu::umd::cs::findbugs::detect::FindMaskedFields::RememberedBug
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindMismatchedWaitOrNotify.java
module edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 74
      66 lines of code
      2 parameters
      12 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockDataflow
      uses function getLockCount(int) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getLockedValueNumbers(ValueNumberFrame) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function fuzzyMatch(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function clone() in line 40
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function report() in line 141
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 48
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindMismatchedWaitOrNotify(BugReporter) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindMismatchedWaitOrNotify
   variable bugReporter in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindNakedNotify.java
module edu::umd::cs::findbugs::detect::FindNakedNotify
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 63
      protection public
      38 lines of code
      1 parameters
      10 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable notifyPC defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 53
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable notifyPC defined in edu::umd::cs::findbugs::detect::FindNakedNotify
   function FindNakedNotify(BugReporter) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNakedNotify
   variable bugReporter in line 36
   variable notifyPC in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindNonSerializableStoreIntoSession.java
module edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 59
      85 lines of code
      2 parameters
      15 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function report() in line 145
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 41
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindNonSerializableStoreIntoSession(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableStoreIntoSession
   variable bugReporter in line 33
   variable DEBUG in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindNonSerializableValuePassedToWriteObject.java
module edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 59
      93 lines of code
      2 parameters
      17 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function report() in line 153
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 41
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindNonSerializableValuePassedToWriteObject(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonSerializableValuePassedToWriteObject
   variable bugReporter in line 33
   variable DEBUG in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindNonShortCircuit.java
module edu::umd::cs::findbugs::detect::FindNonShortCircuit
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function clearAll() in line 58
      10 lines of code
      0 parameters
      1 conditional paths
   function reportBug() in line 164
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawBooleanValue() in line 240
      16 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 70
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function scanForBooleanValue(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function scanForDanger(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function scanForShortCircuit(int) defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function scanForBooleanValue(int) in line 183
      56 lines of code
      1 parameters
      24 conditional paths
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function sawBooleanValue() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function scanForDanger(int) in line 83
      41 lines of code
      1 parameters
      20 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function scanForShortCircuit(int) in line 125
      38 lines of code
      1 parameters
      13 conditional paths
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
      uses function reportBug() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   function visit(Method) in line 52
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function clearAll() defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   function FindNonShortCircuit(BugReporter) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNonShortCircuit
   variable bugReporter in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindNullDeref.java
module edu::umd::cs::findbugs::detect::FindNullDeref
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonCollector
   function addParamAnnotations(Location,BitSet,BitSet,WarningPropertySet,BugInstance) in line 637
      41 lines of code
      5 parameters
      6 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ARG_DEFINITELY_NULL defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
   function analyzeMethod(ClassContext,Method) in line 197
      43 lines of code
      2 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable checkedDatabases defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkDatabases() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getMethodNullnessAnnotation() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function findPreviouslyDeadBlocks() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::npe::NullDerefAndRedundantComparisonFinder
      uses function checkCallSitesAndReturnInstructions() defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function checkCallSitesAndReturnInstructions() in line 307
      30 lines of code
      0 parameters
      8 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function examineCallSite(Location,ConstantPoolGen,TypeDataflow) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable methodAnnotation defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function examineReturnInstruction(Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function examinePutfieldInstruction(Location,PUTFIELD,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function checkDatabases() in line 270
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getUnconditionalDerefParamDatabase() defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function checkNonNullParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) in line 691
      55 lines of code
      6 parameters
      7 conditional paths
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function parameterMustBeNonNull(XMethod,int) defined in edu::umd::cs::findbugs::ba::NullnessAnnotationDatabase
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function checkUnconditionallyDereferencedParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) in line 493
      134 lines of code
      6 parameters
      21 conditional paths
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ALL_DANGEROUS_TARGETS defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses variable MONOMORPHIC_CALL_SITE defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable ACTUAL_PARAMETER_GUARANTEED_NULL defined in edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addParamAnnotations(Location,BitSet,BitSet,WarningPropertySet,BugInstance) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_DANGEROUS_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_SAFE_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function decorateWarning(Location,WarningPropertySet,BugInstance) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function decorateWarning(Location,WarningPropertySet,BugInstance) in line 628
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function examineCallSite(Location,ConstantPoolGen,TypeDataflow) in line 338
      72 lines of code
      3 parameters
      9 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getArgumentSet(InvokeInstruction,ConstantPoolGen,DataflowValueChooser< ValueType >) defined in edu::umd::cs::findbugs::ba::Frame
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isReturnValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG_NULLARG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getNumArguments(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable unconditionalDerefParamDatabase defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkUnconditionallyDereferencedParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function checkNonNullParam(Location,ConstantPoolGen,TypeDataflow,InvokeInstruction,BitSet,BitSet) defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function examinePutfieldInstruction(Location,PUTFIELD,ConstantPoolGen) in line 411
      41 lines of code
      3 parameters
      5 conditional paths
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addOptionalAnnotation(@CheckForNull BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function examineReturnInstruction(Location) in line 453
      39 lines of code
      1 parameters
      8 conditional paths
      uses variable DEBUG_NULLRETURN defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function findPreviouslyDeadBlocks() in line 249
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function foundGuaranteedNullDeref(@NonNull Set< Location >,@NonNull Set< Location >,SortedSet< Location >,ValueNumberDataflow,ValueNumber,BugAnnotation,NullValueUnconditionalDeref,boolean) in line 1098
      protection public
      189 lines of code
      8 parameters
      39 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isMethodReturnValue() defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses function isAlwaysOnExceptionPath() defined in edu::umd::cs::findbugs::ba::npe::NullValueUnconditionalDeref
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getUsagesRequiringNonNullValues(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(Location,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses function getReturnFromNonNullMethod() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getNonNullField() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getNonNullParameter() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function getParameterNumber() defined in edu::umd::cs::findbugs::ba::XMethodParameter
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function isDoomed(Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DOOMED_CODE defined in edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function foundNullDeref(ClassContext,Location,ValueNumber,IsNullValue,ValueNumberFrame) in line 756
      protection public
      61 lines of code
      5 parameters
      12 conditional paths
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function skipIfInsideCatchNull() defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportNullDeref(WarningPropertySet,ClassContext,Method,Location,String,int,BugAnnotation) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function mightBeNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isParamValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function foundRedundantNullCheck(Location,RedundantBranch) in line 862
      protection public
      190 lines of code
      2 parameters
      42 conditional paths
      uses variable firstValue defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses function isChecked() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function wouldHaveBeenAKaboom() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getLocationOfKaBoom() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable infeasibleEdge defined in edu::umd::cs::findbugs::ba::npe::RedundantBranch
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isGoto(Instruction) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getNumIncomingEdges(VertexType) defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function isThrower(BasicBlock) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable previouslyDeadBlocks defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable invDataflow defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isTop() defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function hasFlag(int) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable CONSTANT_CLASS_OBJECT defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable CHECKED_VALUE defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable WOULD_HAVE_BEEN_A_KABOOM defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses variable CREATED_DEAD_CODE defined in edu::umd::cs::findbugs::detect::NullDerefProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function computePriority(int) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function setPriority(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function getMethodNullnessAnnotation() in line 288
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG_NULLRETURN defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_NULLNESS defined in edu::umd::cs::findbugs::ba::NullnessAnnotation
   function isDoomed(Location) in line 1288
      17 lines of code
      1 parameters
      9 conditional paths
      uses variable MARK_DOOMED defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getReturnPathTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathTypeDataflow
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function getUsagesRequiringNonNullValues(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function get(Location,ValueNumber) defined in edu::umd::cs::findbugs::ba::npe::UsagesRequiringNonNullValues
      uses function getDescription() defined in edu::umd::cs::findbugs::ba::npe::PointerUsageRequiringNonNullValue
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function isGoto(Instruction) in line 1087
      4 lines of code
      1 parameters
      1 conditional paths
   function isThrower(BasicBlock) in line 844
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function report() in line 747
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function reportNullDeref(WarningPropertySet,ClassContext,Method,Location,String,int,BugAnnotation) in line 818
      25 lines of code
      7 parameters
      4 conditional paths
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function isDoomed(Location) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable DOOMED_CODE defined in edu::umd::cs::findbugs::detect::DoomedCodeWarningProperty
      uses function decorateBugInstance(BugInstance) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function skipIfInsideCatchNull() in line 750
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
   function visitClassContext(ClassContext) in line 157
      protection public
      39 lines of code
      1 parameters
      8 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable CLASS defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable method defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable METHOD defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindNullDeref(BugReporter) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindNullDeref
   variable bugReporter in line 135
   variable checkedDatabases in line 140
   variable CLASS in line 131
   variable classContext in line 143
   variable DEBUG in line 114
      protection public
   variable DEBUG_NULLARG in line 117
   variable DEBUG_NULLRETURN in line 120
   variable invDataflow in line 147
   variable MARK_DOOMED in line 123
   variable METHOD in line 128
   variable method in line 145
   variable methodAnnotation in line 151
   variable previouslyDeadBlocks in line 149
   variable REPORT_SAFE_METHOD_TARGETS in line 126
   variable unconditionalDerefParamDatabase in line 138
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindOpenStream.java
module edu::umd::cs::findbugs::detect::FindOpenStream
   inherits from ResourceTrackingDetector< Stream, StreamResourceTracker >
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method,StreamResourceTracker,ResourceCollection< Stream >) in line 312
      protection public
      114 lines of code
      4 parameters
      17 conditional paths
      uses function isMainMethod(Method) defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses variable potentialOpenStreamList defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses function getEntry() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFirstInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setInstanceParam(int) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugReporter defined in ResourceTrackingDetector< Stream, StreamResourceTracker >
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable isClosed defined in edu::umd::cs::findbugs::detect::Stream
      uses function setClosed() defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::Stream
      uses function getOpenLocation() defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addTypeOfNamedClass(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getStreamBase() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable CLOSEIT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function clone() in line 227
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getResourceTracker(ClassContext,Method) in line 301
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable bugReporter defined in ResourceTrackingDetector< Stream, StreamResourceTracker >
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Stream >>,Stream) in line 428
      protection public
      27 lines of code
      5 parameters
      4 conditional paths
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStatus() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable bugType defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses function getBugType() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable potentialOpenStreamList defined in edu::umd::cs::findbugs::detect::FindOpenStream
      uses function PotentialOpenStream(String,int,Stream) defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function setClosed() defined in edu::umd::cs::findbugs::detect::Stream
   function isMainMethod(Method) in line 305
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 456
      protection public
      21 lines of code
      1 parameters
      2 conditional paths
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String,String,int) defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysisTestDriver
   function prescreen(ClassContext,Method) in line 290
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitClassContext(ClassContext) in line 246
      protection public
      42 lines of code
      1 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses variable PRESCREEN_CLASS_LIST defined in edu::umd::cs::findbugs::detect::FindOpenStream
   function FindOpenStream(BugReporter) in line 221
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in ResourceTrackingDetector< Stream, StreamResourceTracker >
   variable potentialOpenStreamList in line 215
   variable PRESCREEN_CLASS_LIST in line 239
module edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
   function PotentialOpenStream(String,int,Stream) in line 204
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable priority defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
      uses variable stream defined in edu::umd::cs::findbugs::detect::FindOpenStream::PotentialOpenStream
   variable bugType in line 200
      protection public
   variable priority in line 201
      protection public
   variable stream in line 202
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindPuzzlers.java
module edu::umd::cs::findbugs::detect::FindPuzzlers
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function adjustMultiplier(Object,int) in line 93
      5 lines of code
      2 parameters
      2 conditional paths
   function adjustPriority(int,int) in line 87
      6 lines of code
      2 parameters
      4 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function resetIMulCastLong() in line 83
      4 lines of code
      0 parameters
      1 conditional paths
   function sawOpcode(int) in line 99
      protection public
      328 lines of code
      1 parameters
      65 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function resetIMulCastLong() defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function adjustMultiplier(Object,int) defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses function adjustPriority(int,int) defined in edu::umd::cs::findbugs::detect::FindPuzzlers
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable AVERAGE_COMPUTED_USING_DIVISION defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getPrevOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isNonNegative() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable INT_SHIFT defined in edu::umd::cs::findbugs::IntAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_VALUE defined in edu::umd::cs::findbugs::IntAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable MATH_ABS defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(Code) in line 49
      protection public
      12 lines of code
      1 parameters
      1 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function resetIMulCastLong() defined in edu::umd::cs::findbugs::detect::FindPuzzlers
   function visit(JavaClass) in line 79
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FindPuzzlers(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindRefComparison.java
module edu::umd::cs::findbugs::detect::FindRefComparison
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::ba::type::ExtendedTypes
   function analyzeMethod(ClassContext,final Method) in line 436
      87 lines of code
      2 parameters
      8 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getExceptionSetFactory(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function initEntryFact(TypeFrame) defined in edu::umd::cs::findbugs::ba::type::TypeAnalysis
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable parameterStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function inspectLocation(boolean,JavaClass,ConstantPoolGen,Method,MethodGen,LinkedList< WarningWithProperties >,LinkedList< WarningWithProperties >,RefComparisonTypeFrameModelingVisitor,TypeDataflow,Location) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function decorateWarnings(LinkedList< WarningWithProperties >,WarningDecorator) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable SAW_CALL_TO_EQUALS defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable PRIVATE_METHOD defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses function reportBest(ClassContext,Method,LinkedList< WarningWithProperties >,boolean) defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function checkEqualsComparison(Location,JavaClass,Method,MethodGen,TypeDataflow) in line 708
      97 lines of code
      5 parameters
      18 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable T_TOP defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable T_BOTTOM defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses function testLikeName(String) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_NULL defined in edu::umd::cs::findbugs::ba::type::ExtendedTypes
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable ARRAY_AND_OBJECT defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function addFoundAndExpectedType(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INCOMPATIBLE_CLASSES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_CLASS_AND_INTERFACE defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable UNRELATED_INTERFACES defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
   function checkRefComparison(Location,JavaClass,MethodGen,RefComparisonTypeFrameModelingVisitor,TypeDataflow,List< WarningWithProperties >,List< WarningWithProperties >) in line 604
      33 lines of code
      7 parameters
      6 conditional paths
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function handleStringComparison(JavaClass,MethodGen,RefComparisonTypeFrameModelingVisitor,List< WarningWithProperties >,Location,Type,Type) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable suspiciousSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function handleSuspiciousRefComparison(JavaClass,MethodGen,List< WarningWithProperties >,Location,String) defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function decorateWarnings(LinkedList< WarningWithProperties >,WarningDecorator) in line 557
      8 lines of code
      2 parameters
      2 conditional paths
      uses function decorate(WarningWithProperties) defined in edu::umd::cs::findbugs::detect::FindRefComparison::WarningDecorator
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function handleStringComparison(JavaClass,MethodGen,RefComparisonTypeFrameModelingVisitor,List< WarningWithProperties >,Location,Type,Type) in line 638
      51 lines of code
      7 parameters
      8 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function addProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable COMPARE_STATIC_STRINGS defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable DYNAMIC_AND_UNKNOWN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable STRING_PARAMETER_IN_PUBLIC_METHOD defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable STRING_PARAMETER defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable STATIC_AND_UNKNOWN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable sawStringIntern defined in edu::umd::cs::findbugs::detect::FindRefComparison::RefComparisonTypeFrameModelingVisitor
      uses variable SAW_INTERN defined in edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
      uses variable BASE_ES_PRIORITY defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function handleSuspiciousRefComparison(JavaClass,MethodGen,List< WarningWithProperties >,Location,String) in line 690
      14 lines of code
      5 parameters
      1 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addType(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function inspectLocation(boolean,JavaClass,ConstantPoolGen,Method,MethodGen,LinkedList< WarningWithProperties >,LinkedList< WarningWithProperties >,RefComparisonTypeFrameModelingVisitor,TypeDataflow,Location) in line 524
      32 lines of code
      10 parameters
      4 conditional paths
      uses function checkRefComparison(Location,JavaClass,MethodGen,RefComparisonTypeFrameModelingVisitor,TypeDataflow,List< WarningWithProperties >,List< WarningWithProperties >) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable invokeInstanceSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function isEqualsMethod(String,String) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function checkEqualsComparison(Location,JavaClass,Method,MethodGen,TypeDataflow) defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function isEqualsMethod(String,String) in line 599
      4 lines of code
      2 parameters
      1 conditional paths
   function main(String[]) in line 806
      protection public
      37 lines of code
      1 parameters
      3 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getExceptionSetFactory(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function execute(String) defined in edu::umd::cs::findbugs::ba::DataflowTestDriver
   function report() in line 846
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function reportBest(ClassContext,Method,LinkedList< WarningWithProperties >,boolean) in line 566
      32 lines of code
      4 parameters
      6 conditional paths
      uses variable REPORT_ALL_REF_COMPARISONS defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function testLikeName(String) in line 705
      3 lines of code
      1 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 386
      protection public
      30 lines of code
      1 parameters
      6 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable prescreenSet defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function analyzeMethod(ClassContext,final Method) defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindRefComparison(BugReporter) in line 382
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRefComparison
   variable BASE_ES_PRIORITY in line 47
   variable bugReporter in line 375
   variable classContext in line 376
   variable DEBUG in line 45
   variable dynamicStringTypeInstance in line 130
   variable invokeInstanceSet in line 68
   variable parameterStringTypeInstance in line 199
   variable prescreenSet in line 79
   variable REPORT_ALL_REF_COMPARISONS in line 46
   variable staticStringTypeInstance in line 166
   variable STRING_SIGNATURE in line 95
   variable suspiciousSet in line 52
   variable T_DYNAMIC_STRING in line 91
   variable T_PARAMETER_STRING in line 93
   variable T_STATIC_STRING in line 92
module edu::umd::cs::findbugs::detect::FindRefComparison::DynamicStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 125
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function DynamicStringType() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 103
module edu::umd::cs::findbugs::detect::FindRefComparison::StaticStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function StaticStringType() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 139
module edu::umd::cs::findbugs::detect::FindRefComparison::ParameterStringType
   inherits from org::apache::bcel::generic::ObjectType
   function equals(Object) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getType() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function hashCode() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ParameterStringType() in line 174
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable serialVersionUID in line 172
module edu::umd::cs::findbugs::detect::FindRefComparison::RefComparisonTypeFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::type::TypeFrameModelingVisitor
   function handleInstanceMethod(InvokeInstruction) in line 255
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable dynamicStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function handleLoad(FieldInstruction) in line 301
      27 lines of code
      1 parameters
      5 conditional paths
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function isString(Type) in line 287
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable STRING_SIGNATURE defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function returnsString(InvokeInstruction) in line 250
      4 lines of code
      1 parameters
      1 conditional paths
   function sawStringIntern() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitGETFIELD(GETFIELD) in line 297
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitGETSTATIC(GETSTATIC) in line 292
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKEINTERFACE(INVOKEINTERFACE) in line 241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKESPECIAL(INVOKESPECIAL) in line 236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitINVOKESTATIC(INVOKESTATIC) in line 221
      protection public
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable dynamicStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitINVOKEVIRTUAL(INVOKEVIRTUAL) in line 246
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitLDC(LDC) in line 276
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function visitLDC2_W(LDC2_W) in line 282
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable staticStringTypeInstance defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function RefComparisonTypeFrameModelingVisitor(ConstantPoolGen,RepositoryLookupFailureCallback) in line 205
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   variable lookupFailureCallback in line 202
   variable sawStringIntern in line 203
module edu::umd::cs::findbugs::detect::FindRefComparison::RefComparisonTypeMerger
   inherits from edu::umd::cs::findbugs::ba::type::StandardTypeMerger
   function isExtendedStringType(byte) in line 366
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_PARAMETER_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function isReferenceType(byte) in line 340
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable T_STATIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
      uses variable T_DYNAMIC_STRING defined in edu::umd::cs::findbugs::detect::FindRefComparison
   function mergeReferenceTypes(ReferenceType,ReferenceType) in line 345
      20 lines of code
      2 parameters
      5 conditional paths
   function RefComparisonTypeMerger(RepositoryLookupFailureCallback,ExceptionSetFactory) in line 334
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::FindRefComparison::WarningWithProperties
module edu::umd::cs::findbugs::detect::FindRefComparison::WarningDecorator
   function decorate(WarningWithProperties) in line 433
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindReturnRef.java
module edu::umd::cs::findbugs::detect::FindReturnRef
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 85
      protection public
      135 lines of code
      1 parameters
      26 conditional paths
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindReturnRef
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 54
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 80
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
   function FindReturnRef(BugReporter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindReturnRef
   variable bugReporter in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindRunInvocations.java
module edu::umd::cs::findbugs::detect::FindRunInvocations
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isThread(String) in line 37
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 53
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses variable alreadySawStart defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isThread(String) defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRunInvocations
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable alreadySawStart defined in edu::umd::cs::findbugs::detect::FindRunInvocations
   function FindRunInvocations(BugReporter) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindRunInvocations
   variable alreadySawStart in line 30
   variable bugReporter in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindSelfComparison.java
module edu::umd::cs::findbugs::detect::FindSelfComparison
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function checkForSelfOperation(int,String) in line 161
      35 lines of code
      2 parameters
      5 conditional paths
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 65
      protection public
      91 lines of code
      1 parameters
      39 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRefConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function checkForSelfOperation(int,String) defined in edu::umd::cs::findbugs::detect::FindSelfComparison
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 49
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 53
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 57
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function FindSelfComparison(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindSelfComparison2.java
module edu::umd::cs::findbugs::detect::FindSelfComparison2
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 66
      66 lines of code
      2 parameters
      30 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function checkForSelfOperation(ClassContext,Location,ValueNumberDataflow,String,Method,MethodGen,String) defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
   function checkForSelfOperation(ClassContext,Location,ValueNumberDataflow,String,Method,MethodGen,String) in line 142
      37 lines of code
      7 parameters
      11 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isVolatile() defined in edu::umd::cs::findbugs::ba::XField
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function report() in line 180
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 44
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindSelfComparison2(BugReporter) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSelfComparison2
   variable bugReporter in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindSleepWithLockHeld.java
module edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 91
      26 lines of code
      2 parameters
      5 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isSleep(INVOKESTATIC,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockDataflow
      uses function getNumLockedObjects() defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function isSleep(INVOKESTATIC,ConstantPoolGen) in line 118
      10 lines of code
      2 parameters
      2 conditional paths
   function prescreen(ClassContext,Method) in line 77
      13 lines of code
      2 parameters
      4 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 129
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 56
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindSleepWithLockHeld(BugReporter) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSleepWithLockHeld
   variable bugReporter in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindSpinLoop.java
module edu::umd::cs::findbugs::detect::FindSpinLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 48
      protection public
      49 lines of code
      1 parameters
      20 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable lastFieldSeen defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 42
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindSpinLoop
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function FindSpinLoop(BugReporter) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindSpinLoop
   variable bugReporter in line 32
   variable DEBUG in line 28
   variable lastFieldSeen in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindSqlInjection.java
module edu::umd::cs::findbugs::detect::FindSqlInjection
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 427
      38 lines of code
      2 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getStringAppendState(CFG,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getConstantDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::constant::ConstantDataflow
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isConstantString() defined in edu::umd::cs::findbugs::ba::constant::Constant
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isSafeValue(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function generateBugInstance(JavaClass,MethodGen,InstructionHandle,StringAppendState) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function generateBugInstance(JavaClass,MethodGen,InstructionHandle,StringAppendState) in line 392
      32 lines of code
      4 parameters
      8 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawOpenQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawCloseQuote(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawComma(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSawUnsafeAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getSawTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function isExecuteDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
   function getPreviousInstruction(InstructionHandle,boolean) in line 347
      10 lines of code
      2 parameters
      3 conditional paths
   function getPreviousInstruction(CFG,Location,boolean) in line 376
      15 lines of code
      3 parameters
      5 conditional paths
      uses function getPreviousInstruction(InstructionHandle,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getPredecessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getPreviousLocation(CFG,Location,boolean) in line 359
      15 lines of code
      3 parameters
      5 conditional paths
      uses function getPreviousInstruction(InstructionHandle,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses function getPredecessorWithEdgeType(BasicBlock,int) defined in edu::umd::cs::findbugs::ba::CFG
      uses variable FALL_THROUGH_EDGE defined in edu::umd::cs::findbugs::ba::EdgeTypes
      uses function getLastInstruction() defined in edu::umd::cs::findbugs::ba::BasicBlock
   function getStringAppendState(CFG,ConstantPoolGen) in line 253
      67 lines of code
      2 parameters
      17 conditional paths
      uses function setSawInitialTaint() defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isConstantStringLoad(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function updateStringAppendState(Location,ConstantPoolGen,StringAppendState) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isStringAppend(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function setSawAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isSafeValue(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function setSawUnsafeAppend(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function setSawTaint(InstructionHandle) defined in edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
   function isCloseQuote(String) in line 193
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isConstantStringLoad(Location,ConstantPoolGen) in line 173
      13 lines of code
      2 parameters
      3 conditional paths
   function isDatabaseSink(Instruction,ConstantPoolGen) in line 249
      3 lines of code
      2 parameters
      1 conditional paths
      uses function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isExecuteDatabaseSink(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
   function isExecuteDatabaseSink(Instruction,ConstantPoolGen) in line 233
      15 lines of code
      2 parameters
      3 conditional paths
   function isOpenQuote(String) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isPreparedStatementDatabaseSink(Instruction,ConstantPoolGen) in line 217
      15 lines of code
      2 parameters
      3 conditional paths
   function isSafeValue(Location,ConstantPoolGen) in line 321
      24 lines of code
      2 parameters
      8 conditional paths
      uses function getPreviousLocation(CFG,Location,boolean) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function isStringAppend(Instruction,ConstantPoolGen) in line 159
      13 lines of code
      2 parameters
      3 conditional paths
   function report() in line 466
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function updateStringAppendState(Location,ConstantPoolGen,StringAppendState) in line 196
      20 lines of code
      3 parameters
      5 conditional paths
      uses function isConstantStringLoad(Location,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isOpenQuote(String) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function isCloseQuote(String) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
   function visitClassContext(ClassContext) in line 136
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindSqlInjection
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindSqlInjection(BugReporter) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::FindSqlInjection::StringAppendState
   function getSawAppend(InstructionHandle) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawCloseQuote(InstructionHandle) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawComma(InstructionHandle) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawOpenQuote(InstructionHandle) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawTaint(InstructionHandle) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSawUnsafeAppend(InstructionHandle) in line 93
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawAppend(InstructionHandle) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawCloseQuote(InstructionHandle) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawComma(InstructionHandle) in line 109
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawInitialTaint() in line 124
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setSawOpenQuote(InstructionHandle) in line 101
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawTaint(InstructionHandle) in line 121
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSawUnsafeAppend(InstructionHandle) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindTwoLockWait.java
module edu::umd::cs::findbugs::detect::FindTwoLockWait
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function analyzeMethod(ClassContext,Method) in line 78
      12 lines of code
      2 parameters
      2 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function visitLocation(ClassContext,Location,MethodGen,LockDataflow) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   function clone() in line 41
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function preScreen(MethodGen) in line 91
      protection public
      23 lines of code
      1 parameters
      5 conditional paths
   function report() in line 139
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 49
      protection public
      28 lines of code
      1 parameters
      8 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable possibleWaitBugs defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable possibleNotifyLocations defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function preScreen(MethodGen) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitLocation(ClassContext,Location,MethodGen,LockDataflow) in line 115
      protection public
      23 lines of code
      4 parameters
      5 conditional paths
      uses variable javaClass defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable possibleWaitBugs defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable possibleNotifyLocations defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   function FindTwoLockWait(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindTwoLockWait
   variable bugReporter in line 31
   variable javaClass in line 32
   variable possibleNotifyLocations in line 35
   variable possibleWaitBugs in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindUncalledPrivateMethods.java
module edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 63
      protection public
      22 lines of code
      1 parameters
      5 conditional paths
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable calledMethodNames defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   function visitClassContext(ClassContext) in line 87
      protection public
      28 lines of code
      1 parameters
      3 conditional paths
      uses variable definedPrivateMethods defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable calledMethodNames defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable className defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitMethod(Method) in line 44
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable definedPrivateMethods defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   function FindUncalledPrivateMethods(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUncalledPrivateMethods
   variable bugReporter in line 32
   variable calledMethodNames in line 35
   variable className in line 33
   variable definedPrivateMethods in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindUnconditionalWait.java
module edu::umd::cs::findbugs::detect::FindUnconditionalWait
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOffset(int) in line 50
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
   function sawOpcode(int) in line 55
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnconditionalWait
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FindUnconditionalWait(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnconditionalWait
   variable bugReporter in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindUninitializedGet.java
module edu::umd::cs::findbugs::detect::FindUninitializedGet
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawBranchTo(int) in line 80
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function sawOpcode(int) in line 89
      protection public
      44 lines of code
      1 parameters
      7 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 44
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 51
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 59
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 71
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUninitializedGet
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FindUninitializedGet(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUninitializedGet
   variable bugReporter in line 33
   variable UNKNOWN_PRIORITY in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindUnrelatedTypesInGenericContainer.java
module edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   inherits from edu::umd::cs::findbugs::Detector
   function addToCollectionsMap(String,String,String,int...) in line 104
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable collectionsMap defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getCollectionsMapKey(String...) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   function addToCollectionsMap(String   [],String,String,int...) in line 111
      7 lines of code
      4 parameters
      2 conditional paths
      uses function addToCollectionsMap(String,String,String,int...) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   function analyzeMethod(ClassContext,Method) in line 237
      118 lines of code
      2 parameters
      21 conditional paths
      uses function isSynthetic(Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function prescreen(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getInstructionTriplet(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getRelevantTriplet(String   []) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable collectionsMap defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getCollectionsMapKey(String...) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getNumArguments(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getParameterAt(int) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getArgument(InvokeInstruction,ConstantPoolGen,int,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function compareTypes(Type,Type) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function compareTypes(Type,Type) in line 412
      96 lines of code
      2 parameters
      14 conditional paths
      uses variable SEEMS_OK defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable PLAIN_OBJECT_TYPE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD_EXTENDS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD_SUPER defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable TYPE_VARIABLE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable ARRAY_TYPE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable ARRAY_AND_NON_ARRAY defined in edu::umd::cs::findbugs::ba::IncompatibleTypes
      uses variable PARAMETERS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses function getObjectType() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable WILDCARD defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function compareTypesOld(Type,Type) in line 510
      42 lines of code
      2 parameters
      10 conditional paths
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable WILDCARD_EXTENDS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses function getExtension() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function getCollectionsMapKey(String...) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getInstructionTriplet(InvokeInstruction,ConstantPoolGen) in line 360
      16 lines of code
      2 parameters
      1 conditional paths
   function getRelevantTriplet(String   []) in line 383
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable collectionsMap defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function getCollectionsMapKey(String...) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function addToCollectionsMap(String,String,String,int...) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   function isSynthetic(Method) in line 228
      8 lines of code
      1 parameters
      3 conditional paths
   function prescreen(ClassContext,Method) in line 213
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 557
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 186
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function FindUnrelatedTypesInGenericContainer(BugReporter) in line 154
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
      uses function addToCollectionsMap(String,String,String,int...) defined in edu::umd::cs::findbugs::detect::FindUnrelatedTypesInGenericContainer
   variable bugReporter in line 76
   variable collectionsMap in line 89
   variable DEBUG in line 78
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindUnreleasedLock.java
module edu::umd::cs::findbugs::detect::Lock
   inherits from edu::umd::cs::findbugs::ResourceCreationPoint
   function getLockValue() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Lock(Location,String,ValueNumber) in line 36
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   variable lockValue in line 34
module edu::umd::cs::findbugs::detect::FindUnreleasedLock
   inherits from ResourceTrackingDetector< Lock, FindUnreleasedLock.LockResourceTracker >
   function getResourceTracker(ClassContext,Method) in line 340
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Lock >>,Lock) in line 350
      protection public
      28 lines of code
      5 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getExit() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getStatus() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable OPEN_ON_EXCEPTION_PATH defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function main(String[]) in line 388
      protection public
      29 lines of code
      1 parameters
      2 conditional paths
      uses function getLookupFailureCallback() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getValueNumberDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getIsNullValueDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function execute(String,String,int) defined in edu::umd::cs::findbugs::ba::ResourceValueAnalysisTestDriver
   function prescreen(ClassContext,Method) in line 330
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function preTiger(JavaClass) in line 298
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function report() in line 380
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
   function visitClassContext(ClassContext) in line 307
      protection public
      20 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function FindUnreleasedLock(BugReporter) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable DEBUG in line 47
   variable JDK15_MAJOR in line 50
   variable JDK15_MINOR in line 51
   variable numAcquires in line 48
module edu::umd::cs::findbugs::detect::FindUnreleasedLock::LockFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function instanceEscapes(InvokeInstruction,int) in line 138
      3 lines of code
      2 parameters
      23 conditional paths
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function getExceptionThrowerLocation(Edge) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNotNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function transferInstruction(InstructionHandle,BasicBlock) in line 77
      protection public
      59 lines of code
      2 parameters
      17 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getFactAfterLocation(Location) defined in edu::umd::cs::findbugs::ba::AbstractDataflow
      uses function toString() defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses variable RETURN_VALUE defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function fuzzyMatch(ValueNumber,ValueNumber) defined in edu::umd::cs::findbugs::ba::vna::ValueNumberFrame
      uses function setValue(int,ValueType) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function setStatus(int) defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
   function LockFrameModelingVisitor(ConstantPoolGen,LockResourceTracker,Lock,ValueNumberDataflow,IsNullValueDataflow) in line 63
      protection public
      12 lines of code
      5 parameters
      1 conditional paths
   variable lock in line 59
   variable resourceTracker in line 58
   variable vnaDataflow in line 60
module edu::umd::cs::findbugs::detect::FindUnreleasedLock::LockResourceTracker
   inherits from edu::umd::cs::findbugs::ba::ResourceTracker
   function createVisitor(Lock,ConstantPoolGen) in line 218
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function ignoreExceptionEdge(Edge,Lock,ConstantPoolGen) in line 228
      protection public
      44 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Lock) in line 222
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function isParamInstance(Lock,int) in line 273
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Lock,ResourceValueFrame) in line 189
      protection public
      28 lines of code
      5 parameters
      1 conditional paths
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 160
      protection public
      28 lines of code
      3 parameters
      1 conditional paths
   function toInvokeInstruction(Instruction) in line 279
      6 lines of code
      1 parameters
      1 conditional paths
   function LockResourceTracker(RepositoryLookupFailureCallback,CFG,ValueNumberDataflow,IsNullValueDataflow) in line 149
      protection public
      10 lines of code
      4 parameters
      1 conditional paths
   variable cfg in line 145
   variable isNullDataflow in line 147
   variable lookupFailureCallback in line 144
   variable vnaDataflow in line 146
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindUnsatisfiedObligation.java
module edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 107
      54 lines of code
      2 parameters
      9 conditional paths
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getDepthFirstSearch(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable factory defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses variable database defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function execute() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG_PRINTCFG defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function printCFG(Dataflow< Fact, AnalysisType >,PrintStream) defined in edu::umd::cs::findbugs::ba::DataflowCFGPrinter
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function stateIterator() defined in edu::umd::cs::findbugs::ba::obl::StateSet
      uses function getMaxObligationTypes() defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function getObligationSet() defined in edu::umd::cs::findbugs::ba::obl::State
      uses function getCount(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationSet
      uses function getObligationById(int) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function buildDatabase() in line 174
      20 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function addObligation(String) defined in edu::umd::cs::findbugs::ba::obl::ObligationFactory
      uses function addEntry(String,String,String,boolean,int,Obligation) defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase
      uses variable ADD defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase
      uses variable DEL defined in edu::umd::cs::findbugs::ba::obl::PolicyDatabase
   function report() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 80
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable ENABLE defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG_METHOD defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   function FindUnsatisfiedObligation(BugReporter) in line 71
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
      uses function buildDatabase() defined in edu::umd::cs::findbugs::detect::FindUnsatisfiedObligation
   variable bugReporter in line 67
   variable database in line 69
   variable DEBUG in line 63
   variable DEBUG_METHOD in line 65
   variable DEBUG_PRINTCFG in line 64
   variable ENABLE in line 62
   variable factory in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindUnsyncGet.java
module edu::umd::cs::findbugs::detect::FindUnsyncGet
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 41
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses variable getMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses variable setMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 62
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function report() defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 68
      protection public
      31 lines of code
      1 parameters
      4 conditional paths
      uses variable getMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
      uses variable setMethods defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
   function FindUnsyncGet(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUnsyncGet
   variable bugReporter in line 29
   variable getMethods in line 33
   variable setMethods in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/FindUselessControlFlow.java
module edu::umd::cs::findbugs::detect::FindUselessControlFlow
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 73
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
      uses variable ifInstructionSet defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchFallThrough() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FindUselessControlFlow(BugReporter) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::FindUselessControlFlow
   variable bugReporter in line 65
   variable ifInstructionSet in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/HugeSharedStringConstants.java
module edu::umd::cs::findbugs::detect::HugeSharedStringConstants
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 94
      protection public
      25 lines of code
      0 parameters
      7 conditional paths
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_OCCURRENCES defined in edu::umd::cs::findbugs::IntAnnotation
   function visit(ConstantString) in line 63
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(ConstantValue) in line 77
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SIZE_OF_HUGE_CONSTANT defined in edu::umd::cs::findbugs::detect::HugeSharedStringConstants
   function HugeSharedStringConstants(BugReporter) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable SIZE_OF_HUGE_CONSTANT in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/IDivResultCastToDouble.java
module edu::umd::cs::findbugs::detect::IDivResultCastToDouble
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 26
      protection public
      41 lines of code
      1 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses variable prevOpCode defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Method) in line 20
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
   function IDivResultCastToDouble(BugReporter) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IDivResultCastToDouble
   variable bugReporter in line 11
   variable DEBUG in line 9
   variable prevOpCode in line 12
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/IncompatMask.java
module edu::umd::cs::findbugs::detect::IncompatMask
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function checkState(int) in line 52
      6 lines of code
      1 parameters
      2 conditional paths
   function noteVal(long) in line 59
      9 lines of code
      1 parameters
      3 conditional paths
   function sawInt(int) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
   function sawLong(long) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
   function sawOpcode(int) in line 80
      protection public
      106 lines of code
      1 parameters
      29 conditional paths
      uses function noteVal(long) defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses function checkState(int) defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IncompatMask
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 47
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function IncompatMask(BugReporter) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IncompatMask
   variable bugReporter in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InconsistentSyncWarningProperty.java
module edu::umd::cs::findbugs::detect::InconsistentSyncWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function InconsistentSyncWarningProperty(String,PriorityAdjustment) in line 30
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable ANNOTATED_AS_GUARDED_BY_THIS in line 64
      protection public
   variable ANNOTATED_AS_THREAD_SAFE in line 66
      protection public
   variable BELOW_MIN_SYNC_PERCENT in line 59
      protection public
   variable MANY_BIASED_UNLOCKED in line 44
      protection public
   variable NEVER_READ in line 50
      protection public
   variable NEVER_WRITTEN in line 47
      protection public
   variable NO_LOCAL_LOCKS in line 56
      protection public
   variable ONLY_UNSYNC_IN_GETTERS in line 62
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InefficientMemberAccess.java
module edu::umd::cs::findbugs::detect::InefficientMemberAccess
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 49
      protection public
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable ACCESS_PREFIX defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 41
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable clsName defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
   function InefficientMemberAccess(BugReporter) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientMemberAccess
   variable ACCESS_PREFIX in line 30
      protection public
   variable bugReporter in line 31
   variable clsName in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InefficientToArray.java
module edu::umd::cs::findbugs::detect::InefficientToArray
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 80
      protection public
      40 lines of code
      1 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable state defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable collectionClass defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 72
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable state defined in edu::umd::cs::findbugs::detect::InefficientToArray
   function visitClassContext(ClassContext) in line 66
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable collectionClass defined in edu::umd::cs::findbugs::detect::InefficientToArray
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function InefficientToArray(BugReporter) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InefficientToArray
   variable bugReporter in line 46
   variable collectionClass in line 44
   variable DEBUG in line 38
   variable state in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InfiniteLoop.java
module edu::umd::cs::findbugs::detect::InfiniteLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function addBackwardsReach() in line 329
      13 lines of code
      0 parameters
      6 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function clearRegModified() in line 56
      4 lines of code
      0 parameters
      2 conditional paths
   function constantSince(Item,int) in line 358
      8 lines of code
      2 parameters
      3 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantSince(Item) in line 366
      6 lines of code
      1 parameters
      5 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function lowerPriorityALot() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function lowerPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function getBackwardsReach(int) in line 343
      7 lines of code
      1 parameters
      3 conditional paths
   function isConstant(Item,BackwardsBranch) in line 193
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isRegModified(int,int,int) in line 60
      6 lines of code
      3 parameters
      10 conditional paths
      uses function getNumLastUpdates() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getLastUpdate(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
   function regModifiedAt(int,int) in line 52
      4 lines of code
      2 parameters
      1 conditional paths
   function sawBranchTo(int) in line 201
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 205
      protection public
      120 lines of code
      1 parameters
      47 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function addBackwardsReach() defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function constantSince(Item,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isRegModified(int,int,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(JavaClass) in line 136
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 140
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 144
      protection public
      44 lines of code
      1 parameters
      12 conditional paths
      uses function clearRegModified() defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBackwardsReach(int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function isConstant(Item,BackwardsBranch) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function isRegModified(int,int,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function constantSince(Item,int) defined in edu::umd::cs::findbugs::detect::InfiniteLoop
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function InfiniteLoop(BugReporter) in line 131
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable active in line 43
module edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
   function toString() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::detect::InfiniteLoop::BackwardsBranch
   inherits from edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
module edu::umd::cs::findbugs::detect::InfiniteLoop::ForwardConditionalBranch
   inherits from edu::umd::cs::findbugs::detect::InfiniteLoop::Jump
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InfiniteRecursiveLoop.java
module edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawBranchTo(int) in line 84
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   function sawOpcode(int) in line 98
      protection public
      130 lines of code
      1 parameters
      40 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenReturn defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenStateChange defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable seenThrow defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(JavaClass) in line 60
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 65
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenStateChange defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenReturn defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable seenThrow defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses variable largestBranchTarget defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   function InfiniteRecursiveLoop(BugReporter) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop
   variable bugReporter in line 39
   variable DEBUG in line 51
   variable largestBranchTarget in line 49
   variable seenReturn in line 43
   variable seenStateChange in line 47
   variable seenThrow in line 45
   variable seenTransferOfControl in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InfiniteRecursiveLoop2.java
module edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
   inherits from edu::umd::cs::findbugs::Detector
   function allParamsPassedAsArgs(ClassContext,ValueNumberDataflow,ValueNumberFrame,int,BasicBlock,InvokeInstruction) in line 247
      32 lines of code
      6 parameters
      5 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getOperand(StackConsumer,ConstantPoolGen,int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
   function analyzeMethod(ClassContext,Method) in line 105
      29 lines of code
      2 parameters
      7 conditional paths
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function isExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function getExceptionThrower() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function isRecursiveCall(InvokeInstruction,ClassContext,Method) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function checkRecursiveCall(ClassContext,Method,CFG,BasicBlock,InstructionHandle,InvokeInstruction) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function isCallToAdd(InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function checkCallToAdd(ClassContext,Method,BasicBlock,InstructionHandle) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
   function checkCallToAdd(ClassContext,Method,BasicBlock,InstructionHandle) in line 313
      23 lines of code
      4 parameters
      4 conditional paths
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackDepth() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getStackValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function getNumber() defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function checkedStateHasBeenModified(ClassContext,Method,BasicBlock) in line 280
      26 lines of code
      3 parameters
      5 conditional paths
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses variable isTop defined in edu::umd::cs::findbugs::ba::heap::FieldSet
      uses function isIntersectionNonEmpty(FieldSet) defined in edu::umd::cs::findbugs::ba::heap::FieldSet
   function checkRecursiveCall(ClassContext,Method,CFG,BasicBlock,InstructionHandle,InvokeInstruction) in line 148
      52 lines of code
      6 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getAllDominatorsOf(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function report() defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function targetMethodKnownExactly(ClassContext,Method,BasicBlock,InvokeInstruction) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function allParamsPassedAsArgs(ClassContext,ValueNumberDataflow,ValueNumberFrame,int,BasicBlock,InvokeInstruction) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function checkedStateHasBeenModified(ClassContext,Method,BasicBlock) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function isCallToAdd(InvokeInstruction,ConstantPoolGen) in line 307
      5 lines of code
      2 parameters
      1 conditional paths
   function isRecursiveCall(InvokeInstruction,ClassContext,Method) in line 135
      12 lines of code
      3 parameters
      3 conditional paths
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function report() in line 340
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function targetMethodKnownExactly(ClassContext,Method,BasicBlock,InvokeInstruction) in line 201
      45 lines of code
      4 parameters
      7 conditional paths
      uses function getAnalysis() defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getStartFact(BasicBlock) defined in edu::umd::cs::findbugs::ba::Dataflow
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::vna::ValueNumber
      uses function getInstanceSlot(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isExact(int) defined in edu::umd::cs::findbugs::ba::type::TypeFrame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
   function visitClassContext(ClassContext) in line 80
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable IRL_METHOD defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function InfiniteRecursiveLoop2(BugReporter) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InfiniteRecursiveLoop2
   variable bugReporter in line 71
   variable DEBUG in line 68
   variable IRL_METHOD in line 69
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InheritanceUnsafeGetResource.java
module edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 66
      protection public
      62 lines of code
      1 parameters
      14 conditional paths
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getTransitiveSubtypes(JavaClass) defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable methodIsStatic defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsFinal defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsVisibleToOtherPackages defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 52
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable classIsFinal defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
      uses variable classIsVisibleToOtherPackages defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   function visit(Method) in line 59
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable methodIsStatic defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   function InheritanceUnsafeGetResource(BugReporter) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InheritanceUnsafeGetResource
   variable bugReporter in line 33
   variable classIsFinal in line 34
   variable classIsVisibleToOtherPackages in line 36
   variable methodIsStatic in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InitializationChain.java
module edu::umd::cs::findbugs::detect::InitializationChain
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function compute() in line 120
      protection public
      18 lines of code
      0 parameters
      5 conditional paths
   function report() in line 140
      protection public
      25 lines of code
      0 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function compute() defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function sawOpcode(int) in line 86
      protection public
      33 lines of code
      1 parameters
      9 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable instanceCreated defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable instanceCreatedWarningGiven defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable instanceCreatedPC defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 55
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses variable instanceCreated defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses variable instanceCreatedWarningGiven defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 75
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function InitializationChain(BugReporter) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InitializationChain
   variable bugReporter in line 43
   variable DEBUG in line 48
   variable instanceCreated in line 44
   variable instanceCreatedPC in line 45
   variable instanceCreatedWarningGiven in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InstanceFieldLoadStreamFactory.java
module edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 66
      protection public
      27 lines of code
      4 parameters
      6 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugPatternType defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function setBugPatternType(String) in line 61
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternType defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   function InstanceFieldLoadStreamFactory(String) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::InstanceFieldLoadStreamFactory
   variable bugPatternType in line 38
   variable streamBaseClass in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InstantiateStaticClass.java
module edu::umd::cs::findbugs::detect::InstantiateStaticClass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function isStaticOnlyClass(String) in line 73
      44 lines of code
      1 parameters
      12 conditional paths
   function sawOpcode(int) in line 40
      protection public
      32 lines of code
      1 parameters
      8 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isStaticOnlyClass(String) defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function InstantiateStaticClass(BugReporter) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InstantiateStaticClass
   variable bugReporter in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/InvalidJUnitTest.java
module edu::umd::cs::findbugs::detect::InvalidJUnitTest
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function enabled() in line 127
      3 lines of code
      0 parameters
      1 conditional paths
   function hasSuite(Method[]) in line 104
      12 lines of code
      1 parameters
      3 conditional paths
   function hasTestMethods(JavaClass) in line 83
      20 lines of code
      1 parameters
      7 conditional paths
      uses function hasSuite(Method[]) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   function isJunit3TestCase(JavaClass) in line 72
      11 lines of code
      1 parameters
      4 conditional paths
   function sawOpcode(int) in line 175
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable SEEN_ALOAD_0 defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawSuperCall defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   function visit(Method) in line 132
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 153
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawSuperCall defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 50
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses function enabled() defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function isJunit3TestCase(JavaClass) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function hasTestMethods(JavaClass) defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function InvalidJUnitTest(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::InvalidJUnitTest
   variable bugReporter in line 37
   variable sawSuperCall in line 150
   variable SEEN_ALOAD_0 in line 35
   variable SEEN_NOTHING in line 33
   variable state in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/IOStreamFactory.java
module edu::umd::cs::findbugs::detect::IOStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 50
      protection public
      29 lines of code
      4 parameters
      7 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses variable uninterestingSubclassTypeList defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function IOStreamFactory(String,String[],String) in line 41
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::IOStreamFactory
   variable baseClassType in line 37
   variable bugType in line 39
   variable uninterestingSubclassTypeList in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/IteratorIdioms.java
module edu::umd::cs::findbugs::detect::IteratorIdioms
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function findJavaUtilIterator() in line 55
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable iteratorClass defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function sawOpcode(int) in line 84
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 70
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitClassContext(ClassContext) in line 40
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function findJavaUtilIterator() defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable iteratorClass defined in edu::umd::cs::findbugs::detect::IteratorIdioms
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function IteratorIdioms(BugReporter) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::IteratorIdioms
   variable bugReporter in line 31
   variable iteratorClass in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/LazyInit.java
module edu::umd::cs::findbugs::detect::LazyInit
   inherits from edu::umd::cs::findbugs::ByteCodePatternDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function clone() in line 61
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function getBugReporter() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
   function getPattern() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::detect::LazyInit
   function prescreen(Method,ClassContext) in line 81
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
      uses function getBytecodeSet(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
   function reportMatch(ClassContext,Method,ByteCodePatternMatch) in line 98
      protection public
      124 lines of code
      3 parameters
      19 conditional paths
      uses function lookup(String) defined in edu::umd::cs::findbugs::ba::bcp::BindingSet
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::bcp::Binding
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldName() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getFieldSig() defined in edu::umd::cs::findbugs::ba::bcp::FieldVariable
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::LazyInit
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFirstLabeledMatch(String) defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getAllDominatedBy(BasicBlock) defined in edu::umd::cs::findbugs::ba::AbstractDominatorsAnalysis
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::bcp::PatternElementMatch
      uses function getBlocks(BitSet) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockDataflow
      uses function copyFrom(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function intersectWith(LockSet) defined in edu::umd::cs::findbugs::ba::LockSet
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function LazyInit(BugReporter) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LazyInit
   variable bugReporter in line 40
   variable DEBUG in line 42
   variable pattern in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/LoadOfKnownNullValue.java
module edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
   inherits from edu::umd::cs::findbugs::Detector
   function analyzeMethod(ClassContext,Method) in line 60
      122 lines of code
      2 parameters
      20 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::npe::IsNullValueDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function isChecked() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function report() in line 183
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 38
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function LoadOfKnownNullValue(BugReporter) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LoadOfKnownNullValue
   variable bugReporter in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/LockedFields.java
module edu::umd::cs::findbugs::detect::LockedFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 228
      protection public
      84 lines of code
      0 parameters
      17 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::LockedFields
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LockedFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addInt(int) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
   function sawOpcode(int) in line 155
      protection public
      71 lines of code
      1 parameters
      16 conditional paths
      uses function updateStats(Set< FieldAnnotation >,int) defined in edu::umd::cs::findbugs::detect::LockedFields
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function updateStats(Set< FieldAnnotation >,int) in line 66
      28 lines of code
      2 parameters
      7 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::LockedFields
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 96
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
   function visit(Method) in line 112
      protection public
      24 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Code) in line 139
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function updateStats(Set< FieldAnnotation >,int) defined in edu::umd::cs::findbugs::detect::LockedFields
   function LockedFields(BugReporter) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::LockedFields
   variable bugReporter in line 49
   variable DEBUG in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/MethodReturnCheck.java
module edu::umd::cs::findbugs::detect::MethodReturnCheck
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function isPop(int) in line 166
      3 lines of code
      1 parameters
      1 conditional paths
   function sawOpcode(int) in line 92
      protection public
      73 lines of code
      1 parameters
      14 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable state defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable SAW_INVOKE defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function isPop(int) defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getResolvedAnnotation(Object,boolean) defined in edu::umd::cs::findbugs::ba::CheckReturnAnnotationDatabase
      uses variable callSeen defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable CHECK_RETURN_VALUE_IGNORE defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSizeOfSurroundingTryBlock(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPriority() defined in edu::umd::cs::findbugs::ba::CheckReturnValueAnnotation
      uses function annotationIsDirect(Object) defined in edu::umd::cs::findbugs::ba::AnnotationDatabase
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses variable className defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable callPC defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable SCAN defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable INVOKE_OPCODE_SET defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Method) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
   function visitClassContext(ClassContext) in line 70
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable checkReturnAnnotationDatabase defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function visitCode(Code) in line 82
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable method defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function MethodReturnCheck(BugReporter) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MethodReturnCheck
   variable bugReporter in line 51
   variable callPC in line 61
   variable callSeen in line 57
   variable checkReturnAnnotationDatabase in line 53
   variable className in line 63
   variable DEBUG in line 35
   variable INVOKE_OPCODE_SET in line 41
   variable method in line 55
   variable SAW_INVOKE in line 39
   variable SCAN in line 37
   variable state in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/MethodReturnValueStreamFactory.java
module edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 92
      protection public
      37 lines of code
      4 parameters
      6 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable invokeOpcodeSet defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable baseClassType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function setIgnoreImplicitExceptions(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function setInteresting(String) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable bugType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function MethodReturnValueStreamFactory(String,String,String) in line 65
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   function MethodReturnValueStreamFactory(String,String,String,String) in line 83
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable methodSig defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
      uses variable bugType defined in edu::umd::cs::findbugs::detect::MethodReturnValueStreamFactory
   variable baseClassType in line 50
   variable bugType in line 54
   variable invokeOpcodeSet in line 41
   variable isUninteresting in line 53
   variable methodName in line 51
   variable methodSig in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/Methods.java
module edu::umd::cs::findbugs::detect::Methods
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(Method) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(Attribute) in line 56
      protection public
      6 lines of code
      1 parameters
      4 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable xFactory defined in edu::umd::cs::findbugs::detect::Methods
      uses function deprecate(ClassMember) defined in edu::umd::cs::findbugs::ba::XFactory
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function Methods(BugReporter) in line 44
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable xFactory in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/MultithreadedInstanceAccess.java
module edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function getMtClasses() in line 45
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable mtClasses defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable SERVLET_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function sawField() in line 114
      protection public
      40 lines of code
      0 parameters
      8 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable mtClassName defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function sawOpcode(int) in line 156
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function visitClassContext(ClassContext) in line 65
      protection public
      34 lines of code
      1 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable STRUTS_ACTION_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable mtClassName defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable SERVLET_NAME defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses function getMtClasses() defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function visitCode(Code) in line 108
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitMethod(Method) in line 101
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable monitorCount defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
      uses variable writingField defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   function MultithreadedInstanceAccess(BugReporter) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MultithreadedInstanceAccess
   variable alreadyReported in line 39
   variable bugReporter in line 34
   variable monitorCount in line 37
   variable mtClasses in line 35
   variable mtClassName in line 36
   variable SERVLET_NAME in line 33
   variable STRUTS_ACTION_NAME in line 32
   variable writingField in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/MutableLock.java
module edu::umd::cs::findbugs::detect::MutableLock
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 60
      protection public
      30 lines of code
      1 parameters
      7 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function asUnsignedByte(byte) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableLock
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 48
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function visit(Method) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function MutableLock(BugReporter) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableLock
   variable bugReporter in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/MutableStaticFields.java
module edu::umd::cs::findbugs::detect::MutableStaticFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 163
      protection public
      69 lines of code
      0 parameters
      16 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableStaticFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 88
      protection public
      50 lines of code
      1 parameters
      12 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(JavaClass) in line 68
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 81
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 140
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function MutableStaticFields(BugReporter) in line 63
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::MutableStaticFields
   variable bugReporter in line 61
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/Naming.java
module edu::umd::cs::findbugs::detect::Naming
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function checkNonSuper(XMethod,HashSet< XMethod >) in line 134
      15 lines of code
      2 parameters
      5 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function confusingMethodNames(XMethod,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function checkSuper(XMethod,HashSet< XMethod >) in line 89
      44 lines of code
      2 parameters
      15 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function confusingMethodNames(XMethod,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function definedIn(JavaClass,XMethod) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getDeprecated() defined in edu::umd::cs::findbugs::ba::XFactory
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function codeDoesSomething(Code) in line 351
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function confusingMethodNames(XMethod,XMethod) in line 57
      protection public
      12 lines of code
      2 parameters
      6 conditional paths
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
   function definedIn(JavaClass,XMethod) in line 51
      protection public
      5 lines of code
      2 parameters
      3 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
   function findVoidConstructor(JavaClass) in line 259
      6 lines of code
      1 parameters
      3 conditional paths
   function isInnerClass(JavaClass) in line 239
      5 lines of code
      1 parameters
      3 conditional paths
   function markedAsNotUsable(Method) in line 244
      15 lines of code
      1 parameters
      8 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function removePackageNamesFromSignature(String) in line 356
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sigType defined in edu::umd::cs::findbugs::detect::Naming
   function report() in line 151
      protection public
      18 lines of code
      0 parameters
      7 conditional paths
      uses function checkSuper(XMethod,HashSet< XMethod >) defined in edu::umd::cs::findbugs::detect::Naming
      uses function checkNonSuper(XMethod,HashSet< XMethod >) defined in edu::umd::cs::findbugs::detect::Naming
   function visit(JavaClass) in line 187
      protection public
      29 lines of code
      1 parameters
      4 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Field) in line 218
      protection public
      20 lines of code
      1 parameters
      3 conditional paths
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addVisitedField(PreorderVisitor) defined in edu::umd::cs::findbugs::BugInstance
   function visit(Method) in line 266
      protection public
      84 lines of code
      1 parameters
      17 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findVoidConstructor(JavaClass) defined in edu::umd::cs::findbugs::detect::Naming
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function markedAsNotUsable(Method) defined in edu::umd::cs::findbugs::detect::Naming
      uses function codeDoesSomething(Code) defined in edu::umd::cs::findbugs::detect::Naming
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function removePackageNamesFromSignature(String) defined in edu::umd::cs::findbugs::detect::Naming
   function visitClassContext(ClassContext) in line 85
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function visitJavaClass(JavaClass) in line 171
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
   function Naming(BugReporter) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::Naming
   variable bugReporter in line 79
   variable sigType in line 238
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NonNullReturnProperty.java
module edu::umd::cs::findbugs::detect::NonNullReturnProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NonNullReturnProperty(String,PriorityAdjustment) in line 29
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable EXACT_METHOD in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NoteAnnotationRetention.java
module edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classfileRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitAfter(JavaClass) in line 62
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable classfileRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitAnnotation(String,Map< String, Object >,boolean) in line 44
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
      uses variable classfileRetention defined in edu::umd::cs::findbugs::detect::NoteAnnotationRetention
   function visitClassContext(ClassContext) in line 71
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteAnnotationRetention(BugReporter) in line 40
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable classfileRetention in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NoteCheckReturnValue.java
module edu::umd::cs::findbugs::detect::NoteCheckReturnValue
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function loadTraining() in line 87
      25 lines of code
      0 parameters
      6 conditional paths
      uses variable LOAD_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable STATIC defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable ANY defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function report() in line 81
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable SAVE_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function saveTraining() defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
   function saveTraining() in line 113
      26 lines of code
      0 parameters
      5 conditional paths
      uses variable SAVE_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable checkReturnValueDatabase defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitAnnotation(String,Map< String, Object >,boolean) in line 66
      protection public
      14 lines of code
      3 parameters
      4 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable STATIC defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable ANY defined in edu::umd::cs::findbugs::ba::bcp::Invoke
      uses variable SAVE_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable checkReturnValueDatabase defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
   function visitClassContext(ClassContext) in line 56
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable LOAD_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable checkLoad defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function loadTraining() defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteCheckReturnValue(BugReporter) in line 48
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable SAVE_TRAINING defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
      uses variable checkReturnValueDatabase defined in edu::umd::cs::findbugs::detect::NoteCheckReturnValue
   variable bugReporter in line 44
   variable checkLoad in line 45
   variable checkReturnValueDatabase in line 46
   variable LOAD_TRAINING in line 41
   variable SAVE_TRAINING in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NoteCheckReturnValueAnnotations.java
module edu::umd::cs::findbugs::detect::NoteCheckReturnValueAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildCheckReturnAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 45
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 39
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteCheckReturnValueAnnotations(BugReporter) in line 36
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NoteJCIPAnnotation.java
module edu::umd::cs::findbugs::detect::NoteJCIPAnnotation
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitAnnotation(String,Map< String, Object >,boolean) in line 48
      protection public
      23 lines of code
      3 parameters
      4 conditional paths
      uses variable NET_JCIP_ANNOTATIONS defined in edu::umd::cs::findbugs::detect::NoteJCIPAnnotation
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 72
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteJCIPAnnotation(BugReporter) in line 43
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable NET_JCIP_ANNOTATIONS in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NoteNonNullAnnotations.java
module edu::umd::cs::findbugs::detect::NoteNonNullAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 48
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 42
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteNonNullAnnotations(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NoteNonnullReturnValues.java
module edu::umd::cs::findbugs::detect::NoteNonnullReturnValues
   inherits from edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   function report() in line 43
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable returnsNonNull defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
      uses variable returnsReference defined in edu::umd::cs::findbugs::detect::BuildNonnullReturnDatabase
   function NoteNonnullReturnValues(BugReporter) in line 37
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NoteSuppressedWarnings.java
module edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
   function report() in line 116
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function suppressWarning(String) in line 100
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable recursiveDetector defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function addPackageSuppressor(PackageWarningSuppressor) defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function getPackageName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addSuppressor(ClassWarningSuppressor) defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 62
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
      uses variable recursiveDetector defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPackageName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable packages defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function visitJavaClass(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAnnotation(String,Map< String, Object >,boolean) in line 83
      protection public
      16 lines of code
      3 parameters
      5 conditional paths
      uses function suppressWarning(String) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   function visitClassContext(ClassContext) in line 56
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NoteSuppressedWarnings(BugReporter) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function NoteSuppressedWarnings(BugReporter,boolean) in line 43
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable suppressionMatcher defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function setDelegate(BugReporter) defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable recursiveDetector defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
      uses function NoteSuppressedWarnings(BugReporter) defined in edu::umd::cs::findbugs::detect::NoteSuppressedWarnings
   variable packages in line 33
   variable recursiveDetector in line 37
   variable suppressionMatcher in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NoteUnconditionalParamDerefs.java
module edu::umd::cs::findbugs::detect::NoteUnconditionalParamDerefs
   inherits from edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   function report() in line 42
      protection public
      3 lines of code
      0 parameters
      2 conditional paths
      uses variable nonnullReferenceParameters defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
      uses variable referenceParameters defined in edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   function NoteUnconditionalParamDerefs(BugReporter) in line 36
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NullArgumentWarningProperty.java
module edu::umd::cs::findbugs::detect::NullArgumentWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NullArgumentWarningProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable ACTUAL_PARAMETER_GUARANTEED_NULL in line 42
      protection public
   variable ALL_DANGEROUS_TARGETS in line 40
      protection public
   variable ARG_DEFINITELY_NULL in line 36
      protection public
   variable MONOMORPHIC_CALL_SITE in line 38
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NullDerefProperty.java
module edu::umd::cs::findbugs::detect::NullDerefProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function NullDerefProperty(String,PriorityAdjustment) in line 32
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable CHECKED_VALUE in line 37
      protection public
   variable CREATED_DEAD_CODE in line 43
      protection public
   variable WOULD_HAVE_BEEN_A_KABOOM in line 40
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/NumberConstructor.java
module edu::umd::cs::findbugs::detect::NumberConstructor
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 100
      protection public
      48 lines of code
      1 parameters
      7 conditional paths
      uses variable constantArgument defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable boxClasses defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NumberConstructor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
   function visitClassContext(ClassContext) in line 92
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function NumberConstructor(BugReporter) in line 82
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::NumberConstructor
   variable boxClasses in line 64
   variable bugReporter in line 75
   variable constantArgument in line 76
module edu::umd::cs::findbugs::detect::NumberConstructor::Info
   function Info(boolean,String,String) in line 57
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable argName in line 54
      protection public
   variable constrArgs in line 55
      protection public
   variable isRealNumber in line 53
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/PreferZeroLengthArrays.java
module edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 58
      protection public
      18 lines of code
      1 parameters
      5 conditional paths
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 39
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function PreferZeroLengthArrays(BugReporter) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PreferZeroLengthArrays
   variable bugReporter in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/PublicSemaphores.java
module edu::umd::cs::findbugs::detect::PublicSemaphores
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 69
      protection public
      26 lines of code
      1 parameters
      7 conditional paths
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable state defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_ALOAD_0 defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 59
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable state defined in edu::umd::cs::findbugs::detect::PublicSemaphores
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   function visitClassContext(ClassContext) in line 49
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable alreadyReported defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   function PublicSemaphores(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::PublicSemaphores
   variable alreadyReported in line 40
   variable bugReporter in line 38
   variable SEEN_ALOAD_0 in line 36
   variable SEEN_NOTHING in line 35
   variable state in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/QuestionableBooleanAssignment.java
module edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 53
      protection public
      51 lines of code
      1 parameters
      14 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_GOTO defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_ICONST_0_OR_1 defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_DUP defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_ISTORE defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable bug defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable SEEN_IF defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitCode(Code) in line 46
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
      uses variable bug defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   function QuestionableBooleanAssignment(BugReporter) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::QuestionableBooleanAssignment
   variable bug in line 38
   variable bugReporter in line 35
   variable SEEN_DUP in line 30
      protection public
   variable SEEN_GOTO in line 32
      protection public
   variable SEEN_ICONST_0_OR_1 in line 29
      protection public
   variable SEEN_IF in line 33
      protection public
   variable SEEN_ISTORE in line 31
      protection public
   variable SEEN_NOTHING in line 28
      protection public
   variable state in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/ReadReturnShouldBeChecked.java
module edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isBufferedInputStream() in line 80
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function isImageIOInputStream() in line 89
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function isInputStream() in line 65
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
   function sawOpcode(int) in line 100
      protection public
      77 lines of code
      1 parameters
      9 conditional paths
      uses variable lastCallClass defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses variable locationOfCall defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isImageIOInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function isBufferedInputStream() defined in edu::umd::cs::findbugs::detect::ReadReturnShouldBeChecked
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 57
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function ReadReturnShouldBeChecked(BugReporter) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable lastCallClass in line 49
   variable locationOfCall in line 47
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/RedundantInterfaces.java
module edu::umd::cs::findbugs::detect::RedundantInterfaces
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function report() in line 77
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 40
      protection public
      36 lines of code
      1 parameters
      9 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function describe(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RedundantInterfaces
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function RedundantInterfaces(BugReporter) in line 34
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RedundantInterfaces
   variable bugReporter in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/RefComparisonWarningProperty.java
module edu::umd::cs::findbugs::detect::RefComparisonWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function RefComparisonWarningProperty(String,PriorityAdjustment) in line 30
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable COMPARE_STATIC_STRINGS in line 41
      protection public
   variable DYNAMIC_AND_UNKNOWN in line 44
      protection public
   variable PRIVATE_METHOD in line 38
      protection public
   variable SAW_CALL_TO_EQUALS in line 35
      protection public
   variable SAW_INTERN in line 55
      protection public
   variable STATIC_AND_UNKNOWN in line 52
      protection public
   variable STRING_PARAMETER in line 48
      protection public
   variable STRING_PARAMETER_IN_PUBLIC_METHOD in line 46
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/ResolveAllReferences.java
module edu::umd::cs::findbugs::detect::ResolveAllReferences
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::Detector
   function addAllDefinitions(JavaClass) in line 45
      protection public
      17 lines of code
      1 parameters
      5 conditional paths
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   function compute() in line 23
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function addAllDefinitions(JavaClass) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   function find(JavaClass,String,String) in line 87
      10 lines of code
      3 parameters
      6 conditional paths
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   function getClassName(JavaClass,int) in line 63
      5 lines of code
      2 parameters
      1 conditional paths
   function getMemberName(JavaClass,String,int,int) in line 69
      10 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMemberName(String,String,String) in line 79
      8 lines of code
      3 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function report() in line 42
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visit(JavaClass) in line 98
      protection public
      49 lines of code
      1 parameters
      10 conditional paths
      uses function compute() defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function find(JavaClass,String,String) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function getMemberName(JavaClass,String,int,int) defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitClassContext(ClassContext) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function ResolveAllReferences(BugReporter) in line 16
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::ResolveAllReferences
   variable bugReporter in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/RuntimeExceptionCapture.java
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 187
      protection public
      50 lines of code
      1 parameters
      15 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seen defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable throwList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable method defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(CodeException) in line 141
      protection public
      44 lines of code
      1 parameters
      7 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function ExceptionCaught(String,int,int,int) defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable catchList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getLiveLocalStoreDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable method defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function getBlocksContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LiveLocalStoreDataflow
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable dead defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportSkippedAnalysis(MethodDescriptor) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitCode(Code) in line 94
      protection public
      45 lines of code
      1 parameters
      15 conditional paths
      uses variable catchList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable throwList defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable stack defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function visitMethod(Method) in line 84
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable method defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function RuntimeExceptionCapture(BugReporter) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture
   variable accumulator in line 50
   variable bugReporter in line 44
   variable catchList in line 47
   variable DEBUG in line 42
   variable method in line 45
   variable stack in line 46
   variable throwList in line 48
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   function ExceptionCaught(String,int,int,int) in line 57
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses variable exceptionClass defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
      uses variable startOffset defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   variable dead in line 55
      protection public
   variable exceptionClass in line 52
      protection public
   variable seen in line 54
      protection public
   variable startOffset in line 53
      protection public
module edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionThrown
   function ExceptionThrown(String,int) in line 69
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable exceptionClass defined in edu::umd::cs::findbugs::detect::RuntimeExceptionCapture::ExceptionCaught
   variable exceptionClass in line 66
      protection public
   variable offset in line 67
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/SerializableIdiom.java
module edu::umd::cs::findbugs::detect::SerializableIdiom
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function computePriority(double,double) in line 536
      9 lines of code
      2 parameters
      3 conditional paths
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function flush() in line 103
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function sawOpcode(int) in line 388
      protection public
      56 lines of code
      1 parameters
      13 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isInitialParameter() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getJavaClass() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function computePriority(double,double) defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(JavaClass) in line 118
      protection public
      113 lines of code
      1 parameters
      16 conditional paths
      uses variable isEnum defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable directlyImplementsExternalizable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFields defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassImplementsSerializable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawWriteObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function visit(Method) in line 299
      protection public
      72 lines of code
      1 parameters
      20 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sawWriteExternal defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 381
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(Field) in line 447
      protection public
      88 lines of code
      1 parameters
      21 conditional paths
      uses variable transientFields defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldsThatMightBeAProblem defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function computePriority(double,double) defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldWarningList defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 233
      protection public
      64 lines of code
      1 parameters
      17 conditional paths
      uses variable isEnum defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable hasPublicVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassHasVoidConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable superClassImplementsSerializable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadObject defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable sawReadResolve defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFieldsUpdates defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable transientFields defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable transientFieldsSetInConstructor defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable directlyImplementsExternalizable defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function visitClassContext(ClassContext) in line 98
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function flush() defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   function SerializableIdiom(BugReporter) in line 86
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SerializableIdiom
   variable bugReporter in line 64
   variable directlyImplementsExternalizable in line 80
   variable fieldsThatMightBeAProblem in line 67
   variable fieldWarningList in line 66
   variable hasPublicVoidConstructor in line 78
   variable isEnum in line 116
   variable sawReadExternal in line 72
   variable sawReadObject in line 74
   variable sawReadResolve in line 75
   variable sawWriteExternal in line 73
   variable sawWriteObject in line 76
   variable stack in line 444
   variable superClassHasVoidConstructor in line 79
   variable superClassImplementsSerializable in line 77
   variable transientFields in line 68
   variable transientFieldsSetInConstructor in line 70
   variable transientFieldsUpdates in line 69
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StartInConstructor.java
module edu::umd::cs::findbugs::detect::StartInConstructor
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 50
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StartInConstructor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(JavaClass) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 45
      protection public
      3 lines of code
      1 parameters
      2 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function StartInConstructor(BugReporter) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StartInConstructor
   variable bugReporter in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StaticCalendarDetector.java
module edu::umd::cs::findbugs::detect::StaticCalendarDetector
   inherits from edu::umd::cs::findbugs::bcel::OpcodeStackDetector
   function sawOpcode(int) in line 177
      protection public
      77 lines of code
      1 parameters
      17 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable calendarType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable dateFormatType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stack defined in edu::umd::cs::findbugs::bcel::OpcodeStackDetector
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable PROP_SKIP_SYNCHRONIZED_CHECK defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getLocationsContainingInstructionWithOffset(int) defined in edu::umd::cs::findbugs::ba::CFG
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::LockDataflow
      uses function getNumLockedObjects() defined in edu::umd::cs::findbugs::ba::LockSet
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(JavaClass) in line 110
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses variable currentClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
   function visit(Field) in line 124
      protection public
      21 lines of code
      1 parameters
      6 conditional paths
      uses variable calendarType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable dateFormatType defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable currentClass defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function visitMethod(Method) in line 152
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses variable currentMethod defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses variable currentLockDataFlow defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getLockDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable currentCFG defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function StaticCalendarDetector(BugReporter) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::detect::StaticCalendarDetector
   variable calendarType in line 80
   variable currentCFG in line 91
   variable currentClass in line 75
   variable currentLockDataFlow in line 94
   variable currentMethod in line 88
   variable dateFormatType in line 85
   variable DEBUG in line 59
   variable PROP_SKIP_SYNCHRONIZED_CHECK in line 69
   variable reporter in line 72
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StaticFieldLoadStreamFactory.java
module edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
   inherits from edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 60
      protection public
      17 lines of code
      4 parameters
      3 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable className defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldName defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldSig defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses function setIsOpenOnCreation(boolean) defined in edu::umd::cs::findbugs::detect::Stream
   function StaticFieldLoadStreamFactory(String,String,String,String) in line 52
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable streamBaseClass defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable className defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldName defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
      uses variable fieldSig defined in edu::umd::cs::findbugs::detect::StaticFieldLoadStreamFactory
   variable className in line 38
      protection public
   variable fieldName in line 39
      protection public
   variable fieldSig in line 40
      protection public
   variable streamBaseClass in line 37
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/Stream.java
module edu::umd::cs::findbugs::detect::Stream
   inherits from edu::umd::cs::findbugs::ResourceCreationPoint
   inherits from Comparable
   function compareTo(Stream) in line 254
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function equals(Object) in line 245
      protection public
      9 lines of code
      1 parameters
      6 conditional paths
      uses function Stream(Location,String,String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function getBugType() in line 163
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::Stream
   function getInstanceParam() in line 159
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) in line 222
      7 lines of code
      3 parameters
      2 conditional paths
      uses function getValue(int) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getNumSlots() defined in edu::umd::cs::findbugs::ba::Frame
   function getOpenLocation() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function getStreamBase() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
   function hashCode() in line 237
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function ignoreImplicitExceptions() in line 155
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isClosed() in line 171
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isOpenOnCreation() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isStreamClose(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame,RepositoryLookupFailureCallback) in line 192
      protection public
      29 lines of code
      5 parameters
      4 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::Stream
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function isStreamOpen(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame) in line 175
      protection public
      16 lines of code
      4 parameters
      3 conditional paths
      uses function isOpenOnCreation() defined in edu::umd::cs::findbugs::detect::Stream
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstanceValue(ResourceValueFrame,InvokeInstruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::detect::Stream
      uses function isInstance() defined in edu::umd::cs::findbugs::ba::ResourceValue
      uses function matchMethod(InvokeInstruction,ConstantPoolGen,String,String) defined in edu::umd::cs::findbugs::detect::Stream
      uses function getResourceClass() defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function isUninteresting() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function matchMethod(InvokeInstruction,ConstantPoolGen,String,String) in line 230
      5 lines of code
      4 parameters
      1 conditional paths
   function setClosed() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isClosed() defined in edu::umd::cs::findbugs::detect::Stream
   function setIgnoreImplicitExceptions(boolean) in line 102
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ignoreImplicitExceptions() defined in edu::umd::cs::findbugs::detect::Stream
   function setInstanceParam(int) in line 123
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   function setInteresting(String) in line 91
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugType defined in edu::umd::cs::findbugs::detect::Stream
   function setIsOpenOnCreation(boolean) in line 112
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function isOpenOnCreation() defined in edu::umd::cs::findbugs::detect::Stream
   function setOpenLocation(Location) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function toString() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses variable openLocation defined in edu::umd::cs::findbugs::detect::Stream
   function Stream(Location,String,String) in line 78
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable streamBase defined in edu::umd::cs::findbugs::detect::Stream
      uses function isUninteresting() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable instanceParam defined in edu::umd::cs::findbugs::detect::Stream
   variable bugType in line 59
   variable ignoreImplicitExceptions in line 58
   variable instanceParam in line 60
   variable isClosed in line 61
   variable isOpenOnCreation in line 56
   variable isUninteresting in line 55
   variable openLocation in line 57
   variable streamBase in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StreamEquivalenceClass.java
module edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function addAll(StreamEquivalenceClass) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function addMember(Stream) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function memberIterator() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function setClosed() in line 71
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable isClosed defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable memberSet defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function StreamEquivalenceClass() in line 38
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable isClosed in line 32
   variable memberSet in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StreamEscape.java
module edu::umd::cs::findbugs::detect::StreamEscape
   inherits from Comparable
   function compareTo(StreamEscape) in line 47
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function compareTo(Stream) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function compareTo(Location) defined in edu::umd::cs::findbugs::ba::Location
   function equals(Object) in line 58
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function StreamEscape(Stream,Location) defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function equals(Object) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function equals(Object) defined in edu::umd::cs::findbugs::ba::Location
   function hashCode() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function hashCode() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses function hashCode() defined in edu::umd::cs::findbugs::ba::Location
   function toString() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
   function StreamEscape(Stream,Location) in line 42
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
   variable source in line 32
      protection public
   variable target in line 33
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StreamFactory.java
module edu::umd::cs::findbugs::detect::StreamFactory
   function createStream(Location,ObjectType,ConstantPoolGen,RepositoryLookupFailureCallback) in line 48
      protection public
      1 lines of code
      4 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StreamFrameModelingVisitor.java
module edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
   inherits from edu::umd::cs::findbugs::ba::ResourceValueFrameModelingVisitor
   function instanceEscapes(InvokeInstruction,int) in line 91
      33 lines of code
      2 parameters
      6 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getCPG() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable location defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function getOpenLocation() defined in edu::umd::cs::findbugs::detect::Stream
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function addStreamEscape(Stream,Location) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function transferInstruction(InstructionHandle,BasicBlock) in line 45
      protection public
      44 lines of code
      2 parameters
      7 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getCPG() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable frame defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses function getFrame() defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function getLocation() defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function getBasicBlock() defined in edu::umd::cs::findbugs::ba::Location
      uses variable isOpenOnCreation defined in edu::umd::cs::findbugs::detect::Stream
      uses variable OPEN defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function setOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable location defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses function addStreamOpenLocation(Location,Stream) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable CREATED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function isResourceOpen(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable CLOSED defined in edu::umd::cs::findbugs::ba::ResourceValueFrame
      uses function analyzeInstruction(Instruction) defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable instance defined in edu::umd::cs::findbugs::ba::ResourceValue
   function StreamFrameModelingVisitor(ConstantPoolGen,StreamResourceTracker,Stream) in line 37
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable cpg defined in AbstractFrameModelingVisitor< ResourceValue, ResourceValueFrame >
      uses variable resourceTracker defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
      uses variable stream defined in edu::umd::cs::findbugs::detect::StreamFrameModelingVisitor
   variable location in line 35
   variable resourceTracker in line 33
   variable stream in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StreamResourceTracker.java
module edu::umd::cs::findbugs::detect::StreamResourceTracker
   inherits from edu::umd::cs::findbugs::ba::ResourceTracker
   function addStreamEscape(Stream,Location) in line 115
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable streamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function addStreamOpenLocation(Location,Stream) in line 199
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable isUninteresting defined in edu::umd::cs::findbugs::detect::Stream
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function createVisitor(Stream,ConstantPoolGen) in line 269
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getStreamEquivalenceClass(Stream) in line 215
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamEquivalenceMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function ignoreExceptionEdge(Edge,Stream,ConstantPoolGen) in line 277
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function ignoreImplicitExceptions(Stream) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ignoreImplicitExceptions defined in edu::umd::cs::findbugs::detect::Stream
   function isParamInstance(Stream,int) in line 281
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getInstanceParam() defined in edu::umd::cs::findbugs::detect::Stream
   function isResourceClose(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) in line 264
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function isStreamClose(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame,RepositoryLookupFailureCallback) defined in edu::umd::cs::findbugs::detect::Stream
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isResourceCreation(BasicBlock,InstructionHandle,ConstantPoolGen) in line 228
      protection public
      30 lines of code
      3 parameters
      6 conditional paths
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable streamFactoryList defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isResourceOpen(BasicBlock,InstructionHandle,ConstantPoolGen,Stream,ResourceValueFrame) in line 259
      protection public
      4 lines of code
      5 parameters
      1 conditional paths
      uses function isStreamOpen(BasicBlock,InstructionHandle,ConstantPoolGen,ResourceValueFrame) defined in edu::umd::cs::findbugs::detect::Stream
   function isStreamOpenLocation(Location) in line 224
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function isUninterestingStreamEscape(Stream) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function markTransitiveUninterestingStreamEscapes() in line 128
      protection public
      53 lines of code
      0 parameters
      12 conditional paths
      uses variable streamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function isStreamOpenLocation(Location) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable target defined in edu::umd::cs::findbugs::detect::StreamEscape
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function addMember(Stream) defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses variable streamEquivalenceMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable uninterestingStreamEscapeSet defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function isUninterestingStreamEscape(Stream) defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable streamOpenLocationMap defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses function addAll(StreamEquivalenceClass) defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
      uses function memberIterator() defined in edu::umd::cs::findbugs::detect::StreamEquivalenceClass
   function setResourceCollection(ResourceCollection< Stream >) in line 105
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable resourceCollection defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   function StreamResourceTracker(StreamFactory[],RepositoryLookupFailureCallback) in line 91
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
      uses variable streamFactoryList defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
      uses variable lookupFailureCallback defined in edu::umd::cs::findbugs::detect::StreamResourceTracker
   variable lookupFailureCallback in line 53
   variable resourceCollection in line 54
   variable streamEquivalenceMap in line 81
   variable streamEscapeSet in line 71
   variable streamFactoryList in line 52
   variable streamOpenLocationMap in line 60
   variable uninterestingStreamEscapeSet in line 66
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/StringConcatenation.java
module edu::umd::cs::findbugs::detect::StringConcatenation
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function reset() in line 71
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable createPC defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable registerOnStack defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable stringSource defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
   function sawOpcode(int) in line 101
      protection public
      104 lines of code
      1 parameters
      28 conditional paths
      uses variable reportedThisMethod defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable state defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable createPC defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOnStack defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable stringSource defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reset() defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function storeIntoRegister(int,int) defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function storeIntoRegister(int,int) in line 83
      16 lines of code
      2 parameters
      6 conditional paths
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Method) in line 63
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses function reset() defined in edu::umd::cs::findbugs::detect::StringConcatenation
      uses variable reportedThisMethod defined in edu::umd::cs::findbugs::detect::StringConcatenation
   function StringConcatenation(BugReporter) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::StringConcatenation
   variable bugReporter in line 48
   variable createPC in line 53
   variable DEBUG in line 38
   variable registerOnStack in line 51
   variable reportedThisMethod in line 49
   variable state in line 54
   variable stringSource in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/SuperfluousInstanceOf.java
module edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 67
      protection public
      41 lines of code
      1 parameters
      11 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_ALOAD defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Method) in line 52
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   function visit(Code) in line 60
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable varTable defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   function SuperfluousInstanceOf(BugReporter) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuperfluousInstanceOf
   variable bugReporter in line 40
   variable register in line 43
   variable SEEN_ALOAD in line 38
   variable SEEN_NOTHING in line 37
   variable state in line 42
   variable varTable in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/SuspiciousThreadInterrupted.java
module edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 56
      protection public
      67 lines of code
      1 parameters
      18 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_POSSIBLE_THREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_UNKNOWNCONTEXT_POP defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_CURRENTTHREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable localsWithCurrentThreadValue defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_POP_AFTER_CURRENTTHREAD defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 49
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable localsWithCurrentThreadValue defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable state defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   function SuspiciousThreadInterrupted(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SuspiciousThreadInterrupted
   variable bugReporter in line 38
   variable localsWithCurrentThreadValue in line 39
   variable SEEN_CURRENTTHREAD in line 34
      protection public
   variable SEEN_NOTHING in line 33
      protection public
   variable SEEN_POP_AFTER_CURRENTTHREAD in line 35
      protection public
   variable SEEN_POSSIBLE_THREAD in line 37
      protection public
   variable SEEN_UNKNOWNCONTEXT_POP in line 36
      protection public
   variable state in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/SwitchFallthrough.java
module edu::umd::cs::findbugs::detect::SwitchFallthrough
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function hasFallThruComment(int,int) in line 156
      41 lines of code
      2 parameters
      11 conditional paths
      uses variable LOOK_IN_SOURCE_FOR_FALLTHRU_COMMENT defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function sawOpcode(int) in line 81
      protection public
      74 lines of code
      1 parameters
      22 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable reachable defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable switchHdlr defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function isOnSwitchOffset(DismantleBytecode) defined in edu::umd::cs::findbugs::SwitchHandler
      uses variable fallthroughDistance defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStoresFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStores defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function hasFallThruComment(int,int) defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function atCatchBlock() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable priority defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable deadStore defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function enterSwitch(DismantleBytecode) defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 60
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable reachable defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable lastPC defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable switchHdlr defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStores defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable deadStore defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable potentiallyDeadStoresFromBeforeFallthrough defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable priority defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable fallthroughDistance defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassAndMethod(MethodDescriptor) defined in edu::umd::cs::findbugs::BugInstance
      uses function addAnnotations(Collection<?extends BugAnnotation >) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visitClassContext(ClassContext) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function SwitchFallthrough(BugReporter) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::SwitchFallthrough
   variable bugReporter in line 38
   variable deadStore in line 42
   variable DEBUG in line 32
   variable fallthroughDistance in line 44
   variable lastPC in line 39
   variable LOOK_IN_SOURCE_FOR_FALLTHRU_COMMENT in line 33
   variable potentiallyDeadStores in line 40
   variable potentiallyDeadStoresFromBeforeFallthrough in line 41
   variable priority in line 43
   variable reachable in line 37
   variable switchHdlr in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/SynchronizeAndNullCheckField.java
module edu::umd::cs::findbugs::detect::SynchronizeAndNullCheckField
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 56
      protection public
      41 lines of code
      1 parameters
      13 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Method) in line 46
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function SynchronizeAndNullCheckField(BugReporter) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/TestASM.java
module edu::umd::cs::findbugs::detect::TestASM
   inherits from edu::umd::cs::findbugs::asm::ClassNodeDetector
   function visitField(int,String,String,String,Object) in line 54
      protection public
      7 lines of code
      5 parameters
      2 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function visitMethod(final int,final String,final String,final String,final String[]) in line 43
      protection public
      9 lines of code
      5 parameters
      2 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function TestASM(BugReporter) in line 38
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::asm::ClassNodeDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/TestingGround.java
module edu::umd::cs::findbugs::detect::TestingGround
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 67
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Method) in line 38
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function addMethod(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Field) in line 47
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addString(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function visit(Code) in line 60
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function TestingGround(BugReporter) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/TrainFieldStoreTypes.java
module edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function analyzeMethod(ClassContext,Method) in line 82
      51 lines of code
      2 parameters
      9 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses function isPublic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isProtected() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getTopValue() defined in edu::umd::cs::findbugs::ba::Frame
      uses variable database defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function getProperty(KeyType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
      uses function setProperty(KeyType,ValueType) defined in edu::umd::cs::findbugs::ba::interproc::PropertyDatabase
   function report() in line 134
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable database defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function purgeBoringEntries() defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEFAULT_FILENAME defined in edu::umd::cs::findbugs::ba::type::FieldStoreTypeDatabase
   function visitClassContext(ClassContext) in line 64
      protection public
      17 lines of code
      1 parameters
      4 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function analyzeMethod(ClassContext,Method) defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
      uses function logError(String) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function TrainFieldStoreTypes(BugReporter) in line 59
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::TrainFieldStoreTypes
   variable bugReporter in line 56
   variable database in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/TrainNonNullAnnotations.java
module edu::umd::cs::findbugs::detect::TrainNonNullAnnotations
   inherits from edu::umd::cs::findbugs::detect::BuildNonNullAnnotationDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function report() in line 50
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function TrainNonNullAnnotations(BugReporter) in line 37
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/TrainUnconditionalDerefParams.java
module edu::umd::cs::findbugs::detect::TrainUnconditionalDerefParams
   inherits from edu::umd::cs::findbugs::detect::BuildUnconditionalParamDerefDatabase
   inherits from edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::TrainingDetector
   function report() in line 47
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNCONDITIONAL_DEREF_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable NONNULL_RETURN_DB_FILENAME defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function TrainUnconditionalDerefParams(BugReporter) in line 41
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   variable VERBOSE_DEBUG in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/UncallableMethodOfAnonymousClass.java
module edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function skip(Method) in line 91
      19 lines of code
      1 parameters
      7 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(JavaClass) in line 49
      protection public
      5 lines of code
      1 parameters
      10 conditional paths
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function skip(Method) defined in edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
   function visit(Method) in line 111
      protection public
      38 lines of code
      1 parameters
      10 conditional paths
      uses function skip(Method) defined in edu::umd::cs::findbugs::detect::UncallableMethodOfAnonymousClass
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable currentXFactory defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function isCalled(XMethod) defined in edu::umd::cs::findbugs::ba::XFactory
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function UncallableMethodOfAnonymousClass(BugReporter) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/UnnecessaryMath.java
module edu::umd::cs::findbugs::detect::UnnecessaryMath
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 102
      protection public
      36 lines of code
      1 parameters
      11 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable constValue defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable zeroMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable oneMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable anyMethods defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visit(Code) in line 91
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable state defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
   function UnnecessaryMath(BugReporter) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnnecessaryMath
   variable anyMethods in line 76
   variable bugReporter in line 39
   variable constValue in line 41
   variable oneMethods in line 64
   variable state in line 40
   variable zeroMethods in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/UnreadFields.java
module edu::umd::cs::findbugs::detect::UnreadFields
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function addClassFieldAndAccess(BugInstance,XField) in line 812
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addClass(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function classHasParameter(JavaClass) in line 157
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function getReadFields() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWrittenFields() in line 90
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getWrittenOutsideOfConstructorFields() in line 93
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isInjectionAttribute(String) in line 214
      14 lines of code
      1 parameters
      3 conditional paths
   function report() in line 551
      protection public
      257 lines of code
      0 parameters
      62 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function addClassFieldAndAccess(BugInstance,XField) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function classHasParameter(JavaClass) defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function sawOpcode(int) in line 281
      protection public
      266 lines of code
      1 parameters
      75 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcodeStack defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getFullyQualifiedMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable previousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable previousPreviousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(JavaClass) in line 106
      protection public
      50 lines of code
      1 parameters
      12 conditional paths
      uses function add(K,V) defined in edu::umd::cs::findbugs::util::MultiMap
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visit(Field) in line 183
      protection public
      15 lines of code
      1 parameters
      5 conditional paths
      uses function getAccessFlags() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(ConstantValue) in line 229
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 243
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses variable previousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable previousPreviousOpcode defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable opcodeStack defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 262
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 166
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
   function visitAnnotation(String,Map< String, Object >,boolean) in line 200
      protection public
      10 lines of code
      3 parameters
      4 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function isInjectionAttribute(String) defined in edu::umd::cs::findbugs::detect::UnreadFields
   function UnreadFields(BugReporter) in line 98
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UnreadFields
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function setUnreadFields(@NonNull UnreadFields) defined in edu::umd::cs::findbugs::ba::AnalysisContext
   variable bugReporter in line 84
   variable DEBUG in line 37
   variable opcodeStack in line 239
   variable previousOpcode in line 240
   variable previousPreviousOpcode in line 241
module edu::umd::cs::findbugs::detect::UnreadFields::ProgramPoint
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/URLProblems.java
module edu::umd::cs::findbugs::detect::URLProblems
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function sawOpcode(int) in line 91
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(Signature) in line 56
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Method) in line 74
      protection public
      3 lines of code
      1 parameters
      5 conditional paths
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function accumulateBug(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAccumulator
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function visitAfter(JavaClass) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable accumulator defined in edu::umd::cs::findbugs::detect::URLProblems
      uses function reportAccumulatedBugs() defined in edu::umd::cs::findbugs::BugAccumulator
   function URLProblems(BugReporter) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::URLProblems
   variable accumulator in line 44
   variable bugReporter in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/UselessSubclassMethod.java
module edu::umd::cs::findbugs::detect::UselessSubclassMethod
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function accessModifiersAreDifferent(Method,Method) in line 263
      6 lines of code
      2 parameters
      1 conditional paths
   function checkParm(int,int,int,int) in line 213
      14 lines of code
      4 parameters
      5 conditional paths
      uses variable curParmOffset defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable SEEN_INVALID defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function findSuperclassMethod(String,Method) in line 228
      34 lines of code
      2 parameters
      9 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   function sawOpcode(int) in line 137
      protection public
      75 lines of code
      1 parameters
      22 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable argTypes defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable curParmOffset defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable SEEN_PARM defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable SEEN_LAST_PARM defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable SEEN_INVALID defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable curParm defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function checkParm(int,int,int,int) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable invokePC defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_INVOKE defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable SEEN_RETURN defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   function visitAfter(JavaClass) in line 77
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   function visitClassContext(ClassContext) in line 55
      protection public
      20 lines of code
      1 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitCode(Code) in line 96
      protection public
      39 lines of code
      1 parameters
      8 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable invokePC defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable SEEN_RETURN defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function findSuperclassMethod(String,Method) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable superclassName defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function accessModifiersAreDifferent(Method,Method) defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitMethod(Method) in line 83
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable interfaceMethods defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function UselessSubclassMethod(BugReporter) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UselessSubclassMethod
   variable argTypes in line 45
   variable bugReporter in line 39
   variable curParm in line 42
   variable curParmOffset in line 43
   variable interfaceMethods in line 46
   variable invokePC in line 44
   variable SEEN_INVALID in line 37
      protection public
   variable SEEN_INVOKE in line 35
      protection public
   variable SEEN_LAST_PARM in line 34
      protection public
   variable SEEN_NOTHING in line 32
      protection public
   variable SEEN_PARM in line 33
      protection public
   variable SEEN_RETURN in line 36
      protection public
   variable state in line 41
   variable superclassName in line 40
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/UseObjectEquals.java
module edu::umd::cs::findbugs::detect::UseObjectEquals
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 45
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::detect::UseObjectEquals
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getJavaClass() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UseObjectEquals
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function visit(Method) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::detect::UseObjectEquals
      uses function resetForMethodEntry(final DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
   function UseObjectEquals(BugReporter) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::UseObjectEquals
   variable bugReporter in line 29
   variable stack in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/VarArgsProblems.java
module edu::umd::cs::findbugs::detect::VarArgsProblems
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function sawOpcode(int) in line 76
      protection public
      76 lines of code
      1 parameters
      19 conditional paths
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable state defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_GOTO defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ICONST_1 defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable SEEN_ANEWARRAY defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_DUP defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ICONST_0 defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_ALOAD defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_AASTORE defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable FOUND_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function addCalledMethod(DismantleBytecode) defined in edu::umd::cs::findbugs::BugInstance
      uses function addSourceLine(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function visitCode(Code) in line 52
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::VarArgsProblems
      uses variable SEEN_NOTHING defined in edu::umd::cs::findbugs::detect::VarArgsProblems
   function VarArgsProblems(BugReporter) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VarArgsProblems
   variable bugReporter in line 41
   variable SEEN_AASTORE in line 69
      protection public
   variable SEEN_ALOAD in line 67
      protection public
   variable SEEN_ANEWARRAY in line 61
      protection public
   variable SEEN_DUP in line 63
      protection public
   variable SEEN_GOTO in line 71
      protection public
   variable SEEN_ICONST_0 in line 65
      protection public
   variable SEEN_ICONST_1 in line 59
      protection public
   variable SEEN_NOTHING in line 57
      protection public
   variable state in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/VolatileUsage.java
module edu::umd::cs::findbugs::detect::VolatileUsage
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function report() in line 97
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VolatileUsage
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses function addField(String,String,String,boolean) defined in edu::umd::cs::findbugs::BugInstance
   function sawOpcode(int) in line 70
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visit(Field) in line 54
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitClassContext(ClassContext) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function VolatileUsage(BugReporter) in line 31
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::VolatileUsage
   variable bugReporter in line 29
module edu::umd::cs::findbugs::detect::VolatileUsage::FieldRecord
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/WaitInLoop.java
module edu::umd::cs::findbugs::detect::WaitInLoop
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function isConditionAwait() in line 91
      22 lines of code
      0 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isMonitorWait() in line 114
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 64
      protection public
      26 lines of code
      1 parameters
      5 conditional paths
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isMonitorWait() defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function isConditionAwait() defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 44
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::WaitInLoop
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function WaitInLoop(BugReporter) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::WaitInLoop
   variable bugReporter in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/WrongMapIterator.java
module edu::umd::cs::findbugs::detect::WrongMapIterator
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   inherits from edu::umd::cs::findbugs::StatelessDetector
   function getLoadStoreRegister(int,boolean) in line 187
      33 lines of code
      2 parameters
      15 conditional paths
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawOpcode(int) in line 68
      protection public
      118 lines of code
      1 parameters
      29 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable loadedRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function getLoadStoreRegister(int,boolean) defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_MAP_LOAD1 defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable mapRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEYSET defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keySetRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEYSET_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable NEED_KEYSET_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable iteratorRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_ITERATOR_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NEXT defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_CHECKCAST_ON_NEXT defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keyRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEY_STORE defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_MAP_LOAD2 defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_KEY_LOAD defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Method) in line 58
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable state defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable SAW_NOTHING defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable loadedRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable mapRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keySetRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable iteratorRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
      uses variable keyRegister defined in edu::umd::cs::findbugs::detect::WrongMapIterator
   function WrongMapIterator(BugReporter) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::WrongMapIterator
   variable bugReporter in line 28
   variable iteratorRegister in line 47
   variable keyRegister in line 48
   variable keySetRegister in line 46
   variable loadedRegister in line 44
   variable mapRegister in line 45
   variable NEED_KEYSET_LOAD in line 39
   variable SAW_CHECKCAST_ON_NEXT in line 37
   variable SAW_ITERATOR in line 33
   variable SAW_ITERATOR_LOAD in line 35
   variable SAW_ITERATOR_STORE in line 34
   variable SAW_KEY_LOAD in line 41
   variable SAW_KEY_STORE in line 38
   variable SAW_KEYSET in line 31
   variable SAW_KEYSET_STORE in line 32
   variable SAW_MAP_LOAD1 in line 30
   variable SAW_MAP_LOAD2 in line 40
   variable SAW_NEXT in line 36
   variable SAW_NOTHING in line 29
   variable state in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/detect/XMLFactoryBypass.java
module edu::umd::cs::findbugs::detect::XMLFactoryBypass
   inherits from edu::umd::cs::findbugs::BytecodeScanningDetector
   function samePackageBase(String,String) in line 104
      protection public
      15 lines of code
      2 parameters
      4 conditional paths
   function sawOpcode(int) in line 62
      protection public
      41 lines of code
      1 parameters
      11 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable rejectedXMLClasses defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function samePackageBase(String,String) defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable curClass defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable xmlInterfaces defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function visitClassContext(ClassContext) in line 56
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable curClass defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
      uses variable classContext defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
   function XMLFactoryBypass(BugReporter) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::detect::XMLFactoryBypass
   variable bugReporter in line 30
   variable curClass in line 49
   variable rejectedXMLClasses in line 48
   variable xmlInterfaces in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Detector.java
module edu::umd::cs::findbugs::Detector
   inherits from edu::umd::cs::findbugs::Priorities
   function report() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Detector2.java
module edu::umd::cs::findbugs::Detector2
   inherits from edu::umd::cs::findbugs::Priorities
   function finishPass() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getDetectorClassName() in line 50
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function visitClass(ClassDescriptor) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/DetectorFactory.java
module edu::umd::cs::findbugs::DetectorFactory
   function create(BugReporter) in line 356
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function createDetector2(BugReporter) in line 366
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function getDetailHTML() in line 336
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detailHTML defined in edu::umd::cs::findbugs::DetectorFactory
   function getFullName() in line 386
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function getPlugin() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::DetectorFactory
   function getPositionSpecifiedInPluginDescriptor() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable positionSpecifiedInPluginDescriptor defined in edu::umd::cs::findbugs::DetectorFactory
   function getPriorityAdjustment() in line 297
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable enabledButNonReporting defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::DetectorFactory
   function getReportedBugPatternCodes() in line 312
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
   function getReportedBugPatterns() in line 321
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
   function getShortName() in line 374
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function getSpeed() in line 305
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable speed defined in edu::umd::cs::findbugs::DetectorFactory
   function isDefaultEnabled() in line 276
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable defEnabled defined in edu::umd::cs::findbugs::DetectorFactory
   function isDetectorClassSubtypeOf(Class<?>) in line 203
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorCreator defined in edu::umd::cs::findbugs::DetectorFactory
   function isEnabledForCurrentJRE() in line 226
      protection public
      28 lines of code
      0 parameters
      6 conditional paths
      uses variable requireJRE defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable DEBUG_JAVA_VERSION defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isSameOrNewerThan(JavaVersion) defined in edu::umd::cs::findbugs::JavaVersion
   function isHidden() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::DetectorFactory
   function isReportingDetector() in line 213
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
   function setDetailHTML(String) in line 343
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detailHTML defined in edu::umd::cs::findbugs::DetectorFactory
   function setEnabledButNonReporting(boolean) in line 288
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHidden(boolean) in line 262
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable hidden defined in edu::umd::cs::findbugs::DetectorFactory
   function setPositionSpecifiedInPluginDescriptor(int) in line 173
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable positionSpecifiedInPluginDescriptor defined in edu::umd::cs::findbugs::DetectorFactory
   function setPriorityAdjustment(int) in line 285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::DetectorFactory
   function DetectorFactory(Plugin,Class<?>,boolean,String,String,String) in line 126
      protection public
      12 lines of code
      6 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable speed defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable reports defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable requireJRE defined in edu::umd::cs::findbugs::DetectorFactory
   variable constructorArgTypes in line 41
   variable DEBUG_JAVA_VERSION in line 39
   variable defEnabled in line 104
   variable detailHTML in line 108
   variable detectorCreator in line 102
   variable enabledButNonReporting in line 110
   variable hidden in line 111
   variable plugin in line 101
   variable positionSpecifiedInPluginDescriptor in line 103
   variable priorityAdjustment in line 109
   variable reports in line 106
   variable requireJRE in line 107
   variable speed in line 105
module edu::umd::cs::findbugs::DetectorFactory::ReflectionDetectorCreator
   function createDetector(BugReporter) in line 58
      protection public
      16 lines of code
      1 parameters
      1 conditional paths
   function createDetector2(BugReporter) in line 75
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function getDetectorClass() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable detectorClass in line 44
   variable setAnalysisContext in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/DetectorFactoryChooser.java
module edu::umd::cs::findbugs::DetectorFactoryChooser
   function choose(DetectorFactory) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function enable(DetectorFactory) in line 41
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/DetectorFactoryCollection.java
module edu::umd::cs::findbugs::DetectorFactoryCollection
   function determinePlugins() in line 177
      34 lines of code
      0 parameters
      8 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function ensureLoaded() in line 212
      protection public
      4 lines of code
      0 parameters
      15 conditional paths
      uses variable loaded defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function setPluginList(URL[]) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function determinePlugins() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPlugin() defined in edu::umd::cs::findbugs::PluginLoader
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function detectorFactoryIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function registerDetector(DetectorFactory) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function bugPatternIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function registerBugPattern(BugPattern) defined in edu::umd::cs::findbugs::I18N
      uses function bugCodeIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function registerBugCode(BugCode) defined in edu::umd::cs::findbugs::I18N
   function factoryIterator() in line 138
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoryList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getFactory(String) in line 149
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoriesByName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getFactoryByClassName(String) in line 161
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoriesByDetectorClassName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function getPluginById(String) in line 129
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function instance() in line 94
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable lock defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable theInstance defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function pluginIterator() in line 117
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginByIdMap defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function rawInstance() in line 106
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable lock defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable theInstance defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function registerDetector(DetectorFactory) in line 169
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable factoryList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoriesByName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable factoriesByDetectorClassName defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   function setPluginList(URL[]) in line 71
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable loaded defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable pluginList defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function instance() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable lock defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable theInstance defined in edu::umd::cs::findbugs::DetectorFactoryCollection
   variable factoriesByDetectorClassName in line 47
   variable factoriesByName in line 46
   variable factoryList in line 45
   variable loaded in line 52
   variable lock in line 51
   variable pluginByIdMap in line 44
   variable pluginList in line 54
   variable theInstance in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/DetectorToDetector2Adapter.java
module edu::umd::cs::findbugs::DetectorToDetector2Adapter
   inherits from edu::umd::cs::findbugs::Detector2
   function finishPass() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
      uses function report() defined in edu::umd::cs::findbugs::Detector
   function getDetectorClassName() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
   function visitClass(ClassDescriptor) in line 56
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function getClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
      uses function visitClassContext(ClassContext) defined in edu::umd::cs::findbugs::Detector
   function DetectorToDetector2Adapter(Detector) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detector defined in edu::umd::cs::findbugs::DetectorToDetector2Adapter
   variable detector in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/EmacsBugReporter.java
module edu::umd::cs::findbugs::EmacsBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 116
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable seenAlready defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function fileNameFor(final String,final String) in line 55
      10 lines of code
      2 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
   function finish() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function getRealBugReporter() in line 131
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function observeClass(ClassDescriptor) in line 44
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function fileNameFor(final String,final String) defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses variable sourceFileNameCache defined in edu::umd::cs::findbugs::EmacsBugReporter
   function printBug(BugInstance) in line 67
      47 lines of code
      1 parameters
      9 conditional paths
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses variable sourceFileNameCache defined in edu::umd::cs::findbugs::EmacsBugReporter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   variable seenAlready in line 40
   variable sourceFileNameCache in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ErrorCountingBugReporter.java
module edu::umd::cs::findbugs::ErrorCountingBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function getBugCount() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getErrorCount() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getMissingClassCount() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function logError(String) in line 45
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function reportMissingClass(ClassNotFoundException) in line 51
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses variable missingClassCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function ErrorCountingBugReporter(BugReporter) in line 16
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses function addObserver(BugReporterObserver) defined in edu::umd::cs::findbugs::BugReporter
      uses function reportBug(BugInstance) defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses variable bugCount defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   variable bugCount in line 11
   variable errorCount in line 13
   variable missingClassCount in line 12
   variable missingClassSet in line 14
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ExitCodes.java
module edu::umd::cs::findbugs::ExitCodes
   variable BUGS_FOUND_FLAG in line 41
      protection public
   variable ERROR_FLAG in line 31
      protection public
   variable MISSING_CLASS_FLAG in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FatalException.java
module edu::umd::cs::findbugs::FatalException
   inherits from java::lang::RuntimeException
   function FatalException(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FatalException(String,Throwable) in line 45
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FieldAnnotation.java
module edu::umd::cs::findbugs::FieldAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 201
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitFieldAnnotation(FieldAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 261
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function equals(Object) in line 251
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 206
      23 lines of code
      2 parameters
      7 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function fromBCELField(String,Field) in line 123
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromFieldDescriptor(FieldDescriptor) in line 133
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function fromReferencedField(DismantleBytecode) in line 109
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRefFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function fromVisitedField(PreorderVisitor) in line 95
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldIsStatic() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function fromXField(XField) in line 141
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getFieldName() in line 151
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
   function getFieldSignature() in line 158
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function getNameInClass(ClassAnnotation) in line 234
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getSourceLines() in line 279
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFieldLine(String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
   function hashCode() in line 246
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   function isRead(Instruction,ConstantPoolGen) in line 176
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
   function isStatic() in line 165
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isWrite(Instruction,ConstantPoolGen) in line 192
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function FieldAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::FieldAnnotation
   function writeXML(XMLOutput) in line 304
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 308
      protection public
      20 lines of code
      2 parameters
      3 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function FieldAnnotation(String,String,String,boolean) in line 67
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::FieldAnnotation
   function FieldAnnotation(String,String,String,int) in line 85
      protection public
      3 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable fieldName defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable fieldSig defined in edu::umd::cs::findbugs::FieldAnnotation
   variable DEFAULT_ROLE in line 54
   variable ELEMENT_NAME in line 302
   variable fieldName in line 56
   variable fieldSig in line 57
   variable isStatic in line 58
   variable serialVersionUID in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FieldWarningSuppressor.java
module edu::umd::cs::findbugs::FieldWarningSuppressor
   inherits from edu::umd::cs::findbugs::ClassWarningSuppressor
   function match(BugInstance) in line 14
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::FieldAnnotation
   function FieldWarningSuppressor(String,ClassAnnotation,FieldAnnotation) in line 9
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/AndMatcher.java
module edu::umd::cs::findbugs::filter::AndMatcher
   inherits from edu::umd::cs::findbugs::filter::CompoundMatcher
   function anyMatches() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 34
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
      uses function anyMatches() defined in edu::umd::cs::findbugs::filter::AndMatcher
   function toString() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 45
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/BugMatcher.java
module edu::umd::cs::findbugs::filter::BugMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addAttribute(XMLOutput,String,StringSetMatch) in line 88
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
   function equals(Object) in line 73
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function BugMatcher(String,String,String) defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function hashCode() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function match(BugInstance) in line 59
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugInstance
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::BugMatcher
   function toString() in line 93
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function writeXML(XMLOutput,boolean) in line 78
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(XMLOutput,String,StringSetMatch) defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   function BugMatcher(String,String,String) in line 53
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable codes defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable patterns defined in edu::umd::cs::findbugs::filter::BugMatcher
      uses variable categories defined in edu::umd::cs::findbugs::filter::BugMatcher
   variable categories in line 41
   variable codes in line 37
   variable DEBUG in line 35
   variable patterns in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/ClassMatcher.java
module edu::umd::cs::findbugs::filter::ClassMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 44
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::ClassMatcher
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function getValue() defined in edu::umd::cs::findbugs::filter::NameMatch
   function writeXML(XMLOutput,boolean) in line 51
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
   function ClassMatcher(String) in line 40
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::filter::ClassMatcher
   variable className in line 33
   variable DEBUG in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/CompoundMatcher.java
module edu::umd::cs::findbugs::filter::CompoundMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   abstract class
   function addChild(Matcher) in line 50
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function childIterator() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function clear() in line 56
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function equals(Object) in line 41
      protection public
      6 lines of code
      1 parameters
      3 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function hashCode() in line 34
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function numberChildren() in line 47
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function removeChild(Matcher) in line 53
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function toString() in line 69
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function writeChildrenXML(XMLOutput) in line 63
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   variable children in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/CompoundMatcher.java
module edu::umd::cs::findbugs::gui2::CompoundMatcher
   inherits from java::util::HashSet
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 39
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function writeXML(XMLOutput,boolean) in line 47
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/DesignationMatcher.java
module edu::umd::cs::findbugs::filter::DesignationMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addAttribute(XMLOutput,String,StringSetMatch) in line 73
      protection public
      5 lines of code
      3 parameters
      2 conditional paths
   function equals(Object) in line 61
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function DesignationMatcher(String) defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function match(BugInstance) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::StringSetMatch
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
   function writeXML(XMLOutput,boolean) in line 66
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(XMLOutput,String,StringSetMatch) defined in edu::umd::cs::findbugs::filter::DesignationMatcher
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
   function DesignationMatcher(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable designations defined in edu::umd::cs::findbugs::filter::DesignationMatcher
   variable designations in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/FieldMatcher.java
module edu::umd::cs::findbugs::filter::FieldMatcher
   inherits from edu::umd::cs::findbugs::filter::MemberMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 44
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
   function writeXML(XMLOutput,boolean) in line 57
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function FieldMatcher(String) in line 36
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function FieldMatcher(String,String) in line 40
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/Filter.java
module edu::umd::cs::findbugs::filter::Filter
   inherits from edu::umd::cs::findbugs::filter::OrMatcher
   function addChild(Matcher) in line 119
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function clear() in line 129
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function contains(Matcher) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function disable(Matcher) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function enable(Matcher) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function getMatcher(Element) in line 229
      78 lines of code
      1 parameters
      21 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function isEmpty() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEnabled(Matcher) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function main(String[]) in line 308
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function Filter() defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeAsXML(OutputStream) defined in edu::umd::cs::findbugs::filter::Filter
   function match(BugInstance) in line 134
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function isEnabled(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function parse(String) in line 153
      68 lines of code
      1 parameters
      12 conditional paths
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses variable DEBUG defined in edu::umd::cs::findbugs::filter::Filter
      uses function getMatcher(Element) defined in edu::umd::cs::findbugs::filter::Filter
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function parseFilter(String) in line 86
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Filter() defined in edu::umd::cs::findbugs::filter::Filter
   function removeChild(Matcher) in line 124
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function setEnabled(Matcher,boolean) in line 73
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses function enable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function disable(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function softAdd(Matcher) in line 115
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeAsXML(OutputStream) in line 323
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
      uses function beginDocument() defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function writeBodyAsXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::Filter
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::XMLOutput
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function writeBodyAsXML(XMLOutput) in line 335
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function writeXML(XMLOutput,boolean) defined in edu::umd::cs::findbugs::filter::Matcher
      uses variable disabled defined in edu::umd::cs::findbugs::filter::Filter
   function Filter() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Filter(String) in line 97
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses function parse(String) defined in edu::umd::cs::findbugs::filter::Filter
   variable DEBUG in line 57
   variable disabled in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/Filter.java
module edu::umd::cs::findbugs::workflow::Filter
   function main(String[]) in line 406
      protection public
      90 lines of code
      1 parameters
      21 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clearBugCounts() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function findSource(SourceLineAnnotation) defined in edu::umd::cs::findbugs::workflow::SourceSearcher
      uses function recomputeFromClassStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
   function parsePriority(String) in line 395
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::workflow::Filter::FilterCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function bugLiveAt(BugInstance,long) in line 315
      7 lines of code
      2 parameters
      1 conditional paths
   function getAppropriateSeq(SortedMap< Long, AppVersion >,long,boolean) in line 194
      11 lines of code
      3 parameters
      1 conditional paths
   function handleOption(String,String) in line 324
      8 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 345
      46 lines of code
      2 parameters
      1 conditional paths
   function isClassified(BugInstance) in line 310
      4 lines of code
      1 parameters
      1 conditional paths
   function setField(String,boolean) in line 333
      11 lines of code
      2 parameters
      1 conditional paths
   variable active in line 80
      protection public
   variable activeSpecified in line 79
      protection public
   variable classified in line 105
      protection public
   variable classifiedSpecified in line 106
      protection public
   variable hasField in line 82
      protection public
   variable hasFieldSpecified in line 83
      protection public
   variable hashChanged in line 99
      protection public
   variable hashChangedSpecified in line 100
      protection public
   variable hasLocal in line 85
      protection public
   variable hasLocalSpecified in line 86
      protection public
   variable includeFilter in line 114
   variable introducedByChange in line 90
      protection public
   variable introducedByChangeSpecified in line 91
      protection public
   variable MILLISECONDS_PER_DAY in line 60
      protection public
   variable newCode in line 96
      protection public
   variable newCodeSpecified in line 97
      protection public
   variable not in line 63
      protection public
   variable notSpecified in line 62
      protection public
   variable removedByChange in line 93
      protection public
   variable removedByChangeSpecified in line 94
      protection public
   variable removedCode in line 102
      protection public
   variable removedCodeSpecified in line 103
      protection public
   variable serious in line 111
      protection public
   variable seriousSpecified in line 112
      protection public
   variable withMessages in line 110
      protection public
   variable withMessagesSpecified in line 109
      protection public
   variable withSource in line 88
      protection public
   variable withSourceSpecified in line 89
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/FilterException.java
module edu::umd::cs::findbugs::filter::FilterException
   inherits from java::lang::RuntimeException
   function FilterException(String) in line 25
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FilterException(String,Throwable) in line 29
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/FirstVersionMatcher.java
module edu::umd::cs::findbugs::filter::FirstVersionMatcher
   inherits from edu::umd::cs::findbugs::filter::VersionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function check(Comparable< T >,Comparable< T >) defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function writeXML(XMLOutput,boolean) in line 44
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function getName() defined in edu::umd::cs::findbugs::filter::RelationalOp
   function FirstVersionMatcher(String,String) in line 31
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FirstVersionMatcher(String,RelationalOp) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function FirstVersionMatcher(long,RelationalOp) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/LastVersionMatcher.java
module edu::umd::cs::findbugs::filter::LastVersionMatcher
   inherits from edu::umd::cs::findbugs::filter::VersionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function check(Comparable< T >,Comparable< T >) defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function toString() in line 54
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses variable NEQ defined in edu::umd::cs::findbugs::filter::RelationalOp
   function writeXML(XMLOutput,boolean) in line 47
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses function getName() defined in edu::umd::cs::findbugs::filter::RelationalOp
   function LastVersionMatcher(String,String) in line 35
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function LastVersionMatcher(String,RelationalOp) in line 38
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function LastVersionMatcher(long,RelationalOp) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   variable DEAD_BUG_MATCHER in line 32
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/LocalMatcher.java
module edu::umd::cs::findbugs::filter::LocalMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 43
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryLocalVariableAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function writeXML(XMLOutput,boolean) in line 53
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
   function LocalMatcher(String) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
   function LocalMatcher(String,String) in line 39
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::LocalMatcher
   variable name in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/Matcher.java
module edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 42
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/MemberMatcher.java
module edu::umd::cs::findbugs::filter::MemberMatcher
   function equals(Object) in line 60
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function MemberMatcher(String) defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function hashCode() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MemberMatcher(String) in line 35
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MemberMatcher(String,String) in line 40
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   variable name in line 30
   variable signature in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/MethodMatcher.java
module edu::umd::cs::findbugs::filter::MethodMatcher
   inherits from edu::umd::cs::findbugs::filter::MemberMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function match(BugInstance) in line 41
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function match(String) defined in edu::umd::cs::findbugs::filter::NameMatch
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
   function writeXML(XMLOutput,boolean) in line 51
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
      uses function getSpec() defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable signature defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MethodMatcher(String) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
   function MethodMatcher(String,String,String) in line 37
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::filter::MemberMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/NameMatch.java
module edu::umd::cs::findbugs::filter::NameMatch
   function equals(Object) in line 53
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function getSpec() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function getValue() in line 57
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function hashCode() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
   function match(String) in line 72
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function toString() in line 81
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
   function NameMatch(String) in line 61
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable spec defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable pattern defined in edu::umd::cs::findbugs::filter::NameMatch
      uses variable exact defined in edu::umd::cs::findbugs::filter::NameMatch
   variable exact in line 44
   variable pattern in line 46
   variable spec in line 43
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/OrMatcher.java
module edu::umd::cs::findbugs::filter::OrMatcher
   inherits from edu::umd::cs::findbugs::filter::CompoundMatcher
   function match(BugInstance) in line 31
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function toString() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 41
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function numberChildren() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function childIterator() defined in edu::umd::cs::findbugs::filter::CompoundMatcher
      uses function writeChildrenXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/PriorityMatcher.java
module edu::umd::cs::findbugs::filter::PriorityMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function equals(Object) in line 54
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function PriorityMatcher(String) defined in edu::umd::cs::findbugs::filter::PriorityMatcher
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function hashCode() in line 50
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function match(BugInstance) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function toString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function writeXML(XMLOutput,boolean) in line 62
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable priority defined in edu::umd::cs::findbugs::filter::PriorityMatcher
   function PriorityMatcher(String) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable priority in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/RelationalOp.java
module edu::umd::cs::findbugs::filter::RelationalOp
   abstract class
   function byName(String) in line 37
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   function check(Comparable< T >,Comparable< T >) in line 31
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getName() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 59
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function values() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   function RelationalOp(String) in line 49
      3 lines of code
      1 parameters
      1 conditional paths
   function RelationalOp(String,String) in line 52
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::filter::RelationalOp
   variable EQ in line 66
      protection public
   variable GEQ in line 90
      protection public
   variable GT in line 106
      protection public
   variable LEQ in line 74
      protection public
   variable LT in line 98
      protection public
   variable map in line 36
   variable NEQ in line 82
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/SignatureUtil.java
module edu::umd::cs::findbugs::filter::SignatureUtil
   function createFieldSignature(String) in line 47
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function typeToSignature(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
   function createMethodSignature(String,String) in line 29
      protection public
      17 lines of code
      2 parameters
      5 conditional paths
      uses function typeToSignature(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
   function scalarTypeToSiganture(String) in line 60
      22 lines of code
      1 parameters
      10 conditional paths
   function typeToSignature(String) in line 52
      7 lines of code
      1 parameters
      2 conditional paths
      uses function scalarTypeToSiganture(String) defined in edu::umd::cs::findbugs::filter::SignatureUtil
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/StringSetMatch.java
module edu::umd::cs::findbugs::filter::StringSetMatch
   function equals(Object) in line 44
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function hashCode() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function isEmpty() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function match(String) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function toString() in line 76
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   function StringSetMatch(String) in line 53
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable strings defined in edu::umd::cs::findbugs::filter::StringSetMatch
   variable strings in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/filter/VersionMatcher.java
module edu::umd::cs::findbugs::filter::VersionMatcher
   function equals(Object) in line 37
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function VersionMatcher(long,@NonNull RelationalOp) defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function hashCode() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
   function VersionMatcher(long,@NonNull RelationalOp) in line 43
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable relOp defined in edu::umd::cs::findbugs::filter::VersionMatcher
      uses variable version defined in edu::umd::cs::findbugs::filter::VersionMatcher
   variable relOp in line 30
   variable version in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FilterBugReporter.java
module edu::umd::cs::findbugs::FilterBugReporter
   inherits from edu::umd::cs::findbugs::DelegatingBugReporter
   function reportBug(BugInstance) in line 37
      protection public
      7 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FilterBugReporter
      uses variable filter defined in edu::umd::cs::findbugs::FilterBugReporter
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
      uses variable include defined in edu::umd::cs::findbugs::FilterBugReporter
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportBug(@NonNull BugInstance) defined in edu::umd::cs::findbugs::BugReporter
   function FilterBugReporter(BugReporter,Matcher,boolean) in line 30
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable filter defined in edu::umd::cs::findbugs::FilterBugReporter
      uses variable include defined in edu::umd::cs::findbugs::FilterBugReporter
   variable DEBUG in line 25
   variable filter in line 27
   variable include in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FindBugs.java
module edu::umd::cs::findbugs::FindBugs
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   inherits from edu::umd::cs::findbugs::ExitCodes
   inherits from edu::umd::cs::findbugs::IFindBugsEngine
   function addClassObserver(IClassObserver) in line 608
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs
   function addCollectionToClasspath(Collection< String >) in line 1026
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable analysisContext defined in edu::umd::cs::findbugs::FindBugs
      uses function addClasspathEntry(String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function addFilter(String,boolean) in line 594
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function configureFilter(DelegatingBugReporter,String,boolean) defined in edu::umd::cs::findbugs::FindBugs
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
   function configureAnalysisFeatures() in line 892
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugs
      uses variable analysisContext defined in edu::umd::cs::findbugs::FindBugs
   function configureBugCollection(IFindBugsEngine) in line 1582
      protection public
      22 lines of code
      1 parameters
      4 conditional paths
      uses function getBugReporter() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getRealBugReporter() defined in edu::umd::cs::findbugs::BugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable project defined in edu::umd::cs::findbugs::FindBugs
      uses function getProject() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function getProjectName() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function getTimestamp() defined in edu::umd::cs::findbugs::Project
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(String) defined in edu::umd::cs::findbugs::ProjectStats
   function configureFilter(DelegatingBugReporter,String,boolean) in line 1568
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function getDelegate() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function setDelegate(BugReporter) defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function configureTrainingDatabases(IFindBugsEngine) in line 903
      protection public
      24 lines of code
      1 parameters
      5 conditional paths
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::FindBugs
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::FindBugs
   function createEngine(TextUICommandLine,String[]) in line 1461
      7 lines of code
      2 parameters
      1 conditional paths
      uses function FindBugs() defined in edu::umd::cs::findbugs::FindBugs
      uses function processCommandLine(TextUICommandLine,String[],IFindBugsEngine) defined in edu::umd::cs::findbugs::FindBugs
   function createExecutionPlan() in line 933
      25 lines of code
      0 parameters
      2 conditional paths
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs
      uses function setDetectorFactoryChooser(DetectorFactoryChooser) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function isDetectorEnabled(IFindBugsEngine,DetectorFactory) defined in edu::umd::cs::findbugs::FindBugs
      uses function setEnabledButNonReporting(boolean) defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function addPlugin(Plugin) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function build() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function emitTrainingOutput() in line 824
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function enableTrainingInput(String) in line 637
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::FindBugs
   function enableTrainingOutput(String) in line 629
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::FindBugs
   function examineClass(Detector[],String) in line 1197
      105 lines of code
      2 parameters
      19 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable TIMEDEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs
      uses variable analysisContext defined in edu::umd::cs::findbugs::FindBugs
      uses function getClassContext(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function visitClassContext(ClassContext) defined in edu::umd::cs::findbugs::Detector
      uses variable TIMEQUANTUM defined in edu::umd::cs::findbugs::FindBugs
      uses variable detectorTimings defined in edu::umd::cs::findbugs::FindBugs
      uses function reportRecoverableDetectorException(String,Detector,Exception) defined in edu::umd::cs::findbugs::FindBugs
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses function reportRecoverableException(String,Exception) defined in edu::umd::cs::findbugs::FindBugs
      uses variable progressCallback defined in edu::umd::cs::findbugs::FindBugs
      uses function finishClass() defined in edu::umd::cs::findbugs::FindBugsProgress
   function execute() in line 676
      protection public
      116 lines of code
      0 parameters
      12 conditional paths
      uses variable analysisContext defined in edu::umd::cs::findbugs::FindBugs
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function setSourcePath(List< String >) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable project defined in edu::umd::cs::findbugs::FindBugs
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses variable sourceInfoFile defined in edu::umd::cs::findbugs::FindBugs
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function read(InputStream) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::FindBugs
      uses function configureTrainingDatabases(IFindBugsEngine) defined in edu::umd::cs::findbugs::FindBugs
      uses function configureAnalysisFeatures() defined in edu::umd::cs::findbugs::FindBugs
      uses function configureBugCollection(IFindBugsEngine) defined in edu::umd::cs::findbugs::FindBugs
      uses function createExecutionPlan() defined in edu::umd::cs::findbugs::FindBugs
      uses function clearRepository() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses variable progressCallback defined in edu::umd::cs::findbugs::FindBugs
      uses function reportNumberOfArchives(int) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function setRepositoryClassPath() defined in edu::umd::cs::findbugs::FindBugs
      uses function scanArchiveOrDirectory(ArchiveWorkListItem,LinkedList< ArchiveWorkListItem >,List< String >,List< String >) defined in edu::umd::cs::findbugs::FindBugs
      uses function addCollectionToClasspath(Collection< String >) defined in edu::umd::cs::findbugs::FindBugs
      uses function initDatabases() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable detectorTimings defined in edu::umd::cs::findbugs::FindBugs
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs
      uses function passIterator() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getSubtypes() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getAllClasses() defined in edu::umd::cs::findbugs::ba::ch::Subtypes
      uses function executeAnalysisPass(AnalysisPass,List< String >) defined in edu::umd::cs::findbugs::FindBugs
      uses function clearClassContextCache() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getClassContextStats() defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function finish() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function executeAnalysisPass(AnalysisPass,List< String >) in line 1141
      49 lines of code
      2 parameters
      8 conditional paths
      uses variable progressCallback defined in edu::umd::cs::findbugs::FindBugs
      uses function startAnalysis(int) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses variable passCount defined in edu::umd::cs::findbugs::FindBugs
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function examineClass(Detector[],String) defined in edu::umd::cs::findbugs::FindBugs
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable detectorTimings defined in edu::umd::cs::findbugs::FindBugs
      uses function finishPerClassAnalysis() defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function reportFinal(Detector[]) defined in edu::umd::cs::findbugs::FindBugs
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function getBugCount() in line 803
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function getBugCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getBugReporter() in line 558
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
   function getCurrentClass() in line 796
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentClass defined in edu::umd::cs::findbugs::FindBugs
   function getErrorCount() in line 810
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function getErrorCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getHome() in line 875
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable home defined in edu::umd::cs::findbugs::FindBugs
   function getMissingClassCount() in line 817
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function getMissingClassCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getProject() in line 580
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs
   function getProjectName() in line 1608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::FindBugs
   function getReleaseName() in line 655
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::FindBugs
   function getTrainingInputDir() in line 840
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::FindBugs
   function getTrainingOutputDir() in line 847
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::FindBugs
   function getUserPreferences() in line 831
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable userPreferences defined in edu::umd::cs::findbugs::FindBugs
   function isDetectorEnabled(IFindBugsEngine,DetectorFactory) in line 966
      protection public
      26 lines of code
      2 parameters
      7 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isEnabled() defined in edu::umd::cs::findbugs::Plugin
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function isDetectorEnabled(DetectorFactory) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function isEnabledForCurrentJRE() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable INTERPROCEDURAL_ANALYSIS defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function emitTrainingOutput() defined in edu::umd::cs::findbugs::IFindBugsEngine
   function main(String[]) in line 1427
      protection public
      33 lines of code
      1 parameters
      5 conditional paths
      uses function createEngine(TextUICommandLine,String[]) defined in edu::umd::cs::findbugs::FindBugs
      uses function runMain(IFindBugsEngine,TextUICommandLine) defined in edu::umd::cs::findbugs::FindBugs
      uses variable currentClass defined in edu::umd::cs::findbugs::FindBugs
      uses function getCurrentClass() defined in edu::umd::cs::findbugs::FindBugs
      uses variable SUPPORT_EMAIL defined in edu::umd::cs::findbugs::Version
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function parseClass(String,InputStream,String) in line 1333
      5 lines of code
      3 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function parseFromStream(InputStream,String) defined in edu::umd::cs::findbugs::FindBugs
   function parseClass(URL) in line 1342
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function parseFromStream(InputStream,String) defined in edu::umd::cs::findbugs::FindBugs
   function parseFromStream(InputStream,String) in line 1359
      11 lines of code
      2 parameters
      4 conditional paths
      uses variable userPreferences defined in edu::umd::cs::findbugs::FindBugs
   function processCommandLine(TextUICommandLine,String[],IFindBugsEngine) in line 1478
      protection public
      30 lines of code
      3 parameters
      4 conditional paths
      uses function showHelp(TextUICommandLine) defined in edu::umd::cs::findbugs::FindBugs
      uses variable project defined in edu::umd::cs::findbugs::FindBugs
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
   function reportFinal(Detector[]) in line 1322
      7 lines of code
      1 parameters
      3 conditional paths
   function reportRecoverableDetectorException(String,Detector,Exception) in line 1310
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function reportRecoverableException(String,Exception) in line 1303
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function runMain(IFindBugsEngine,TextUICommandLine) in line 1518
      protection public
      33 lines of code
      2 parameters
      10 conditional paths
      uses variable ERROR_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable MISSING_CLASS_FLAG defined in edu::umd::cs::findbugs::ExitCodes
      uses variable BUGS_FOUND_FLAG defined in edu::umd::cs::findbugs::ExitCodes
   function scanArchiveOrDirectory(ArchiveWorkListItem,LinkedList< ArchiveWorkListItem >,List< String >,List< String >) in line 1050
      83 lines of code
      4 parameters
      18 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable DEBUG defined in edu::umd::cs::findbugs::ba::URLClassPathRepository
      uses function getNextClass() defined in edu::umd::cs::findbugs::FindBugs::ClassProducer
      uses variable analysisContext defined in edu::umd::cs::findbugs::FindBugs
      uses function addApplicationClassToRepository(JavaClass) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses variable progressCallback defined in edu::umd::cs::findbugs::FindBugs
      uses function finishArchive() defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function containsSourceFiles() defined in edu::umd::cs::findbugs::FindBugs::ClassProducer
      uses variable project defined in edu::umd::cs::findbugs::FindBugs
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addTimestamp(long) defined in edu::umd::cs::findbugs::Project
      uses function getLastModificationTime() defined in edu::umd::cs::findbugs::FindBugs::ClassProducer
      uses function close() defined in edu::umd::cs::findbugs::FindBugs::ClassProducer
   function setAbridgedMessages(boolean) in line 1623
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) in line 645
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugs
   function setBugReporter(BugReporter) in line 565
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function addClassObserver(IClassObserver) defined in edu::umd::cs::findbugs::FindBugs
   function setClassScreener(IClassScreener) in line 615
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs
   function setDetectorFactoryCollection(DetectorFactoryCollection) in line 551
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs
   function setHome(String) in line 868
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable home defined in edu::umd::cs::findbugs::FindBugs
   function setProgressCallback(FindBugsProgress) in line 587
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable progressCallback defined in edu::umd::cs::findbugs::FindBugs
   function setProject(Project) in line 573
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs
      uses function duplicate() defined in edu::umd::cs::findbugs::Project
   function setProjectName(String) in line 1615
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::FindBugs
   function setRelaxedReportingMode(boolean) in line 622
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::FindBugs
   function setReleaseName(String) in line 662
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::FindBugs
   function setRepositoryClassPath() in line 997
      20 lines of code
      0 parameters
      3 conditional paths
      uses function addCollectionToClasspath(Collection< String >) defined in edu::umd::cs::findbugs::FindBugs
      uses variable project defined in edu::umd::cs::findbugs::FindBugs
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function getImplicitClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses variable analysisContext defined in edu::umd::cs::findbugs::FindBugs
      uses function addClasspathEntry(String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function setScanNestedArchives(boolean) in line 861
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSourceInfoFile(String) in line 669
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceInfoFile defined in edu::umd::cs::findbugs::FindBugs
   function setUserPreferences(UserPreferences) in line 601
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userPreferences defined in edu::umd::cs::findbugs::FindBugs
   function showCommandLineOptions() in line 1555
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function showCommandLineOptions(TextUICommandLine) in line 1559
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function showHelp(TextUICommandLine) in line 1510
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function showSynopsis() defined in edu::umd::cs::findbugs::FindBugs
      uses function showCommandLineOptions() defined in edu::umd::cs::findbugs::FindBugs
   function showSynopsis() in line 1564
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function useTrainingInput() in line 854
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FindBugs() in line 514
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
   function FindBugs(BugReporter,Project) in line 536
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs
      uses variable project defined in edu::umd::cs::findbugs::FindBugs
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::FindBugs
      uses function setProject(Project) defined in edu::umd::cs::findbugs::FindBugs
   variable analysisContext in line 491
   variable bugReporter in line 482
   variable classObserverList in line 487
   variable classScreener in line 490
   variable currentClass in line 492
   variable DEBUG in line 460
      protection public
   variable DEFAULT_EFFORT in line 425
      protection public
   variable detectorFactoryCollection in line 485
   variable detectorTimings in line 493
   variable emitTrainingOutput in line 495
   variable executionPlan in line 488
   variable home in line 467
   variable knownURLProtocolSet in line 474
      protection public
   variable LESS_EFFORT in line 413
      protection public
   variable MAX_EFFORT in line 448
      protection public
   variable MIN_EFFORT in line 401
      protection public
   variable MORE_EFFORT in line 437
      protection public
   variable passCount in line 502
   variable progressCallback in line 489
   variable project in line 484
   variable projectName in line 500
   variable relaxedReportingMode in line 483
   variable releaseName in line 499
   variable settingList in line 498
   variable sourceInfoFile in line 503
   variable TIMEDEBUG in line 461
      protection public
   variable TIMEQUANTUM in line 462
      protection public
   variable trainingInputDir in line 496
   variable trainingOutputDir in line 497
   variable userPreferences in line 486
   variable useTrainingInput in line 494
module edu::umd::cs::findbugs::FindBugs::NoCloseInputStream
   inherits from java::io::DataInputStream
   function close() in line 105
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function NoCloseInputStream(InputStream) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::FindBugs::ArchiveWorkListItem
   function getFileName() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isExplicit() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ArchiveWorkListItem(String,boolean) in line 125
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable explicit in line 115
   variable fileName in line 114
module edu::umd::cs::findbugs::FindBugs::ClassProducer
   function close() in line 172
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function containsSourceFiles() in line 162
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getLastModificationTime() in line 168
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNextClass() in line 157
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::FindBugs::SingleClassProducer
   inherits from edu::umd::cs::findbugs::FindBugs::ClassProducer
   function close() in line 218
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function containsSourceFiles() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLastModificationTime() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNextClass() in line 190
      protection public
      22 lines of code
      0 parameters
      5 conditional paths
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses function parseFromStream(InputStream,String) defined in edu::umd::cs::findbugs::FindBugs
   function SingleClassProducer(URL) in line 186
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable url in line 179
module edu::umd::cs::findbugs::FindBugs::ZipClassProducer
   inherits from edu::umd::cs::findbugs::FindBugs::ClassProducer
   function close() in line 305
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
   function containsSourceFiles() in line 301
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLastModificationTime() in line 318
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function getNextClass() in line 256
      protection public
      44 lines of code
      0 parameters
      13 conditional paths
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses function parseClass(String,InputStream,String) defined in edu::umd::cs::findbugs::FindBugs
      uses function NoCloseInputStream(InputStream) defined in edu::umd::cs::findbugs::FindBugs::NoCloseInputStream
      uses variable ARCHIVE_EXTENSION_SET defined in edu::umd::cs::findbugs::util::Archive
   function ZipClassProducer(URL,LinkedList< ArchiveWorkListItem >,List< String >) in line 242
      protection public
      12 lines of code
      3 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   variable additionalAuxClasspathEntryList in line 236
   variable archiveWorkList in line 235
   variable containsSourceFiles in line 238
   variable time in line 239
   variable url in line 234
   variable zipInputStream in line 237
   variable zipTime in line 240
module edu::umd::cs::findbugs::FindBugs::DirectoryClassProducer
   inherits from edu::umd::cs::findbugs::FindBugs::ClassProducer
   function close() in line 389
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function containsSourceFiles() in line 385
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getLastModificationTime() in line 396
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNextClass() in line 358
      protection public
      26 lines of code
      0 parameters
      7 conditional paths
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses function parseClass(String,InputStream,String) defined in edu::umd::cs::findbugs::FindBugs
   function DirectoryClassProducer(String,List< String >) in line 335
      protection public
      22 lines of code
      2 parameters
      3 conditional paths
      uses function search() defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses function fileNameIterator() defined in edu::umd::cs::findbugs::RecursiveFileSearch
   variable additionalAuxClasspathEntryList in line 330
   variable containsSourceFiles in line 332
   variable dirName in line 329
   variable rfsIter in line 331
   variable time in line 333
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FindBugs2.java
module edu::umd::cs::findbugs::FindBugs2
   inherits from edu::umd::cs::findbugs::IFindBugsEngine
   function addClassObserver(IClassObserver) in line 213
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs2
   function addFilter(String,boolean) in line 220
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
   function analyzeApplication() in line 606
      90 lines of code
      0 parameters
      14 conditional paths
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable referencedClassSet defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses function predictPassCount(int   []) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function passIterator() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function instantiateDetector2sInPass(BugReporter) defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function sortByCallGraph(Collection< ClassDescriptor >) defined in edu::umd::cs::findbugs::FindBugs2
      uses function startAnalysis(int) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses variable currentClassName defined in edu::umd::cs::findbugs::FindBugs2
      uses function notifyClassObservers(ClassDescriptor) defined in edu::umd::cs::findbugs::FindBugs2
      uses function logRecoverableException(ClassDescriptor,Detector2,Throwable) defined in edu::umd::cs::findbugs::FindBugs2
      uses function getErrorLogger() defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
      uses function finishClass() defined in edu::umd::cs::findbugs::FindBugsProgress
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function finishPerClassAnalysis() defined in edu::umd::cs::findbugs::FindBugsProgress
      uses function finish() defined in edu::umd::cs::findbugs::DelegatingBugReporter
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::DelegatingBugReporter
   function buildClassPath() in line 420
      34 lines of code
      0 parameters
      6 conditional paths
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPathBuilder(IErrorLogger) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFileArray() defined in edu::umd::cs::findbugs::Project
      uses function addCodeBase(ICodeBaseLocator,boolean) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses function createFilesystemCodeBaseLocator(String) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
      uses function scanNestedArchives(boolean) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::FindBugs2
      uses function build(IClassPath,IClassPathBuilderProgress) defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses function getAppClassList() defined in edu::umd::cs::findbugs::classfile::IClassPathBuilder
      uses function appCodeBaseIterator() defined in edu::umd::cs::findbugs::classfile::IClassPath
      uses function containsSourceFiles() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function getPathName() defined in edu::umd::cs::findbugs::classfile::ICodeBase
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addTimestamp(long) defined in edu::umd::cs::findbugs::Project
      uses function getLastModifiedTime() defined in edu::umd::cs::findbugs::classfile::ICodeBase
   function buildReferencedClassSet() in line 455
      55 lines of code
      0 parameters
      9 conditional paths
      uses variable referencedClassSet defined in edu::umd::cs::findbugs::FindBugs2
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses function getClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getReferencedClassDescriptorList() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getSuperclassDescriptor() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses function getInterfaceDescriptorList() defined in edu::umd::cs::findbugs::classfile::analysis::ClassNameAndSuperclassInfo
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function configureAnalysisFeatures() in line 555
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable analysisFeatureSettingList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function createAnalysisCache() in line 399
      13 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisCache defined in edu::umd::cs::findbugs::FindBugs2
      uses function createAnalysisCache(IClassPath,IErrorLogger) defined in edu::umd::cs::findbugs::classfile::IClassFactory
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::EngineRegistrar
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::asm::EngineRegistrar
      uses function registerAnalysisEngines(IAnalysisCache) defined in edu::umd::cs::findbugs::classfile::engine::bcel::EngineRegistrar
   function createAnalysisContext() in line 531
      20 lines of code
      0 parameters
      2 conditional paths
      uses function clearRepository() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function setAppClassList(List< ClassDescriptor >) defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses variable appClassList defined in edu::umd::cs::findbugs::FindBugs2
      uses variable sourceInfoFileName defined in edu::umd::cs::findbugs::FindBugs2
      uses function getSourceInfoMap() defined in edu::umd::cs::findbugs::ba::AnalysisCacheToAnalysisContextAdapter
      uses function read(InputStream) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
   function createClassPath() in line 364
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPath() defined in edu::umd::cs::findbugs::classfile::IClassFactory
   function createExecutionPlan() in line 566
      36 lines of code
      0 parameters
      4 conditional paths
      uses variable executionPlan defined in edu::umd::cs::findbugs::FindBugs2
      uses function setEnabledButNonReporting(boolean) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function setDetectorFactoryChooser(DetectorFactoryChooser) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function addPlugin(Plugin) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function build() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function emitTrainingOutput() in line 350
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::FindBugs2
   function enableTrainingInput(String) in line 227
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::FindBugs2
   function enableTrainingOutput(String) in line 234
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::FindBugs2
   function execute() in line 145
      protection public
      50 lines of code
      0 parameters
      2 conditional paths
      uses variable classFactory defined in edu::umd::cs::findbugs::FindBugs2
      uses function createClassPath() defined in edu::umd::cs::findbugs::FindBugs2
      uses function createAnalysisCache() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable progress defined in edu::umd::cs::findbugs::FindBugs2
      uses function reportNumberOfArchives(int) defined in edu::umd::cs::findbugs::FindBugsProgress
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function buildClassPath() defined in edu::umd::cs::findbugs::FindBugs2
      uses function buildReferencedClassSet() defined in edu::umd::cs::findbugs::FindBugs2
      uses function createAnalysisContext() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::FindBugs2
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::FindBugs2
      uses function configureAnalysisFeatures() defined in edu::umd::cs::findbugs::FindBugs2
      uses function createExecutionPlan() defined in edu::umd::cs::findbugs::FindBugs2
      uses function analyzeApplication() defined in edu::umd::cs::findbugs::FindBugs2
      uses variable classPath defined in edu::umd::cs::findbugs::FindBugs2
      uses function close() defined in edu::umd::cs::findbugs::classfile::IClassPath
   function getBugCount() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getBugCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getBugReporter() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
   function getCurrentClass() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentClassName defined in edu::umd::cs::findbugs::FindBugs2
   function getErrorCount() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getErrorCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getMissingClassCount() in line 262
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function getMissingClassCount() defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
   function getProject() in line 206
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function getProjectName() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::FindBugs2
   function getReleaseName() in line 270
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::FindBugs2
   function getTrainingInputDir() in line 371
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::FindBugs2
   function getTrainingOutputDir() in line 378
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::FindBugs2
   function getUserPreferences() in line 357
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userPreferences defined in edu::umd::cs::findbugs::FindBugs2
   function logRecoverableException(ClassDescriptor,Detector2,Throwable) in line 716
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function logError(String) defined in edu::umd::cs::findbugs::ErrorCountingBugReporter
      uses function toDottedClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
      uses function getDetectorClassName() defined in edu::umd::cs::findbugs::Detector2
   function main(String[]) in line 722
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses function FindBugs2() defined in edu::umd::cs::findbugs::FindBugs2
   function notifyClassObservers(ClassDescriptor) in line 702
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable classObserverList defined in edu::umd::cs::findbugs::FindBugs2
   function setAbridgedMessages(boolean) in line 737
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::FindBugs2
   function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) in line 284
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setBugReporter(BugReporter) in line 291
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugReporter defined in edu::umd::cs::findbugs::FindBugs2
      uses function addClassObserver(IClassObserver) defined in edu::umd::cs::findbugs::FindBugs2
   function setClassScreener(IClassScreener) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classScreener defined in edu::umd::cs::findbugs::FindBugs2
   function setDetectorFactoryCollection(DetectorFactoryCollection) in line 131
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorFactoryCollection defined in edu::umd::cs::findbugs::FindBugs2
   function setProgressCallback(FindBugsProgress) in line 306
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProject(Project) in line 313
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugs2
   function setProjectName(String) in line 277
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::FindBugs2
   function setRelaxedReportingMode(boolean) in line 320
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::FindBugs2
   function setReleaseName(String) in line 327
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::FindBugs2
   function setScanNestedArchives(boolean) in line 392
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::FindBugs2
   function setSourceInfoFile(String) in line 336
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setUserPreferences(UserPreferences) in line 343
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userPreferences defined in edu::umd::cs::findbugs::FindBugs2
   function sortByCallGraph(Collection< ClassDescriptor >) in line 511
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnalysis(Class< E >,ClassDescriptor) defined in edu::umd::cs::findbugs::classfile::IAnalysisCache
      uses function getReferencedClassDescriptorList() defined in edu::umd::cs::findbugs::classfile::analysis::ClassInfo
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::ClassDescriptor
   function useTrainingInput() in line 385
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::FindBugs2
   function FindBugs2() in line 105
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   variable abridgedMessages in line 95
   variable analysisCache in line 83
   variable analysisFeatureSettingList in line 93
   variable appClassList in line 84
   variable bugReporter in line 79
   variable classFactory in line 81
   variable classObserverList in line 78
   variable classPath in line 82
   variable classScreener in line 99
   variable currentClassName in line 89
   variable DEBUG in line 76
      protection public
   variable detectorFactoryCollection in line 86
   variable executionPlan in line 87
   variable progress in line 98
   variable project in line 80
   variable projectName in line 91
   variable referencedClassSet in line 85
   variable relaxedReportingMode in line 94
   variable releaseName in line 90
   variable scanNestedArchives in line 100
   variable sourceInfoFileName in line 92
   variable trainingInputDir in line 96
   variable trainingOutputDir in line 97
   variable userPreferences in line 88
   variable VERBOSE in line 75
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FindBugsAnalysisFeatures.java
module edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   abstract class
   function isRelaxedMode() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable RELAXED_REPORTING_MODE defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   function setRelaxedMode(boolean) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable RELAXED_REPORTING_MODE defined in edu::umd::cs::findbugs::FindBugsAnalysisFeatures
   variable INTERPROCEDURAL_ANALYSIS in line 50
      protection public
   variable INTERPROCEDURAL_ANALYSIS_OF_REFERENCED_CLASSES in line 51
      protection public
   variable RELAXED_REPORTING_MODE in line 45
      protection public
   variable START in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FindBugsCommandLine.java
module edu::umd::cs::findbugs::FindBugsCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   abstract class
   function getProject() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function getSettingList() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function handleOption(String,String) in line 76
      27 lines of code
      2 parameters
      11 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable LESS_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable MORE_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function handleOptionWithArgument(String,String) in line 105
      18 lines of code
      2 parameters
      5 conditional paths
      uses function setPluginList(URL[]) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function readProject(String) defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function readProject(String) in line 131
      54 lines of code
      1 parameters
      6 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function read(String) defined in edu::umd::cs::findbugs::Project
   function FindBugsCommandLine() in line 55
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
      uses function addOption(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitchWithOptionalExtraPart(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitch(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   variable project in line 49
   variable settingList in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FindBugsDisplayFeatures.java
module edu::umd::cs::findbugs::FindBugsDisplayFeatures
   function isAbridgedMessages() in line 29
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::FindBugsDisplayFeatures
   function setAbridgedMessages(boolean) in line 33
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable abridgedMessages defined in edu::umd::cs::findbugs::FindBugsDisplayFeatures
   variable abridgedMessages in line 27
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FindBugsMessageFormat.java
module edu::umd::cs::findbugs::FindBugsMessageFormat
   function format(BugAnnotation[],ClassAnnotation) in line 60
      protection public
      56 lines of code
      2 parameters
      9 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::FindBugsMessageFormat
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::BugAnnotation
   function FindBugsMessageFormat(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable pattern defined in edu::umd::cs::findbugs::FindBugsMessageFormat
   variable pattern in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FindBugsProgress.java
module edu::umd::cs::findbugs::FindBugsProgress
   inherits from edu::umd::cs::findbugs::classfile::IClassPathBuilderProgress
   function finishArchive() in line 43
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 61
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int   []) in line 49
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startAnalysis(int) in line 56
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Footprint.java
module edu::umd::cs::findbugs::Footprint
   function getClockTime() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
   function getCollectionTime() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
   function getCpuTime() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
   function getPeakMemory() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
   function main(String[]) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function Footprint() defined in edu::umd::cs::findbugs::Footprint
   function pullData() in line 63
      18 lines of code
      0 parameters
      4 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses function getProcessCpuTime() defined in edu::umd::cs::findbugs::Footprint::OperatingSystemBeanWrapper
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
      uses function getPeakUsage() defined in edu::umd::cs::findbugs::Footprint::MemoryBeanWrapper
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
      uses function getCollectionTime() defined in edu::umd::cs::findbugs::Footprint::CollectionBeanWrapper
   function toString() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable peakMem defined in edu::umd::cs::findbugs::Footprint
   function Footprint() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function pullData() defined in edu::umd::cs::findbugs::Footprint
   function Footprint(Footprint) in line 49
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function pullData() defined in edu::umd::cs::findbugs::Footprint
      uses variable cpuTime defined in edu::umd::cs::findbugs::Footprint
      uses variable clockTime defined in edu::umd::cs::findbugs::Footprint
      uses variable collectionTime defined in edu::umd::cs::findbugs::Footprint
   variable clockTime in line 40
   variable collectionTime in line 42
   variable cpuTime in line 39
   variable peakMem in line 41
module edu::umd::cs::findbugs::Footprint::MemoryBeanWrapper
   function getPeakUsage() in line 113
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
module edu::umd::cs::findbugs::Footprint::OperatingSystemBeanWrapper
   function getProcessCpuTime() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::Footprint::CollectionBeanWrapper
   function getCollectionTime() in line 149
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/FuzzyBugComparator.java
module edu::umd::cs::findbugs::FuzzyBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 141
      protection public
      68 lines of code
      2 parameters
      18 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCode(String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses variable bugCollectionMap defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function FilteringBugAnnotationIterator(Iterator< BugAnnotation >) defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareClasses(BugCollection,BugCollection,ClassAnnotation,ClassAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareMethods(BugCollection,BugCollection,MethodAnnotation,MethodAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareSourceLines(BugCollection,BugCollection,SourceLineAnnotation,SourceLineAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function compareClasses(BugCollection,BugCollection,ClassAnnotation,ClassAnnotation) in line 231
      protection public
      7 lines of code
      4 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareClassesByName(BugCollection,BugCollection,String,String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function compareClassesByName(BugCollection,BugCollection,String,String) in line 240
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function compareMethods(BugCollection,BugCollection,MethodAnnotation,MethodAnnotation) in line 260
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function compareNullElements(Object,Object) in line 222
      8 lines of code
      2 parameters
      3 conditional paths
   function compareSourceLines(BugCollection,BugCollection,SourceLineAnnotation,SourceLineAnnotation) in line 286
      protection public
      12 lines of code
      4 parameters
      3 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function compareClassesByName(BugCollection,BugCollection,String,String) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getCode(String) in line 214
      7 lines of code
      1 parameters
      2 conditional paths
   function ignore(BugAnnotation) in line 333
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable significantDescriptionSet defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function getDescription() defined in edu::umd::cs::findbugs::BugAnnotation
   function registerBugCollection(BugCollection) in line 130
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function rewriteClassName(String) in line 252
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
   function setClassNameRewriter(ClassNameRewriter) in line 137
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function FuzzyBugComparator() in line 118
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FuzzyBugComparator
   variable bugCollectionMap in line 109
   variable classNameRewriter in line 111
   variable DEBUG in line 49
   variable NUM_CONTEXT_OPCODES in line 275
   variable serialVersionUID in line 54
   variable significantDescriptionSet in line 300
   variable USE_HASHES in line 52
module edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   inherits from java::util::Iterator
   function findNext() in line 68
      11 lines of code
      0 parameters
      4 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function ignore(BugAnnotation) defined in edu::umd::cs::findbugs::FuzzyBugComparator
   function hasNext() in line 83
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
      uses function next() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   function next() in line 91
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::FuzzyBugComparator::FilteringBugAnnotationIterator
   function remove() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilteringBugAnnotationIterator(Iterator< BugAnnotation >) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/AbstractDepthFirstSearch.java
module edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
   inherits from edu::umd::cs::findbugs::graph::DFSEdgeTypes
   abstract class
   function classifyUnknownEdges() in line 336
      23 lines of code
      0 parameters
      1 conditional paths
   function containsCycle() in line 184
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
   function getColor(VertexType) in line 370
      3 lines of code
      1 parameters
      1 conditional paths
   function getDFSEdgeType(EdgeType) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDiscoveryTime(VertexType) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFinishTime(VertexType) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getFinishTimeList() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNextSearchTreeRoot() in line 133
      9 lines of code
      0 parameters
      1 conditional paths
   function getSource(EdgeType) in line 123
      1 lines of code
      1 parameters
      1 conditional paths
   function getTarget(EdgeType) in line 118
      1 lines of code
      1 parameters
      1 conditional paths
   function outgoingEdgeIterator(GraphType,VertexType) in line 113
      1 lines of code
      2 parameters
      1 conditional paths
   function search() in line 169
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function setColor(VertexType,int) in line 360
      3 lines of code
      2 parameters
      1 conditional paths
   function setDFSEdgeType(EdgeType,int) in line 395
      3 lines of code
      2 parameters
      1 conditional paths
   function setDiscoveryTime(VertexType,int) in line 387
      3 lines of code
      2 parameters
      1 conditional paths
   function setFinishTime(VertexType,int) in line 391
      3 lines of code
      2 parameters
      1 conditional paths
   function setSearchTreeCallback(SearchTreeCallback< VertexType >) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setVertexChooser(VertexChooser< VertexType >) in line 151
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function topologicalSortIterator() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitAll() in line 269
      32 lines of code
      0 parameters
      1 conditional paths
   function visitMe(VertexType) in line 382
      4 lines of code
      1 parameters
      1 conditional paths
   function visitSuccessor(ArrayList< Visit >,EdgeType) in line 302
      32 lines of code
      2 parameters
      1 conditional paths
   function AbstractDepthFirstSearch(GraphType) in line 90
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   variable BLACK in line 82
   variable colorList in line 58
   variable DEBUG in line 55
      protection public
   variable dfsEdgeTypeList in line 61
   variable discoveryTimeList in line 59
   variable finishTimeList in line 60
   variable graph in line 57
   variable GRAY in line 76
   variable searchTreeCallback in line 65
   variable timestamp in line 62
   variable topologicalSortList in line 63
   variable vertexChooser in line 64
   variable WHITE in line 70
module edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function getNextEdge() in line 264
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function getVertex() in line 256
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable vertex defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function hasNextEdge() in line 260
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
   function Visit(VertexType) in line 246
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable vertex defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
      uses variable outgoingEdgeIterator defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch::Visit
      uses variable graph defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function setColor(VertexType,int) defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses variable GRAY defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function setDiscoveryTime(VertexType,int) defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses variable timestamp defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
   variable outgoingEdgeIterator in line 244
   variable vertex in line 243
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/AbstractEdge.java
module edu::umd::cs::findbugs::graph::AbstractEdge
   inherits from GraphEdge< ActualEdgeType, VertexType >
   function compareTo(ActualEdgeType) in line 78
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 73
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getLabel() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSource() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function AbstractEdge(VertexType,VertexType) in line 47
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable label in line 38
   variable nextIncomingEdge in line 40
   variable nextOutgoingEdge in line 39
   variable source in line 36
   variable target in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/AbstractGraph.java
module edu::umd::cs::findbugs::graph::AbstractGraph
   inherits from Graph< EdgeType, VertexType >
   abstract class
   function addVertex(VertexType) in line 151
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function allocateEdge(VertexType,VertexType) in line 286
      1 lines of code
      2 parameters
      1 conditional paths
   function containsVertex(VertexType) in line 157
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function createEdge(VertexType,VertexType) in line 165
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function edgeIterator() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumEdgeLabels() in line 192
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumEdges() in line 135
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumIncomingEdges(VertexType) in line 226
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getNumOutgoingEdges(VertexType) in line 236
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
   function getNumVertexLabels() in line 184
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumVertices() in line 139
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function incomingEdgeIterator(VertexType) in line 222
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function lookupEdge(VertexType,VertexType) in line 174
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function outgoingEdgeIterator(VertexType) in line 218
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function predecessorIterator(final VertexType) in line 264
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(EdgeType) in line 200
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function removeVertex(VertexType) in line 207
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function setNumEdgeLabels(int) in line 196
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNumVertexLabels(int) in line 188
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function successorIterator(final VertexType) in line 246
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function vertexIterator() in line 147
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function AbstractGraph() in line 127
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   variable edgeList in line 118
   variable maxEdgeLabel in line 121
   variable maxVertexLabel in line 119
   variable nextVertexId in line 120
   variable vertexList in line 117
module edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   inherits from java::util::Iterator
   function hasNext() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function next() in line 68
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function remove() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function OutgoingEdgeIterator(VertexType) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable edge in line 58
module edu::umd::cs::findbugs::graph::AbstractGraph::IncomingEdgeIterator
   inherits from java::util::Iterator
   function hasNext() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function next() in line 100
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function hasNext() defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
      uses variable edge defined in edu::umd::cs::findbugs::graph::AbstractGraph::OutgoingEdgeIterator
   function remove() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function IncomingEdgeIterator(VertexType) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable edge in line 90
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/AbstractVertex.java
module edu::umd::cs::findbugs::graph::AbstractVertex
   inherits from edu::umd::cs::findbugs::graph::GraphVertex
   function compareTo(ActualVertexType) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function equals(Object) in line 61
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function getLabel() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function hashCode() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 52
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable id in line 35
   variable label in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/Graph.java
module edu::umd::cs::findbugs::graph::Graph
   function addVertex(VertexType) in line 62
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function containsVertex(VertexType) in line 70
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function createEdge(VertexType,VertexType) in line 80
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function edgeIterator() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumEdgeLabels() in line 109
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumEdges() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumIncomingEdges(VertexType) in line 150
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumOutgoingEdges(VertexType) in line 158
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getNumVertexLabels() in line 98
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getNumVertices() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function incomingEdgeIterator(VertexType) in line 142
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function lookupEdge(VertexType,VertexType) in line 91
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function outgoingEdgeIterator(VertexType) in line 134
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function predecessorIterator(VertexType) in line 176
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeEdge(EdgeType) in line 119
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function removeVertex(VertexType) in line 126
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNumEdgeLabels(int) in line 114
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setNumVertexLabels(int) in line 104
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function successorIterator(VertexType) in line 167
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function vertexIterator() in line 54
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/GraphEdge.java
module edu::umd::cs::findbugs::graph::GraphEdge
   inherits from Comparable
   function getLabel() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getSource() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTarget() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 52
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/GraphToolkit.java
module edu::umd::cs::findbugs::graph::GraphToolkit
   function copyEdge(EdgeType,EdgeType) in line 54
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function createGraph() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function duplicateVertex(VertexType) in line 46
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/GraphVertex.java
module edu::umd::cs::findbugs::graph::GraphVertex
   inherits from Comparable
   function getLabel() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setLabel(int) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/MergeVertices.java
module edu::umd::cs::findbugs::graph::MergeVertices
   function mergeVertices(Set< VertexType >,GraphType,VertexCombinator< VertexType >,GraphToolkit< GraphType, EdgeType, VertexType >) in line 53
      protection public
      55 lines of code
      4 parameters
      8 conditional paths
      uses function combineVertices(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::VertexCombinator
      uses function copyEdge(EdgeType,EdgeType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
   function MergeVertices() in line 42
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/SearchTree.java
module edu::umd::cs::findbugs::graph::SearchTree
   function addChild(SearchTree< VertexType >) in line 55
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   function addVerticesToSet(Set< VertexType >) in line 71
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function childIterator() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function addVerticesToSet(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function childIterator() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   function getVertex() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_vertex defined in edu::umd::cs::findbugs::graph::SearchTree
   function SearchTree(VertexType) in line 40
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable m_vertex defined in edu::umd::cs::findbugs::graph::SearchTree
      uses variable m_childList defined in edu::umd::cs::findbugs::graph::SearchTree
   variable m_childList in line 35
   variable m_vertex in line 34
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/SearchTreeBuilder.java
module edu::umd::cs::findbugs::graph::SearchTreeBuilder
   inherits from SearchTreeCallback< VertexType >
   function addToSearchTree(VertexType,VertexType) in line 46
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable searchTreeMap defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function createSearchTree(VertexType) defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function addChild(SearchTree< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function createSearchTree(VertexType) in line 61
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable searchTreeMap defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   function searchTreeIterator() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable searchTreeList defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   function startSearchTree(VertexType) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable searchTreeList defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses function createSearchTree(VertexType) defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
   variable searchTreeList in line 39
   variable searchTreeMap in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/SearchTreeCallback.java
module edu::umd::cs::findbugs::graph::SearchTreeCallback
   function addToSearchTree(VertexType,VertexType) in line 40
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startSearchTree(VertexType) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/StronglyConnectedComponents.java
module edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function copySearchTree(SearchTree< VertexType >,Transpose< GraphType, EdgeType, VertexType >) in line 136
      14 lines of code
      2 parameters
      2 conditional paths
      uses function getOriginalGraphVertex(VertexType) defined in edu::umd::cs::findbugs::graph::Transpose
      uses function getVertex() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function childIterator() defined in edu::umd::cs::findbugs::graph::SearchTree
      uses function addChild(SearchTree< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function findStronglyConnectedComponents(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) in line 68
      protection public
      59 lines of code
      2 parameters
      7 conditional paths
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses function setVertexChooser(VertexChooser< VertexType >) defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function search() defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function transpose(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) defined in edu::umd::cs::findbugs::graph::Transpose
      uses function getFinishTimeList() defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses variable DESCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses function setSearchTreeCallback(SearchTreeCallback< VertexType >) defined in AbstractDepthFirstSearch< GraphType, EdgeType, VertexType >
      uses function searchTreeIterator() defined in edu::umd::cs::findbugs::graph::SearchTreeBuilder
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses function copySearchTree(SearchTree< VertexType >,Transpose< GraphType, EdgeType, VertexType >) defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function searchTreeIterator() in line 157
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function setIterator() in line 194
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function SCCSetIterator() defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   function setVertexChooser(VertexChooser< VertexType >) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   function StronglyConnectedComponents() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable m_stronglyConnectedSearchTreeList defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
      uses variable m_vertexChooser defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   variable m_stronglyConnectedSearchTreeList in line 41
   variable m_vertexChooser in line 42
module edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   inherits from java::util::Iterator
   function hasNext() in line 172
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
   function next() in line 176
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
      uses function addVerticesToSet(Set< VertexType >) defined in edu::umd::cs::findbugs::graph::SearchTree
   function remove() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SCCSetIterator() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable m_searchTreeIterator defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents::SCCSetIterator
      uses function searchTreeIterator() defined in edu::umd::cs::findbugs::graph::StronglyConnectedComponents
   variable m_searchTreeIterator in line 166
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/Transpose.java
module edu::umd::cs::findbugs::graph::Transpose
   function getOriginalGraphVertex(VertexType) in line 117
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
   function getTransposedGraphVertex(VertexType) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
   function transpose(GraphType,GraphToolkit< GraphType, EdgeType, VertexType >) in line 56
      protection public
      42 lines of code
      2 parameters
      3 conditional paths
      uses function createGraph() defined in edu::umd::cs::findbugs::graph::GraphToolkit
      uses function duplicateVertex(VertexType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses function copyEdge(EdgeType,EdgeType) defined in edu::umd::cs::findbugs::graph::GraphToolkit
   function Transpose() in line 43
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable m_origToTransposeMap defined in edu::umd::cs::findbugs::graph::Transpose
      uses variable m_transposeToOrigMap defined in edu::umd::cs::findbugs::graph::Transpose
   variable m_origToTransposeMap in line 37
   variable m_transposeToOrigMap in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/VertexChooser.java
module edu::umd::cs::findbugs::graph::VertexChooser
   function isChosen(VertexType) in line 36
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/VertexCombinator.java
module edu::umd::cs::findbugs::graph::VertexCombinator
   function combineVertices(Set< VertexType >) in line 38
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/graph/VisitationTimeComparator.java
module edu::umd::cs::findbugs::graph::VisitationTimeComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(VertexType,VertexType) in line 65
      protection public
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable m_visitationTimeList defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable m_direction defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable ASCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
   function VisitationTimeComparator(int[],int) in line 57
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable m_visitationTimeList defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable m_direction defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable ASCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
      uses variable DESCENDING defined in edu::umd::cs::findbugs::graph::VisitationTimeComparator
   variable ASCENDING in line 40
      protection public
   variable DESCENDING in line 45
      protection public
   variable m_direction in line 48
   variable m_visitationTimeList in line 47
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/AboutDialog.java
module edu::umd::cs::findbugs::gui::AboutDialog
   inherits from javax::swing::JDialog
   function closeDialog(java.awt.event.WindowEvent) in line 233
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::AboutDialog
   function closeDialog() in line 237
      4 lines of code
      0 parameters
      1 conditional paths
   function editorPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent) in line 213
      11 lines of code
      1 parameters
      3 conditional paths
   function initComponents() in line 123
      89 lines of code
      0 parameters
      1 conditional paths
      uses variable aboutTabPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable aboutScrollPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable licenseScrollPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable acknowledgmentsScrollPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses function editorPaneHyperlinkUpdate(javax.swing.event.HyperlinkEvent) defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AboutDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 226
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::AboutDialog
   function processPage(javax.swing.JEditorPane,String) in line 81
      35 lines of code
      2 parameters
      7 conditional paths
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   function AboutDialog(JFrame,Logger,boolean) in line 58
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui::AboutDialog
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   variable aboutEditorPane in line 243
   variable aboutScrollPane in line 244
   variable aboutTabPane in line 245
   variable acknowldgementsEditorPane in line 246
   variable acknowledgmentsScrollPane in line 247
   variable jSeparator1 in line 248
   variable licenseEditorPane in line 249
   variable licenseScrollPane in line 250
   variable okButton in line 251
   variable serialVersionUID in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/AboutDialog.java
module edu::umd::cs::findbugs::gui2::AboutDialog
   inherits from javax::swing::JDialog
   function closeDialog(java.awt.event.WindowEvent) in line 232
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function closeDialog() in line 236
      4 lines of code
      0 parameters
      1 conditional paths
   function initComponents() in line 123
      88 lines of code
      0 parameters
      3 conditional paths
      uses variable aboutTabPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowledgmentsScrollPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 225
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui2::AboutDialog
   function processPage(javax.swing.JEditorPane,String) in line 81
      35 lines of code
      2 parameters
      7 conditional paths
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   function AboutDialog(JFrame,Logger,boolean) in line 58
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable aboutEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable licenseEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses variable acknowldgementsEditorPane defined in edu::umd::cs::findbugs::gui2::AboutDialog
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
   variable aboutEditorPane in line 242
   variable aboutScrollPane in line 243
   variable aboutTabPane in line 244
   variable acknowldgementsEditorPane in line 245
   variable acknowledgmentsScrollPane in line 246
   variable jSeparator1 in line 247
   variable licenseEditorPane in line 248
   variable licenseScrollPane in line 249
   variable okButton in line 250
   variable serialVersionUID in line 51
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/AnalysisErrorDialog.java
module edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   inherits from javax::swing::JDialog
   function addLine(String) in line 211
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable buf defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function clear() in line 217
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function closeDialog(java.awt.event.WindowEvent) in line 204
      4 lines of code
      1 parameters
      1 conditional paths
   function copyMenuItemActionPerformed(java.awt.event.ActionEvent) in line 185
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function editMenuActionPerformed(java.awt.event.ActionEvent) in line 193
      3 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable buf defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function generateContents() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function reportQueuedErrors() defined in edu::umd::cs::findbugs::BugReporter
   function initComponents() in line 59
      125 lines of code
      0 parameters
      1 conditional paths
      uses variable errorLabel defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable errorMessageScrollPane defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable leftSpacer defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable rightSpacer defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable analysisMenuBar defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable editMenu defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable selectAllMenuItem defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses variable copyMenuItem defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function closeDialog(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function editMenuActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function selectAllItemActionListener(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function copyMenuItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 197
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function selectAllItemActionListener(java.awt.event.ActionEvent) in line 189
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorMessageTextArea defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function AnalysisErrorDialog(java.awt.Frame,boolean,BugReporter) in line 43
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   variable analysisMenuBar in line 226
   variable buf in line 209
   variable copyMenuItem in line 227
   variable editMenu in line 228
   variable errorLabel in line 229
   variable errorMessageScrollPane in line 230
   variable errorMessageTextArea in line 231
   variable jSeparator1 in line 232
   variable leftSpacer in line 233
   variable okButton in line 234
   variable reporter in line 38
   variable rightSpacer in line 235
   variable selectAllMenuItem in line 236
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/AnalysisRun.java
module edu::umd::cs::findbugs::gui::AnalysisRun
   function createSummary(ProjectStats) in line 139
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable summary defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable logger defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses variable MISSING_SUMMARY_MESSAGE defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function execute(FindBugsProgress) in line 114
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable findBugs defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setProgressCallback(FindBugsProgress) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses variable frame defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getSettingList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function execute() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function createSummary(ProjectStats) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getProjectStats() defined in edu::umd::cs::findbugs::AbstractBugReporter
   function getBugInstances() in line 197
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
   function getFrame() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frame defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function getSummary() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable summary defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function getTreeModel(String) in line 217
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable treeModelMap defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function loadBugsFromFile(File) in line 155
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable project defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable summary defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getSummaryHTML() defined in edu::umd::cs::findbugs::SortedBugCollection
   function loadBugsFromInputStream(InputStream) in line 169
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable project defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable summary defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getSummaryHTML() defined in edu::umd::cs::findbugs::SortedBugCollection
   function reportAnalysisErrors() in line 186
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function errorsOccurred() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getErrorDialog() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   function saveBugsToFile(File) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugCollection() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable project defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function setTreeModel(String,DefaultTreeModel) in line 207
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable treeModelMap defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function AnalysisRun(Project,FindBugsFrame) in line 73
      protection public
      19 lines of code
      2 parameters
      2 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable frame defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getLogger() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::FindBugs2
      uses variable reporter defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setProject(Project) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::FindBugs2
   variable CREATE_SUMMARY in line 150
   variable findBugs in line 66
   variable frame in line 63
   variable logger in line 65
   variable MISSING_SUMMARY_MESSAGE in line 133
   variable project in line 62
   variable reporter in line 67
   variable summary in line 64
   variable treeModelMap in line 68
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/AnnotatedString.java
module edu::umd::cs::findbugs::gui::AnnotatedString
   function addButton(JFrame,String) in line 116
      10 lines of code
      2 parameters
      1 conditional paths
      uses function AnnotatedString(String) defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function toString() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonic() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function getMnemonic() in line 86
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function getMnemonicIndex() in line 101
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function main(String[]) in line 127
      protection public
      22 lines of code
      1 parameters
      1 conditional paths
      uses function addButton(JFrame,String) defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function toString() in line 59
      protection public
      19 lines of code
      0 parameters
      4 conditional paths
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function AnnotatedString(String) in line 51
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable myAnnotatedString defined in edu::umd::cs::findbugs::gui::AnnotatedString
   variable MAC_OS_X in line 46
   variable myAnnotatedString in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/BugCellRenderer.java
module edu::umd::cs::findbugs::gui::BugCellRenderer
   inherits from javax::swing::tree::DefaultTreeCellRenderer
   function getCellTextColor() in line 122
      22 lines of code
      0 parameters
      6 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function getTextNonSelectionColor() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getCellTextColor() defined in edu::umd::cs::findbugs::gui::BugCellRenderer
   function getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean) in line 77
      protection public
      39 lines of code
      7 parameters
      11 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable bugIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable classIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable methodIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable fieldIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable sourceFileIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses function getGroupType() defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses variable packageIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable bugGroupIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
   function instance() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::gui::BugCellRenderer
   function BugCellRenderer() in line 65
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable bugGroupIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable packageIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable bugIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable classIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable methodIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable fieldIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
      uses variable sourceFileIcon defined in edu::umd::cs::findbugs::gui::BugCellRenderer
   variable bugGroupIcon in line 56
   variable bugIcon in line 58
   variable classIcon in line 59
   variable fieldIcon in line 61
   variable methodIcon in line 60
   variable packageIcon in line 57
   variable serialVersionUID in line 55
   variable sourceFileIcon in line 62
   variable theInstance in line 44
   variable value in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/BugInstanceGroup.java
module edu::umd::cs::findbugs::gui::BugInstanceGroup
   function getGroupType() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable groupType defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   function getMemberCount() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberCount defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   function incrementMemberCount() in line 65
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberCount defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   function toString() in line 80
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses variable groupName defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses variable memberCount defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   function BugInstanceGroup(String,String) in line 49
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable groupType defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses variable groupName defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
   variable groupName in line 38
   variable groupType in line 37
   variable memberCount in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/ConfigureDetectorsDialog.java
module edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   inherits from javax::swing::JDialog
   function cancelButtonActionPerformed(java.awt.event.ActionEvent) in line 251
      3 lines of code
      1 parameters
      1 conditional paths
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function closeDialog(java.awt.event.WindowEvent) in line 272
      4 lines of code
      1 parameters
      1 conditional paths
   function closeDialog() in line 355
      4 lines of code
      0 parameters
      1 conditional paths
   function formWindowOpened(java.awt.event.WindowEvent) in line 229
      3 lines of code
      1 parameters
      1 conditional paths
   function initComponents() in line 71
      157 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorTableScrollPane defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable detectorDescriptionScrollPane defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable detectorDescription defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable okButton defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable cancelButton defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable spacer defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable restoreDefaultsButton defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function formWindowOpened(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable serialVersionUID defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function populateTable() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable ENABLED_COLUMN defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable SPEED_COLUMN defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function okButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function cancelButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function restoreDefaultsButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function main(String) in line 363
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function ConfigureDetectorsDialog(java.awt.Frame,boolean) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function okButtonActionPerformed(java.awt.event.ActionEvent) in line 255
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable factoryList defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getBaseTableModel() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable ENABLED_COLUMN defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function enableDetector(DetectorFactory,boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function closeDialog() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function populateTable() in line 338
      16 lines of code
      0 parameters
      3 conditional paths
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function isHidden() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getSpeed() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isDetectorEnabled(DetectorFactory) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable factoryList defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function postInitComponents() in line 281
      18 lines of code
      0 parameters
      3 conditional paths
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function viewDetectorDetails(DetectorFactory) defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses variable factoryList defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getBaseModelIndex(int) defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function restoreDefaultsButtonActionPerformed(java.awt.event.ActionEvent) in line 238
      12 lines of code
      1 parameters
      3 conditional paths
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable detectorTable defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getBaseTableModel() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function isHidden() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isDefaultEnabled() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable ENABLED_COLUMN defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   function viewDetectorDetails(DetectorFactory) in line 305
      27 lines of code
      1 parameters
      3 conditional paths
      uses function getDetailHTML() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorDescription defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
   function ConfigureDetectorsDialog(java.awt.Frame,boolean) in line 59
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
      uses function postInitComponents() defined in edu::umd::cs::findbugs::gui::ConfigureDetectorsDialog
   variable cancelButton in line 369
   variable detectorDescription in line 370
   variable detectorDescriptionScrollPane in line 371
   variable detectorTable in line 372
   variable detectorTableScrollPane in line 373
   variable ENABLED_COLUMN in line 54
   variable factoryList in line 381
   variable jSeparator1 in line 374
   variable okButton in line 375
   variable restoreDefaultsButton in line 376
   variable serialVersionUID in line 51
   variable spacer in line 377
   variable SPEED_COLUMN in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/ConsoleLogger.java
module edu::umd::cs::findbugs::gui::ConsoleLogger
   inherits from edu::umd::cs::findbugs::gui::Logger
   function logMessage(int,String) in line 47
      protection public
      18 lines of code
      2 parameters
      4 conditional paths
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses variable logSync defined in edu::umd::cs::findbugs::gui::ConsoleLogger
      uses function error(String) defined in edu::umd::cs::findbugs::gui::LogSync
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses function writeToLog(String) defined in edu::umd::cs::findbugs::gui::LogSync
   function ConsoleLogger(LogSync) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable logSync defined in edu::umd::cs::findbugs::gui::ConsoleLogger
   variable logSync in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/DefaultSortedTableModel.java
module edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   inherits from javax::swing::table::AbstractTableModel
   function findColumn(String) in line 161
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableCellUpdated(int,int) in line 110
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableChanged(TableModelEvent) in line 117
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableDataChanged() in line 124
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableRowsDeleted(int,int) in line 131
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableRowsInserted(int,int) in line 138
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableRowsUpdated(int,int) in line 145
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function fireTableStructureChanged() in line 152
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getBaseModelIndex(int) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable viewToModelMapping defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getBaseTableModel() in line 99
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getColumnClass(int) in line 183
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getColumnCount() in line 168
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getColumnName(int) in line 191
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getRowCount() in line 175
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function getValueAt(int,int) in line 206
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable viewToModelMapping defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function isCellEditable(int,int) in line 199
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function setupMapping() in line 222
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable viewToModelMapping defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortDirection defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_NO_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortColumn defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_ASCENDING_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function setValueAt(Object,int,int) in line 214
      protection public
      7 lines of code
      3 parameters
      2 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable viewToModelMapping defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function fireTableDataChanged() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   function DefaultSortedTableModel(AbstractTableModel,JTableHeader) in line 66
      protection public
      30 lines of code
      2 parameters
      3 conditional paths
      uses variable baseModel defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortColumn defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortDirection defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_NO_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_ASCENDING_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable upIcon defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function setupMapping() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
   variable baseModel in line 59
   variable NUM_SORT_DIREECTIONS in line 57
      protection public
   variable serialVersionUID in line 53
   variable SORT_ASCENDING_ORDER in line 55
      protection public
   variable SORT_DESCENDING_ORDER in line 56
      protection public
   variable SORT_NO_ORDER in line 54
      protection public
   variable sortColumn in line 62
   variable sortDirection in line 61
   variable upIcon in line 63
   variable viewToModelMapping in line 60
module edu::umd::cs::findbugs::gui::DefaultSortedTableModel::BaseTableModelListener
   inherits from javax::swing::event::TableModelListener
   function tableChanged(TableModelEvent) in line 248
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fireTableChanged(TableModelEvent) defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
module edu::umd::cs::findbugs::gui::DefaultSortedTableModel::HeaderListener
   inherits from java::awt::event::MouseAdapter
   function mouseClicked(MouseEvent) in line 256
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable sortColumn defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable sortDirection defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable SORT_ASCENDING_ORDER defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses variable NUM_SORT_DIREECTIONS defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
      uses function fireTableDataChanged() defined in edu::umd::cs::findbugs::gui::DefaultSortedTableModel
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/FindBugsFrame.java
module edu::umd::cs::findbugs::gui::FindBugsFrame
   inherits from javax::swing::JFrame
   inherits from edu::umd::cs::findbugs::gui::LogSync
   function ableEditMenu() in line 2728
      28 lines of code
      0 parameters
      5 conditional paths
      uses function getView() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable cutItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable copyItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable selectAllItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable pasteItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function aboutItemActionPerformed(java.awt.event.ActionEvent) in line 2142
      3 lines of code
      1 parameters
      1 conditional paths
   function addClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) in line 2050
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addClasspathEntryToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addClasspathEntryToList() in line 3200
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable classpathEntryTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function parsePaths(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addClasspathEntryToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addClasspathEntryToProject(String) in line 3216
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addJarButtonActionPerformed(java.awt.event.ActionEvent) in line 2278
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addJarToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addJarToList() in line 3130
      10 lines of code
      0 parameters
      3 conditional paths
      uses variable jarNameTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function parsePaths(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addJarToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addJarToProject(String) in line 3159
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addSourceDirButtonActionPerformed(java.awt.event.ActionEvent) in line 2274
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addSourceDirToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addSourceDirToList() in line 3181
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable srcDirTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function parsePaths(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function addSrcToProject(String) in line 3146
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function browseClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) in line 2054
      17 lines of code
      1 parameters
      3 conditional paths
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable auxClasspathEntryFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function verifyFileSelection(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addClasspathEntryToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function browseJarButtonActionPerformed(java.awt.event.ActionEvent) in line 2220
      16 lines of code
      1 parameters
      3 conditional paths
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable archiveAndDirectoryFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function verifyFileSelection(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addJarToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function browseSrcDirButtonActionPerformed(java.awt.event.ActionEvent) in line 2195
      16 lines of code
      1 parameters
      3 conditional paths
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable archiveAndDirectoryFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function verifyFileSelection(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSrcToProject(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function bugTreeBugDetailsSplitterPropertyChange(java.beans.PropertyChangeEvent) in line 2098
      15 lines of code
      1 parameters
      3 conditional paths
      uses function isSplitterMaximized(JSplitPane,java.beans.PropertyChangeEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeBugDetailsSplitter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchBugInstance() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function bugTreeSelectionChanged(TreeSelectionEvent) in line 2321
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentBugInstance() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchBugInstance() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function buildSelectPath(JList) in line 1764
      13 lines of code
      1 parameters
      2 conditional paths
   function checkBugDetailsVisibility() in line 2693
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeBugDetailsSplitter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function chooseFile(JFileChooser,String) in line 3568
      4 lines of code
      2 parameters
      1 conditional paths
      uses function updateCurrentDirectoryFromDialog(JFileChooser,int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function chooseFileToOpen(JFileChooser) in line 3580
      4 lines of code
      1 parameters
      1 conditional paths
      uses function updateCurrentDirectoryFromDialog(JFileChooser,int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function classpathDownButtonActionPerformed(java.awt.event.ActionEvent) in line 1870
      4 lines of code
      1 parameters
      2 conditional paths
      uses function moveEntriesDown(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function resyncAuxClasspathEntries() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function classpathUpButtonActionPerformed(java.awt.event.ActionEvent) in line 1855
      4 lines of code
      1 parameters
      2 conditional paths
      uses function moveEntriesUp(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function resyncAuxClasspathEntries() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function closeProjectHook(Project,String) in line 2862
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable isModified defined in edu::umd::cs::findbugs::Project
      uses function saveProject(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function closeProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2032
      5 lines of code
      1 parameters
      2 conditional paths
      uses function closeProjectHook(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function configureDetectorsItemActionPerformed(java.awt.event.ActionEvent) in line 1980
      6 lines of code
      1 parameters
      1 conditional paths
   function copyActionPerformed(java.awt.event.ActionEvent) in line 1809
      18 lines of code
      1 parameters
      5 conditional paths
      uses function buildSelectPath(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function createFileChooser() in line 3534
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentDirectory defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function createFileChooser(final JComponent) in line 3545
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable currentDirectory defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable serialVersionUID defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
   function cutActionPerformed(java.awt.event.ActionEvent) in line 1828
      18 lines of code
      1 parameters
      7 conditional paths
      uses function buildSelectPath(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeSrcDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function disableEditKeyBindings(JList) in line 1758
      5 lines of code
      1 parameters
      1 conditional paths
   function equalizeControls(JComponent[]) in line 2293
      22 lines of code
      1 parameters
      5 conditional paths
   function error(String) in line 3603
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function exitForm(java.awt.event.WindowEvent) in line 2285
      3 lines of code
      1 parameters
      1 conditional paths
   function exitItemActionPerformed(java.awt.event.ActionEvent) in line 2246
      3 lines of code
      1 parameters
      1 conditional paths
   function expPriorityButtonActionPerformed(java.awt.event.ActionEvent) in line 1895
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function fileMenuMenuSelected(javax.swing.event.MenuEvent) in line 2018
      13 lines of code
      1 parameters
      1 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectAsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable reloadProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
      uses variable closeProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function findBugsButtonActionPerformed(java.awt.event.ActionEvent) in line 2146
      48 lines of code
      1 parameters
      5 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses variable bugDescriptionEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentBugDetailsKey defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable INFO defined in edu::umd::cs::findbugs::gui::Logger
      uses function isCompleted() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function reportAnalysisErrors() defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function exceptionOccurred() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function getException() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function addLine(String) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function finish() defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function focusGainedHandler(java.awt.event.FocusEvent) in line 1847
      7 lines of code
      1 parameters
      2 conditional paths
      uses function ableEditMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function formWindowOpened(java.awt.event.WindowEvent) in line 1740
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable groupByTabbedPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bySummary defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function fullDescriptionsItemActionPerformed(java.awt.event.ActionEvent) in line 2072
      17 lines of code
      1 parameters
      5 conditional paths
      uses variable bugTreeList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getBugInstanceComparator(String) in line 3071
      12 lines of code
      1 parameters
      5 conditional paths
      uses variable bugInstanceByClassComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceByPackageComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceByTypeComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceByCategoryComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getCurrentAnalysisRun() in line 2657
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getCurrentBugInstance() in line 2664
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getCurrentBugTree() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getTreeSelectionOf(JTree,Class) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getCurrentBugTree() in line 2702
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable groupByTabbedPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getCurrentProject() in line 2650
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentProject defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getFilterSettings() in line 3637
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::config::UserPreferences
   function getGroupComparator(String) in line 3087
      12 lines of code
      1 parameters
      5 conditional paths
      uses variable bugInstanceClassComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstancePackageComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceTypeComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugInstanceCategoryComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getLogger() in line 3596
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getMenuMask() in line 3940
      3 lines of code
      0 parameters
      1 conditional paths
   function getPriorityThreshold() in line 3644
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function getSettingList() in line 3653
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getTreeSelectionOf(JTree,Class) in line 2628
      18 lines of code
      2 parameters
      4 conditional paths
   function getView() in line 3122
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable currentView defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function highPriorityButtonActionPerformed(java.awt.event.ActionEvent) in line 1883
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function initComponents() in line 525
      1198 lines of code
      0 parameters
      1 conditional paths
      uses variable priorityButtonGroup defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable effortButtonGroup defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable emptyPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable reportPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable editProjectPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarNameTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable addJarButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileListLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable srcDirTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable addSourceDirButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirListLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable removeJarButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable removeSrcDirButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable browseJarButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable browseSrcDirButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable editProjectLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator2 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable findBugsButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator4 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileListScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirListScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryListLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable browseClasspathEntryButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable addClasspathEntryButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable removeClasspathEntryButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryListScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator5 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceUpButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDownButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathUpButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathDownButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreePanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeBugDetailsSplitter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable groupByTabbedPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byClassScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byClassBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable JTREE_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byPackageScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byPackageBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugTypeScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugTypeBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugCategoryScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugCategoryBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bySummary defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugSummaryEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugDetailsTabbedPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugDescriptionScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugDescriptionEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextAreaScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable annotationTextAreaScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable annotationTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable urlLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jPanel1 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logoLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable growBoxSpacer defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable theMenuBar defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable fileMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable newProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable openProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable recentProjectsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator9 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable closeProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectAsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable reloadProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator3 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable loadBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator6 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable exitItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable editMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable cutItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable copyItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable pasteItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator10 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable selectAllItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable fullDescriptionsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator7 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable filterWarningsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable expPriorityButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable lowPriorityButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable mediumPriorityButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable highPriorityButton defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator11 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator8 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable settingsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable configureDetectorsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable effortMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable minEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable normalEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable maxEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable helpMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable aboutItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function exitForm(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function formWindowOpened(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable BUTTON_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function jarNameTextFieldActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function focusGainedHandler(java.awt.event.FocusEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function srcDirTextFieldActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeSrcDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function browseJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function browseSrcDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable LABEL_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function findBugsButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function disableEditKeyBindings(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function browseClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function sourceUpButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function sourceDownButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function classpathUpButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function classpathDownButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function bugTreeBugDetailsSplitterPropertyChange(java.beans.PropertyChangeEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable SOURCE_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceLineNumberer defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function equalizeControls(JComponent[]) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function localiseButton(AbstractButton,String,String,boolean) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function fileMenuMenuSelected(javax.swing.event.MenuEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function newProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function openProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function rebuildRecentProjectsMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function closeProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function saveProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function saveProjectAsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function reloadProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function loadBugsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function saveBugsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function exitItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function cutActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function copyActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function pasteActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function selectAllActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewMenuMenuSelected(javax.swing.event.MenuEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewBugDetailsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function fullDescriptionsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getPriorityThreshold() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function expPriorityButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function lowPriorityButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function mediumPriorityButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function highPriorityButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewBugsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function settingsMenuActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function configureDetectorsItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function minEffortItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function normalEffortItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function maxEffortItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function aboutItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function isSplitterMaximized(JSplitPane,java.beans.PropertyChangeEvent) in line 2681
      11 lines of code
      2 parameters
      1 conditional paths
      uses variable DIVIDER_FUDGE defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function jarNameTextFieldActionPerformed(java.awt.event.ActionEvent) in line 2216
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addJarToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function loadBugsFromFile(File) in line 1931
      12 lines of code
      1 parameters
      1 conditional paths
      uses function loadBugsFromFile(File) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function loadBugsFromURL(String) in line 1944
      12 lines of code
      1 parameters
      1 conditional paths
      uses function loadBugsFromInputStream(InputStream) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function loadBugsItemActionPerformed(java.awt.event.ActionEvent) in line 1957
      22 lines of code
      1 parameters
      4 conditional paths
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable xmlFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function loadBugsFromFile(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function localiseButton(AbstractButton,String,String,boolean) in line 2425
      4 lines of code
      4 parameters
      1 conditional paths
   function lowPriorityButtonActionPerformed(java.awt.event.ActionEvent) in line 1891
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function main(String) in line 3729
      protection public
      68 lines of code
      1 parameters
      11 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function showSynopsis() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function showCommandLineOptions() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getProject() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function FindBugsFrame() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getBugsFilename() defined in edu::umd::cs::findbugs::gui::FindBugsFrame::SwingCommandLine
      uses function loadBugsFromFile(File) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function loadBugsFromURL(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getSettingList() defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable minEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
      uses variable maxEffortItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function maxEffortItemActionPerformed(java.awt.event.ActionEvent) in line 1724
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MAX_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function mediumPriorityButtonActionPerformed(java.awt.event.ActionEvent) in line 1887
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function minEffortItemActionPerformed(java.awt.event.ActionEvent) in line 1732
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MIN_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function moveEntriesDown(JList) in line 2371
      21 lines of code
      1 parameters
      4 conditional paths
   function moveEntriesUp(JList) in line 2349
      21 lines of code
      1 parameters
      4 conditional paths
   function newProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2237
      8 lines of code
      1 parameters
      2 conditional paths
      uses function closeProjectHook(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function normalEffortItemActionPerformed(java.awt.event.ActionEvent) in line 1728
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable settingList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable DEFAULT_EFFORT defined in edu::umd::cs::findbugs::FindBugs
   function openProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2114
      23 lines of code
      1 parameters
      4 conditional paths
      uses function closeProjectHook(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable projectFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFileToOpen(JFileChooser) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function read(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function useProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function rebuildRecentProjectsMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function openRecentProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2329
      19 lines of code
      1 parameters
      3 conditional paths
      uses function closeProjectHook(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function read(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function useProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function removeProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses function rebuildRecentProjectsMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function parsePaths(String) in line 3173
      3 lines of code
      1 parameters
      1 conditional paths
   function pasteActionPerformed(java.awt.event.ActionEvent) in line 1778
      30 lines of code
      1 parameters
      9 conditional paths
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarNameTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addJarButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable srcDirTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDirButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function populateAnalysisRunTreeModel(AnalysisRun,final String) in line 2975
      92 lines of code
      2 parameters
      12 conditional paths
      uses function getTreeModel(String) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getBugInstanceComparator(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getBugInstances() defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function displayWarning(BugInstance) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugTypeDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses function getMemberCount() defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses function incrementMemberCount() defined in edu::umd::cs::findbugs::gui::BugInstanceGroup
      uses function BugTreeNode(BugInstance) defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses variable BUG_COUNT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getGroupComparator(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function group(Collection< ElementType >,Comparator< ElementType >) defined in edu::umd::cs::findbugs::gui::Grouper
   function postInitComponents() in line 2438
      148 lines of code
      0 parameters
      8 conditional paths
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getBugCategories() defined in edu::umd::cs::findbugs::I18N
      uses variable bugCategoryCheckBoxList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugCategoryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable BUTTON_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function toggleBugCategory(JCheckBoxMenuItem) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable filterWarningsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewPanelLayout defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byClassBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byPackageBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugTypeBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable byBugCategoryBugTree defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function bugTreeSelectionChanged(TreeSelectionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function updateTitle(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logoLabel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getMenuMask() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable newProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable openProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable closeProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable reloadProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable cutItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable copyItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable pasteItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable selectAllItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable MAC_OS_X defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveProjectAsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable loadBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable saveBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable growBoxSpacer defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable fileMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable exitItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jSeparator6 defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable theMenuBar defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable helpMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function rebuildRecentProjectsMenu() in line 2587
      27 lines of code
      0 parameters
      3 conditional paths
      uses function getRecentProjects() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable recentProjectsMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable BUTTON_FONT defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function openRecentProjectItemActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function reloadProjectItemActionPerformed(java.awt.event.ActionEvent) in line 1987
      18 lines of code
      1 parameters
      3 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getProjectFileName() defined in edu::umd::cs::findbugs::Project
      uses function read(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function findBugsButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function removeClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent) in line 2038
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
   function removeJarButtonActionPerformed(java.awt.event.ActionEvent) in line 2262
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeFile(int) defined in edu::umd::cs::findbugs::Project
   function removeSrcDirButtonActionPerformed(java.awt.event.ActionEvent) in line 2250
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function removeSourceDir(int) defined in edu::umd::cs::findbugs::Project
   function resyncAuxClasspathEntries() in line 2393
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function removeAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
   function resyncSourceEntries() in line 2404
      10 lines of code
      0 parameters
      3 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getNumSourceDirs() defined in edu::umd::cs::findbugs::Project
      uses function removeSourceDir(int) defined in edu::umd::cs::findbugs::Project
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
   function saveBugsItemActionPerformed(java.awt.event.ActionEvent) in line 1899
      31 lines of code
      1 parameters
      6 conditional paths
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable xmlFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentBugInstance defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchBugAnnotation(BugInstance) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function saveBugsToFile(File) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function saveProject(Project,String) in line 2794
      3 lines of code
      2 parameters
      1 conditional paths
   function saveProject(Project,String,boolean) in line 2808
      45 lines of code
      3 parameters
      5 conditional paths
      uses function getProjectFileName() defined in edu::umd::cs::findbugs::Project
      uses function getOption(String) defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses function createFileChooser() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable projectFileFilter defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function chooseFile(JFileChooser,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function write(String,boolean,String) defined in edu::umd::cs::findbugs::Project
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable INFO defined in edu::umd::cs::findbugs::gui::Logger
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function useProject(String) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function read() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function rebuildRecentProjectsMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function updateTitle(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function saveProjectAsItemActionPerformed(java.awt.event.ActionEvent) in line 2006
      3 lines of code
      1 parameters
      1 conditional paths
      uses function saveProject(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function saveProjectItemActionPerformed(java.awt.event.ActionEvent) in line 2138
      3 lines of code
      1 parameters
      1 conditional paths
      uses function saveProject(Project,String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function selectAllActionPerformed(java.awt.event.ActionEvent) in line 1746
      11 lines of code
      1 parameters
      4 conditional paths
   function setPriorityThreshold(int) in line 2720
      7 lines of code
      1 parameters
      3 conditional paths
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function setProject(Project) in line 2757
      21 lines of code
      1 parameters
      2 conditional paths
      uses variable currentProject defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchProject(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setView(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable editMenu defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function updateTitle(Project) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function ableEditMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function setSummary(String) in line 2938
      33 lines of code
      1 parameters
      4 conditional paths
      uses variable bugSummaryEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
   function settingsMenuActionPerformed(java.awt.event.ActionEvent) in line 1736
      3 lines of code
      1 parameters
      1 conditional paths
   function setView(String) in line 3103
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable viewPanelLayout defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewPanel defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function checkBugDetailsVisibility() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewProjectItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentView defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function ableEditMenu() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function showBugInfo(BugInstance) in line 3402
      35 lines of code
      1 parameters
      3 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentBugDetailsKey defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getDetailHTML(String) defined in edu::umd::cs::findbugs::I18N
      uses variable bugDescriptionEditorPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
   function showCommandLineOptions() in line 3798
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function showSynopsis() in line 3803
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sourceDownButtonActionPerformed(java.awt.event.ActionEvent) in line 1860
      4 lines of code
      1 parameters
      2 conditional paths
      uses function moveEntriesDown(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function resyncSourceEntries() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function sourceUpButtonActionPerformed(java.awt.event.ActionEvent) in line 1865
      4 lines of code
      1 parameters
      2 conditional paths
      uses function moveEntriesUp(JList) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function resyncSourceEntries() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function srcDirTextFieldActionPerformed(java.awt.event.ActionEvent) in line 2212
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addSourceDirToList() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function synchAnalysisRun(AnalysisRun) in line 2918
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable GROUP_BY_ORDER_LIST defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setTreeModel(String,DefaultTreeModel) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function populateAnalysisRunTreeModel(AnalysisRun,final String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugTreeList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setSummary(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getSummary() defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setView(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function synchBugAnnotation(BugInstance) in line 3444
      23 lines of code
      1 parameters
      4 conditional paths
      uses variable currentBugInstance defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable annotationTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setAnnotationText(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
   function synchBugInstance() in line 3228
      64 lines of code
      0 parameters
      13 conditional paths
      uses function getCurrentBugInstance() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentBugTree() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses variable currentSourceLineAnnotation defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getCurrentAnalysisRun() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function viewSource(Project,AnalysisRun,final SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses function showBugInfo(BugInstance) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchBugAnnotation(BugInstance) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable currentBugInstance defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function synchProject(Project) in line 2886
      26 lines of code
      1 parameters
      4 conditional paths
      uses variable jarNameTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable srcDirTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable classpathEntryTextField defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable jarFileList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function getFile(int) defined in edu::umd::cs::findbugs::Project
      uses variable sourceDirList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getNumSourceDirs() defined in edu::umd::cs::findbugs::Project
      uses function getSourceDir(int) defined in edu::umd::cs::findbugs::Project
      uses variable classpathEntryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
   function toggleBugCategory(JCheckBoxMenuItem) in line 3475
      27 lines of code
      1 parameters
      6 conditional paths
      uses variable bugCategoryCheckBoxList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function error(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable bugCategoryList defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getFilterSettings() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable currentAnalysisRun defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function synchAnalysisRun(AnalysisRun) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function write() defined in edu::umd::cs::findbugs::config::UserPreferences
   function updateCurrentDirectoryFromDialog(JFileChooser,int) in line 3585
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable currentDirectory defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function updateTitle(Project) in line 2779
      6 lines of code
      1 parameters
      2 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::Project
   function verifyFileSelection(File) in line 3622
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function viewBugDetailsItemActionPerformed(java.awt.event.ActionEvent) in line 2090
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getView() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function checkBugDetailsVisibility() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function viewBugsItemActionPerformed(java.awt.event.ActionEvent) in line 1875
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setView(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function viewMenuMenuSelected(javax.swing.event.MenuEvent) in line 2010
      7 lines of code
      1 parameters
      1 conditional paths
      uses function getCurrentProject() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable viewBugDetailsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable fullDescriptionsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function viewProjectItemActionPerformed(java.awt.event.ActionEvent) in line 1879
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setView(String) defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function viewSource(Project,AnalysisRun,final SourceLineAnnotation) in line 3304
      92 lines of code
      3 parameters
      7 conditional paths
      uses variable sourceTextArea defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable sourceFinder defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function setSourceBaseList(List< String >) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable logger defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses variable sourceTextAreaScrollPane defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses variable ERROR defined in edu::umd::cs::findbugs::gui::Logger
   function writeToLog(String) in line 3612
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function FindBugsFrame() in line 500
      protection public
      14 lines of code
      0 parameters
      2 conditional paths
      uses function read() defined in edu::umd::cs::findbugs::config::UserPreferences
      uses variable currentDirectory defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function postInitComponents() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   variable aboutItem in line 3812
   variable addClasspathEntryButton in line 3813
   variable addJarButton in line 3814
   variable addSourceDirButton in line 3815
   variable annotationTextArea in line 3816
   variable annotationTextAreaScrollPane in line 3817
   variable archiveAndDirectoryFilter in line 464
   variable archiveExtensionSet in line 428
   variable auxClasspathEntryFileFilter in line 403
   variable browseClasspathEntryButton in line 3818
   variable browseJarButton in line 3819
   variable browseSrcDirButton in line 3820
   variable BUG_COUNT in line 486
   variable bugCategoryCheckBoxList in line 3933
   variable bugCategoryList in line 3934
   variable bugDescriptionEditorPane in line 3821
   variable bugDescriptionScrollPane in line 3822
   variable bugDetailsTabbedPane in line 3823
   variable bugInstanceByCategoryComparator in line 362
   variable bugInstanceByClassComparator in line 306
   variable bugInstanceByPackageComparator in line 324
   variable bugInstanceByTypeComparator in line 343
   variable bugInstanceCategoryComparator in line 287
   variable bugInstanceClassComparator in line 219
   variable bugInstancePackageComparator in line 237
   variable bugInstanceTypeComparator in line 257
   variable bugSummaryEditorPane in line 3824
   variable bugTreeBugDetailsSplitter in line 3825
   variable bugTreeList in line 3927
   variable bugTreePanel in line 3826
   variable BUTTON_FONT in line 151
   variable byBugCategoryBugTree in line 3827
   variable byBugCategoryScrollPane in line 3828
   variable byBugTypeBugTree in line 3829
   variable byBugTypeScrollPane in line 3830
   variable byClassBugTree in line 3831
   variable byClassScrollPane in line 3832
   variable byPackageBugTree in line 3833
   variable byPackageScrollPane in line 3834
   variable bySummary in line 3835
   variable classpathDownButton in line 3836
   variable classpathEntryLabel in line 3837
   variable classpathEntryList in line 3838
   variable classpathEntryListLabel in line 3839
   variable classpathEntryListScrollPane in line 3840
   variable classpathEntryTextField in line 3841
   variable classpathUpButton in line 3842
   variable closeProjectItem in line 3843
   variable configureDetectorsItem in line 3844
   variable copyItem in line 3845
   variable currentAnalysisRun in line 3928
   variable currentBugDetailsKey in line 3932
   variable currentBugInstance in line 3930
   variable currentDirectory in line 3925
   variable currentProject in line 3926
   variable currentSourceLineAnnotation in line 3931
   variable currentView in line 3924
   variable cutItem in line 3846
   variable DIVIDER_FUDGE in line 484
   variable editMenu in line 3847
   variable editProjectLabel in line 3848
   variable editProjectPanel in line 3849
   variable effortButtonGroup in line 3850
   variable effortMenu in line 3851
   variable emptyPanel in line 3852
   variable exitItem in line 3853
   variable expPriorityButton in line 3854
   variable fileMenu in line 3855
   variable filterWarningsMenu in line 3856
   variable findBugsButton in line 3857
   variable fontSize in line 136
   variable fullDescriptionsItem in line 3858
   variable GROUP_BY_ORDER_LIST in line 474
   variable groupByTabbedPane in line 3859
   variable growBoxSpacer in line 3860
   variable helpMenu in line 3861
   variable highPriorityButton in line 3862
   variable jarFileLabel in line 3875
   variable jarFileList in line 3876
   variable jarFileListLabel in line 3877
   variable jarFileListScrollPane in line 3878
   variable jarNameTextField in line 3879
   variable jPanel1 in line 3863
   variable jSeparator1 in line 3864
   variable jSeparator10 in line 3865
   variable jSeparator11 in line 3866
   variable jSeparator2 in line 3867
   variable jSeparator3 in line 3868
   variable jSeparator4 in line 3869
   variable jSeparator5 in line 3870
   variable jSeparator6 in line 3871
   variable jSeparator7 in line 3872
   variable jSeparator8 in line 3873
   variable jSeparator9 in line 3874
   variable JTREE_FONT in line 141
   variable LABEL_FONT in line 146
   variable loadBugsItem in line 3880
   variable logger in line 3922
   variable logoLabel in line 3881
   variable lowPriorityButton in line 3882
   variable MAC_OS_X in line 3938
   variable maxEffortItem in line 3883
   variable mediumPriorityButton in line 3884
   variable minEffortItem in line 3885
   variable newProjectItem in line 3886
   variable normalEffortItem in line 3887
   variable openProjectItem in line 3888
   variable pasteItem in line 3889
   variable priorityButtonGroup in line 3890
   variable projectFileFilter in line 382
   variable recentProjectsMenu in line 3891
   variable reloadProjectItem in line 3892
   variable removeClasspathEntryButton in line 3893
   variable removeJarButton in line 3894
   variable removeSrcDirButton in line 3895
   variable reportPanel in line 3896
   variable saveBugsItem in line 3897
   variable saveProjectAsItem in line 3898
   variable saveProjectItem in line 3899
   variable selectAllItem in line 3900
   variable SELECTION_VOFFSET in line 3293
   variable serialVersionUID in line 153
   variable settingList in line 3935
   variable settingsMenu in line 3901
   variable SOURCE_FONT in line 140
   variable sourceDirLabel in line 3902
   variable sourceDirList in line 3903
   variable sourceDirListLabel in line 3904
   variable sourceDirListScrollPane in line 3905
   variable sourceDownButton in line 3906
   variable sourceFinder in line 3929
   variable sourceLineNumberer in line 3908
   variable sourceTextArea in line 3907
   variable sourceTextAreaScrollPane in line 3909
   variable sourceUpButton in line 3910
   variable srcDirTextField in line 3911
   variable theMenuBar in line 3912
   variable urlLabel in line 3913
   variable viewBugDetailsItem in line 3914
   variable viewBugsItem in line 3915
   variable viewMenu in line 3916
   variable viewPanel in line 3917
   variable viewPanelLayout in line 3923
   variable viewProjectItem in line 3918
   variable xmlFileFilter in line 423
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
   inherits from javax::swing::tree::DefaultMutableTreeNode
   function setCount(int) in line 177
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
   function toString() in line 182
      protection public
      20 lines of code
      0 parameters
      4 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
      uses function isExperimental() defined in edu::umd::cs::findbugs::BugInstance
      uses variable fullDescriptionsItem defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString() defined in edu::umd::cs::findbugs::BugInstance
   function BugTreeNode(BugInstance) in line 172
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui::FindBugsFrame::BugTreeNode
   variable count in line 170
   variable serialVersionUID in line 169
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceClassComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 211
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::ClassAnnotation
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstancePackageComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 229
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   variable serialVersionUID in line 228
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceTypeComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 247
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::BugInstance
   variable serialVersionUID in line 246
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceCategoryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 268
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function getCategory(BugInstance) in line 272
      10 lines of code
      1 parameters
      3 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
   variable serialVersionUID in line 266
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceByClassComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 295
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugInstanceClassComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   variable serialVersionUID in line 294
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceByPackageComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 313
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugInstancePackageComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceByTypeComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 332
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugInstanceTypeComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   variable serialVersionUID in line 331
module edu::umd::cs::findbugs::gui::FindBugsFrame::BugInstanceByCategoryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugInstance,BugInstance) in line 351
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable bugInstanceCategoryComparator defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   variable serialVersionUID in line 350
module edu::umd::cs::findbugs::gui::FindBugsFrame::ProjectFileFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 369
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 374
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui::FindBugsFrame::AuxClasspathEntryFileFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 390
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 395
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui::FindBugsFrame::XMLFileFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 410
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 415
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui::FindBugsFrame::ArchiveAndDirectoryFilter
   inherits from javax::swing::filechooser::FileFilter
   function accept(File) in line 443
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable archiveExtensionSet defined in edu::umd::cs::findbugs::gui::FindBugsFrame
   function getDescription() in line 456
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui::FindBugsFrame::SwingCommandLine
   inherits from edu::umd::cs::findbugs::FindBugsCommandLine
   function getBugsFilename() in line 3671
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleOption(String,String) in line 3677
      34 lines of code
      2 parameters
      8 conditional paths
   function handleOptionWithArgument(String,String) in line 3714
      7 lines of code
      2 parameters
      2 conditional paths
   function SwingCommandLine() in line 3662
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/Grouper.java
module edu::umd::cs::findbugs::gui::Grouper
   function group(Collection< ElementType >,Comparator< ElementType >) in line 66
      protection public
      16 lines of code
      2 parameters
      3 conditional paths
      uses variable callback defined in edu::umd::cs::findbugs::gui::Grouper
      uses function addToGroup(ElementType2) defined in edu::umd::cs::findbugs::gui::Grouper::Callback
      uses function startGroup(ElementType2) defined in edu::umd::cs::findbugs::gui::Grouper::Callback
   function Grouper(Callback< ElementType >) in line 54
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable callback defined in edu::umd::cs::findbugs::gui::Grouper
   variable callback in line 47
module edu::umd::cs::findbugs::gui::Grouper::Callback
   function addToGroup(ElementType2) in line 44
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function startGroup(ElementType2) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/LineNumberer.java
module edu::umd::cs::findbugs::gui::LineNumberer
   inherits from javax::swing::JComponent
   function paintComponent(Graphics) in line 65
      protection public
      25 lines of code
      1 parameters
      2 conditional paths
      uses variable fm defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable textArea defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable PAD defined in edu::umd::cs::findbugs::gui::LineNumberer
   function setFont(Font) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setWidths() in line 55
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable fm defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable PROTOTYPE defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable PAD defined in edu::umd::cs::findbugs::gui::LineNumberer
   function LineNumberer(JTextArea) in line 40
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function setFont(Font) defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable textArea defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses variable fm defined in edu::umd::cs::findbugs::gui::LineNumberer
      uses function setWidths() defined in edu::umd::cs::findbugs::gui::LineNumberer
   variable fm in line 38
   variable PAD in line 34
      protection public
   variable PROTOTYPE in line 35
      protection public
   variable textArea in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/Logger.java
module edu::umd::cs::findbugs::gui::Logger
   function logMessage(int,String) in line 29
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   variable ERROR in line 27
      protection public
   variable INFO in line 25
      protection public
   variable WARNING in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/LogSync.java
module edu::umd::cs::findbugs::gui::LogSync
   function error(String) in line 26
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeToLog(String) in line 25
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/OSXAdapter.java
module edu::umd::cs::findbugs::gui::OSXAdapter
   inherits from com::apple::eawt::ApplicationAdapter
   function enablePrefs(boolean) in line 102
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable theApplication defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function handleAbout(ApplicationEvent) in line 32
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function handlePreferences(ApplicationEvent) in line 52
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function handleQuit(ApplicationEvent) in line 63
      protection public
      21 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function registerMacOSXApplication(FindBugsFrame) in line 89
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable theApplication defined in edu::umd::cs::findbugs::gui::OSXAdapter
      uses variable theAdapter defined in edu::umd::cs::findbugs::gui::OSXAdapter
      uses function OSXAdapter(FindBugsFrame) defined in edu::umd::cs::findbugs::gui::OSXAdapter
   function OSXAdapter(FindBugsFrame) in line 23
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui::OSXAdapter
   variable mainApp in line 21
   variable theAdapter in line 17
   variable theApplication in line 18
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/OSXAdapter.java
module edu::umd::cs::findbugs::gui2::OSXAdapter
   inherits from com::apple::eawt::ApplicationAdapter
   function enablePrefs(boolean) in line 123
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable theApplication defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handleAbout(ApplicationEvent) in line 51
      protection public
      18 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handlePreferences(ApplicationEvent) in line 71
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function handleQuit(ApplicationEvent) in line 82
      protection public
      21 lines of code
      1 parameters
      2 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function registerMacOSXApplication(MainFrame) in line 108
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable theApplication defined in edu::umd::cs::findbugs::gui2::OSXAdapter
      uses variable theAdapter defined in edu::umd::cs::findbugs::gui2::OSXAdapter
      uses function OSXAdapter(MainFrame) defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   function OSXAdapter(MainFrame) in line 42
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable mainApp defined in edu::umd::cs::findbugs::gui2::OSXAdapter
   variable mainApp in line 40
   variable theAdapter in line 36
   variable theApplication in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/RunAnalysisDialog.java
module edu::umd::cs::findbugs::gui::RunAnalysisDialog
   inherits from javax::swing::JDialog
   function cancelButtonActionPerformed(java.awt.event.ActionEvent) in line 342
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable analysisThread defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function closeDialog(java.awt.event.WindowEvent) in line 366
      4 lines of code
      1 parameters
      1 conditional paths
   function exceptionOccurred() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function formWindowOpened(java.awt.event.WindowEvent) in line 353
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisThread defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function getException() in line 198
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function initComponents() in line 208
      133 lines of code
      0 parameters
      1 conditional paths
      uses variable findBugsLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable countLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable progressLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable progressBar defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable cancelButton defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable jSeparator1 defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable stageLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable stageNameLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable topVerticalFiller defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable bottomVerticalFiller defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable countValueLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function closeDialog(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function formWindowOpened(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function cancelButtonActionPerformed(java.awt.event.ActionEvent) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function isCompleted() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable completed defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function setCompleted(boolean) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable completed defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function setException(Exception) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function RunAnalysisDialog(java.awt.Frame,AnalysisRun) in line 133
      protection public
      37 lines of code
      2 parameters
      2 conditional paths
      uses function initComponents() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable analysisRun defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function execute(FindBugsProgress) defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function setCompleted(boolean) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function setException(Exception) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses function closeDialog(java.awt.event.WindowEvent) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   variable analysisRun in line 125
   variable analysisThread in line 126
   variable bottomVerticalFiller in line 372
   variable cancelButton in line 373
   variable completed in line 127
   variable countLabel in line 374
   variable countValueLabel in line 375
   variable fatalException in line 128
   variable findBugsLabel in line 376
   variable jSeparator1 in line 377
   variable progressBar in line 378
   variable progressLabel in line 379
   variable serialVersionUID in line 46
   variable stageLabel in line 380
   variable stageNameLabel in line 381
   variable topVerticalFiller in line 382
module edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function beginStage(final String,final int) in line 83
      16 lines of code
      2 parameters
      1 conditional paths
      uses variable goal defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses function getGoal() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses variable stageNameLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable countValueLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable progressBar defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function finishArchive() in line 63
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function step() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function finishClass() in line 71
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function step() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function finishPerClassAnalysis() in line 75
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable stageNameLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   function getCount() in line 55
      3 lines of code
      0 parameters
      1 conditional paths
   function getGoal() in line 51
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable goal defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function predictPassCount(int[]) in line 118
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(final int) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function beginStage(final String,final int) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function startAnalysis(int) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function beginStage(final String,final int) defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
   function step() in line 100
      14 lines of code
      0 parameters
      1 conditional paths
      uses function getCount() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses variable goal defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses function getGoal() defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog::RunAnalysisProgress
      uses variable countValueLabel defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
      uses variable progressBar defined in edu::umd::cs::findbugs::gui::RunAnalysisDialog
   variable goal in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/gui/SwingGUIBugReporter.java
module edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function createDialog() in line 85
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable errorDialog defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses variable analysisRun defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getFrame() defined in edu::umd::cs::findbugs::gui::AnalysisRun
   function doReportBug(edu.umd.cs.findbugs.BugInstance) in line 79
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function checkBugInstance(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function emitLine(String) in line 102
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable errorDialog defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function addLine(String) defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function errorsOccurred() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   function finish() in line 75
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function getBugCollection() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   function getErrorDialog() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorDialog defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
   function logError(String) in line 68
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses variable analysisRun defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getFrame() defined in edu::umd::cs::findbugs::gui::AnalysisRun
      uses function getLogger() defined in edu::umd::cs::findbugs::gui::FindBugsFrame
      uses function logMessage(int,String) defined in edu::umd::cs::findbugs::gui::Logger
      uses variable WARNING defined in edu::umd::cs::findbugs::gui::Logger
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function observeClass(ClassDescriptor) in line 56
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function reportMissingClass(ClassNotFoundException) in line 60
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable errorCount defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function reportQueuedErrors() in line 93
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function createDialog() defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses variable errorDialog defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function clear() defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
      uses function finish() defined in edu::umd::cs::findbugs::gui::AnalysisErrorDialog
   function SwingGUIBugReporter(AnalysisRun) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable analysisRun defined in edu::umd::cs::findbugs::gui::SwingGUIBugReporter
      uses function getProjectStats() defined in edu::umd::cs::findbugs::AbstractBugReporter
   variable analysisRun in line 29
   variable bugCollection in line 30
   variable errorCount in line 32
   variable errorDialog in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/HTMLBugReporter.java
module edu::umd::cs::findbugs::HTMLBugReporter
   inherits from edu::umd::cs::findbugs::BugCollectionBugReporter
   function finish() in line 47
      protection public
      33 lines of code
      0 parameters
      3 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function toDocument(Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getStylesheetStream(String) defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses variable fatalException defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
   function getFatalException() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fatalException defined in edu::umd::cs::findbugs::HTMLBugReporter
   function getStylesheetStream(String) in line 84
      19 lines of code
      1 parameters
      5 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
   function HTMLBugReporter(Project,String) in line 41
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses variable stylesheet defined in edu::umd::cs::findbugs::HTMLBugReporter
   variable fatalException in line 39
   variable stylesheet in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/I18N.java
module edu::umd::cs::findbugs::I18N
   function bugPatternIterator() in line 99
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
   function getAnnotationDescription(String) in line 170
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable annotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
      uses variable DEBUG defined in edu::umd::cs::findbugs::I18N
      uses variable englishAnnotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
   function getBugCategories() in line 246
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
   function getBugCategory(String) in line 224
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
   function getBugCategoryDescription(String) in line 235
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugCategory
   function getBugCategoryObjects() in line 251
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
   function getBugTypeDescription(String) in line 196
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::I18N
      uses function getDescription() defined in edu::umd::cs::findbugs::BugCode
   function getDetailHTML(String) in line 155
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getDetailHTML() defined in edu::umd::cs::findbugs::BugPattern
   function getMessage(String) in line 123
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getLongDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getShortMessage(String) in line 137
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getShortMessageWithoutCode(String) in line 143
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
   function getUserDesignation(String) in line 263
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userDesignationBundle defined in edu::umd::cs::findbugs::I18N
   function getUserDesignationKeys() in line 273
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable userDesignationBundle defined in edu::umd::cs::findbugs::I18N
   function getUserDesignationKeys(boolean) in line 291
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses variable designationKeyComparator defined in edu::umd::cs::findbugs::I18N
   function instance() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::I18N
   function lookupBugPattern(String) in line 91
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
   function registerBugCategory(String,BugCategory) in line 211
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
   function registerBugCode(BugCode) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCode
   function registerBugPattern(BugPattern) in line 81
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
   function I18N() in line 57
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable annotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
      uses variable defaultLocale defined in edu::umd::cs::findbugs::I18N
      uses variable englishAnnotationDescriptionBundle defined in edu::umd::cs::findbugs::I18N
      uses variable categoryDescriptionMap defined in edu::umd::cs::findbugs::I18N
      uses variable userDesignationBundle defined in edu::umd::cs::findbugs::I18N
      uses variable bugPatternMap defined in edu::umd::cs::findbugs::I18N
      uses variable bugCodeMap defined in edu::umd::cs::findbugs::I18N
   variable annotationDescriptionBundle in line 49
   variable bugCodeMap in line 55
   variable bugPatternMap in line 54
   variable categoryDescriptionMap in line 52
   variable DEBUG in line 45
   variable defaultLocale in line 48
      protection public
   variable designationKeyComparator in line 47
      protection public
   variable englishAnnotationDescriptionBundle in line 50
   variable theInstance in line 67
   variable userDesignationBundle in line 53
module edu::umd::cs::findbugs::I18N::DesignationKeyComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function categoryOf(String) in line 309
      18 lines of code
      1 parameters
      15 conditional paths
   function compare(String,String) in line 302
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function categoryOf(String) defined in edu::umd::cs::findbugs::I18N::DesignationKeyComparator
   variable serialVersionUID in line 299
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/IClassScreener.java
module edu::umd::cs::findbugs::IClassScreener
   function matches(String) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/IFindBugsEngine.java
module edu::umd::cs::findbugs::IFindBugsEngine
   function addClassObserver(IClassObserver) in line 101
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function addFilter(String,boolean) in line 84
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function emitTrainingOutput() in line 218
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function enableTrainingInput(String) in line 133
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function enableTrainingOutput(String) in line 125
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function execute() in line 181
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugCount() in line 193
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getBugReporter() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getCurrentClass() in line 188
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getErrorCount() in line 198
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getMissingClassCount() in line 203
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProject() in line 67
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getProjectName() in line 156
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getReleaseName() in line 145
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTrainingInputDir() in line 240
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getTrainingOutputDir() in line 225
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getUserPreferences() in line 210
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setAbridgedMessages(boolean) in line 260
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setAnalysisFeatureSettings(AnalysisFeatureSetting[]) in line 140
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setBugReporter(BugReporter) in line 53
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setClassScreener(IClassScreener) in line 110
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setDetectorFactoryCollection(DetectorFactoryCollection) in line 255
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProgressCallback(FindBugsProgress) in line 75
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProject(Project) in line 60
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setProjectName(String) in line 161
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setRelaxedReportingMode(boolean) in line 118
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setReleaseName(String) in line 150
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setScanNestedArchives(boolean) in line 247
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setSourceInfoFile(String) in line 170
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function setUserPreferences(UserPreferences) in line 94
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function useTrainingInput() in line 233
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/InstructionScanner.java
module edu::umd::cs::findbugs::InstructionScanner
   function isDone() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scanInstruction(InstructionHandle) in line 39
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function traverseEdge(Edge) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/InstructionScannerDriver.java
module edu::umd::cs::findbugs::InstructionScannerDriver
   function execute(InstructionScannerGenerator) in line 58
      protection public
      34 lines of code
      1 parameters
      8 conditional paths
      uses variable edgeIter defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable DEBUG defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function getId() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function start(org.apache.bcel.generic.InstructionHandle) defined in edu::umd::cs::findbugs::InstructionScannerGenerator
      uses variable scannerList defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses function createScanner() defined in edu::umd::cs::findbugs::InstructionScannerGenerator
   function InstructionScannerDriver(Iterator< Edge >) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable edgeIter defined in edu::umd::cs::findbugs::InstructionScannerDriver
      uses variable scannerList defined in edu::umd::cs::findbugs::InstructionScannerDriver
   variable DEBUG in line 39
   variable edgeIter in line 36
   variable scannerList in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/InstructionScannerGenerator.java
module edu::umd::cs::findbugs::InstructionScannerGenerator
   function createScanner() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function start(org.apache.bcel.generic.InstructionHandle) in line 33
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/IntAnnotation.java
module edu::umd::cs::findbugs::IntAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitIntAnnotation(IntAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 61
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 107
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function IntAnnotation(int) defined in edu::umd::cs::findbugs::IntAnnotation
   function equals(Object) in line 101
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function IntAnnotation(int) defined in edu::umd::cs::findbugs::IntAnnotation
   function format(String,ClassAnnotation) in line 82
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses function isSignificant() defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function getDescription() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
   function getValue() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function hashCode() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
   function isSignificant() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable INT_OCCURRENCES defined in edu::umd::cs::findbugs::IntAnnotation
   function setDescription(String) in line 87
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
   function toString() in line 114
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::IntAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::IntAnnotation
   function writeXML(XMLOutput) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 130
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::IntAnnotation
   function IntAnnotation(int) in line 54
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::IntAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::IntAnnotation
   variable DEFAULT_ROLE in line 36
   variable description in line 39
   variable ELEMENT_NAME in line 124
   variable INT_OCCURRENCES in line 45
      protection public
   variable INT_SHIFT in line 47
      protection public
   variable INT_SYNC_PERCENT in line 44
      protection public
   variable INT_VALUE in line 46
      protection public
   variable serialVersionUID in line 34
   variable value in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/InterproceduralFirstPassDetector.java
module edu::umd::cs::findbugs::InterproceduralFirstPassDetector
   inherits from edu::umd::cs::findbugs::NonReportingDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/io/IO.java
module edu::umd::cs::findbugs::io::IO
   function close(InputStream) in line 130
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function close(OutputStream) in line 148
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function copy(InputStream,OutputStream) in line 71
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function copy(Reader,Writer) in line 76
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function copy(InputStream,OutputStream) defined in edu::umd::cs::findbugs::io::IO
   function copy(InputStream,OutputStream,long) in line 82
      protection public
      20 lines of code
      3 parameters
      2 conditional paths
   function copy(Reader,Writer,long) in line 103
      protection public
      20 lines of code
      3 parameters
      2 conditional paths
   function readAll(InputStream) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function readAll(Reader) in line 64
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function copy(InputStream,OutputStream) defined in edu::umd::cs::findbugs::io::IO
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/JavaVersion.java
module edu::umd::cs::findbugs::JavaVersion
   function getMajor() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
   function getMinor() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   function getRest() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function getRuntimeVersion() in line 129
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable runtimeVersion defined in edu::umd::cs::findbugs::JavaVersion
   function isSameOrNewerThan(JavaVersion) in line 141
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   function toString() in line 113
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function JavaVersion(String) in line 63
      protection public
      15 lines of code
      1 parameters
      4 conditional paths
      uses variable PATTERN defined in edu::umd::cs::findbugs::JavaVersion
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
      uses variable rest defined in edu::umd::cs::findbugs::JavaVersion
   function JavaVersion(int,int) in line 85
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable major defined in edu::umd::cs::findbugs::JavaVersion
      uses variable minor defined in edu::umd::cs::findbugs::JavaVersion
   variable JAVA_1_5 in line 54
      protection public
   variable major in line 31
   variable minor in line 32
   variable PATTERN in line 29
   variable rest in line 33
   variable runtimeVersion in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/JavaVersionException.java
module edu::umd::cs::findbugs::JavaVersionException
   inherits from Exception
   function JavaVersionException(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function JavaVersionException(String,Throwable) in line 34
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/L10N.java
module edu::umd::cs::findbugs::L10N
   function getLocalString(String,String) in line 77
      protection public
      21 lines of code
      2 parameters
      7 conditional paths
      uses function lookup(ResourceBundle,String) defined in edu::umd::cs::findbugs::L10N
      uses variable bundle defined in edu::umd::cs::findbugs::L10N
      uses variable bundle_en defined in edu::umd::cs::findbugs::L10N
      uses variable DEBUG defined in edu::umd::cs::findbugs::L10N
      uses variable extraProperties defined in edu::umd::cs::findbugs::L10N
   function localiseButton(AbstractButton,String,String,boolean) in line 109
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses function getLocalString(String,String) defined in edu::umd::cs::findbugs::L10N
      uses function toString() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonic() defined in edu::umd::cs::findbugs::gui::AnnotatedString
      uses function getMnemonicIndex() defined in edu::umd::cs::findbugs::gui::AnnotatedString
   function lookup(ResourceBundle,String) in line 72
      5 lines of code
      2 parameters
      2 conditional paths
   function L10N() in line 69
      2 lines of code
      0 parameters
      1 conditional paths
   variable bundle in line 48
   variable bundle_en in line 49
   variable DEBUG in line 45
   variable extraProperties in line 51
   variable GENERATE_MISSING_KEYS in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/LaunchAppropriateUI.java
module edu::umd::cs::findbugs::LaunchAppropriateUI
   function getLaunchProperty() in line 61
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function main(String) in line 31
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses function getLaunchProperty() defined in edu::umd::cs::findbugs::LaunchAppropriateUI
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/LocalVariableAnnotation.java
module edu::umd::cs::findbugs::LocalVariableAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitLocalVariableAnnotation(LocalVariableAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 91
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 138
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function equals(Object) in line 132
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function format(String,ClassAnnotation) in line 104
      protection public
      13 lines of code
      2 parameters
      8 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getDescription() in line 122
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getLocalVariableAnnotation(Method,Location,IndexedInstruction) in line 65
      protection public
      8 lines of code
      3 parameters
      1 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function getLocalVariableAnnotation(Method,int,int,int) in line 74
      protection public
      15 lines of code
      4 parameters
      4 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function LocalVariableAnnotation(String,int,int) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function getName() in line 177
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function hashCode() in line 127
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function isSignificant() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function setDescription(String) in line 118
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function toString() in line 145
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function writeXML(XMLOutput) in line 157
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 161
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable value defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   function LocalVariableAnnotation(String,int,int) in line 57
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::LocalVariableAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::LocalVariableAnnotation
   variable DEFAULT_ROLE in line 43
   variable description in line 47
   variable ELEMENT_NAME in line 155
   variable serialVersionUID in line 41
   variable value in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Lookup.java
module edu::umd::cs::findbugs::Lookup
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   function findImplementation(JavaClass,String,String) in line 72
      protection public
      11 lines of code
      3 parameters
      3 conditional paths
   function findImplementor(JavaClass[],String,String) in line 57
      protection public
      13 lines of code
      3 parameters
      4 conditional paths
      uses function findImplementation(JavaClass,String,String) defined in edu::umd::cs::findbugs::Lookup
   function findSuperImplementor(JavaClass,String,String,BugReporter) in line 31
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses function findImplementor(JavaClass[],String,String) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
   function findSuperImplementor(String,String,String,BugReporter) in line 44
      protection public
      11 lines of code
      4 parameters
      2 conditional paths
      uses function findImplementor(JavaClass[],String,String) defined in edu::umd::cs::findbugs::Lookup
      uses function reportMissingClass(ClassNotFoundException) defined in edu::umd::cs::findbugs::classfile::IErrorLogger
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/MethodAnnotation.java
module edu::umd::cs::findbugs::MethodAnnotation
   inherits from edu::umd::cs::findbugs::PackageMemberAnnotation
   function accept(BugAnnotationVisitor) in line 277
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitMethodAnnotation(MethodAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function compareTo(BugAnnotation) in line 396
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function equals(Object) in line 387
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 282
      23 lines of code
      2 parameters
      7 conditional paths
      uses variable UGLY_METHODS defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getUglyMethod() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getFullMethod(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function fromCalledMethod(DismantleBytecode) in line 113
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getOpcode() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function fromCalledMethod(String,String,String,boolean) in line 197
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
      uses function fromForeignMethod(String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromForeignMethod(String,String,String,int) in line 134
      protection public
      19 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromForeignMethod(String,String,String,boolean) in line 165
      protection public
      19 lines of code
      4 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromMethodDescriptor(MethodDescriptor) in line 227
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function fromForeignMethod(String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getName() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function getSignature() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
      uses function isStatic() defined in edu::umd::cs::findbugs::classfile::FieldOrMethodDescriptor
   function fromVisitedMethod(PreorderVisitor) in line 91
      protection public
      14 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function MethodAnnotation(String,String,String,boolean) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function fromXMethod(XMethod) in line 213
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function fromForeignMethod(String,String,String,int) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function isStatic() defined in edu::umd::cs::findbugs::ba::ClassMember
   function getFullMethod(ClassAnnotation) in line 369
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable fullMethod defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getNameInClass(ClassAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function getJavaSourceMethodName() in line 242
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getMethodName() in line 238
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
   function getMethodSignature() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function getNameInClass(ClassAnnotation) in line 312
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getNameInClass(boolean,boolean,boolean) in line 330
      protection public
      31 lines of code
      3 parameters
      7 conditional paths
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getJavaSourceMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getFirst() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function skip() defined in edu::umd::cs::findbugs::ba::SignatureConverter
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function getUglyMethod() in line 377
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function hashCode() in line 382
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
   function isSignificant() in line 447
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable METHOD_DANGEROUS_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable METHOD_SAFE_TARGET defined in edu::umd::cs::findbugs::MethodAnnotation
   function isStatic() in line 263
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toXMethod() in line 272
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
   function writeXML(XMLOutput) in line 416
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 419
      protection public
      26 lines of code
      2 parameters
      5 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable MESSAGE_TAG defined in edu::umd::cs::findbugs::BugAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function MethodAnnotation(String,String,String,boolean) in line 72
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodName defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable methodSig defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function isStatic() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable fullMethod defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable sourceLines defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   variable DEFAULT_ROLE in line 50
   variable ELEMENT_NAME in line 414
   variable fullMethod in line 54
   variable isStatic in line 55
   variable METHOD_DANGEROUS_TARGET in line 59
      protection public
   variable METHOD_DANGEROUS_TARGET_ACTUAL_GUARANTEED_NULL in line 57
      protection public
   variable METHOD_SAFE_TARGET in line 61
      protection public
   variable methodName in line 52
   variable methodSig in line 53
   variable serialVersionUID in line 46
   variable UGLY_METHODS in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/MethodWarningSuppressor.java
module edu::umd::cs::findbugs::MethodWarningSuppressor
   inherits from edu::umd::cs::findbugs::ClassWarningSuppressor
   function match(BugInstance) in line 14
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function equals(Object) defined in edu::umd::cs::findbugs::MethodAnnotation
   function MethodWarningSuppressor(String,ClassAnnotation,MethodAnnotation) in line 9
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ml/ConvertToARFF.java
module edu::umd::cs::findbugs::ml::ConvertToARFF
   function addAppNameAttribute() in line 560
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addAttribute(Attribute) in line 532
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable attributeList defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addBooleanAttribute(String,String) in line 540
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addClassificationAttribute() in line 544
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addIdAttribute() in line 556
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addNominalAttribute(String,String) in line 536
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addNumericAttribute(String,String) in line 548
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function addPriorityAttribute() in line 552
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function collectionToRange(Collection< String >) in line 469
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
   function convert(String,Document,String,final Writer) in line 572
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function scan(Document,final String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function generateHeader(String,final Writer) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function generateInstances(Document,final String,final Writer) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function dropUnclassifiedWarnings() in line 528
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function generateHeader(String,final Writer) in line 606
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
      uses function scanAttributeList(AttributeCallback) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function getName() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
      uses function getRange() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function generateInstances(Document,final String,final Writer) in line 634
      protection public
      24 lines of code
      3 parameters
      4 conditional paths
      uses function getBugInstanceList(Document) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function scanAttributeList(AttributeCallback) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function getInstanceValue(Element,String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getBugClassification(String) in line 675
      22 lines of code
      1 parameters
      7 conditional paths
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable NOT_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable HARMLESS defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable HARMLESS_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getBugInstanceList(Document) in line 698
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses variable nodeSelectionXpath defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function dropUnclassifiedWarnings() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function getBugClassification(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getNumAttributes() in line 524
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable attributeList defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function main(String[]) in line 819
      protection public
      50 lines of code
      1 parameters
      5 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function printUsage(PrintStream) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine
      uses function getConverter() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine
      uses function getNumAttributes() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function DataFile(Document,String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function toAppName(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function scan(Document,final String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function getDocument() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function getAppName() defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function generateHeader(String,final Writer) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function generateInstances(Document,final String,final Writer) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function scan(Document,final String) in line 587
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getBugInstanceList(Document) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses function scanAttributeList(AttributeCallback) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function scan(Element,String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function scanAttributeList(AttributeCallback) in line 664
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable attributeList defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function setAppName(String) in line 511
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function setNodeSelectionXpath(String) in line 520
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nodeSelectionXpath defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function toAppName(String) in line 808
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function ConvertToARFF() in line 505
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable DEFAULT_NODE_SELECTION_XPATH defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   variable appName in line 499
   variable attributeList in line 496
   variable BUG in line 185
   variable DEFAULT_NODE_SELECTION_XPATH in line 490
   variable dropUnclassifiedWarnings in line 498
   variable HARMLESS in line 187
   variable HARMLESS_BUG in line 188
   variable nodeSelectionXpath in line 497
   variable NOT_BUG in line 186
   variable RANDOM_CHARS in line 391
   variable UNCLASSIFIED in line 184
module edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getAppName() in line 72
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getDocument() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function DataFile(Document,String) in line 65
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   variable appName in line 63
   variable document in line 62
module edu::umd::cs::findbugs::ml::ConvertToARFF::MissingNodeException
   inherits from Exception
   function MissingNodeException(String) in line 78
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 76
module edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 88
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function getName() in line 84
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 87
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 85
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::XPathAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   abstract class
   function getInstanceValue(Element,String) in line 105
      protection public
      26 lines of code
      2 parameters
      8 conditional paths
   function getName() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function XPathAttribute(String,String) in line 96
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable name in line 93
   variable xpath in line 94
module edu::umd::cs::findbugs::ml::ConvertToARFF::NominalAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::XPathAttribute
   function getInstanceValue(Element,String) in line 154
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getRange() in line 149
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function collectionToRange(Collection< String >) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function scan(Element,String) in line 141
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function NominalAttribute(String,String) in line 136
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable possibleValueSet in line 134
module edu::umd::cs::findbugs::ml::ConvertToARFF::BooleanAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::XPathAttribute
   function getInstanceValue(Element,String) in line 174
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getRange() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 164
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function BooleanAttribute(String,String) in line 160
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::AbstractClassificationAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   abstract class
   function bugToString(int) in line 216
      1 lines of code
      1 parameters
      1 conditional paths
   function getInstanceValue(Element,String) in line 208
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses function getBugClassification(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getName() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 202
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::ClassificationAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::AbstractClassificationAttribute
   function bugToString(int) in line 226
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable NOT_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable HARMLESS_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getRange() in line 221
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::BinaryClassificationAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::AbstractClassificationAttribute
   function bugToString(int) in line 251
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable NOT_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses variable HARMLESS_BUG defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getRange() in line 243
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::NumericAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::XPathAttribute
   function getRange() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 266
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   function NumericAttribute(String,String) in line 262
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::PriorityAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 286
      protection public
      17 lines of code
      2 parameters
      6 conditional paths
   function getName() in line 275
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 282
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 279
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::IdAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 328
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getName() in line 320
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 326
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function collectionToRange(Collection< String >) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function instanceValue(Element,String) in line 336
      12 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function scan(Element,String) in line 322
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   variable count in line 318
   variable possibleValueSet in line 315
   variable scanning in line 317
module edu::umd::cs::findbugs::ml::ConvertToARFF::IdStringAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 377
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getName() in line 355
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 368
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function scan(Element,String) in line 362
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::RandomIdAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function generateId() in line 413
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable RANDOM_CHARS defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function getInstanceValue(Element,String) in line 438
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function getName() in line 402
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 427
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses function collectionToRange(Collection< String >) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function scan(Element,String) in line 409
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable idMap in line 397
   variable rng in line 396
module edu::umd::cs::findbugs::ml::ConvertToARFF::AppNameAttribute
   inherits from edu::umd::cs::findbugs::ml::ConvertToARFF::Attribute
   function getInstanceValue(Element,String) in line 463
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   function getName() in line 450
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getRange() in line 459
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function collectionToRange(Collection< String >) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function scan(Element,String) in line 454
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable appName defined in edu::umd::cs::findbugs::ml::ConvertToARFF::DataFile
   variable appNameSet in line 448
module edu::umd::cs::findbugs::ml::ConvertToARFF::AttributeCallback
   function apply(Attribute) in line 483
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function addXPathAttribute(String,String,XPathAttributeCreator) in line 790
      10 lines of code
      3 parameters
      2 conditional paths
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function create(String,String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine::XPathAttributeCreator
   function getConverter() in line 731
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleOption(String,String) in line 736
      20 lines of code
      2 parameters
      9 conditional paths
      uses variable dropUnclassifiedWarnings defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addIdAttribute() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addAttribute(Attribute) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addAppNameAttribute() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addClassificationAttribute() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function addPriorityAttribute() defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function handleOptionWithArgument(String,String) in line 762
      27 lines of code
      2 parameters
      6 conditional paths
      uses function setNodeSelectionXpath(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
      uses function setAppName(String) defined in edu::umd::cs::findbugs::ml::ConvertToARFF
   function printUsage(PrintStream) in line 801
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function C2ACommandLine() in line 715
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   variable converter in line 713
module edu::umd::cs::findbugs::ml::ConvertToARFF::C2ACommandLine::XPathAttributeCreator
   function create(String,String) in line 758
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ml/GenerateUIDs.java
module edu::umd::cs::findbugs::ml::GenerateUIDs
   function execute() in line 67
      protection public
      35 lines of code
      0 parameters
      6 conditional paths
      uses variable inputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses variable bugCollection defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses variable project defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses variable outputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
   function main(String[]) in line 103
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable inputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses variable outputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses function GenerateUIDs(String,String) defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses function execute() defined in edu::umd::cs::findbugs::ml::GenerateUIDs
   function GenerateUIDs(String,String) in line 60
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable inputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
      uses variable outputFilename defined in edu::umd::cs::findbugs::ml::GenerateUIDs
   variable bugCollection in line 55
   variable inputFilename in line 57
   variable outputFilename in line 58
   variable project in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ml/SplitCamelCaseIdentifier.java
module edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
   function split() in line 48
      protection public
      45 lines of code
      0 parameters
      9 conditional paths
      uses variable ident defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
   function SplitCamelCaseIdentifier(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable ident defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
   variable ident in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/model/ClassFeatureSet.java
module edu::umd::cs::findbugs::model::ClassFeatureSet
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function addFeature(String) in line 197
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function featureIterator() in line 201
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function getClassName() in line 168
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function getNumFeatures() in line 193
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function hasFeature(String) in line 205
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable featureSet defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function initialize(JavaClass) in line 76
      protection public
      32 lines of code
      1 parameters
      7 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function addFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable CLASS_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function isSynthetic(FieldOrMethod) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformMethodSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function overridesSuperclassMethod(JavaClass,Method) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable METHOD_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_CODE_LENGTH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable CODE_LENGTH_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FIELD_NAME_KEY defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function transformSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function isInterface() in line 182
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSynthetic(FieldOrMethod) in line 150
      14 lines of code
      1 parameters
      4 conditional paths
   function isUnlikelyToBeRenamed(String) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function main(String[]) in line 330
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses function ClassFeatureSet() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function similarity(ClassFeatureSet,ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function similarTo(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function overridesSuperclassMethod(JavaClass,Method) in line 117
      26 lines of code
      2 parameters
      7 conditional paths
      uses variable INSTANCE_METHOD defined in edu::umd::cs::findbugs::ba::Hierarchy
   function setClassName(String) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function setInterface(boolean) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isInterface() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function similarity(ClassFeatureSet,ClassFeatureSet) in line 304
      protection public
      21 lines of code
      2 parameters
      5 conditional paths
      uses variable isInterface defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function getNumFeatures() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_FEATURES defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable EXACT_CLASS_NAME_MATCH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function featureIterator() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function hasFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function similarTo(ClassFeatureSet) in line 326
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function similarity(ClassFeatureSet,ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable MIN_MATCH defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformClassName(String) in line 215
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function isUnlikelyToBeRenamed(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformMethodSignature(String) in line 244
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function transformSignature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function transformSignature(String) in line 268
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function transformClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function writeXML(XMLOutput) in line 352
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable className defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function featureIterator() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FEATURE_ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function ClassFeatureSet() in line 61
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable CLASS_NAME_KEY in line 48
      protection public
   variable className in line 53
   variable CODE_LENGTH_KEY in line 50
      protection public
   variable ELEMENT_NAME in line 346
      protection public
   variable EXACT_CLASS_NAME_MATCH in line 302
      protection public
   variable FEATURE_ELEMENT_NAME in line 347
      protection public
   variable featureSet in line 55
   variable FIELD_NAME_KEY in line 51
      protection public
   variable isInterface in line 54
   variable METHOD_NAME_KEY in line 49
      protection public
   variable MIN_CODE_LENGTH in line 68
      protection public
   variable MIN_FEATURES in line 291
      protection public
   variable MIN_MATCH in line 296
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/model/ClassNameRewriter.java
module edu::umd::cs::findbugs::model::ClassNameRewriter
   function rewriteClassName(String) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/model/ClassNameRewriterUtil.java
module edu::umd::cs::findbugs::model::ClassNameRewriterUtil
   abstract class
   function convertFieldAnnotation(ClassNameRewriter,FieldAnnotation) in line 110
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function rewriteSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getFieldSignature() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::FieldAnnotation
   function convertMethodAnnotation(ClassNameRewriter,MethodAnnotation) in line 90
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMethodName() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function rewriteMethodSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getMethodSignature() defined in edu::umd::cs::findbugs::MethodAnnotation
      uses variable isStatic defined in edu::umd::cs::findbugs::MethodAnnotation
   function rewriteMethodSignature(ClassNameRewriter,String) in line 42
      protection public
      19 lines of code
      2 parameters
      3 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
      uses function rewriteSignature(ClassNameRewriter,String) defined in edu::umd::cs::findbugs::model::ClassNameRewriterUtil
      uses function getReturnTypeSignature() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function rewriteSignature(ClassNameRewriter,String) in line 69
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/model/IdentityClassNameRewriter.java
module edu::umd::cs::findbugs::model::IdentityClassNameRewriter
   inherits from edu::umd::cs::findbugs::model::ClassNameRewriter
   inherits from java::io::Serializable
   function instance() in line 40
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable theInstance defined in edu::umd::cs::findbugs::model::IdentityClassNameRewriter
   function rewriteClassName(String) in line 45
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   variable serialVersionUID in line 33
   variable theInstance in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/model/MovedClassMap.java
module edu::umd::cs::findbugs::model::MovedClassMap
   inherits from edu::umd::cs::findbugs::model::ClassNameRewriter
   function buildClassSet(BugCollection) in line 104
      15 lines of code
      1 parameters
      4 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
   function buildShortNameToFullNameMap(Set< String >) in line 127
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getShortClassName(String) defined in edu::umd::cs::findbugs::model::MovedClassMap
   function execute() in line 56
      protection public
      30 lines of code
      0 parameters
      4 conditional paths
      uses function buildClassSet(BugCollection) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable before defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable after defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function buildShortNameToFullNameMap(Set< String >) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function getShortClassName(String) defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable DEBUG defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function getShortClassName(String) in line 142
      7 lines of code
      1 parameters
      2 conditional paths
   function isEmpty() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function rewriteClassName(String) in line 90
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable rewriteMap defined in edu::umd::cs::findbugs::model::MovedClassMap
   function MovedClassMap(BugCollection,BugCollection) in line 50
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable before defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses variable after defined in edu::umd::cs::findbugs::model::MovedClassMap
   variable after in line 47
   variable before in line 46
   variable DEBUG in line 44
   variable rewriteMap in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/model/RegenerateClassFeatures.java
module edu::umd::cs::findbugs::model::RegenerateClassFeatures
   function execute() in line 51
      protection public
      29 lines of code
      0 parameters
      4 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function clearClassFeatures() defined in edu::umd::cs::findbugs::BugCollection
      uses variable jarFile defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function initialize(JavaClass) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function setClassFeatureSet(ClassFeatureSet) defined in edu::umd::cs::findbugs::BugCollection
   function getBugCollection() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
   function main(String[]) in line 88
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function RegenerateClassFeatures(BugCollection,String) defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
   function RegenerateClassFeatures(BugCollection,String) in line 46
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
      uses variable jarFile defined in edu::umd::cs::findbugs::model::RegenerateClassFeatures
   variable bugCollection in line 43
   variable jarFile in line 44
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/model/SimilarClassFinder.java
module edu::umd::cs::findbugs::model::SimilarClassFinder
   function add(ClassFeatureSet) in line 36
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
      uses function addMember(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function similarClassSetIterator() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
   function size() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable similarClassSetList defined in edu::umd::cs::findbugs::model::SimilarClassFinder
   function SimilarClassFinder() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable similarClassSetList in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/model/SimilarClassSet.java
module edu::umd::cs::findbugs::model::SimilarClassSet
   function addMember(ClassFeatureSet) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function getRepresentativeClassName() in line 49
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function shouldContain(ClassFeatureSet) in line 37
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
      uses function similarTo(ClassFeatureSet) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function size() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberList defined in edu::umd::cs::findbugs::model::SimilarClassSet
   function SimilarClassSet() in line 33
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable memberList in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/NewResults.java
module edu::umd::cs::findbugs::NewResults
   function execute() in line 45
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses function contains(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function main(String[]) in line 59
      protection public
      17 lines of code
      1 parameters
      2 conditional paths
      uses function NewResults(String,String) defined in edu::umd::cs::findbugs::NewResults
      uses function execute() defined in edu::umd::cs::findbugs::NewResults
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable project defined in edu::umd::cs::findbugs::NewResults
   function NewResults(String,String) in line 31
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
      uses variable project defined in edu::umd::cs::findbugs::NewResults
   function NewResults(SortedBugCollection,SortedBugCollection,Project) in line 38
      protection public
      6 lines of code
      3 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::NewResults
      uses variable newCollection defined in edu::umd::cs::findbugs::NewResults
      uses variable project defined in edu::umd::cs::findbugs::NewResults
   variable newCollection in line 28
   variable origCollection in line 27
   variable project in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/NonReportingDetector.java
module edu::umd::cs::findbugs::NonReportingDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/NoOpFindBugsProgress.java
module edu::umd::cs::findbugs::NoOpFindBugsProgress
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function finishArchive() in line 10
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 16
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 19
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int[]) in line 25
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 7
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function startAnalysis(int) in line 13
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/OpcodeStack.java
module edu::umd::cs::findbugs::OpcodeStack
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   function addJumpValue(int) in line 1605
      24 lines of code
      1 parameters
      7 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeLists(List< Item >,List< Item >,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
   function clear() in line 1596
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function constantToDouble(Item) in line 1295
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToFloat(Item) in line 1287
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToInt(Item) in line 1279
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function constantToLong(Item) in line 1303
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getExceptionSig(DismantleBytecode,CodeException) in line 532
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getLastUpdate(int) in line 603
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function getLVValue(int) in line 2013
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function getNumLastUpdates() in line 608
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function getStackDepth() in line 1720
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function getStackItem(int) in line 1724
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getStringFromIndex(DismantleBytecode,int) in line 1963
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function handleDcmp(int) in line 1311
      27 lines of code
      1 parameters
      6 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function handleDup() in line 1405
      6 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup2() in line 1428
      15 lines of code
      0 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDup2X1() in line 1447
      23 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDupX1() in line 1415
      9 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleDupX2() in line 1474
      20 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function handleFcmp(int) in line 1343
      24 lines of code
      1 parameters
      6 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function handleLcmp() in line 1371
      20 lines of code
      0 parameters
      4 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function handleSwap() in line 1395
      6 lines of code
      0 parameters
      1 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function mergeJumps(DismantleBytecode) in line 539
      protection public
      55 lines of code
      1 parameters
      15 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setCouldBeZero(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function mergeLists(List< Item >,List< Item >,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getExceptionSig(DismantleBytecode,CodeException) defined in edu::umd::cs::findbugs::OpcodeStack
   function mergeLists(List< Item >,List< Item >,boolean) in line 1571
      24 lines of code
      3 parameters
      6 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function merge(Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function pop() in line 1741
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function pop(int) in line 1745
      5 lines of code
      1 parameters
      2 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
   function processMethodCall(DismantleBytecode,int) in line 1495
      75 lines of code
      2 parameters
      17 conditional paths
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function equals(Object,Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getStackItem(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByInvoke(DismantleBytecode,boolean) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setSpecialKind(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable MATH_ABS defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function push(Item) in line 1751
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByConstant(DismantleBytecode,Constant) in line 1755
      19 lines of code
      2 parameters
      7 conditional paths
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByDoubleMath(int,Item,Item) in line 1934
      22 lines of code
      3 parameters
      7 conditional paths
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setSpecialKind(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByFloatMath(int,Item,Item) in line 1912
      21 lines of code
      3 parameters
      7 conditional paths
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setSpecialKind(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByIntMath(int,Item,Item) in line 1789
      71 lines of code
      3 parameters
      30 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MASKED_NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable INTEGER_SUM defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable AVERAGE_COMPUTED_USING_DIVISION defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByInvoke(DismantleBytecode,boolean) in line 1957
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushBySignature(String) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLocalLoad(String,int) in line 1989
      14 lines of code
      2 parameters
      3 conditional paths
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function pushByLocalObjectLoad(DismantleBytecode,int) in line 1775
      13 lines of code
      2 parameters
      3 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pushByLocalLoad(String,int) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLocalStore(int) in line 1974
      14 lines of code
      1 parameters
      10 conditional paths
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushByLongMath(int,Item,Item) in line 1861
      50 lines of code
      3 parameters
      18 conditional paths
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
   function pushBySignature(String) in line 1968
      5 lines of code
      1 parameters
      2 conditional paths
      uses function equals(Object,Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function resetForMethodEntry(final DismantleBytecode) in line 1630
      protection public
      48 lines of code
      1 parameters
      8 conditional paths
      uses variable methodName defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable jumpEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpStackEntries defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable jumpEntryLocations defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
      uses function resetForMethodEntry0(PreorderVisitor) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable useIterativeAnalysis defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function sawOpcode(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function setupVisitorForClass(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getThisClass() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function doVisitMethod(Method) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function resetForMethodEntry0(PreorderVisitor) in line 1680
      39 lines of code
      1 parameters
      8 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setInitialParameter(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setLVValue(int,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function sawOpcode(DismantleBytecode,int) in line 611
      protection public
      663 lines of code
      2 parameters
      234 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable isRegisterStore defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function setLastUpdate(int,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function mergeJumps(DismantleBytecode) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBranchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByLocalObjectLoad(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByLocalLoad(String,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getFieldName() defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function setSpecialKind(int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FILE_SEPARATOR_STRING defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function push(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByConstant(DismantleBytecode,Constant) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pop() defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses function valueCouldBeNegative() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses function addJumpValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSize() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function handleDup() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDup2() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDupX1() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDupX2() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDup2X1() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getLVValue(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getIntConstant() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function pushByIntMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByLocalStore(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function handleSwap() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getRegisterNumber() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function pushByLongMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleLcmp() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleFcmp(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function handleDcmp(int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByFloatMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushByDoubleMath(int,Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToInt(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable MASKED_NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function constantToLong(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToFloat(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function constantToDouble(Item) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function pushBySignature(String) defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getElementSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function processMethodCall(DismantleBytecode,int) defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
      uses function clear() defined in edu::umd::cs::findbugs::OpcodeStack
      uses function getNextPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStackDepth() defined in edu::umd::cs::findbugs::OpcodeStack
   function setLastUpdate(int,int) in line 598
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   function setLVValue(int,Item) in line 2004
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable useIterativeAnalysis defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable seenTransferOfControl defined in edu::umd::cs::findbugs::OpcodeStack
      uses function merge(Item,Item) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function toString() in line 519
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
   function OpcodeStack() in line 523
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lvValues defined in edu::umd::cs::findbugs::OpcodeStack
      uses variable lastUpdate defined in edu::umd::cs::findbugs::OpcodeStack
   variable DEBUG in line 77
   variable jumpEntries in line 1601
   variable jumpEntryLocations in line 1603
   variable jumpStackEntries in line 1602
   variable lastUpdate in line 81
   variable lvValues in line 80
   variable methodName in line 1629
   variable seenTransferOfControl in line 85
   variable stack in line 79
   variable useIterativeAnalysis in line 87
module edu::umd::cs::findbugs::OpcodeStack::Item
   function couldBeZero() in line 445
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function isCouldBeZero() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function equals(Object,Object) in line 130
      5 lines of code
      2 parameters
      3 conditional paths
   function equals(Object) in line 155
      protection public
      14 lines of code
      1 parameters
      2 conditional paths
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function equals(Object,Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getConstant() in line 400
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getElementSignature() in line 366
      protection public
      14 lines of code
      0 parameters
      4 conditional paths
      uses function isArray() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getFieldAnnotation() in line 406
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getXField() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getFieldLoadedFromRegister() in line 314
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getJavaClass() in line 343
      protection public
      18 lines of code
      0 parameters
      4 conditional paths
      uses function isPrimitive() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isArray() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function getElementSignature() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getRegisterNumber() in line 393
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getReturnValueOf() in line 441
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getSignature() in line 396
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getSize() in line 125
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getSpecialKind() in line 423
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getUserValue() in line 457
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function getXField() in line 409
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function hashCode() in line 137
      protection public
      17 lines of code
      0 parameters
      4 conditional paths
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isArray() in line 362
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isCouldBeZero() in line 493
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable COULD_BE_ZERO_FLAG defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isInitialParameter() in line 479
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable IS_INITIAL_PARAMETER_FLAG defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isNonNegative() in line 381
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MASKED_NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isNull() in line 513
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable IS_NULL_FLAG defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function isPrimitive() in line 389
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function merge(Item,Item) in line 252
      protection public
      29 lines of code
      2 parameters
      11 conditional paths
      uses function equals(Object,Object) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function Item() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setCouldBeZero(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isCouldBeZero() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable DEBUG defined in edu::umd::cs::findbugs::OpcodeStack
   function mustBeZero() in line 448
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getConstant() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setCouldBeZero(boolean) in line 486
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setFlag(boolean,int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function couldBeZero() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable COULD_BE_ZERO_FLAG defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setFlag(boolean,int) in line 504
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setInitialParameter(boolean) in line 472
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setFlag(boolean,int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isInitialParameter() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable IS_INITIAL_PARAMETER_FLAG defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setNull(boolean) in line 500
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setFlag(boolean,int) defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable IS_NULL_FLAG defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setSpecialKind(int) in line 416
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function setUserValue(Object) in line 432
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function toString() in line 171
      protection public
      79 lines of code
      0 parameters
      23 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable INTEGER_SUM defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable AVERAGE_COMPUTED_USING_DIVISION defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable NASTY_FLOAT_MATH defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable FILE_SEPARATOR_STRING defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MATH_ABS defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable MASKED_NON_NEGATIVE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isInitialParameter() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isNull() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function isCouldBeZero() defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function valueCouldBeNegative() in line 461
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getSpecialKind() defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable SIGNED_BYTE defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable RANDOM_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable HASHCODE_INT_REMAINDER defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(String,int) in line 281
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(String) in line 285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable UNKNOWN defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(Item) in line 288
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable registerNumber defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable userValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable flags defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(Item,int) in line 297
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function Item(String,FieldAnnotation) in line 301
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(String,FieldAnnotation,int) in line 307
      protection public
      6 lines of code
      3 parameters
      2 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable source defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable fieldLoadedFromRegister defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item(String,Object) in line 318
      protection public
      18 lines of code
      2 parameters
      7 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable specialKind defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable LOW_8_BITS_CLEAR defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setCouldBeZero(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   function Item() in line 337
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable signature defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses variable constValue defined in edu::umd::cs::findbugs::OpcodeStack::Item
      uses function setNull(boolean) defined in edu::umd::cs::findbugs::OpcodeStack::Item
   variable AVERAGE_COMPUTED_USING_DIVISION in line 98
      protection public
   variable constValue in line 114
   variable COULD_BE_ZERO_FLAG in line 108
   variable fieldLoadedFromRegister in line 122
   variable FILE_SEPARATOR_STRING in line 102
      protection public
   variable flags in line 116
   variable FLOAT_MATH in line 99
      protection public
   variable HASHCODE_INT in line 96
      protection public
   variable HASHCODE_INT_REMAINDER in line 101
      protection public
   variable INTEGER_SUM in line 97
      protection public
   variable IS_INITIAL_PARAMETER_FLAG in line 107
   variable IS_NULL_FLAG in line 109
   variable LOW_8_BITS_CLEAR in line 95
      protection public
   variable MASKED_NON_NEGATIVE in line 104
      protection public
   variable MATH_ABS in line 103
      protection public
   variable NASTY_FLOAT_MATH in line 105
      protection public
   variable RANDOM_INT in line 94
      protection public
   variable RANDOM_INT_REMAINDER in line 100
      protection public
   variable registerNumber in line 118
   variable signature in line 113
   variable SIGNED_BYTE in line 93
      protection public
   variable source in line 115
   variable specialKind in line 112
   variable UNKNOWN in line 111
      protection public
   variable userValue in line 121
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/PackageMemberAnnotation.java
module edu::umd::cs::findbugs::PackageMemberAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   abstract class
   function clone() in line 55
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function format(String,ClassAnnotation) in line 97
      protection public
      9 lines of code
      2 parameters
      4 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function formatPackageMember(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function formatPackageMember(String,ClassAnnotation) in line 145
      1 lines of code
      2 parameters
      1 conditional paths
   function getClassName() in line 73
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getDescription() in line 111
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getPackageName() in line 80
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getSourceFileName() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFileName defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function getSourceLines() in line 175
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function isSignificant() in line 180
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function removePackageName(String) in line 132
      7 lines of code
      1 parameters
      2 conditional paths
      uses function formatPackageMember(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function setDescription(String) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function setSourceLines(SourceLineAnnotation) in line 163
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceLines defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable sourceFileName defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function shorten(String,String) in line 120
      9 lines of code
      2 parameters
      3 conditional paths
   function toString() in line 153
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function PackageMemberAnnotation(String,String) in line 45
      7 lines of code
      2 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function lookupSourceFile(@NonNull String) defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable description defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   variable className in line 35
   variable description in line 37
   variable serialVersionUID in line 33
   variable sourceFileName in line 36
   variable sourceLines in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/PackageStats.java
module edu::umd::cs::findbugs::PackageStats
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function addClass(String,boolean,int) in line 170
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable isInterface defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function addClass(String,String,boolean,int) in line 174
      protection public
      6 lines of code
      4 parameters
      1 conditional paths
      uses function getClassStats() defined in edu::umd::cs::findbugs::PackageStats
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function setInterface(boolean) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable isInterface defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function setSize(int) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function addError(BugInstance) in line 158
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassStats() defined in edu::umd::cs::findbugs::PackageStats
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function addError(BugInstance) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function clearBugCounts() in line 240
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
   function getBugsAtPriority(int) in line 139
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getClassStats() in line 130
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
   function getClassStats(String,String) in line 144
      9 lines of code
      2 parameters
      2 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function ClassStats(String,String) defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getClassStatsOrNull(String) in line 154
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getPackageName() in line 181
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::PackageStats
   function getTotalBugs() in line 133
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function recomputeFromClassStats() in line 227
      protection public
      10 lines of code
      0 parameters
      4 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
   function size() in line 136
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function writeBugPriorities(XMLOutput,int[]) in line 217
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function writeXML(XMLOutput) in line 186
      protection public
      19 lines of code
      1 parameters
      2 conditional paths
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::PackageStats
      uses variable packageName defined in edu::umd::cs::findbugs::PackageStats
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable packageMembers defined in edu::umd::cs::findbugs::PackageStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function writeBugPriorities(XMLOutput,int[]) defined in edu::umd::cs::findbugs::PackageStats
   function PackageStats(String) in line 126
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::PackageStats
   variable ALL_ERRORS in line 113
      protection public
   variable ELEMENT_NAME in line 112
      protection public
   variable nBugs in line 116
   variable packageMembers in line 123
   variable packageName in line 114
   variable size in line 117
module edu::umd::cs::findbugs::PackageStats::ClassStats
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function addError(BugInstance) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function clearBugCounts() in line 106
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function clone() in line 53
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getBugsAtPriority(int) in line 77
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getName() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getSourceFile() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function getTotalBugs() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function setInterface(boolean) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable isInterface defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function setSize(int) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   function size() in line 80
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function writeXML(XMLOutput) in line 89
      protection public
      13 lines of code
      1 parameters
      2 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable isInterface defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function size() defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable nBugs defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses function writeBugPriorities(XMLOutput,int[]) defined in edu::umd::cs::findbugs::PackageStats
   function ClassStats(String,String) in line 47
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::PackageStats::ClassStats
      uses variable sourceFile defined in edu::umd::cs::findbugs::PackageStats::ClassStats
   variable isInterface in line 42
   variable name in line 40
   variable nBugs in line 44
   variable size in line 45
   variable sourceFile in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/PackageWarningSuppressor.java
module edu::umd::cs::findbugs::PackageWarningSuppressor
   inherits from edu::umd::cs::findbugs::WarningSuppressor
   function getPackageName() in line 14
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 19
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function PackageWarningSuppressor(String,String) in line 8
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/AnalysisPass.java
module edu::umd::cs::findbugs::plan::AnalysisPass
   function addToPass(DetectorFactory) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function append(DetectorFactory) in line 72
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function contains(DetectorFactory) in line 110
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function getMembers() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function getUnpositionedMembers() in line 90
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable memberSet defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function instantiateDetector2sInPass(BugReporter) in line 121
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function iterator() defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function instantiateDetectorsInPass(BugReporter) in line 140
      protection public
      21 lines of code
      1 parameters
      5 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function iterator() in line 100
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable orderedFactoryList defined in edu::umd::cs::findbugs::plan::AnalysisPass
   function AnalysisPass() in line 51
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable memberSet in line 43
   variable orderedFactoryList in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/ByInterfaceDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 37
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isDetectorClassSubtypeOf(Class<?>) defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable detectorInterface defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   function ByInterfaceDetectorFactorySelector(Plugin,Class) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
      uses variable detectorInterface defined in edu::umd::cs::findbugs::plan::ByInterfaceDetectorFactorySelector
   variable detectorInterface in line 30
   variable plugin in line 29
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/ConstraintEdge.java
module edu::umd::cs::findbugs::plan::ConstraintEdge
   inherits from edu::umd::cs::findbugs::graph::AbstractEdge
   function ConstraintEdge(DetectorNode,DetectorNode) in line 42
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable source defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses variable target defined in edu::umd::cs::findbugs::graph::AbstractEdge
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/ConstraintGraph.java
module edu::umd::cs::findbugs::plan::ConstraintGraph
   inherits from edu::umd::cs::findbugs::graph::AbstractGraph
   function allocateEdge(DetectorNode,DetectorNode) in line 39
      3 lines of code
      2 parameters
      1 conditional paths
   function toString() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/DetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 28
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/DetectorNode.java
module edu::umd::cs::findbugs::plan::DetectorNode
   inherits from edu::umd::cs::findbugs::graph::AbstractVertex
   function getFactory() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
   function toString() in line 60
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function getReportedBugPatternCodes() defined in edu::umd::cs::findbugs::DetectorFactory
   function DetectorNode(DetectorFactory) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factory defined in edu::umd::cs::findbugs::plan::DetectorNode
   variable factory in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/DetectorOrderingConstraint.java
module edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function getEarlier() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function getLater() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function toString() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   function DetectorOrderingConstraint(DetectorFactorySelector,DetectorFactorySelector) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable earlier defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
      uses variable later defined in edu::umd::cs::findbugs::plan::DetectorOrderingConstraint
   variable earlier in line 31
   variable later in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/ExecutionPlan.java
module edu::umd::cs::findbugs::plan::ExecutionPlan
   function addOrCreateDetectorNode(DetectorFactory,Map< String, DetectorNode >,ConstraintGraph) in line 286
      13 lines of code
      3 parameters
      2 conditional paths
   function addOrCreateDetectorNodes(DetectorFactorySelector,Map< String, DetectorNode >,Set< DetectorFactory >,ConstraintGraph) in line 269
      16 lines of code
      4 parameters
      2 conditional paths
      uses function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function addOrCreateDetectorNode(DetectorFactory,Map< String, DetectorNode >,ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function addPass(AnalysisPass) in line 352
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function addPlugin(Plugin) in line 96
      protection public
      16 lines of code
      1 parameters
      3 conditional paths
      uses variable pluginList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function copyTo(Iterator< T >,Collection< T >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) in line 451
      17 lines of code
      2 parameters
      3 conditional paths
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function getPositionSpecifiedInPluginDescriptor() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function appendToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function appendToPass(DetectorFactory,AnalysisPass) in line 446
      4 lines of code
      2 parameters
      1 conditional paths
   function assignToPass(DetectorFactory,AnalysisPass) in line 437
      4 lines of code
      2 parameters
      1 conditional paths
      uses function addToPass(DetectorFactory) defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function build() in line 119
      protection public
      82 lines of code
      0 parameters
      15 conditional paths
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable factoryChooser defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function choose(DetectorFactory) defined in edu::umd::cs::findbugs::DetectorFactoryChooser
      uses function getFactory() defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function enable(DetectorFactory) defined in edu::umd::cs::findbugs::DetectorFactoryChooser
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs2
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function buildPassList(ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function sortPass(List< DetectorOrderingConstraint >,Map< String, DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function addPass(AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getUnassignedSet() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) in line 239
      18 lines of code
      3 parameters
      2 conditional paths
      uses function addOrCreateDetectorNodes(DetectorFactorySelector,Map< String, DetectorNode >,Set< DetectorFactory >,ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function createConstraintEdges(ConstraintGraph,Set< DetectorNode >,Set< DetectorNode >,DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function buildPassList(ConstraintGraph) in line 317
      34 lines of code
      1 parameters
      7 conditional paths
      uses function addPass(AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function copyTo(Iterator< T >,Collection< T >) in line 218
      5 lines of code
      2 parameters
      2 conditional paths
   function createConstraintEdges(ConstraintGraph,Set< DetectorNode >,Set< DetectorNode >,DetectorOrderingConstraint) in line 300
      16 lines of code
      4 parameters
      4 conditional paths
   function dumpGraph(ConstraintGraph) in line 481
      8 lines of code
      1 parameters
      2 conditional paths
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getSource() defined in edu::umd::cs::findbugs::graph::AbstractEdge
      uses function getTarget() defined in edu::umd::cs::findbugs::graph::AbstractEdge
   function getNumPasses() in line 214
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function getUnassignedSet() in line 427
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable factoryMap defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses variable assignedToPassSet defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function main(String[]) in line 490
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses function ExecutionPlan() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getPluginById(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function addPlugin(Plugin) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function build() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getNumPasses() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function print() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function passIterator() in line 205
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function print() in line 469
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable passList defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function iterator() defined in edu::umd::cs::findbugs::plan::AnalysisPass
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) in line 258
      10 lines of code
      2 parameters
      3 conditional paths
      uses function selectFactory(DetectorFactory) defined in edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function setDetectorFactoryChooser(DetectorFactoryChooser) in line 89
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable factoryChooser defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function sortPass(List< DetectorOrderingConstraint >,Map< String, DetectorFactory >,AnalysisPass) in line 359
      67 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function selectDetectors(DetectorFactorySelector,Set< DetectorFactory >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getUnassignedSet() defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function buildConstraintGraph(Map< String, DetectorNode >,Set< DetectorFactory >,List< DetectorOrderingConstraint >) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function dumpGraph(ConstraintGraph) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function assignToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function search() defined in edu::umd::cs::findbugs::graph::AbstractDepthFirstSearch
      uses function appendToPass(DetectorFactory,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
      uses function getFactory() defined in edu::umd::cs::findbugs::plan::DetectorNode
      uses function appendDetectorsToPass(Collection< DetectorFactory >,AnalysisPass) defined in edu::umd::cs::findbugs::plan::ExecutionPlan
   function ExecutionPlan() in line 66
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
   variable assignedToPassSet in line 60
   variable DEBUG in line 52
      protection public
   variable factoryChooser in line 55
   variable factoryMap in line 57
   variable interPassConstraintList in line 58
   variable intraPassConstraintList in line 59
   variable passList in line 56
   variable pluginList in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/OrderingConstraintException.java
module edu::umd::cs::findbugs::plan::OrderingConstraintException
   inherits from edu::umd::cs::findbugs::classfile::CheckedAnalysisException
   function OrderingConstraintException(String) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/ReportingDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function isReportingDetector() defined in edu::umd::cs::findbugs::DetectorFactory
   function toString() in line 52
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
   function ReportingDetectorFactorySelector(Plugin) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::ReportingDetectorFactorySelector
   variable plugin in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/plan/SingleDetectorFactorySelector.java
module edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   inherits from edu::umd::cs::findbugs::plan::DetectorFactorySelector
   function selectFactory(DetectorFactory) in line 39
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses function getPlugin() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function toString() in line 45
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   function SingleDetectorFactorySelector(Plugin,String) in line 34
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
      uses variable className defined in edu::umd::cs::findbugs::plan::SingleDetectorFactorySelector
   variable className in line 32
   variable plugin in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Plugin.java
module edu::umd::cs::findbugs::Plugin
   function addBugCode(BugCode) in line 161
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCodeList defined in edu::umd::cs::findbugs::Plugin
   function addBugPattern(BugPattern) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternList defined in edu::umd::cs::findbugs::Plugin
   function addDetectorFactory(DetectorFactory) in line 143
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable detectorFactoryList defined in edu::umd::cs::findbugs::Plugin
   function addInterPassOrderingConstraint(DetectorOrderingConstraint) in line 170
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function addIntraPassOrderingConstraint(DetectorOrderingConstraint) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function bugCodeIterator() in line 234
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugCodeList defined in edu::umd::cs::findbugs::Plugin
   function bugPatternIterator() in line 225
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugPatternList defined in edu::umd::cs::findbugs::Plugin
   function chooseFactory(FactoryChooser) in line 263
      8 lines of code
      1 parameters
      3 conditional paths
      uses function detectorFactoryIterator() defined in edu::umd::cs::findbugs::Plugin
      uses function choose(DetectorFactory) defined in edu::umd::cs::findbugs::Plugin::FactoryChooser
   function detectorFactoryIterator() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable detectorFactoryList defined in edu::umd::cs::findbugs::Plugin
   function getFactoryByFullName(final String) in line 203
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function chooseFactory(FactoryChooser) defined in edu::umd::cs::findbugs::Plugin
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function getFactoryByShortName(final String) in line 189
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function chooseFactory(FactoryChooser) defined in edu::umd::cs::findbugs::Plugin
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
   function getPluginId() in line 255
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
   function getProvider() in line 97
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable provider defined in edu::umd::cs::findbugs::Plugin
   function getShortDescription() in line 134
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::Plugin
   function getWebsite() in line 115
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable website defined in edu::umd::cs::findbugs::Plugin
   function interPassConstraintIterator() in line 241
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable interPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function intraPassConstraintIterator() in line 248
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable intraPassConstraintList defined in edu::umd::cs::findbugs::Plugin
   function isEnabled() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable enabled defined in edu::umd::cs::findbugs::Plugin
   function setEnabled(boolean) in line 70
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable enabled defined in edu::umd::cs::findbugs::Plugin
   function setProvider(String) in line 88
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable provider defined in edu::umd::cs::findbugs::Plugin
   function setShortDescription(String) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable shortDescription defined in edu::umd::cs::findbugs::Plugin
   function setWebsite(String) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable website defined in edu::umd::cs::findbugs::Plugin
   function Plugin(String) in line 56
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable pluginId defined in edu::umd::cs::findbugs::Plugin
   variable bugCodeList in line 43
   variable bugPatternList in line 42
   variable detectorFactoryList in line 41
   variable enabled in line 44
   variable interPassConstraintList in line 47
   variable intraPassConstraintList in line 48
   variable pluginId in line 37
   variable provider in line 38
   variable shortDescription in line 40
   variable website in line 39
module edu::umd::cs::findbugs::Plugin::FactoryChooser
   function choose(DetectorFactory) in line 260
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/PluginException.java
module edu::umd::cs::findbugs::PluginException
   inherits from Exception
   function PluginException(String) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function PluginException(String,Throwable) in line 49
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/PluginLoader.java
module edu::umd::cs::findbugs::PluginLoader
   inherits from java::net::URLClassLoader
   function addCollection(List< Document >,String) in line 398
      9 lines of code
      2 parameters
      2 conditional paths
   function findMessageNode(List< Document >,String,String) in line 408
      10 lines of code
      3 parameters
      3 conditional paths
   function getChildText(Node,String) in line 419
      6 lines of code
      2 parameters
      2 conditional paths
   function getConstraintSelector(Element,Plugin,String,String) in line 355
      28 lines of code
      4 parameters
      6 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
   function getPlugin() in line 97
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function init() defined in edu::umd::cs::findbugs::PluginLoader
   function init() in line 103
      251 lines of code
      0 parameters
      39 conditional paths
      uses variable nextUnknownId defined in edu::umd::cs::findbugs::PluginLoader
      uses variable defaultLocale defined in edu::umd::cs::findbugs::I18N
      uses function addCollection(List< Document >,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function setEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
      uses function setProvider(String) defined in edu::umd::cs::findbugs::Plugin
      uses function setWebsite(String) defined in edu::umd::cs::findbugs::Plugin
      uses function findMessageNode(List< Document >,String,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function setShortDescription(String) defined in edu::umd::cs::findbugs::Plugin
      uses function setHidden(boolean) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function setPositionSpecifiedInPluginDescriptor(int) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function addDetectorFactory(DetectorFactory) defined in edu::umd::cs::findbugs::Plugin
      uses function setDetailHTML(String) defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getConstraintSelector(Element,Plugin,String,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function addInterPassOrderingConstraint(DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::Plugin
      uses function addIntraPassOrderingConstraint(DetectorOrderingConstraint) defined in edu::umd::cs::findbugs::Plugin
      uses variable DEBUG defined in edu::umd::cs::findbugs::PluginLoader
      uses function getChildText(Node,String) defined in edu::umd::cs::findbugs::PluginLoader
      uses function registerBugCategory(String,BugCategory) defined in edu::umd::cs::findbugs::I18N
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::I18N
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses function setAbbrev(String) defined in edu::umd::cs::findbugs::BugCategory
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugCategory
      uses function setDetailText(String) defined in edu::umd::cs::findbugs::BugCategory
      uses function addBugPattern(BugPattern) defined in edu::umd::cs::findbugs::Plugin
      uses function addBugCode(BugCode) defined in edu::umd::cs::findbugs::Plugin
   function lookupDetectorClass(Plugin,String) in line 384
      13 lines of code
      2 parameters
      3 conditional paths
      uses variable plugin defined in edu::umd::cs::findbugs::PluginLoader
      uses function getFactoryByShortName(final String) defined in edu::umd::cs::findbugs::Plugin
      uses function getFullName() defined in edu::umd::cs::findbugs::DetectorFactory
   function PluginLoader(URL) in line 77
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function init() defined in edu::umd::cs::findbugs::PluginLoader
   function PluginLoader(URL,ClassLoader) in line 88
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function init() defined in edu::umd::cs::findbugs::PluginLoader
   variable DEBUG in line 62
   variable nextUnknownId in line 66
   variable plugin in line 69
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/PrintingBugReporter.java
module edu::umd::cs::findbugs::PrintingBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 47
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable seenAlready defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function finish() in line 54
      protection public
      3 lines of code
      0 parameters
      7 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setUseLongBugCodes(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setReportUserDesignations(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function setReportHistory(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable annotationUploadFormat defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses variable stylesheet defined in edu::umd::cs::findbugs::PrintingBugReporter
   function main(String[]) in line 101
      protection public
      67 lines of code
      1 parameters
      15 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function xslt(String,String[],int) defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setOutputStream(PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable annotationUploadFormat defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceNum() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceOccurrenceMax() defined in edu::umd::cs::findbugs::BugInstance
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable UNCLASSIFIED defined in edu::umd::cs::findbugs::BugDesignation
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
   function observeClass(ClassDescriptor) in line 41
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function xslt(String,String[],int) in line 170
      protection public
      18 lines of code
      3 parameters
      4 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::PrintingBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function setOutputStream(PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function finish() defined in edu::umd::cs::findbugs::HTMLBugReporter
      uses function getFatalException() defined in edu::umd::cs::findbugs::HTMLBugReporter
   variable annotationUploadFormat in line 38
   variable seenAlready in line 39
   variable stylesheet in line 37
module edu::umd::cs::findbugs::PrintingBugReporter::PrintingCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 73
      17 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 95
      4 lines of code
      2 parameters
      1 conditional paths
   function PrintingCommandLine() in line 60
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Priorities.java
module edu::umd::cs::findbugs::Priorities
   variable EXP_PRIORITY in line 33
      protection public
   variable HIGH_PRIORITY in line 48
      protection public
   variable IGNORE_PRIORITY in line 29
      protection public
   variable LOW_PRIORITY in line 38
      protection public
   variable NORMAL_PRIORITY in line 43
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Project.java
module edu::umd::cs::findbugs::Project
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function addAuxClasspathEntry(String) in line 318
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addToListInternal(List< String >,String) defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function makeAbsoluteCWD(String) defined in edu::umd::cs::findbugs::Project
   function addFile(String) in line 200
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addToListInternal(List< String >,String) defined in edu::umd::cs::findbugs::Project
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses function makeAbsoluteCWD(String) defined in edu::umd::cs::findbugs::Project
   function addSourceDir(String) in line 210
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function addToListInternal(List< String >,String) defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses function makeAbsoluteCWD(String) defined in edu::umd::cs::findbugs::Project
   function addTimestamp(long) in line 956
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::Project
   function addToListInternal(List< String >,String) in line 925
      8 lines of code
      2 parameters
      2 conditional paths
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function convertToAbsolute(String) in line 879
      21 lines of code
      1 parameters
      3 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function convertToRelative(String,String) in line 813
      59 lines of code
      2 parameters
      12 conditional paths
      uses variable FILE_IGNORE_CASE defined in edu::umd::cs::findbugs::Project
   function duplicate() in line 144
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
      uses function Project() defined in edu::umd::cs::findbugs::Project
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
      uses variable currentWorkingDirectory defined in edu::umd::cs::findbugs::Project
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable timestamp defined in edu::umd::cs::findbugs::Project
   function getAuxClasspathEntry(int) in line 332
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getAuxClasspathEntryList() in line 347
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getFile(int) in line 240
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fileList defined in edu::umd::cs::findbugs::Project
   function getFileArray() in line 293
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileList defined in edu::umd::cs::findbugs::Project
   function getFileCount() in line 230
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileList defined in edu::umd::cs::findbugs::Project
   function getFileList() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fileList defined in edu::umd::cs::findbugs::Project
   function getImplicitClasspathEntryList() in line 452
      protection public
      24 lines of code
      0 parameters
      4 conditional paths
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
      uses function WorkListItem(URL) defined in edu::umd::cs::findbugs::Project::WorkListItem
      uses function processComponentJar(URL,WorkList,List< String >) defined in edu::umd::cs::findbugs::Project
      uses function getURL() defined in edu::umd::cs::findbugs::Project::WorkListItem
   function getLine(BufferedReader) in line 708
      9 lines of code
      1 parameters
      3 conditional paths
   function getNumAuxClasspathEntries() in line 325
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
   function getNumSourceDirs() in line 266
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getOption(String) in line 220
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
   function getProjectFileName() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function getProjectName() in line 977
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::Project
   function getSourceDir(int) in line 276
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSourceDirArray() in line 300
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSourceDirList() in line 307
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
   function getSuppressionFilter() in line 991
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
   function getTimestamp() in line 963
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::Project
   function isModified() in line 164
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeAbsoluteCWD(String) in line 906
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable currentWorkingDirectory defined in edu::umd::cs::findbugs::Project
   function makeListAbsoluteProject(List< String >) in line 938
      10 lines of code
      1 parameters
      2 conditional paths
      uses function convertToAbsolute(String) defined in edu::umd::cs::findbugs::Project
   function parseOption(String) in line 789
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
   function processComponentJar(URL,WorkList,List< String >) in line 485
      38 lines of code
      3 parameters
      10 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::Project
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses function createRelativeURL(URL,String) defined in edu::umd::cs::findbugs::Project::WorkList
      uses function add(WorkListItem) defined in edu::umd::cs::findbugs::Project::WorkList
   function projectNameFromProjectFileName() in line 719
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function read(String) in line 638
      protection public
      63 lines of code
      1 parameters
      15 conditional paths
      uses function isModified() defined in edu::umd::cs::findbugs::Project
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function getLine(BufferedReader) defined in edu::umd::cs::findbugs::Project
      uses variable JAR_FILES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable SRC_DIRS_KEY defined in edu::umd::cs::findbugs::Project
      uses function addToListInternal(List< String >,String) defined in edu::umd::cs::findbugs::Project
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses variable AUX_CLASSPATH_ENTRIES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable OPTIONS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function parseOption(String) defined in edu::umd::cs::findbugs::Project
      uses function getOption(String) defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses function makeListAbsoluteProject(List< String >) defined in edu::umd::cs::findbugs::Project
   function readXML(File) in line 581
      protection public
      39 lines of code
      1 parameters
      7 conditional paths
      uses function Project() defined in edu::umd::cs::findbugs::Project
      uses function setModified(boolean) defined in edu::umd::cs::findbugs::Project
   function removeAuxClasspathEntry(int) in line 339
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function removeFile(int) in line 249
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function removeSourceDir(int) in line 285
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function setCurrentWorkingDirectory(File) in line 158
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setModified(boolean) in line 171
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function setProjectFileName(String) in line 189
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function setProjectName(String) in line 970
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectName defined in edu::umd::cs::findbugs::Project
   function setSuppressionFilter(Filter) in line 984
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
   function setTimestamp(long) in line 952
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::Project
   function toString() in line 734
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable projectFileName defined in edu::umd::cs::findbugs::Project
   function transformFilename(String) in line 751
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
   function write(String,boolean,String) in line 544
      protection public
      36 lines of code
      3 parameters
      9 conditional paths
      uses variable JAR_FILES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses function convertToRelative(String,String) defined in edu::umd::cs::findbugs::Project
      uses variable SRC_DIRS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable AUX_CLASSPATH_ENTRIES_KEY defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable OPTIONS_KEY defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   function writeXML(File) in line 620
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function writeXML(XMLOutput) in line 763
      protection public
      20 lines of code
      1 parameters
      3 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getProjectFileName() defined in edu::umd::cs::findbugs::Project
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses variable PROJECT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable suppressionFilter defined in edu::umd::cs::findbugs::Project
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::Filter
      uses function writeBodyAsXML(XMLOutput) defined in edu::umd::cs::findbugs::filter::Filter
   function Project() in line 131
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
      uses variable optionsMap defined in edu::umd::cs::findbugs::Project
      uses variable RELATIVE_PATHS defined in edu::umd::cs::findbugs::Project
      uses variable fileList defined in edu::umd::cs::findbugs::Project
      uses variable srcDirList defined in edu::umd::cs::findbugs::Project
      uses variable auxClasspathEntryList defined in edu::umd::cs::findbugs::Project
      uses function isModified() defined in edu::umd::cs::findbugs::Project
   variable AUX_CLASSPATH_ENTRIES_KEY in line 527
   variable auxClasspathEntryList in line 112
   variable currentWorkingDirectory in line 85
   variable DEBUG in line 83
   variable FILE_IGNORE_CASE in line 804
   variable fileList in line 102
   variable isModified in line 117
   variable JAR_FILES_KEY in line 525
   variable OPTIONS_KEY in line 524
   variable optionsMap in line 97
   variable projectFileName in line 90
   variable projectName in line 92
   variable RELATIVE_PATHS in line 530
      protection public
   variable SRC_DIRS_KEY in line 526
   variable srcDirList in line 107
   variable suppressionFilter in line 126
   variable timestamp in line 124
   variable UNNAMED_PROJECT in line 122
      protection public
module edu::umd::cs::findbugs::Project::WorkListItem
   function getURL() in line 369
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
   function WorkListItem(URL) in line 362
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable url defined in edu::umd::cs::findbugs::Project::WorkListItem
   variable url in line 355
module edu::umd::cs::findbugs::Project::WorkList
   function add(WorkListItem) in line 415
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::Project
      uses function getURL() defined in edu::umd::cs::findbugs::Project::WorkListItem
   function createRelativeURL(URL,String) in line 404
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function createURL(String) in line 393
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getNextItem() in line 436
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isEmpty() in line 429
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function WorkList() in line 385
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable addedSet in line 379
   variable itemList in line 378
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ProjectStats.java
module edu::umd::cs::findbugs::ProjectStats
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   inherits from Cloneable
   function addBug(BugInstance) in line 177
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function addError(BugInstance) defined in edu::umd::cs::findbugs::PackageStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function addClass(String,boolean,int) in line 132
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
   function addClass(String,@CheckForNull String,boolean,int) in line 145
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function addClass(String,boolean,int) defined in edu::umd::cs::findbugs::PackageStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
   function addStats(ProjectStats) in line 311
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function clearBugCounts() in line 190
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function clone() in line 83
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function getBugsOfPriority(int) in line 98
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
   function getClassStats(String) in line 163
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getClassStatsOrNull(String) defined in edu::umd::cs::findbugs::PackageStats
   function getCodeSize() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
   function getNumClasses() in line 119
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
   function getPackageStats() in line 296
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function getPackageStats(String) in line 299
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function getTotalBugs() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
   function recomputeFromClassStats() in line 198
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
   function reportSummary(OutputStream) in line 259
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::ProjectStats
      uses function finish() defined in edu::umd::cs::findbugs::xml::XMLOutput
   function setTimestamp(String) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable TIMESTAMP_FORMAT defined in edu::umd::cs::findbugs::ProjectStats
      uses variable timestamp defined in edu::umd::cs::findbugs::ProjectStats
   function setTimestamp(long) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::ProjectStats
   function toString() in line 64
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function transformSummaryToHTML(Writer) in line 270
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses function reportSummary(OutputStream) defined in edu::umd::cs::findbugs::ProjectStats
   function writeXML(XMLOutput) in line 213
      protection public
      42 lines of code
      1 parameters
      6 conditional paths
      uses variable TIMESTAMP_FORMAT defined in edu::umd::cs::findbugs::ProjectStats
      uses variable timestamp defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalClasses defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalErrors defined in edu::umd::cs::findbugs::ProjectStats
      uses variable totalSize defined in edu::umd::cs::findbugs::ProjectStats
      uses variable packageStatsMap defined in edu::umd::cs::findbugs::ProjectStats
      uses variable baseFootprint defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCpuTime() defined in edu::umd::cs::findbugs::Footprint
      uses function getClockTime() defined in edu::umd::cs::findbugs::Footprint
      uses function getPeakMemory() defined in edu::umd::cs::findbugs::Footprint
      uses function getCollectionTime() defined in edu::umd::cs::findbugs::Footprint
   function ProjectStats() in line 75
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   variable baseFootprint in line 61
   variable packageStatsMap in line 56
   variable timestamp in line 60
   variable TIMESTAMP_FORMAT in line 55
   variable totalClasses in line 58
   variable totalErrors in line 57
   variable totalSize in line 59
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/props/AbstractWarningProperty.java
module edu::umd::cs::findbugs::props::AbstractWarningProperty
   inherits from edu::umd::cs::findbugs::props::WarningProperty
   abstract class
   function getName() in line 53
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   function getPriorityAdjustment() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   function AbstractWarningProperty(String,PriorityAdjustment) in line 38
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable shortName defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable priorityAdjustment in line 29
   variable shortName in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/props/GeneralWarningProperty.java
module edu::umd::cs::findbugs::props::GeneralWarningProperty
   inherits from edu::umd::cs::findbugs::props::AbstractWarningProperty
   function GeneralWarningProperty(String,PriorityAdjustment) in line 31
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable priorityAdjustment defined in edu::umd::cs::findbugs::props::AbstractWarningProperty
   variable CALLED_METHOD_1 in line 40
      protection public
   variable CALLED_METHOD_2 in line 43
      protection public
   variable CALLED_METHOD_3 in line 46
      protection public
   variable CALLED_METHOD_4 in line 49
      protection public
   variable ON_EXCEPTION_PATH in line 53
      protection public
   variable RECEIVER_OBJECT_TYPE in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/props/PriorityAdjustment.java
module edu::umd::cs::findbugs::props::PriorityAdjustment
   function toString() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::props::PriorityAdjustment
   function PriorityAdjustment(String) in line 30
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::props::PriorityAdjustment
   variable A_LITTLE_BIT_HIGHER_PRIORITY in line 61
      protection public
   variable A_LITTLE_BIT_LOWER_PRIORITY in line 58
      protection public
   variable AT_MOST_LOW in line 53
      protection public
   variable FALSE_POSITIVE in line 64
      protection public
   variable LOWER_PRIORITY in line 56
      protection public
   variable NO_ADJUSTMENT in line 40
      protection public
   variable RAISE_PRIORITY in line 43
      protection public
   variable RAISE_PRIORITY_TO_AT_LEAST_NORMAL in line 46
      protection public
   variable RAISE_PRIORITY_TO_HIGH in line 50
      protection public
   variable value in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/props/WarningProperty.java
module edu::umd::cs::findbugs::props::WarningProperty
   function getName() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getPriorityAdjustment() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/props/WarningPropertySet.java
module edu::umd::cs::findbugs::props::WarningPropertySet
   inherits from Cloneable
   function addProperty(WarningProperty) in line 77
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function checkProperty(WarningProperty,Object) in line 142
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function getProperty(WarningProperty) defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function clone() in line 61
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function computePriority(int) in line 168
      protection public
      57 lines of code
      1 parameters
      19 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable FALSE_POSITIVE defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable A_LITTLE_BIT_LOWER_PRIORITY defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable A_LITTLE_BIT_HIGHER_PRIORITY defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable RAISE_PRIORITY defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable RAISE_PRIORITY_TO_AT_LEAST_NORMAL defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable RAISE_PRIORITY_TO_HIGH defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOWER_PRIORITY defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable AT_MOST_LOW defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable NO_ADJUSTMENT defined in edu::umd::cs::findbugs::props::PriorityAdjustment
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function containsProperty(WarningProperty) in line 127
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function decorateBugInstance(BugInstance) in line 245
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getName() defined in edu::umd::cs::findbugs::props::WarningProperty
   function getProperty(WarningProperty) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function isFalsePositive(int) in line 235
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function removeProperty(WarningProperty) in line 89
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function setProperty(WarningProperty,String) in line 103
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function setProperty(WarningProperty,Boolean) in line 116
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
   function toString() in line 36
      protection public
      16 lines of code
      0 parameters
      2 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function getPriorityAdjustment() defined in edu::umd::cs::findbugs::props::WarningProperty
      uses function getName() defined in edu::umd::cs::findbugs::props::WarningProperty
   function WarningPropertySet() in line 56
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable map in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/props/WarningPropertyUtil.java
module edu::umd::cs::findbugs::props::WarningPropertyUtil
   abstract class
   function addPropertiesForLocation(WarningPropertySet,ClassContext,Method,Location) in line 173
      protection public
      8 lines of code
      4 parameters
      1 conditional paths
      uses function addReceiverObjectType(WarningPropertySet,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function addRecentlyCalledMethods(WarningPropertySet,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
   function addPropertiesForLocation(WarningPropertySet,ClassContext,Method,int) in line 191
      protection public
      14 lines of code
      4 parameters
      3 conditional paths
      uses function pcToLocation(ClassContext,Method,int) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function addPropertiesForLocation(WarningPropertySet,ClassContext,Method,Location) defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
   function addReceiverObjectType(WarningPropertySet,ClassContext,Method,Location) in line 95
      25 lines of code
      4 parameters
      5 conditional paths
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
      uses variable receiverObjectInstructionSet defined in edu::umd::cs::findbugs::props::WarningPropertyUtil
      uses function getTypeDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::type::TypeDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::Frame
      uses function getInstance(Instruction,ConstantPoolGen) defined in edu::umd::cs::findbugs::ba::Frame
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function setProperty(WarningProperty,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses variable RECEIVER_OBJECT_TYPE defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
   function addRecentlyCalledMethods(WarningPropertySet,ClassContext,Method,Location) in line 130
      33 lines of code
      4 parameters
      8 conditional paths
      uses function getCallListDataflow(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getFactAtLocation(Location) defined in edu::umd::cs::findbugs::ba::ca::CallListDataflow
      uses function isValid() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses function callIterator() defined in edu::umd::cs::findbugs::ba::ca::CallList
      uses variable CALLED_METHOD_1 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_2 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_3 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses variable CALLED_METHOD_4 defined in edu::umd::cs::findbugs::props::GeneralWarningProperty
      uses function setProperty(WarningProperty,String) defined in edu::umd::cs::findbugs::props::WarningPropertySet
      uses function getMethodName() defined in edu::umd::cs::findbugs::ba::ca::Call
   function pcToLocation(ClassContext,Method,int) in line 73
      12 lines of code
      3 parameters
      3 conditional paths
      uses function locationIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   variable receiverObjectInstructionSet in line 49
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/QueryBugAnnotations.java
module edu::umd::cs::findbugs::QueryBugAnnotations
   abstract class
   function addKeyword(String) in line 42
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable keywordSet defined in edu::umd::cs::findbugs::QueryBugAnnotations
   function match(BugInstance,String) in line 88
      1 lines of code
      2 parameters
      1 conditional paths
   function scan(String) in line 53
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
   function scan(BugCollection,String) in line 67
      protection public
      14 lines of code
      2 parameters
      4 conditional paths
      uses function getTextAnnotationWords() defined in edu::umd::cs::findbugs::BugInstance
      uses variable keywordSet defined in edu::umd::cs::findbugs::QueryBugAnnotations
      uses function match(BugInstance,String) defined in edu::umd::cs::findbugs::QueryBugAnnotations
   variable keywordSet in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/RecursiveFileSearch.java
module edu::umd::cs::findbugs::RecursiveFileSearch
   function fileNameIterator() in line 110
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resultList defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function search() in line 72
      protection public
      33 lines of code
      0 parameters
      9 conditional paths
      uses variable baseDir defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable directoryWorkList defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable directoriesScanned defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable fileFilter defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable resultList defined in edu::umd::cs::findbugs::RecursiveFileSearch
   function RecursiveFileSearch(String,FileFilter) in line 51
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
      uses variable baseDir defined in edu::umd::cs::findbugs::RecursiveFileSearch
      uses variable fileFilter defined in edu::umd::cs::findbugs::RecursiveFileSearch
   variable baseDir in line 38
   variable directoriesScanned in line 41
   variable directoryWorkList in line 40
   variable fileFilter in line 39
   variable resultList in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ResourceCollection.java
module edu::umd::cs::findbugs::ResourceCollection
   function addCreatedResource(Location,Resource) in line 75
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function addPreexistingResource(Resource) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getCreatedResource(Location) in line 102
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function isEmpty() in line 83
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function resourceIterator() in line 91
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function ResourceCollection() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable locationToResourceMap in line 46
   variable resourceList in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ResourceCreationPoint.java
module edu::umd::cs::findbugs::ResourceCreationPoint
   function getLocation() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function getResourceClass() in line 64
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resourceClass defined in edu::umd::cs::findbugs::ResourceCreationPoint
   function ResourceCreationPoint(Location,String) in line 49
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable location defined in edu::umd::cs::findbugs::ResourceCreationPoint
      uses variable resourceClass defined in edu::umd::cs::findbugs::ResourceCreationPoint
   variable location in line 36
   variable resourceClass in line 41
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ResourceTrackingDetector.java
module edu::umd::cs::findbugs::ResourceTrackingDetector
   inherits from edu::umd::cs::findbugs::Detector
   abstract class
   function analyzeMethod(ClassContext,Method,ResourceTrackerType,ResourceCollection< Resource >) in line 133
      protection public
      29 lines of code
      4 parameters
      1 conditional paths
   function buildResourceCollection(ClassContext,Method,ResourceTrackerType) in line 113
      19 lines of code
      3 parameters
      1 conditional paths
   function getResourceTracker(ClassContext,Method) in line 65
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function inspectResult(ClassContext,MethodGen,CFG,Dataflow< ResourceValueFrame, ResourceValueAnalysis< Resource >>,Resource) in line 68
      protection public
      1 lines of code
      5 parameters
      1 conditional paths
   function prescreen(ClassContext,Method) in line 63
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function report() in line 163
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function visitClassContext(ClassContext) in line 71
      protection public
      41 lines of code
      1 parameters
      1 conditional paths
   function ResourceTrackingDetector(BugReporter) in line 59
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable bugReporter in line 57
   variable DEBUG in line 53
   variable DEBUG_METHOD_NAME in line 55
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SAXBugCollectionHandler.java
module edu::umd::cs::findbugs::SAXBugCollectionHandler
   inherits from org::xml::sax::helpers::DefaultHandler
   function addMatcher(Matcher) in line 301
      14 lines of code
      1 parameters
      5 conditional paths
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function characters(char[],int,int) in line 587
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function createSourceLineAnnotation(String,Attributes) in line 492
      25 lines of code
      2 parameters
      3 conditional paths
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function discardedElement(String) in line 111
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function endElement(String,String,String) in line 520
      protection public
      65 lines of code
      3 parameters
      26 conditional paths
      uses function discardedElement(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable nestingOfIgnoredElements defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function isTopLevelFilter(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable DEBUG defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function addBug(BugInstance) defined in edu::umd::cs::findbugs::ProjectStats
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses function setAnnotationText(String) defined in edu::umd::cs::findbugs::BugInstance
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable analysisError defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setMessage(String) defined in edu::umd::cs::findbugs::AnalysisError
      uses function addError(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable stackTrace defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setStackTrace(String[]) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_MESSAGE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_EXCEPTION_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function setExceptionMessage(String) defined in edu::umd::cs::findbugs::AnalysisError
      uses variable ERROR_STACK_TRACE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function setClassFeatureSet(ClassFeatureSet) defined in edu::umd::cs::findbugs::BugCollection
      uses variable classFeatureSet defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function extractHash(String,Attributes) in line 474
      11 lines of code
      2 parameters
      2 conditional paths
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function getRequiredAttribute(Attributes,String,String) in line 591
      7 lines of code
      3 parameters
      2 conditional paths
   function isTopLevelFilter(String) in line 297
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable FIND_BUGS_FILTER defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function parseBugInstanceContents(String,Attributes) in line 373
      82 lines of code
      2 parameters
      21 conditional paths
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable packageMemberAnnotation defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function createSourceLineAnnotation(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function isSynthetic() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setDesignationKey(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function setUser(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugDesignation
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
      uses function setAnnotationRole(Attributes,BugAnnotation) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function parseLong(String,long) in line 456
      9 lines of code
      2 parameters
      2 conditional paths
   function parseMatcher(String,Attributes) in line 325
      46 lines of code
      2 parameters
      16 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addMatcher(Matcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcherAsChild(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function pushCompoundMatcher(CompoundMatcher) in line 319
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function pushCompoundMatcherAsChild(CompoundMatcher) in line 315
      4 lines of code
      1 parameters
      1 conditional paths
      uses function addMatcher(Matcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function setAnnotationRole(Attributes,BugAnnotation) in line 486
      5 lines of code
      2 parameters
      2 conditional paths
      uses function setDescription(String) defined in edu::umd::cs::findbugs::BugAnnotation
   function startElement(String,String,String,Attributes) in line 118
      protection public
      178 lines of code
      4 parameters
      43 conditional paths
      uses function discardedElement(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable nestingOfIgnoredElements defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable elementStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable topLevelName defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function parseLong(String,long) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setAnalysisTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function isTopLevelFilter(String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable filter defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSuppressionFilter(Filter) defined in edu::umd::cs::findbugs::Project
      uses variable matcherStack defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setProjectFileName(String) defined in edu::umd::cs::findbugs::Project
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function getRequiredAttribute(Attributes,String,String) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugInstance defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setRemovedByChangeOfPersistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setOldInstanceHash(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(String) defined in edu::umd::cs::findbugs::ProjectStats
      uses function parseBugInstanceContents(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable packageMemberAnnotation defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setSourceLines(SourceLineAnnotation) defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function createSourceLineAnnotation(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable analysisError defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable stackTrace defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function addClass(String,boolean,int) defined in edu::umd::cs::findbugs::ProjectStats
      uses function parseMatcher(String,Attributes) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable classFeatureSet defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function setClassName(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable FEATURE_ELEMENT_NAME defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses function addFeature(String) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable HISTORY_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::AppVersion
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function addAppVersion(AppVersion) defined in edu::umd::cs::findbugs::BugCollection
      uses variable textBuffer defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(String,BugCollection,Project,File) in line 86
      protection public
      11 lines of code
      4 parameters
      1 conditional paths
      uses variable topLevelName defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(BugCollection,Project,File) in line 97
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable BUG_COLLECTION defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable bugCollection defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(Project,File) in line 100
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable PROJECT defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable project defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   function SAXBugCollectionHandler(Filter,File) in line 103
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable FIND_BUGS_FILTER defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable base defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses variable filter defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
      uses function pushCompoundMatcher(CompoundMatcher) defined in edu::umd::cs::findbugs::SAXBugCollectionHandler
   variable analysisError in line 78
   variable base in line 83
   variable BUG_COLLECTION in line 68
   variable bugCollection in line 69
   variable bugInstance in line 76
   variable classFeatureSet in line 80
   variable DEBUG in line 116
   variable elementStack in line 74
   variable filter in line 72
   variable FIND_BUGS_FILTER in line 60
   variable matcherStack in line 71
   variable nestingOfIgnoredElements in line 82
   variable packageMemberAnnotation in line 77
   variable PROJECT in line 64
   variable project in line 70
   variable stackTrace in line 81
   variable textBuffer in line 75
   variable topLevelName in line 84
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SelfCalls.java
module edu::umd::cs::findbugs::SelfCalls
   function calledMethodIterator() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable calledMethodSet defined in edu::umd::cs::findbugs::SelfCalls
   function callSiteIterator() in line 120
      protection public
      17 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function edgeIterator() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function execute() in line 67
      protection public
      23 lines of code
      0 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable DEBUG defined in edu::umd::cs::findbugs::SelfCalls
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function addNode(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNumVertices() defined in edu::umd::cs::findbugs::graph::AbstractGraph
      uses function getMethodGen(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function scan(CallGraphNode) defined in edu::umd::cs::findbugs::SelfCalls
      uses function getNodeForMethod(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNumEdges() defined in edu::umd::cs::findbugs::graph::AbstractGraph
   function getCallGraph() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
   function hasSynchronization() in line 141
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSelfCall(InvokeInstruction) in line 186
      38 lines of code
      1 parameters
      5 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getConstantPoolGen() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function wantCallsFor(Method) defined in edu::umd::cs::findbugs::SelfCalls
      uses variable DEBUG defined in edu::umd::cs::findbugs::SelfCalls
   function scan(CallGraphNode) in line 150
      32 lines of code
      1 parameters
      7 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
      uses function getCFG(Method) defined in edu::umd::cs::findbugs::ba::ClassContext
      uses function hasSynchronization() defined in edu::umd::cs::findbugs::SelfCalls
      uses function blockIterator() defined in edu::umd::cs::findbugs::ba::CFG
      uses function instructionIterator() defined in edu::umd::cs::findbugs::ba::BasicBlock
      uses variable next defined in edu::umd::cs::findbugs::ba::BasicBlock::InstructionIterator
      uses function isSelfCall(InvokeInstruction) defined in edu::umd::cs::findbugs::SelfCalls
      uses variable callGraph defined in edu::umd::cs::findbugs::SelfCalls
      uses function createEdge(CallGraphNode,CallGraphNode,CallSite) defined in edu::umd::cs::findbugs::CallGraph
      uses function getNodeForMethod(Method) defined in edu::umd::cs::findbugs::CallGraph
      uses variable calledMethodSet defined in edu::umd::cs::findbugs::SelfCalls
   function wantCallsFor(Method) in line 113
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SelfCalls(ClassContext) in line 57
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable classContext defined in edu::umd::cs::findbugs::SelfCalls
   variable calledMethodSet in line 49
   variable callGraph in line 48
   variable classContext in line 47
   variable DEBUG in line 45
   variable hasSynchronization in line 50
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/ShowHelp.java
module edu::umd::cs::findbugs::ShowHelp
   function main(String[]) in line 29
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable WEBSITE defined in edu::umd::cs::findbugs::Version
      uses function showGeneralOptions() defined in edu::umd::cs::findbugs::ShowHelp
   function showGeneralOptions() in line 45
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SloppyBugComparator.java
module edu::umd::cs::findbugs::SloppyBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 116
      protection public
      43 lines of code
      2 parameters
      9 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrevFromBugType(String) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareClassesAllowingNull(ClassAnnotation,ClassAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareMethodsAllowingNull(MethodAnnotation,MethodAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function compareFieldsAllowingNull(FieldAnnotation,FieldAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
   function compareClassesAllowingNull(ClassAnnotation,ClassAnnotation) in line 66
      14 lines of code
      2 parameters
      4 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
   function compareFieldsAllowingNull(FieldAnnotation,FieldAnnotation) in line 92
      12 lines of code
      2 parameters
      3 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function convertField(FieldAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses variable DEBUG defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
   function compareMethodsAllowingNull(MethodAnnotation,MethodAnnotation) in line 81
      10 lines of code
      2 parameters
      2 conditional paths
      uses function compareNullElements(Object,Object) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function convertMethod(MethodAnnotation) defined in edu::umd::cs::findbugs::SloppyBugComparator
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
   function compareNullElements(Object,Object) in line 52
      6 lines of code
      2 parameters
      2 conditional paths
   function convertField(FieldAnnotation) in line 109
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function convertMethod(MethodAnnotation) in line 105
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function getAbbrevFromBugType(String) in line 164
      4 lines of code
      1 parameters
      1 conditional paths
   function setClassNameRewriter(ClassNameRewriter) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::SloppyBugComparator
   function SloppyBugComparator() in line 45
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classNameRewriter in line 40
   variable DEBUG in line 36
   variable serialVersionUID in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SortedBugCollection.java
module edu::umd::cs::findbugs::SortedBugCollection
   inherits from edu::umd::cs::findbugs::BugCollection
   function add(BugInstance) in line 133
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function add(BugInstance,boolean) in line 735
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAll(Collection< BugInstance >) in line 106
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAll(Collection< BugInstance >,boolean) in line 119
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
   function addAppVersion(AppVersion) in line 909
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addError(String) in line 142
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function addError(String,Throwable) in line 763
      protection public
      13 lines of code
      2 parameters
      3 conditional paths
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getClassNotFoundException() defined in edu::umd::cs::findbugs::ba::MissingClassException
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addError(AnalysisError) in line 778
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function addMissingClass(String) in line 782
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function appVersionIterator() in line 901
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function checkInputStream(InputStream) in line 591
      29 lines of code
      1 parameters
      7 conditional paths
   function classFeatureSetIterator() in line 977
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearAppVersions() in line 917
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearBugInstances() in line 874
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
   function clearClassFeatures() in line 984
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function cloneAll(Collection< BugInstance >,Collection< BugInstance >) in line 628
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function computeBugHashes() in line 342
      protection public
      37 lines of code
      0 parameters
      9 conditional paths
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
   function contains(BugInstance) in line 798
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function createEmptyCollectionWithMetadata() in line 925
      protection public
      15 lines of code
      0 parameters
      2 conditional paths
      uses function SortedBugCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clone() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function doReadXML(InputStream,Project,File) in line 210
      38 lines of code
      3 parameters
      5 conditional paths
      uses function checkInputStream(InputStream) defined in edu::umd::cs::findbugs::SortedBugCollection
   function duplicate() in line 851
      protection public
      18 lines of code
      0 parameters
      2 conditional paths
      uses function SortedBugCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clone() defined in edu::umd::cs::findbugs::ProjectStats
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function cloneAll(Collection< BugInstance >,Collection< BugInstance >) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
   function emitErrors(XMLOutput) in line 550
      38 lines of code
      1 parameters
      5 conditional paths
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function errorIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ERROR_MESSAGE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses function getExceptionMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses variable ERROR_EXCEPTION_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getStackTrace() defined in edu::umd::cs::findbugs::AnalysisError
      uses variable ERROR_STACK_TRACE_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function missingClassIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
   function errorIterator() in line 790
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
   function findBug(String,String,int) in line 1016
      protection public
      7 lines of code
      3 parameters
      3 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function getAnalysisTimestamp() in line 92
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getAppVersionFromSequenceNumber(long) in line 1005
      protection public
      7 lines of code
      1 parameters
      4 conditional paths
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
   function getClassFeatureSet(String) in line 961
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
   function getCollection() in line 758
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function getCurrentAppVersion() in line 149
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function getReleaseName() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
   function getMatching(BugInstance) in line 802
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function equals(Object) defined in edu::umd::cs::findbugs::BugInstance
   function getProjectStats() in line 827
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
   function getQuickInstanceHash(BugInstance) in line 322
      19 lines of code
      1 parameters
      5 conditional paths
      uses function getInstanceHash() defined in edu::umd::cs::findbugs::BugInstance
      uses function getInstanceKey() defined in edu::umd::cs::findbugs::BugInstance
      uses function setInstanceHash(String) defined in edu::umd::cs::findbugs::BugInstance
   function getReleaseName() in line 884
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
   function getSequenceNumber() in line 841
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function getSummaryHTML() in line 810
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function transformSummaryToHTML(Writer) defined in edu::umd::cs::findbugs::ProjectStats
   function getTimestamp() in line 953
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function getWithMessages() in line 998
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
   function invalidateHashes() in line 746
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable preciseHashOccurrenceNumbersAvailable defined in edu::umd::cs::findbugs::SortedBugCollection
   function iterator() in line 754
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function lookupFromUniqueId(String) in line 835
      protection public
      5 lines of code
      1 parameters
      3 conditional paths
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function missingClassIterator() in line 794
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(String,Project) in line 164
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function readXML(File,Project) in line 176
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(InputStream,Project,File) in line 193
      protection public
      11 lines of code
      3 parameters
      4 conditional paths
      uses function doReadXML(InputStream,Project,File) defined in edu::umd::cs::findbugs::SortedBugCollection
   function readXML(InputStream,Project) in line 204
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function doReadXML(InputStream,Project,File) defined in edu::umd::cs::findbugs::SortedBugCollection
   function remove(BugInstance) in line 749
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function invalidateHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
   function setAnalysisTimestamp(long) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function setAnalysisVersion(String) in line 1027
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setClassFeatureSet(ClassFeatureSet) in line 969
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getClassName() defined in edu::umd::cs::findbugs::model::ClassFeatureSet
   function setReleaseName(String) in line 893
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
   function setSequenceNumber(long) in line 845
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
   function setTimestamp(long) in line 945
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   function setWithMessages(boolean) in line 991
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
   function toDocument(Project) in line 277
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeBugCategories(XMLOutput) in line 521
      28 lines of code
      1 parameters
      5 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function writeBugCodes(XMLOutput) in line 492
      28 lines of code
      1 parameters
      5 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugTypeDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function writeBugPatterns(XMLOutput) in line 457
      34 lines of code
      1 parameters
      5 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses function lookupBugPattern(String) defined in edu::umd::cs::findbugs::I18N
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getShortDescription() defined in edu::umd::cs::findbugs::BugPattern
      uses function getDetailText() defined in edu::umd::cs::findbugs::BugPattern
   function writeEpilogue(XMLOutput) in line 408
      protection public
      48 lines of code
      1 parameters
      6 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugCategories(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugPatterns(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeBugCodes(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function emitErrors(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::ProjectStats
      uses function classFeatureSetIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::model::ClassFeatureSet
      uses variable HISTORY_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::AppVersion
      uses variable REPORT_SUMMARY_HTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSummaryHTML() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable SUMMARY_HTML_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
   function writePrologue(XMLOutput,Project) in line 308
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getAnalysisTimestamp() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeXML(String,Project) in line 255
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function writeXML(File,Project) in line 266
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeXML(OutputStream,Project) in line 299
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
   function writeXML(XMLOutput,@NonNull Project) in line 392
      protection public
      15 lines of code
      2 parameters
      5 conditional paths
      uses function writePrologue(XMLOutput,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable withMessages defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function computeBugHashes() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeEpilogue(XMLOutput) defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection() in line 693
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function SortedBugCollection(Comparator< BugInstance >) in line 701
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
   function SortedBugCollection(ProjectStats) in line 711
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   function SortedBugCollection(ProjectStats,Comparator< BugInstance >) in line 721
      protection public
      13 lines of code
      2 parameters
      1 conditional paths
      uses variable projectStats defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable comparator defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable bugSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable errorList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable missingClassSet defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable summaryHTML defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable classFeatureSetMap defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable sequence defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable appVersionList defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable releaseName defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable timestamp defined in edu::umd::cs::findbugs::SortedBugCollection
   variable appVersionList in line 671
   variable bugSet in line 664
   variable classFeatureSetMap in line 670
   variable comparator in line 663
   variable errorList in line 665
   variable missingClassSet in line 666
   variable preciseHashOccurrenceNumbersAvailable in line 674
   variable projectStats in line 668
   variable releaseName in line 683
   variable REPORT_SUMMARY_HTML in line 89
   variable sequence in line 679
   variable summaryHTML in line 667
   variable timestamp in line 687
   variable withMessages in line 87
module edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 636
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function compareTo(BugInstance) defined in edu::umd::cs::findbugs::BugInstance
   function BugInstanceComparator() in line 635
      1 lines of code
      0 parameters
      1 conditional paths
   variable instance in line 646
      protection public
module edu::umd::cs::findbugs::SortedBugCollection::MultiversionBugInstanceComparator
   inherits from edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
   function compare(BugInstance,BugInstance) in line 651
      protection public
      10 lines of code
      2 parameters
      5 conditional paths
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
   variable instance in line 661
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SortingBugReporter.java
module edu::umd::cs::findbugs::SortingBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 39
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::SortingBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function finish() in line 44
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::SortingBugReporter
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function observeClass(ClassDescriptor) in line 33
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugCollection in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SourceLineAnnotation.java
module edu::umd::cs::findbugs::SourceLineAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 551
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitSourceLineAnnotation(SourceLineAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function addInstructionContext(ClassContext,Method) in line 461
      4 lines of code
      2 parameters
      1 conditional paths
   function appendLines(StringBuffer) in line 580
      6 lines of code
      1 parameters
      2 conditional paths
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLinesRaw(StringBuffer) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function appendLinesRaw(StringBuffer) in line 587
      13 lines of code
      1 parameters
      3 conditional paths
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function clone() in line 100
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 619
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createReallyUnknown(String) in line 141
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createUnknown(String,String) in line 115
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function createUnknown(String) in line 127
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
   function createUnknown(String,String,int,int) in line 158
      protection public
      5 lines of code
      4 parameters
      1 conditional paths
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function equals(Object) in line 640
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(String,String,LineNumberTable,int) in line 205
      protection public
      12 lines of code
      4 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(JavaClass,@CheckForNull Method) in line 225
      protection public
      12 lines of code
      2 parameters
      3 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function forEntireMethod(JavaClass,XMethod) in line 245
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function getSignature() defined in edu::umd::cs::findbugs::ba::ClassMember
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
   function format(String,ClassAnnotation) in line 555
      protection public
      24 lines of code
      2 parameters
      6 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLines(StringBuffer) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function appendLinesRaw(StringBuffer) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromRawData(String,String,int,int,int,int) in line 378
      protection public
      7 lines of code
      6 parameters
      2 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(BytecodeScanningDetector,int) in line 263
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
   function fromVisitedInstruction(ClassContext,PreorderVisitor,int) in line 277
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(ClassContext,Method,Location) in line 289
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getHandle() defined in edu::umd::cs::findbugs::ba::Location
   function fromVisitedInstruction(ClassContext,Method,InstructionHandle) in line 301
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(ClassContext,Method,int) in line 313
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::ClassContext
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function fromVisitedInstruction(BytecodeScanningDetector) in line 393
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function fromVisitedInstruction(BytecodeScanningDetector,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function fromVisitedInstruction(ClassContext,MethodGen,String,@NonNull InstructionHandle) in line 407
      protection public
      14 lines of code
      4 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getMethod(MethodGen) defined in edu::umd::cs::findbugs::ba::ClassContext
   function fromVisitedInstructionRange(BytecodeScanningDetector,int,int) in line 336
      protection public
      14 lines of code
      3 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassContext() defined in edu::umd::cs::findbugs::BytecodeScanningDetector
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function fromVisitedInstructionRange(ClassContext,PreorderVisitor,int,int) in line 363
      protection public
      14 lines of code
      4 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function fromVisitedInstructionRange(ClassContext,MethodGen,String,InstructionHandle,InstructionHandle) in line 431
      protection public
      14 lines of code
      5 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addInstructionContext(ClassContext,Method) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getMethod(MethodGen) defined in edu::umd::cs::findbugs::ba::ClassContext
   function fromVisitedMethod(PreorderVisitor) in line 171
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function fromVisitedMethod(MethodGen,String) in line 187
      protection public
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getLineNumberTable(PreorderVisitor) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function forEntireMethod(String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getClassName() in line 469
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getDescription() in line 601
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getEndBytecode() in line 540
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getEndLine() in line 526
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getLineNumberTable(PreorderVisitor) in line 446
      6 lines of code
      1 parameters
      2 conditional paths
      uses function getMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getPackageName() in line 508
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSimpleClassName() in line 500
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getSourceFile() in line 476
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getStartBytecode() in line 533
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function getStartLine() in line 519
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function hashCode() in line 635
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSignificant() in line 711
      protection public
      3 lines of code
      0 parameters
      12 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable currentAnalysisContext defined in edu::umd::cs::findbugs::ba::AnalysisContext
      uses function getMethod() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function getMethodLine(String,String,String) defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function fallBackToClassfile() defined in edu::umd::cs::findbugs::ba::SourceInfoMap
      uses function forEntireMethod(String,String,LineNumberTable,int) defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getJavaClass() defined in edu::umd::cs::findbugs::ba::JavaClassAndMethod
      uses function createUnknown(String,String) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSourceFileKnown() in line 483
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWN_SOURCE_FILE defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isSynthetic() in line 706
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function isUnknown() in line 547
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setDescription(String) in line 605
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setSourceFile(String) in line 492
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function setSynthetic(boolean) in line 699
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function toString() in line 610
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isUnknown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE_UNKNOWN_LINE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function writeXML(XMLOutput) in line 655
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 659
      protection public
      36 lines of code
      2 parameters
      10 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndBytecode() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function isSourceFileKnown() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable synthetic defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function SourceLineAnnotation(@NonNull String,@NonNull String,int,int,int,int) in line 85
      protection public
      12 lines of code
      6 parameters
      3 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable sourceFile defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endLine defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable startBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable endBytecode defined in edu::umd::cs::findbugs::SourceLineAnnotation
   variable className in line 67
   variable DEFAULT_ROLE in line 55
      protection public
   variable DEFAULT_ROLE_UNKNOWN_LINE in line 56
      protection public
   variable description in line 66
   variable ELEMENT_NAME in line 653
   variable endBytecode in line 72
   variable endLine in line 70
   variable NUM_CONTEXT_OPCODES in line 453
   variable ROLE_ANOTHER_INSTANCE in line 57
      protection public
   variable serialVersionUID in line 53
   variable sourceFile in line 68
   variable startBytecode in line 71
   variable startLine in line 69
   variable synthetic in line 73
   variable UNKNOWN_SOURCE_FILE in line 64
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/StatelessDetector.java
module edu::umd::cs::findbugs::StatelessDetector
   inherits from Cloneable
   function clone() in line 37
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/StringAnnotation.java
module edu::umd::cs::findbugs::StringAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 106
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitStringAnnotation(StringAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 53
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 134
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function equals(Object) in line 128
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function format(String,ClassAnnotation) in line 110
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function getDescription() in line 118
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
   function getValue() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function hashCode() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
   function isSignificant() in line 169
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function quoteCharacters(String) in line 62
      33 lines of code
      1 parameters
      11 conditional paths
   function setDescription(String) in line 114
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
   function toString() in line 141
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable description defined in edu::umd::cs::findbugs::StringAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::StringAnnotation
   function writeXML(XMLOutput) in line 153
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 157
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::StringAnnotation
   function StringAnnotation(String) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function quoteCharacters(String) defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable value defined in edu::umd::cs::findbugs::StringAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::StringAnnotation
   variable DEFAULT_ROLE in line 36
   variable description in line 39
   variable ELEMENT_NAME in line 151
   variable serialVersionUID in line 34
   variable value in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SuppressionMatcher.java
module edu::umd::cs::findbugs::SuppressionMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function addPackageSuppressor(PackageWarningSuppressor) in line 38
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getPackageName() defined in edu::umd::cs::findbugs::PackageWarningSuppressor
      uses variable suppressedPackageWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function addSuppressor(ClassWarningSuppressor) in line 49
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses function getClassAnnotation() defined in edu::umd::cs::findbugs::ClassWarningSuppressor
      uses function getTopLevelClass() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable suppressedWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function count() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function match(BugInstance) in line 61
      protection public
      18 lines of code
      1 parameters
      7 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getTopLevelClass() defined in edu::umd::cs::findbugs::ClassAnnotation
      uses variable suppressedWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses function count() defined in edu::umd::cs::findbugs::SuppressionMatcher
      uses variable suppressedPackageWarnings defined in edu::umd::cs::findbugs::SuppressionMatcher
   function writeXML(XMLOutput,boolean) in line 79
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable suppressedPackageWarnings in line 34
   variable suppressedWarnings in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SuppressionMatcher.java
module edu::umd::cs::findbugs::gui2::SuppressionMatcher
   inherits from java::util::ArrayList
   inherits from edu::umd::cs::findbugs::filter::Matcher
   function add(BugInstance) in line 44
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function match(BugInstance) in line 38
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 50
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SwitchHandler.java
module edu::umd::cs::findbugs::SwitchHandler
   function enterSwitch(DismantleBytecode) in line 36
      protection public
      12 lines of code
      1 parameters
      3 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
   function getDefaultOffset() in line 73
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
   function getNextSwitchOffset(DismantleBytecode) in line 57
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getNextSwitchOffset(int) defined in edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isOnSwitchOffset(DismantleBytecode) in line 49
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultOffset() defined in edu::umd::cs::findbugs::SwitchHandler
      uses function getNextSwitchOffset(DismantleBytecode) defined in edu::umd::cs::findbugs::SwitchHandler
   function SwitchHandler() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable switchOffsetStack defined in edu::umd::cs::findbugs::SwitchHandler
   variable switchOffsetStack in line 30
module edu::umd::cs::findbugs::SwitchHandler::SwitchDetails
   function getDefaultOffset() in line 123
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNextSwitchOffset(int) in line 113
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function SwitchDetails(int,int[],int) in line 89
      protection public
      23 lines of code
      3 parameters
      5 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/SystemProperties.java
module edu::umd::cs::findbugs::SystemProperties
   function getBoolean(String) in line 38
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getBoolean(String,boolean) in line 46
      protection public
      11 lines of code
      2 parameters
      3 conditional paths
      uses function toBoolean(String) defined in edu::umd::cs::findbugs::SystemProperties
   function getInteger(String,int) in line 67
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function getProperty(String) in line 79
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getProperty(String,String) in line 92
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
   function toBoolean(String) in line 57
      3 lines of code
      1 parameters
      1 conditional paths
   variable ASSERTIONS_ENABLED in line 27
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/TextUIBugReporter.java
module edu::umd::cs::findbugs::TextUIBugReporter
   inherits from edu::umd::cs::findbugs::AbstractBugReporter
   abstract class
   function checkBugInstance(BugInstance) in line 209
      12 lines of code
      1 parameters
      4 conditional paths
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getSourceLines() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function emitLine(String) in line 173
      4 lines of code
      1 parameters
      1 conditional paths
   function getRealBugReporter() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getUseLongBugCodes() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
   function printBug(BugInstance) in line 75
      51 lines of code
      1 parameters
      12 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugCategory(String) defined in edu::umd::cs::findbugs::I18N
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugCategory
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses variable reportUserDesignations defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getUserDesignationKey() defined in edu::umd::cs::findbugs::BugInstance
      uses variable reportHistory defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function reportAnalysisError(AnalysisError) in line 138
      protection public
      18 lines of code
      1 parameters
      6 conditional paths
      uses variable analysisErrors defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function emitLine(String) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses function getExceptionMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function getStackTrace() defined in edu::umd::cs::findbugs::AnalysisError
   function reportMissingClass(String) in line 158
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable missingClasses defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses function emitLine(String) defined in edu::umd::cs::findbugs::TextUIBugReporter
   function reportQueuedErrors() in line 132
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable analysisErrors defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable missingClasses defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setOutputStream(PrintStream) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportHistory(boolean) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportHistory defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportStackTrace(boolean) in line 66
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setReportUserDesignations(boolean) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reportUserDesignations defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setUseLongBugCodes(boolean) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUIBugReporter
   function TextUIBugReporter() in line 47
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable reportStackTrace defined in edu::umd::cs::findbugs::TextUIBugReporter
   variable analysisErrors in line 127
   variable missingClasses in line 128
   variable outputStream in line 45
   variable reportHistory in line 40
   variable reportStackTrace in line 38
   variable reportUserDesignations in line 41
   variable useLongBugCodes in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/TextUICommandLine.java
module edu::umd::cs::findbugs::TextUICommandLine
   inherits from edu::umd::cs::findbugs::FindBugsCommandLine
   function choose(String,String,Chooser) in line 369
      11 lines of code
      3 parameters
      3 conditional paths
      uses function choose(boolean,String) defined in edu::umd::cs::findbugs::TextUICommandLine::Chooser
   function configureEngine(IFindBugsEngine) in line 381
      protection public
      84 lines of code
      1 parameters
      15 conditional paths
      uses function ensureLoaded() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable PRINTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable SORTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setAddMessages(boolean) defined in edu::umd::cs::findbugs::XMLBugReporter
      uses variable xmlWithMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EMACS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable HTML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable stylesheet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XDOCS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function quiet() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setErrorVerbosity(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable SILENT defined in edu::umd::cs::findbugs::BugReporter
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setUseLongBugCodes(boolean) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setOutputStream(PrintStream) defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable bugCategorySet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable includeFilterFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable excludeFilterFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable classScreener defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithAbridgedMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable sourceInfoFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable settingList defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses variable releaseName defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable projectName defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::TextUICommandLine
   function getProject() in line 140
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
   function getUserPreferences() in line 494
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable userPreferences defined in edu::umd::cs::findbugs::TextUICommandLine
   function getXargs() in line 143
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable xargs defined in edu::umd::cs::findbugs::TextUICommandLine
   function handleOption(String,String) in line 156
      75 lines of code
      2 parameters
      25 conditional paths
      uses function pluginIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function getPluginId() defined in edu::umd::cs::findbugs::Plugin
      uses function isEnabled() defined in edu::umd::cs::findbugs::Plugin
      uses function getShortDescription() defined in edu::umd::cs::findbugs::Plugin
      uses function getProvider() defined in edu::umd::cs::findbugs::Plugin
      uses function getWebsite() defined in edu::umd::cs::findbugs::Plugin
      uses variable priorityThreshold defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable useLongBugCodes defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::Project
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable SORTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xmlWithAbridgedMessages defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable EMACS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable relaxedReportingMode defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingOutputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable trainingInputDir defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable HTML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable stylesheet defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XDOCS_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function quiet() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable scanNestedArchives defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function setExitCode() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable xargs defined in edu::umd::cs::findbugs::TextUICommandLine
   function handleOptionWithArgument(String,String) in line 234
      127 lines of code
      2 parameters
      34 conditional paths
      uses variable bugReporterType defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable PRINTING_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable XML_REPORTER defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable sourceInfoFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function getUserPreferences() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function enableAllDetectors(boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function getFactory(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function enableDetector(DetectorFactory,boolean) defined in edu::umd::cs::findbugs::config::UserPreferences
      uses function choose(boolean,String) defined in edu::umd::cs::findbugs::TextUICommandLine::Chooser
      uses variable DEBUG defined in edu::umd::cs::findbugs::FindBugs
      uses function getShortName() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function getPluginById(String) defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function setEnabled(boolean) defined in edu::umd::cs::findbugs::Plugin
      uses function setPriorityAdjustment(int) defined in edu::umd::cs::findbugs::DetectorFactory
      uses variable classScreener defined in edu::umd::cs::findbugs::TextUICommandLine
      uses function addAllowedPrefix(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses function addAllowedPackage(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses function addAllowedClass(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable excludeFilterFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable includeFilterFile defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
   function handleXArgs() in line 473
      protection public
      10 lines of code
      0 parameters
      4 conditional paths
      uses function getXargs() defined in edu::umd::cs::findbugs::TextUICommandLine
      uses variable project defined in edu::umd::cs::findbugs::FindBugsCommandLine
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
   function quiet() in line 150
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setExitCode() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setUserPreferences(UserPreferences) in line 487
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable userPreferences defined in edu::umd::cs::findbugs::TextUICommandLine
   function TextUICommandLine() in line 92
      protection public
      46 lines of code
      0 parameters
      1 conditional paths
      uses function addSwitch(String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addOption(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function addSwitchWithOptionalExtraPart(String,String,String) defined in edu::umd::cs::findbugs::config::CommandLine
   variable bugCategorySet in line 79
   variable bugReporterType in line 66
   variable classScreener in line 73
   variable EMACS_REPORTER in line 62
   variable excludeFilterFile in line 75
   variable HTML_REPORTER in line 63
   variable includeFilterFile in line 74
   variable outputStream in line 78
   variable PRINTING_REPORTER in line 59
   variable priorityThreshold in line 77
   variable projectName in line 84
   variable quiet in line 72
   variable relaxedReportingMode in line 67
   variable releaseName in line 83
   variable scanNestedArchives in line 87
   variable setExitCode in line 76
   variable SORTING_REPORTER in line 60
   variable sourceInfoFile in line 85
   variable stylesheet in line 71
   variable trainingInputDir in line 82
   variable trainingOutputDir in line 81
   variable useLongBugCodes in line 68
   variable userPreferences in line 80
   variable xargs in line 86
   variable XDOCS_REPORTER in line 64
   variable XML_REPORTER in line 61
   variable xmlWithAbridgedMessages in line 70
   variable xmlWithMessages in line 69
module edu::umd::cs::findbugs::TextUICommandLine::Chooser
   function choose(boolean,String) in line 56
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/TigerSubstitutes.java
module edu::umd::cs::findbugs::TigerSubstitutes
   function asSubclass(Class,Class< U >) in line 71
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function emptyList() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function emptySet() in line 42
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSimpleName(Class) in line 78
      protection public
      12 lines of code
      1 parameters
      5 conditional paths
      uses function isAsciiDigit(char) defined in edu::umd::cs::findbugs::TigerSubstitutes
   function getTextContent(Node) in line 94
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
   function hashCode(Object) in line 59
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function isAsciiDigit(char) in line 90
      3 lines of code
      1 parameters
      1 conditional paths
   function parseBoolean(String) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function valueOf(long) in line 50
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Token.java
module edu::umd::cs::findbugs::Token
   function getKind() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
   function getLexeme() in line 94
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lexeme defined in edu::umd::cs::findbugs::Token
   function Token(int,String) in line 68
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
      uses variable lexeme defined in edu::umd::cs::findbugs::Token
   function Token(int) in line 79
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::Token
   variable COMMENT in line 57
      protection public
   variable EOF in line 32
      protection public
   variable EOL in line 37
      protection public
   variable kind in line 59
   variable lexeme in line 60
   variable SINGLE in line 52
      protection public
   variable STRING in line 47
      protection public
   variable WORD in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/patcomp/Token.java
module edu::umd::cs::findbugs::tools::patcomp::Token
   function newToken(int) in line 73
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 56
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable image defined in edu::umd::cs::findbugs::tools::patcomp::Token
   variable beginLine in line 22
      protection public
   variable image in line 27
      protection public
   variable kind in line 15
      protection public
   variable next in line 37
      protection public
   variable specialToken in line 51
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Tokenizer.java
module edu::umd::cs::findbugs::Tokenizer
   function maybeComment() in line 148
      53 lines of code
      0 parameters
      15 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable COMMENT defined in edu::umd::cs::findbugs::Token
      uses variable SINGLE defined in edu::umd::cs::findbugs::Token
   function munchString(int) in line 119
      28 lines of code
      1 parameters
      7 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable STRING defined in edu::umd::cs::findbugs::Token
   function next() in line 89
      protection public
      18 lines of code
      0 parameters
      6 conditional paths
      uses function skipWhitespace() defined in edu::umd::cs::findbugs::Tokenizer
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable EOF defined in edu::umd::cs::findbugs::Token
      uses variable EOL defined in edu::umd::cs::findbugs::Token
      uses function munchString(int) defined in edu::umd::cs::findbugs::Tokenizer
      uses function maybeComment() defined in edu::umd::cs::findbugs::Tokenizer
      uses variable single defined in edu::umd::cs::findbugs::Tokenizer
      uses variable SINGLE defined in edu::umd::cs::findbugs::Token
      uses function parseWord() defined in edu::umd::cs::findbugs::Tokenizer
   function parseWord() in line 202
      14 lines of code
      0 parameters
      4 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable whiteSpace defined in edu::umd::cs::findbugs::Tokenizer
      uses variable single defined in edu::umd::cs::findbugs::Tokenizer
      uses variable WORD defined in edu::umd::cs::findbugs::Token
   function skipWhitespace() in line 108
      10 lines of code
      0 parameters
      4 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
      uses variable whiteSpace defined in edu::umd::cs::findbugs::Tokenizer
   function Tokenizer(Reader) in line 80
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable reader defined in edu::umd::cs::findbugs::Tokenizer
   variable reader in line 73
   variable single in line 45
   variable whiteSpace in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/TrainingDetector.java
module edu::umd::cs::findbugs::TrainingDetector
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/TypeAnnotation.java
module edu::umd::cs::findbugs::TypeAnnotation
   inherits from edu::umd::cs::findbugs::BugAnnotation
   function accept(BugAnnotationVisitor) in line 83
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visitTypeAnnotation(TypeAnnotation) defined in edu::umd::cs::findbugs::BugAnnotationVisitor
   function clone() in line 67
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function compareTo(BugAnnotation) in line 112
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function equals(Object) in line 106
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function format(String,ClassAnnotation) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function parseNext() defined in edu::umd::cs::findbugs::ba::SignatureConverter
   function getDescription() in line 96
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
   function getTypeDescriptor() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function hashCode() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
   function isSignificant() in line 148
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setDescription(String) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
   function toString() in line 120
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getAnnotationDescription(String) defined in edu::umd::cs::findbugs::I18N
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function format(String,ClassAnnotation) defined in edu::umd::cs::findbugs::TypeAnnotation
   function writeXML(XMLOutput) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function writeXML(XMLOutput,boolean) in line 136
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses function getDescription() defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::TypeAnnotation
   function TypeAnnotation(String) in line 56
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable DEFAULT_ROLE defined in edu::umd::cs::findbugs::TypeAnnotation
   function TypeAnnotation(String,String) in line 60
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable descriptor defined in edu::umd::cs::findbugs::TypeAnnotation
      uses variable roleDescription defined in edu::umd::cs::findbugs::TypeAnnotation
   variable CLOSEIT_ROLE in line 40
      protection public
   variable DEFAULT_ROLE in line 37
      protection public
   variable descriptor in line 44
   variable ELEMENT_NAME in line 130
   variable EXPECTED_ROLE in line 38
      protection public
   variable FOUND_ROLE in line 39
      protection public
   variable roleDescription in line 45
   variable serialVersionUID in line 35
   variable UNHASHABLE_ROLE in line 41
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/Archive.java
module edu::umd::cs::findbugs::util::Archive
   function isArchiveFileName(String) in line 53
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable ARCHIVE_EXTENSION_SET defined in edu::umd::cs::findbugs::util::Archive
   variable ARCHIVE_EXTENSION_SET in line 36
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/ClassName.java
module edu::umd::cs::findbugs::util::ClassName
   abstract class
   function isAnonymous(String) in line 80
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function isValidClassName(String) in line 64
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
   function toDottedClassName(String) in line 51
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function toSlashedClassName(String) in line 36
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/LaunchBrowser.java
module edu::umd::cs::findbugs::util::LaunchBrowser
   function showDocument(URL) in line 68
      protection public
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable jnlpShowMethod defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable jnlpShowObject defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses function showViaExec(String) defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function showDocument(String) in line 89
      protection public
      21 lines of code
      1 parameters
      4 conditional paths
      uses variable jnlpShowMethod defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses variable jnlpShowObject defined in edu::umd::cs::findbugs::util::LaunchBrowser
      uses function showViaExec(String) defined in edu::umd::cs::findbugs::util::LaunchBrowser
   function showViaExec(String) in line 119
      32 lines of code
      1 parameters
      1 conditional paths
   variable jnlpShowMethod in line 36
   variable jnlpShowObject in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/MapCache.java
module edu::umd::cs::findbugs::util::MapCache
   inherits from java::util::LinkedHashMap
   function get(Object) in line 48
      protection public
      20 lines of code
      1 parameters
      1 conditional paths
   function getStatistics() in line 76
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
   function removeEldestEntry(Map.Entry< K, V >) in line 69
      6 lines of code
      1 parameters
      1 conditional paths
   function MapCache(int) in line 41
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable serialVersionUID in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/MultiMap.java
module edu::umd::cs::findbugs::util::MultiMap
   function add(K,V) in line 46
      protection public
      8 lines of code
      2 parameters
      1 conditional paths
   function get(K) in line 61
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function keySet() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeCollection() in line 33
      9 lines of code
      0 parameters
      1 conditional paths
   function remove(K,V) in line 54
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
   function MultiMap(Class<?extends Collection >) in line 29
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/NullIterator.java
module edu::umd::cs::findbugs::util::NullIterator
   inherits from java::util::Iterator
   function hasNext() in line 34
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 41
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function remove() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/Strings.java
module edu::umd::cs::findbugs::util::Strings
   function replace(String,String,String) in line 37
      protection public
      18 lines of code
      3 parameters
      4 conditional paths
   function toString(final Object[]) in line 64
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
   function trimComma(String) in line 82
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/TopologicalSort.java
module edu::umd::cs::findbugs::util::TopologicalSort
   function sortByCallGraph(Collection< E >,OutEdges< E >) in line 43
      protection public
      8 lines of code
      2 parameters
      5 conditional paths
      uses function getOutEdges(E) defined in edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
module edu::umd::cs::findbugs::util::TopologicalSort::OutEdges
   function getOutEdges(E) in line 40
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::util::TopologicalSort::Foo
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/util/Util.java
module edu::umd::cs::findbugs::util::Util
   function closeSilently(InputStream) in line 79
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function closeSilently(Reader) in line 86
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function closeSilently(OutputStream) in line 93
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function getFileExtension(File) in line 132
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function getFileReader(String) in line 65
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReader(InputStream) defined in edu::umd::cs::findbugs::util::Util
   function getFileReader(File) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getReader(InputStream) defined in edu::umd::cs::findbugs::util::Util
   function getFileWriter(String) in line 75
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getWriter(OutputStream) defined in edu::umd::cs::findbugs::util::Util
   function getReader(InputStream) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getWriter(OutputStream) in line 71
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getXMLType(InputStream) in line 101
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses function getReader(InputStream) defined in edu::umd::cs::findbugs::util::Util
   function makeIOException(String,Throwable) in line 126
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function nullSafeEquals(@CheckForNull T,@CheckForNull T) in line 56
      protection public
      5 lines of code
      2 parameters
      3 conditional paths
   function nullSafeHashcode(@CheckForNull Object) in line 52
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function runLogAtShutdown(Runnable) in line 47
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable LOGGING defined in edu::umd::cs::findbugs::util::Util
   variable LOGGING in line 45
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/visitclass/Util.java
module edu::umd::cs::findbugs::visitclass::Util
   function getOuterClass(JavaClass) in line 48
      protection public
      14 lines of code
      1 parameters
      5 conditional paths
   function getSizeOfSurroundingTryBlock(ConstantPool,Code,String,int) in line 63
      protection public
      37 lines of code
      4 parameters
      12 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/Util.java
module edu::umd::cs::findbugs::gui2::Util
   function addOkAndCancelButtons(JPanel,JButton,JButton) in line 32
      protection public
      16 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/Version.java
module edu::umd::cs::findbugs::Version
   function main(String[]) in line 152
      protection public
      24 lines of code
      1 parameters
      6 conditional paths
      uses function usage() defined in edu::umd::cs::findbugs::Version
      uses variable IS_DEVELOPMENT defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE_CANDIDATE defined in edu::umd::cs::findbugs::Version
      uses variable RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable DATE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_RELEASE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_DATE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_ECLIPSE_DATE defined in edu::umd::cs::findbugs::Version
      uses variable COMPUTED_ECLIPSE_UI_VERSION defined in edu::umd::cs::findbugs::Version
      uses variable WEBSITE defined in edu::umd::cs::findbugs::Version
      uses variable DOWNLOADS_WEBSITE defined in edu::umd::cs::findbugs::Version
   function usage() in line 177
      4 lines of code
      0 parameters
      1 conditional paths
   variable COMPUTED_DATE in line 63
      protection public
   variable COMPUTED_ECLIPSE_DATE in line 66
      protection public
   variable COMPUTED_ECLIPSE_UI_VERSION in line 97
      protection public
   variable COMPUTED_RELEASE in line 86
      protection public
   variable DATE in line 64
      protection public
   variable DOWNLOADS_WEBSITE in line 145
      protection public
   variable ECLIPSE_DATE in line 67
      protection public
   variable ECLIPSE_UI_VERSION in line 99
      protection public
   variable IS_DEVELOPMENT in line 50
      protection public
   variable MAJOR in line 35
      protection public
   variable MINOR in line 40
      protection public
   variable PATCHLEVEL in line 45
      protection public
   variable PREVIEW in line 75
      protection public
   variable RELEASE in line 92
      protection public
   variable RELEASE_BASE in line 82
      protection public
   variable RELEASE_CANDIDATE in line 56
      protection public
   variable RELEASE_SUFFIX_WORD in line 77
   variable SUPPORT_EMAIL in line 150
      protection public
   variable WEBSITE in line 140
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/VersionInsensitiveBugComparator.java
module edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   inherits from edu::umd::cs::findbugs::WarningComparator
   function compare(BugInstance,BugInstance) in line 126
      protection public
      102 lines of code
      2 parameters
      17 conditional paths
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCode(String) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function isExactBugPatternMatch() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
      uses variable comparePriorities defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses function FilteringAnnotationIterator(Iterator< BugAnnotation >) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function rewriteClassName(String) defined in edu::umd::cs::findbugs::model::ClassNameRewriter
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::MethodAnnotation
      uses function compareTo(BugAnnotation) defined in edu::umd::cs::findbugs::FieldAnnotation
      uses function isBoring(BugAnnotation) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function compareNullElements(Object,Object) in line 110
      8 lines of code
      2 parameters
      3 conditional paths
   function getCode(String) in line 119
      6 lines of code
      1 parameters
      2 conditional paths
   function isBoring(BugAnnotation) in line 95
      14 lines of code
      1 parameters
      4 conditional paths
      uses function getDescription() defined in edu::umd::cs::findbugs::BugAnnotation
      uses variable INT_SYNC_PERCENT defined in edu::umd::cs::findbugs::IntAnnotation
   function isExactBugPatternMatch() in line 239
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable exactBugPatternMatch defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setClassNameRewriter(ClassNameRewriter) in line 43
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classNameRewriter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setComparePriorities(boolean) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comparePriorities defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function setExactBugPatternMatch(boolean) in line 232
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable exactBugPatternMatch defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function VersionInsensitiveBugComparator() in line 40
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable classNameRewriter in line 35
   variable comparePriorities in line 39
   variable exactBugPatternMatch in line 37
module edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   inherits from java::util::Iterator
   function findNext() in line 81
      11 lines of code
      0 parameters
      4 conditional paths
      uses function next() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses variable iter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function isBoring(BugAnnotation) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
   function hasNext() in line 63
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
      uses function next() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   function next() in line 68
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function findNext() defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   function remove() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FilteringAnnotationIterator(Iterator< BugAnnotation >) in line 58
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable iter defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator::FilteringAnnotationIterator
   variable iter in line 55
   variable next in line 56
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/visitclass/AnnotationVisitor.java
module edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   inherits from edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getAnnotationName(DataInputStream) in line 190
      10 lines of code
      1 parameters
      2 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function readAnnotationValue(DataInputStream) in line 201
      85 lines of code
      1 parameters
      34 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function readAnnotationValues(DataInputStream,int) in line 173
      16 lines of code
      2 parameters
      4 conditional paths
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function readAnnotationValue(DataInputStream) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visit(Unknown) in line 93
      protection public
      79 lines of code
      1 parameters
      16 conditional paths
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses variable RUNTIME_VISIBLE_ANNOTATIONS defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses variable RUNTIME_INVISIBLE_ANNOTATIONS defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function getAnnotationName(DataInputStream) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function readAnnotationValues(DataInputStream,int) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function visitAnnotation(String,Map< String, Object >,boolean) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses variable RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function getNumberMethodArguments() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitSyntheticParameterAnnotation(int,boolean) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
      uses function visitParameterAnnotation(int,String,Map< String, Object >,boolean) defined in edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   function visitAnnotation(String,Map< String, Object >,boolean) in line 61
      protection public
      10 lines of code
      3 parameters
      3 conditional paths
   function visitParameterAnnotation(int,String,Map< String, Object >,boolean) in line 79
      protection public
      9 lines of code
      4 parameters
      1 conditional paths
   function visitSyntheticParameterAnnotation(int,boolean) in line 89
      protection public
      2 lines of code
      2 parameters
      1 conditional paths
   variable RUNTIME_INVISIBLE_ANNOTATIONS in line 44
   variable RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS in line 40
   variable RUNTIME_VISIBLE_ANNOTATIONS in line 48
   variable RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS in line 52
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/visitclass/BetterVisitor.java
module edu::umd::cs::findbugs::visitclass::BetterVisitor
   inherits from org::apache::bcel::classfile::Visitor
   abstract class
   function clone() in line 76
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function report(PrintStream) in line 351
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(JavaClass) in line 83
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(ConstantPool) in line 86
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Field) in line 89
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Method) in line 92
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Constant) in line 97
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(ConstantCP) in line 100
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantMethodref) in line 104
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantFieldref) in line 108
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantInterfaceMethodref) in line 112
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantClass) in line 116
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantDouble) in line 120
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantFloat) in line 124
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantInteger) in line 128
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantLong) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantNameAndType) in line 136
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantString) in line 140
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantUtf8) in line 144
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Attribute) in line 149
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(Code) in line 152
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ConstantValue) in line 156
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(ExceptionTable) in line 160
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(InnerClasses) in line 164
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LineNumberTable) in line 168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LocalVariableTable) in line 172
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(LocalVariableTypeTable) in line 175
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(SourceFile) in line 179
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Synthetic) in line 183
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(org.apache.bcel.classfile.Deprecated) in line 187
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Unknown) in line 191
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(Signature) in line 195
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visit(InnerClass) in line 200
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(LocalVariable) in line 203
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(LineNumber) in line 206
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(CodeException) in line 209
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visit(StackMapEntry) in line 212
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 216
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitCodeException(CodeException) in line 220
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantClass(ConstantClass) in line 225
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantDouble(ConstantDouble) in line 229
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantFieldref(ConstantFieldref) in line 233
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantFloat(ConstantFloat) in line 237
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantInteger(ConstantInteger) in line 241
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantInterfaceMethodref(ConstantInterfaceMethodref) in line 245
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantLong(ConstantLong) in line 249
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantMethodref(ConstantMethodref) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantNameAndType(ConstantNameAndType) in line 257
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantPool(ConstantPool) in line 261
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantString(ConstantString) in line 265
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantUtf8(ConstantUtf8) in line 269
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitConstantValue(ConstantValue) in line 273
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitDeprecated(org.apache.bcel.classfile.Deprecated) in line 277
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitExceptionTable(ExceptionTable) in line 281
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitField(Field) in line 285
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitInnerClass(InnerClass) in line 290
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitInnerClasses(InnerClasses) in line 294
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitJavaClass(JavaClass) in line 299
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLineNumber(LineNumber) in line 303
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLineNumberTable(LineNumberTable) in line 307
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariable(LocalVariable) in line 311
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariableTable(LocalVariableTable) in line 315
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitLocalVariableTypeTable(LocalVariableTypeTable) in line 318
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitMethod(Method) in line 323
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSignature(Signature) in line 327
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSourceFile(SourceFile) in line 331
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitStackMap(StackMap) in line 347
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitStackMapEntry(StackMapEntry) in line 343
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitSynthetic(Synthetic) in line 335
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
   function visitUnknown(Unknown) in line 339
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function visit(JavaClass) defined in edu::umd::cs::findbugs::visitclass::BetterVisitor
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/visitclass/Constants2.java
module edu::umd::cs::findbugs::visitclass::Constants2
   inherits from org::apache::bcel::Constants
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/visitclass/DismantleBytecode.java
module edu::umd::cs::findbugs::visitclass::DismantleBytecode
   inherits from edu::umd::cs::findbugs::visitclass::AnnotationVisitor
   abstract class
   function afterOpcode(int) in line 772
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function atCatchBlock() in line 349
      protection public
      5 lines of code
      0 parameters
      3 conditional paths
      uses function getCode() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function beforeOpcode(int) in line 771
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getBranchFallThrough() in line 242
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getBranchOffset() in line 230
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getBranchTarget() in line 236
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getClassConstantOperand() in line 194
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getCodeByte(int) in line 342
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getConstantRefOperand() in line 207
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getDefaultSwitchOffset() in line 248
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getDottedClassConstantOperand() in line 150
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getDottedSigConstantOperand() in line 181
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable dottedSigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getIntConstant() in line 226
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable intConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getMaxPC() in line 339
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getNameConstantOperand() in line 173
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getNextPC() in line 839
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOpcode() in line 345
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getPC() in line 258
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable PC defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getPrevOpcode(int) in line 266
      protection public
      7 lines of code
      1 parameters
      3 conditional paths
      uses variable prevOpcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sizePrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentPosInPrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getRefConstantOperand() in line 157
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedSigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getRefFieldIsStatic() in line 254
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getRegisterOperand() in line 220
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSigConstantOperand() in line 188
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getStringConstantOperand() in line 201
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSwitchLabels() in line 303
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function getSwitchOffsets() in line 296
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isBranch(int) in line 280
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_BR defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function isRegisterLoad() in line 213
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isRegisterStore() in line 216
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isSwitch(int) in line 291
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function printOpCode(int) in line 796
      protection public
      38 lines of code
      1 parameters
      10 conditional paths
      uses variable formatter defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getPC() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getClassConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getNameConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSigConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantRefOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStringConstantOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getRegisterOperand() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getBranchTarget() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getSwitchOffsets() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getDefaultSwitchOffset() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function resetState() in line 309
      10 lines of code
      0 parameters
      1 conditional paths
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedSigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable NOT_AVAILABLE defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable INVALID_OFFSET defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function sawBranchTo(int) in line 766
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawClass() in line 788
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawDouble(double) in line 751
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawField() in line 779
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawFloat(float) in line 754
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawIMethod() in line 785
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawInt(int) in line 760
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawLong(long) in line 763
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawMethod() in line 782
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function sawOffset(int) in line 768
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawOpcode(int) in line 773
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawRegister(int) in line 757
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sawString(String) in line 776
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function sortByOffset(int[],int[]) in line 320
      18 lines of code
      2 parameters
      5 conditional paths
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   function visit(Code) in line 355
      protection public
      395 lines of code
      1 parameters
      131 conditional paths
      uses variable sizePrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable currentPosInPrevOpcodeBuffer defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable prevOpcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable codeBytes defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable lineNumberTable defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function resetState() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable PC defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcodeIsWide defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable opcode defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable defaultSwitchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchOffset defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchTarget defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchOffsets defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable switchLabels defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sortByOffset(int[],int[]) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable registerOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable intConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_CP defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_R defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_UINT defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_BR defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable branchFallThrough defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable constantRefOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getConstantPool() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable classConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable longConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable floatConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable doubleConstant defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable stringConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable nameConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable sigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable dottedSigConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refConstantOperand defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable M_INT defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterLoad() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function isRegisterStore() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses variable refFieldIsStatic defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function beforeOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function afterOpcode(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawInt(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawBranchTo(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawOffset(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawLong(long) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawFloat(float) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawDouble(double) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawString(String) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawField() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawMethod() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawIMethod() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawClass() defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
      uses function sawRegister(int) defined in edu::umd::cs::findbugs::visitclass::DismantleBytecode
   variable branchFallThrough in line 53
   variable branchOffset in line 51
   variable branchTarget in line 52
   variable classConstantOperand in line 60
   variable codeBytes in line 144
   variable constantRefOperand in line 68
   variable currentPosInPrevOpcodeBuffer in line 57
   variable defaultSwitchOffset in line 59
   variable dottedClassConstantOperand in line 61
   variable dottedSigConstantOperand in line 64
   variable doubleConstant in line 72
   variable floatConstant in line 71
   variable formatter in line 791
   variable intConstant in line 69
   variable INVALID_OFFSET in line 77
   variable isRegisterLoad in line 74
   variable isRegisterStore in line 75
   variable lineNumberTable in line 145
   variable longConstant in line 70
   variable M_BR in line 106
      protection public
   variable M_CP in line 104
      protection public
   variable M_INT in line 102
      protection public
   variable M_PAD in line 107
      protection public
   variable M_R in line 105
      protection public
   variable M_UINT in line 103
      protection public
   variable nameConstantOperand in line 62
   variable NOT_AVAILABLE in line 78
   variable opcode in line 48
   variable opcodeIsWide in line 49
   variable PC in line 50
   variable prevOpcode in line 56
   variable refConstantOperand in line 66
   variable refFieldIsStatic in line 67
   variable registerOperand in line 73
   variable replaceSlashesWithDotsCache in line 89
   variable sigConstantOperand in line 63
   variable sizePrevOpcodeBuffer in line 58
   variable stringConstantOperand in line 65
   variable switchLabels in line 55
   variable switchOffsets in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/visitclass/LVTHelper.java
module edu::umd::cs::findbugs::visitclass::LVTHelper
   function getLocalVariableAtPC(@NonNull LocalVariableTable,int,int) in line 40
      protection public
      14 lines of code
      3 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/visitclass/PreorderVisitor.java
module edu::umd::cs::findbugs::visitclass::PreorderVisitor
   inherits from edu::umd::cs::findbugs::visitclass::BetterVisitor
   inherits from edu::umd::cs::findbugs::visitclass::Constants2
   abstract class
   function asUnsignedByte(byte) in line 94
      3 lines of code
      1 parameters
      1 conditional paths
   function doVisitField(Field) in line 171
      18 lines of code
      1 parameters
      4 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedFieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedFieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldIsStatic defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function doVisitMethod(Method) in line 190
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedMethodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getClassName() in line 274
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getCode() in line 102
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getConstantPool() in line 269
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedClassName() in line 279
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedFieldSig() in line 455
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedFieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedMethodSig() in line 408
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getDottedSuperclassName() in line 299
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dottedSuperclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getField() in line 343
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldIsStatic() in line 437
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldIsStatic defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldName() in line 417
      protection public
      10 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFieldSig() in line 429
      protection public
      6 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fieldSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFullyQualifiedFieldName() in line 444
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function visitingField() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedFieldName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedClassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getFieldSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getFullyQualifiedMethodName() in line 309
      protection public
      20 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable fullyQualifiedMethodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedSuperclassName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodName() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getDottedMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedMethodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethod() in line 349
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodName() in line 356
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getMethodSig() in line 399
      protection public
      7 lines of code
      0 parameters
      3 conditional paths
      uses function visitingMethod() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable methodSig defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable method defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getNumberArguments(String) in line 367
      protection public
      26 lines of code
      1 parameters
      9 conditional paths
   function getNumberMethodArguments() in line 395
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getNumberArguments(String) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getMethodSig() defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getPackageName() in line 284
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSizeOfSurroundingTryBlock(int) in line 132
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getSizeOfSurroundingTryBlock(String,int) in line 140
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSourceFile() in line 289
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getStringFromIndex(int) in line 89
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSuperclassName() in line 294
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getSurroundingCaughtExceptions(int) in line 107
      protection public
      20 lines of code
      1 parameters
      7 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function getThisClass() in line 304
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function setupVisitorForClass(JavaClass) in line 236
      protection public
      13 lines of code
      1 parameters
      1 conditional paths
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable thisClass defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable className defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function getStringFromIndex(int) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedClassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable packageName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable sourceFile defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable superclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable dottedSuperclassName defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitAfter(JavaClass) in line 216
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function visitCode(Code) in line 146
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable code defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitConstantPool(ConstantPool) in line 160
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
   function visitingField() in line 339
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitingMethod() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function visitInnerClasses(InnerClasses) in line 209
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function visitJavaClass(JavaClass) in line 221
      protection public
      14 lines of code
      1 parameters
      4 conditional paths
      uses function setupVisitorForClass(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable constantPool defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses variable field defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function doVisitField(Field) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function doVisitMethod(Method) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
      uses function visitAfter(JavaClass) defined in edu::umd::cs::findbugs::visitclass::PreorderVisitor
   function visitLineNumberTable(LineNumberTable) in line 251
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function visitLocalVariableTable(LocalVariableTable) in line 259
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   variable className in line 62
   variable code in line 87
   variable constantPool in line 60
   variable dottedClassName in line 63
   variable dottedFieldSig in line 83
   variable dottedMethodSig in line 72
   variable dottedSuperclassName in line 67
   variable field in line 78
   variable fieldIsStatic in line 84
   variable fieldName in line 81
   variable fieldSig in line 82
   variable fullyQualifiedFieldName in line 80
   variable fullyQualifiedMethodName in line 75
   variable method in line 73
   variable methodName in line 74
   variable methodSig in line 71
   variable packageName in line 64
   variable sourceFile in line 65
   variable superclassName in line 66
   variable thisClass in line 61
   variable visitingField in line 79
   variable visitingMethod in line 70
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/visitclass/PrintClass.java
module edu::umd::cs::findbugs::visitclass::PrintClass
   function main(String) in line 70
      protection public
      57 lines of code
      1 parameters
      16 conditional paths
      uses function printClass(ClassParser) defined in edu::umd::cs::findbugs::visitclass::PrintClass
   function printClass(ClassParser) in line 128
      12 lines of code
      1 parameters
      4 conditional paths
      uses function printCode(Method[]) defined in edu::umd::cs::findbugs::visitclass::PrintClass
   function printCode(Method[]) in line 144
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
module edu::umd::cs::findbugs::visitclass::PrintClass::ZipEntryComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(ZipEntry,ZipEntry) in line 47
      protection public
      19 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/WarningComparator.java
module edu::umd::cs::findbugs::WarningComparator
   inherits from java::util::Comparator
   function compare(BugInstance,BugInstance) in line 39
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function setClassNameRewriter(ClassNameRewriter) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/WarningSuppressor.java
module edu::umd::cs::findbugs::WarningSuppressor
   inherits from edu::umd::cs::findbugs::filter::Matcher
   abstract class
   function match(BugInstance) in line 22
      protection public
      18 lines of code
      1 parameters
      4 conditional paths
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
   function writeXML(XMLOutput,boolean) in line 41
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function WarningSuppressor(String) in line 16
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/BugHistory.java
module edu::umd::cs::findbugs::workflow::BugHistory
   function getComparator() in line 229
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getNewCollection() in line 291
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOrigCollection() in line 284
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getOriginator() in line 277
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable originator defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getResultCollection() in line 298
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable resultCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getSharedInstances(Set< BugInstance >,SortedBugCollection) in line 316
      10 lines of code
      2 parameters
      3 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
   function main(String[]) in line 544
      protection public
      27 lines of code
      1 parameters
      5 conditional paths
      uses function parse(String,int,int,String) defined in edu::umd::cs::findbugs::config::CommandLine
      uses function getSetOp() defined in edu::umd::cs::findbugs::workflow::BugHistory::BugHistoryCommandLine
      uses function printUsage() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function getListFile() defined in edu::umd::cs::findbugs::workflow::BugHistory::BugHistoryCommandLine
      uses function runBulk(BugHistoryCommandLine) defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function runSinglePair(BugHistoryCommandLine,String,String) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function performSetOperation(SetOperation) in line 246
      protection public
      27 lines of code
      1 parameters
      1 conditional paths
      uses function getComparator() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable originator defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function perform(Set< BugInstance >,SortedBugCollection,SortedBugCollection) defined in edu::umd::cs::findbugs::workflow::BugHistory::SetOperation
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable resultCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function duplicate() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function clearBugInstances() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function addAll(Collection< BugInstance >) defined in edu::umd::cs::findbugs::SortedBugCollection
   function printUsage() in line 653
      6 lines of code
      0 parameters
      1 conditional paths
      uses function printUsage(OutputStream) defined in edu::umd::cs::findbugs::config::CommandLine
   function readCollection(String,Project) in line 537
      6 lines of code
      2 parameters
      1 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
   function removeBugInstances(Set< BugInstance >,Collection< BugInstance >) in line 344
      5 lines of code
      2 parameters
      2 conditional paths
   function replaceBugInstances(Set< BugInstance >,Collection< BugInstance >) in line 333
      4 lines of code
      2 parameters
      1 conditional paths
   function runBulk(BugHistoryCommandLine) in line 572
      64 lines of code
      1 parameters
      10 conditional paths
      uses function fetch(String) defined in edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProjectCache
      uses function getBugCollection() defined in edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProject
      uses function getProject() defined in edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProject
      uses function writeResultCollection(Project,Project,OutputStream) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function runSinglePair(BugHistoryCommandLine,String,String) in line 637
      12 lines of code
      3 parameters
      2 conditional paths
      uses function getResultCollection() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function getCollection() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeResultCollection(Project,Project,OutputStream) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function setComparator(WarningComparator) in line 236
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::workflow::BugHistory
   function writeResultCollection(Project,Project,OutputStream) in line 302
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getResultCollection() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getOriginator() defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function getOrigCollection() defined in edu::umd::cs::findbugs::workflow::BugHistory
   function BugHistory(SortedBugCollection,SortedBugCollection) in line 221
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
   variable ADDED_WARNINGS in line 152
      protection public
   variable comparator in line 213
   variable DEBUG in line 65
   variable FUZZY_COMPARATOR in line 351
   variable origCollection in line 210
   variable originator in line 212
   variable REMOVED_WARNINGS in line 195
      protection public
   variable resultCollection in line 211
   variable RETAINED_WARNINGS in line 172
      protection public
   variable SLOPPY_COMPARATOR in line 352
   variable VERSION_INSENSITIVE_COMPARATOR in line 350
module edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProject
   function getBugCollection() in line 79
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProject() in line 86
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BugCollectionAndProject(SortedBugCollection,Project) in line 71
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProjectCache
   inherits from java::util::LinkedHashMap
   function fetch(String) in line 119
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function readCollection(String,Project) defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function BugCollectionAndProject(SortedBugCollection,Project) defined in edu::umd::cs::findbugs::workflow::BugHistory::BugCollectionAndProject
   function removeEldestEntry(Entry< String, BugCollectionAndProject >) in line 107
      3 lines of code
      1 parameters
      1 conditional paths
   variable CACHE_SIZE in line 100
   variable serialVersionUID in line 97
module edu::umd::cs::findbugs::workflow::BugHistory::SetOperation
   function perform(Set< BugInstance >,SortedBugCollection,SortedBugCollection) in line 143
      protection public
      1 lines of code
      3 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::BugHistory::BugHistoryCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function configure(BugHistory,SortedBugCollection,SortedBugCollection) in line 469
      protection public
      26 lines of code
      3 parameters
      4 conditional paths
      uses variable comparator defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable VERSION_INSENSITIVE_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable FUZZY_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function registerBugCollection(BugCollection) defined in edu::umd::cs::findbugs::FuzzyBugComparator
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable SLOPPY_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function execute() defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function setClassNameRewriter(ClassNameRewriter) defined in edu::umd::cs::findbugs::WarningComparator
      uses function setComparator(WarningComparator) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function createAndExecute(String,String,Project,Project) in line 496
      protection public
      7 lines of code
      4 parameters
      1 conditional paths
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function readCollection(String,Project) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function createAndExecute(SortedBugCollection,SortedBugCollection,Project,Project) in line 504
      protection public
      14 lines of code
      4 parameters
      1 conditional paths
      uses function BugHistory(SortedBugCollection,SortedBugCollection) defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable origCollection defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses function performSetOperation(SetOperation) defined in edu::umd::cs::findbugs::workflow::BugHistory
   function getBulkOutputFileName(String) in line 519
      protection public
      16 lines of code
      1 parameters
      2 conditional paths
   function getComparatorType() in line 423
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getListFile() in line 451
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOpName() in line 437
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getOutputDir() in line 458
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSetOp() in line 444
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function handleOption(String,String) in line 382
      22 lines of code
      2 parameters
      8 conditional paths
      uses variable FUZZY_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable SLOPPY_COMPARATOR defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable ADDED_WARNINGS defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable REMOVED_WARNINGS defined in edu::umd::cs::findbugs::workflow::BugHistory
      uses variable RETAINED_WARNINGS defined in edu::umd::cs::findbugs::workflow::BugHistory
   function handleOptionWithArgument(String,String) in line 410
      9 lines of code
      2 parameters
      3 conditional paths
   function isCount() in line 430
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isVerbose() in line 465
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BugHistoryCommandLine() in line 363
      protection public
      13 lines of code
      0 parameters
      1 conditional paths
   variable comparatorType in line 355
   variable count in line 356
   variable listFile in line 359
   variable opName in line 357
   variable outputDir in line 360
   variable setOp in line 358
   variable verbose in line 361
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/CopyBuggySource.java
module edu::umd::cs::findbugs::workflow::CopyBuggySource
   function close(InputStream) in line 133
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function close(OutputStream) in line 142
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
   function main(String[]) in line 57
      protection public
      75 lines of code
      1 parameters
      14 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function setSourceBaseList(List< String >) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function openSource(String,String) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function close(InputStream) defined in edu::umd::cs::findbugs::workflow::CopyBuggySource
   variable USAGE in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/DefectDensity.java
module edu::umd::cs::findbugs::workflow::DefectDensity
   function density(int,int) in line 44
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
   function main(String) in line 49
      protection public
      36 lines of code
      1 parameters
      9 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function printRow(Object...) defined in edu::umd::cs::findbugs::workflow::DefectDensity
      uses function density(int,int) defined in edu::umd::cs::findbugs::workflow::DefectDensity
      uses function getTotalBugs() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getPackageStats() defined in edu::umd::cs::findbugs::ProjectStats
   function printRow(Object...) in line 35
      8 lines of code
      1 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/ListBugDatabaseInfo.java
module edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
   function listVersion(PrintWriter,@CheckForNull String,boolean) in line 91
      37 lines of code
      3 parameters
      4 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTotalBugs() defined in edu::umd::cs::findbugs::ProjectStats
      uses function getBugsOfPriority(int) defined in edu::umd::cs::findbugs::ProjectStats
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
   function main(String[]) in line 71
      protection public
      19 lines of code
      1 parameters
      3 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
      uses function listVersion(PrintWriter,@CheckForNull String,boolean) defined in edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo
   variable USAGE in line 45
module edu::umd::cs::findbugs::workflow::ListBugDatabaseInfo::ListBugDatabaseInfoCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 57
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 65
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/MineBugHistory.java
module edu::umd::cs::findbugs::workflow::MineBugHistory
   function dump(PrintStream) in line 166
      protection public
      6 lines of code
      1 parameters
      4 conditional paths
      uses function dumpXml(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpNoTabs(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpSummary(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dumpOriginal(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function dumpNoTabs(PrintStream) in line 249
      protection public
      45 lines of code
      1 parameters
      4 conditional paths
      uses function print(int,boolean,PrintStream,Object) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
   function dumpOriginal(PrintStream) in line 198
      protection public
      27 lines of code
      1 parameters
      5 conditional paths
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::AppVersion
   function dumpSummary(PrintStream) in line 173
      protection public
      23 lines of code
      1 parameters
      6 conditional paths
   function dumpXml(PrintStream) in line 296
      protection public
      45 lines of code
      1 parameters
      5 conditional paths
      uses function getReleaseName() defined in edu::umd::cs::findbugs::AppVersion
      uses function getTimestamp() defined in edu::umd::cs::findbugs::AppVersion
   function execute() in line 125
      protection public
      37 lines of code
      0 parameters
      8 conditional paths
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::BugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::AppVersion
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::BugCollection
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getKey(boolean,boolean) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function isRemovedByChangeOfPersistingClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function isIntroducedByChangeOfExistingClass() defined in edu::umd::cs::findbugs::BugInstance
   function getKey(boolean,boolean) in line 350
      6 lines of code
      2 parameters
      6 conditional paths
      uses function setFormatDates(boolean) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setNoTabs() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setXml() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function setSummary() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function main(String[]) in line 384
      protection public
      27 lines of code
      1 parameters
      4 conditional paths
      uses function MineBugHistory() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function setBugCollection(BugCollection) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function execute() defined in edu::umd::cs::findbugs::workflow::MineBugHistory
      uses function dump(PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function pad(int,PrintStream) in line 227
      3 lines of code
      2 parameters
      2 conditional paths
   function print(int,boolean,PrintStream,Object) in line 236
      7 lines of code
      4 parameters
      3 conditional paths
      uses function pad(int,PrintStream) defined in edu::umd::cs::findbugs::workflow::MineBugHistory
   function setBugCollection(BugCollection) in line 99
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setFormatDates(boolean) in line 103
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setNoTabs() in line 107
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setSummary() in line 117
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setXml() in line 112
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function MineBugHistory() in line 93
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function MineBugHistory(BugCollection) in line 95
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::MineBugHistory::Version
   function getSequence() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::workflow::MineBugHistory::MineBugHistoryCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 367
      protection public
      9 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 378
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/PrintAppVersion.java
module edu::umd::cs::findbugs::workflow::PrintAppVersion
   function main(String[]) in line 31
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getCurrentAppVersion() defined in edu::umd::cs::findbugs::SortedBugCollection
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/RecursiveSearchForJavaFiles.java
module edu::umd::cs::findbugs::workflow::RecursiveSearchForJavaFiles
   function main(String) in line 27
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function search(File) defined in edu::umd::cs::findbugs::workflow::RecursiveSearchForJavaFiles
   function search(File) in line 31
      protection public
      22 lines of code
      1 parameters
      6 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/SetBugDatabaseInfo.java
module edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo
   function main(String[]) in line 113
      protection public
      83 lines of code
      1 parameters
      18 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::BugCollection
      uses function setSuppressionFilter(Filter) defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   variable USAGE in line 56
module edu::umd::cs::findbugs::workflow::SetBugDatabaseInfo::SetInfoCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 80
      10 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 92
      18 lines of code
      2 parameters
      1 conditional paths
   variable searchSourcePaths in line 67
      protection public
   variable sourcePaths in line 66
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/SourceSearcher.java
module edu::umd::cs::findbugs::workflow::SourceSearcher
   function findSource(SourceLineAnnotation) in line 43
      protection public
      16 lines of code
      1 parameters
      5 conditional paths
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function SourceSearcher(Project) in line 39
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/UnionResults.java
module edu::umd::cs::findbugs::workflow::UnionResults
   function main(String[]) in line 56
      protection public
      18 lines of code
      1 parameters
      3 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
module edu::umd::cs::findbugs::workflow::UnionResults::newCollection
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/workflow/Update.java
module edu::umd::cs::findbugs::workflow::Update
   function copyBugHistory(BugInstance,BugInstance) in line 431
      9 lines of code
      2 parameters
      1 conditional paths
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setRemovedByChangeOfPersistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
   function doit(String[]) in line 347
      protection public
      75 lines of code
      1 parameters
      15 conditional paths
      uses variable USAGE defined in edu::umd::cs::findbugs::workflow::Update
      uses function getFilePathParts(String) defined in edu::umd::cs::findbugs::workflow::Update
      uses function lengthCommonPrefix(String[],String[]) defined in edu::umd::cs::findbugs::workflow::Update
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses function getReleaseName() defined in edu::umd::cs::findbugs::BugCollection
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::BugCollection
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
   function getFilePathParts(String) in line 337
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function lengthCommonPrefix(String[],String[]) in line 423
      7 lines of code
      2 parameters
      3 conditional paths
   function main(String[]) in line 342
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function doit(String[]) defined in edu::umd::cs::findbugs::workflow::Update
   function matchBugs(Comparator< BugInstance >,BugCollection,BugCollection) in line 441
      34 lines of code
      3 parameters
      8 conditional paths
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
      uses variable mapFromNewToOldBug defined in edu::umd::cs::findbugs::workflow::Update
   function mergeCollections(BugCollection,BugCollection,boolean,boolean) in line 155
      protection public
      179 lines of code
      4 parameters
      26 conditional paths
      uses function getProjectStats() defined in edu::umd::cs::findbugs::BugCollection
      uses function getCollection() defined in edu::umd::cs::findbugs::BugCollection
      uses variable mapFromNewToOldBug defined in edu::umd::cs::findbugs::workflow::Update
      uses variable matchedOldBugs defined in edu::umd::cs::findbugs::workflow::Update
      uses function createEmptyCollectionWithMetadata() defined in edu::umd::cs::findbugs::BugCollection
      uses function getSequenceNumber() defined in edu::umd::cs::findbugs::BugCollection
      uses function clearAppVersions() defined in edu::umd::cs::findbugs::BugCollection
      uses function appVersionIterator() defined in edu::umd::cs::findbugs::BugCollection
      uses function addAppVersion(AppVersion) defined in edu::umd::cs::findbugs::BugCollection
      uses function clone() defined in edu::umd::cs::findbugs::AppVersion
      uses function setTimestamp(long) defined in edu::umd::cs::findbugs::AppVersion
      uses function setReleaseName(String) defined in edu::umd::cs::findbugs::AppVersion
      uses function setNumClasses(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getNumClasses() defined in edu::umd::cs::findbugs::ProjectStats
      uses function setCodeSize(int) defined in edu::umd::cs::findbugs::AppVersion
      uses function getCodeSize() defined in edu::umd::cs::findbugs::ProjectStats
      uses function setSequenceNumber(long) defined in edu::umd::cs::findbugs::BugCollection
      uses function clone() defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses function matchBugs(Comparator< BugInstance >,BugCollection,BugCollection) defined in edu::umd::cs::findbugs::workflow::Update
      uses variable instance defined in edu::umd::cs::findbugs::SortedBugCollection::BugInstanceComparator
      uses function execute() defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function isEmpty() defined in edu::umd::cs::findbugs::model::MovedClassMap
      uses function setClassNameRewriter(ClassNameRewriter) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function setComparePriorities(boolean) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function setExactBugPatternMatch(boolean) defined in edu::umd::cs::findbugs::VersionInsensitiveBugComparator
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getSourceFileName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getClassStats(String) defined in edu::umd::cs::findbugs::ProjectStats
      uses function setRemovedByChangeOfPersistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function setLastVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function getLastVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function getFirstVersion() defined in edu::umd::cs::findbugs::BugInstance
      uses function copyBugHistory(BugInstance,BugInstance) defined in edu::umd::cs::findbugs::workflow::Update
      uses function getUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function merge(@CheckForNull BugDesignation) defined in edu::umd::cs::findbugs::BugDesignation
      uses function setUserDesignation(BugDesignation) defined in edu::umd::cs::findbugs::BugInstance
      uses function setFirstVersion(long) defined in edu::umd::cs::findbugs::BugInstance
      uses function setIntroducedByChangeOfExistingClass(boolean) defined in edu::umd::cs::findbugs::BugInstance
      uses function getUniqueId() defined in edu::umd::cs::findbugs::BugInstance
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
   variable mapFromNewToOldBug in line 62
   variable matchedOldBugs in line 64
   variable USAGE in line 59
module edu::umd::cs::findbugs::workflow::Update::UpdateCommandLine
   inherits from edu::umd::cs::findbugs::config::CommandLine
   function handleOption(String,String) in line 97
      28 lines of code
      2 parameters
      1 conditional paths
   function handleOptionWithArgument(String,String) in line 127
      9 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/XDocsBugReporter.java
module edu::umd::cs::findbugs::XDocsBugReporter
   inherits from edu::umd::cs::findbugs::TextUIBugReporter
   function doReportBug(BugInstance) in line 86
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function printBug(BugInstance) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function notifyObservers(BugInstance) defined in edu::umd::cs::findbugs::AbstractBugReporter
   function endDocument(Project) in line 119
      14 lines of code
      1 parameters
      3 conditional paths
      uses variable root defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ERRORS_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function errorIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable ANALYSIS_ERROR_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::AnalysisError
      uses function missingClassIterator() defined in edu::umd::cs::findbugs::SortedBugCollection
      uses variable MISSING_CLASS_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
   function finish() in line 102
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function writeXML(OutputStream,Project) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
   function logError(String) in line 72
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function addError(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function observeClass(ClassDescriptor) in line 68
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function printBug(BugInstance) in line 94
      7 lines of code
      1 parameters
      2 conditional paths
      uses function toElement(BugInstance) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function logError(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
   function reportMissingClass(ClassNotFoundException) in line 78
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable bugCollection defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function addMissingClass(String) defined in edu::umd::cs::findbugs::SortedBugCollection
   function toElement(BugInstance) in line 160
      protection public
      42 lines of code
      1 parameters
      7 conditional paths
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses variable root defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable FILE_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getType() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function xmlEscape(String) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function writeXML(OutputStream,Project) in line 112
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses function endDocument(Project) defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
   function xmlEscape(String) in line 134
      25 lines of code
      1 parameters
      7 conditional paths
   function XDocsBugReporter(Project) in line 59
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable document defined in edu::umd::cs::findbugs::XDocsBugReporter
      uses variable ROOT_ELEMENT_NAME defined in edu::umd::cs::findbugs::XDocsBugReporter
   variable ANALYSIS_ERROR_ELEMENT_NAME in line 51
   variable bugCollection in line 43
   variable document in line 45
   variable ELEMENT_NAME in line 55
   variable ERRORS_ELEMENT_NAME in line 50
   variable FILE_ELEMENT_NAME in line 56
   variable MISSING_CLASS_ELEMENT_NAME in line 52
   variable project in line 44
   variable PROJECT_ELEMENT_NAME in line 49
   variable root in line 46
   variable ROOT_ELEMENT_NAME in line 48
   variable SUMMARY_HTML_ELEMENT_NAME in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/Dom4JXMLOutput.java
module edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   inherits from edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 86
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function beginDocument() in line 49
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function closeTag(String) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function finish() in line 150
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function openCloseTag(String) in line 70
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openCloseTag(String,XMLAttributeList) in line 75
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openTag(String) in line 52
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function openTag(String,XMLAttributeList) in line 58
      protection public
      11 lines of code
      2 parameters
      2 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function iterator() defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function startTag(String) in line 80
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function stopTag(boolean) in line 91
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function write(XMLWriteable) in line 131
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function writeXML(XMLOutput) defined in edu::umd::cs::findbugs::xml::XMLWriteable
   function writeCDATA(String) in line 106
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeCollection(Collection<?extends XMLWriteable >) in line 144
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses function write(XMLWriteable) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeElementList(String,Collection< String >) in line 118
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function openTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function writeText(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
      uses function closeTag(String) defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function writeText(String) in line 101
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   function Dom4JXMLOutput(Branch) in line 44
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable stack defined in edu::umd::cs::findbugs::xml::Dom4JXMLOutput
   variable stack in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/MetaCharacterMap.java
module edu::umd::cs::findbugs::xml::MetaCharacterMap
   function addMeta(char,String) in line 52
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable metaCharacterSet defined in edu::umd::cs::findbugs::xml::MetaCharacterMap
      uses variable replacementMap defined in edu::umd::cs::findbugs::xml::MetaCharacterMap
   function MetaCharacterMap() in line 41
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable metaCharacterSet in line 34
   variable replacementMap in line 35
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/OutputStreamXMLOutput.java
module edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   inherits from edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 106
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function beginDocument() in line 77
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable OPENING defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function getStylesheetCode(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function closeTag(String) in line 139
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function indent() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function emitTag(String,boolean) in line 124
      4 lines of code
      2 parameters
      1 conditional paths
      uses function startTag(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function stopTag(boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function emitTag(String,String,boolean) in line 129
      9 lines of code
      3 parameters
      2 conditional paths
      uses function startTag(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses function stopTag(boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function finish() in line 160
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function getStylesheetCode(String) in line 35
      4 lines of code
      1 parameters
      2 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function indent() in line 164
      7 lines of code
      0 parameters
      3 conditional paths
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openCloseTag(String) in line 92
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openCloseTag(String,XMLAttributeList) in line 96
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openTag(String) in line 84
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function openTag(String,XMLAttributeList) in line 88
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function emitTag(String,boolean) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function startTag(String) in line 100
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function indent() defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function stopTag(boolean) in line 113
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable nestingLevel defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function writeCDATA(String) in line 151
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function writeText(String) in line 147
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function WriterQuoteMetaCharacters(String) defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput::WriterQuoteMetaCharacters
      uses variable text defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function OutputStreamXMLOutput(OutputStream) in line 67
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function OutputStreamXMLOutput(OutputStream,String) in line 71
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable stylesheet defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   variable nestingLevel in line 60
   variable newLine in line 61
   variable OPENING in line 34
   variable out in line 59
   variable stylesheet in line 62
   variable textMetaCharacterMap in line 40
module edu::umd::cs::findbugs::xml::OutputStreamXMLOutput::WriterQuoteMetaCharacters
   inherits from edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function emitLiteral(String) in line 53
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
      uses variable newLine defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
   function WriterQuoteMetaCharacters(String) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable text defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable textMetaCharacterMap defined in edu::umd::cs::findbugs::xml::OutputStreamXMLOutput
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/QuoteMetaCharacters.java
module edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   abstract class
   function emitLiteral(String) in line 74
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function findNextMeta(String,int) in line 76
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function process() in line 52
      protection public
      14 lines of code
      0 parameters
      3 conditional paths
      uses function findNextMeta(String,int) defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable text defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses function emitLiteral(String) defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function QuoteMetaCharacters(@NonNull String,@NonNull MetaCharacterMap) in line 42
      protection public
      6 lines of code
      2 parameters
      3 conditional paths
      uses variable text defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
      uses variable map defined in edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   variable map in line 34
   variable text in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/XMLAttributeList.java
module edu::umd::cs::findbugs::xml::XMLAttributeList
   function addAttribute(@NonNull String,@NonNull String) in line 106
      protection public
      8 lines of code
      2 parameters
      3 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function NameValuePair(String,String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function addOptionalAttribute(@NonNull String,@CheckForNull String) in line 122
      protection public
      4 lines of code
      2 parameters
      2 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses function addAttribute(@NonNull String,@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getQuotedAttributeValue(@NonNull String) in line 155
      protection public
      8 lines of code
      1 parameters
      2 conditional paths
      uses variable attrMetaCharacterMap defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function process() defined in edu::umd::cs::findbugs::xml::XMLAttributeList::StringBufferQuoteMetaCharacters
   function iterator() in line 146
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function toString() in line 132
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses variable nameValuePairList defined in edu::umd::cs::findbugs::xml::XMLAttributeList
      uses function getQuotedAttributeValue(@NonNull String) defined in edu::umd::cs::findbugs::xml::XMLAttributeList
   function XMLAttributeList() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable attrMetaCharacterMap in line 80
   variable nameValuePairList in line 89
module edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getName() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function getValue() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   function NameValuePair(String,String) in line 39
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable name defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
      uses variable value defined in edu::umd::cs::findbugs::xml::XMLAttributeList::NameValuePair
   variable name in line 36
   variable value in line 37
module edu::umd::cs::findbugs::xml::XMLAttributeList::StringBufferQuoteMetaCharacters
   inherits from edu::umd::cs::findbugs::xml::QuoteMetaCharacters
   function emitLiteral(String) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function process() in line 63
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
   function StringBufferQuoteMetaCharacters(String,MetaCharacterMap,StringBuffer) in line 56
      protection public
      5 lines of code
      3 parameters
      1 conditional paths
   variable buf in line 54
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/XMLOutput.java
module edu::umd::cs::findbugs::xml::XMLOutput
   function addAttribute(String,String) in line 68
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function beginDocument() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function closeTag(String) in line 98
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 124
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function openCloseTag(String) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openCloseTag(String,XMLAttributeList) in line 91
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function openTag(String) in line 42
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function openTag(String,XMLAttributeList) in line 50
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function startTag(String) in line 59
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function stopTag(boolean) in line 76
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeCDATA(String) in line 114
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function writeText(String) in line 106
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/XMLOutputUtil.java
module edu::umd::cs::findbugs::xml::XMLOutputUtil
   abstract class
   function writeCollection(XMLOutput,Collection<?extends XMLWriteable >) in line 69
      protection public
      6 lines of code
      2 parameters
      2 conditional paths
   function writeElementList(XMLOutput,String,Collection< String >) in line 41
      protection public
      4 lines of code
      3 parameters
      1 conditional paths
   function writeElementList(XMLOutput,String,Iterator< String >) in line 54
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/XMLWriteable.java
module edu::umd::cs::findbugs::xml::XMLWriteable
   function writeXML(XMLOutput) in line 37
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/xml/XPathFind.java
module edu::umd::cs::findbugs::xml::XPathFind
   abstract class
   function find(String) in line 51
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function match(Node) defined in edu::umd::cs::findbugs::xml::XPathFind
   function main(String[]) in line 59
      protection public
      35 lines of code
      1 parameters
      5 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function XPathFind(Document) defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function match(Node) defined in edu::umd::cs::findbugs::xml::XPathFind
      uses function find(String) defined in edu::umd::cs::findbugs::xml::XPathFind
   function match(Node) in line 57
      1 lines of code
      1 parameters
      1 conditional paths
   function XPathFind(Document) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable document defined in edu::umd::cs::findbugs::xml::XPathFind
   variable document in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/XMLBugReporter.java
module edu::umd::cs::findbugs::XMLBugReporter
   inherits from edu::umd::cs::findbugs::BugCollectionBugReporter
   function finish() in line 49
      protection public
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getProject() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
      uses variable outputStream defined in edu::umd::cs::findbugs::TextUIBugReporter
   function setAddMessages(boolean) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
      uses function setWithMessages(boolean) defined in edu::umd::cs::findbugs::BugCollection
   function XMLBugReporter(Project) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable project defined in edu::umd::cs::findbugs::BugCollectionBugReporter
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java/edu/umd/cs/findbugs/XMLWriteableWithMessages.java
module edu::umd::cs::findbugs::XMLWriteableWithMessages
   inherits from edu::umd::cs::findbugs::xml::XMLWriteable
   function writeXML(XMLOutput,boolean) in line 33
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/CheckForNull.java
module edu::umd::cs::findbugs::annotations::CheckForNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/CheckReturnValue.java
module edu::umd::cs::findbugs::annotations::CheckReturnValue
   function explanation() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function priority() in line 38
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/DefaultAnnotation.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotation
   function priority() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/DefaultAnnotationForFields.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForFields
   function priority() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/DefaultAnnotationForMethods.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForMethods
   function priority() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/DefaultAnnotationForParameters.java
module edu::umd::cs::findbugs::annotations::DefaultAnnotationForParameters
   function priority() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 48
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/NonNull.java
module edu::umd::cs::findbugs::annotations::NonNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/Nullable.java
module edu::umd::cs::findbugs::annotations::Nullable
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/OverrideMustInvoke.java
module edu::umd::cs::findbugs::annotations::OverrideMustInvoke
   function value() in line 42
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/PossiblyNull.java
module edu::umd::cs::findbugs::annotations::PossiblyNull
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/Priority.java
module edu::umd::cs::findbugs::annotations::Priority
   function getPriorityValue() in line 32
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function Priority(int) in line 36
      3 lines of code
      1 parameters
      1 conditional paths
   variable HIGH in line 28
      protection public
   variable IGNORE in line 28
      protection public
   variable LOW in line 28
      protection public
   variable MEDIUM in line 28
      protection public
   variable priorityValue in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/SuppressWarnings.java
module edu::umd::cs::findbugs::annotations::SuppressWarnings
   function justification() in line 47
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function value() in line 46
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/UnknownNullness.java
module edu::umd::cs::findbugs::annotations::UnknownNullness
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/annotations/When.java
module edu::umd::cs::findbugs::annotations::When
   variable ANYTIME in line 26
      protection public
   variable FIRST in line 26
      protection public
   variable LAST in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/AnalysisCallback.java
module edu::umd::cs::findbugs::gui2::AnalysisCallback
   function analysisFinished(BugCollection) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function analysisInterrupted() in line 29
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/AnalyzingDialog.java
module edu::umd::cs::findbugs::gui2::AnalyzingDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   inherits from edu::umd::cs::findbugs::FindBugsProgress
   function cancel() in line 138
      9 lines of code
      0 parameters
      2 conditional paths
   function finishArchive() in line 181
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function finishClass() in line 186
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function finishPerClassAnalysis() in line 191
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function incrementCount() in line 153
      12 lines of code
      0 parameters
      1 conditional paths
   function initComponents() in line 94
      protection public
      43 lines of code
      0 parameters
      1 conditional paths
   function predictPassCount(int[]) in line 236
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function reportNumberOfArchives(int) in line 196
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function startAnalysis(int) in line 202
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function updateCount(final int,final int) in line 166
      14 lines of code
      2 parameters
      1 conditional paths
   function updateStage(String) in line 148
      4 lines of code
      1 parameters
      1 conditional paths
   function AnalyzingDialog(@NonNull final Project,final boolean) in line 59
      protection public
      15 lines of code
      2 parameters
      2 conditional paths
   function AnalyzingDialog(@NonNull Project,AnalysisCallback,boolean) in line 82
      protection public
      11 lines of code
      3 parameters
      4 conditional paths
      uses function showWaitCard() defined in edu::umd::cs::findbugs::gui2::MainFrame
   variable analysisFinished in line 47
   variable analysisThread in line 50
   variable callback in line 49
   variable cancelButton in line 57
   variable count in line 52
   variable goal in line 53
   variable progressBar in line 56
   variable project in line 48
   variable statusLabel in line 55
module edu::umd::cs::findbugs::gui2::AnalyzingDialog::AnalysisThread
   inherits from Thread
   function run() in line 216
      protection public
      15 lines of code
      0 parameters
      3 conditional paths
      uses function analysisInterrupted() defined in edu::umd::cs::findbugs::gui2::AnalysisCallback
      uses function analysisFinished(BugCollection) defined in edu::umd::cs::findbugs::gui2::AnalysisCallback
      uses variable newProject defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/BugAspects.java
module edu::umd::cs::findbugs::gui2::BugAspects
   inherits from Iterable
   function add(SortableValue) in line 96
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function addToNew(SortableValue) in line 99
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function BugAspects() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getCount() in line 80
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getMatcher() in line 105
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getMatchingBugs(BugSet) in line 116
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
      uses function getBugsMatchingFilter(Matcher) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function getStackedFilterMatcher() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function toString() defined in edu::umd::cs::findbugs::gui2::BugAspects
   function getStackedFilterMatcher() in line 108
      protection public
      7 lines of code
      0 parameters
      2 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function iterator() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function last() in line 51
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function setCount(int) in line 75
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   function size() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
   function toString() in line 58
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
   function BugAspects() in line 85
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function BugAspects(BugAspects) in line 90
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable lst defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable count defined in edu::umd::cs::findbugs::gui2::BugAspects
   variable count in line 48
   variable lst in line 49
   variable serialVersionUID in line 47
module edu::umd::cs::findbugs::gui2::BugAspects::SortableValue
   function equals(Object) in line 138
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 132
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 147
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function SortableValue(Sortables,String) in line 125
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   variable key in line 122
      protection public
   variable value in line 123
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/BugLeafNode.java
module edu::umd::cs::findbugs::gui2::BugLeafNode
   function equals(Object) in line 83
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function getBug() in line 45
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function hashCode() in line 93
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function hashCode() defined in edu::umd::cs::findbugs::BugInstance
   function matches(SortableValue) in line 58
      protection public
      23 lines of code
      1 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function matches(BugAspects) in line 98
      protection public
      10 lines of code
      1 parameters
      4 conditional paths
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function matches(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function toString() in line 51
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable bug defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
   variable bug in line 38
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/BugLoader.java
module edu::umd::cs::findbugs::gui2::BugLoader
   function combineBugHistories(Project) in line 206
      protection public
      34 lines of code
      1 parameters
      4 conditional paths
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
   function createEngine(@NonNull Project,BugReporter) in line 108
      15 lines of code
      2 parameters
      2 conditional paths
      uses function setBugReporter(BugReporter) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setProject(Project) defined in edu::umd::cs::findbugs::FindBugs2
      uses function setDetectorFactoryCollection(DetectorFactoryCollection) defined in edu::umd::cs::findbugs::FindBugs2
   function doAnalysis(@NonNull Project,FindBugsProgress) in line 71
      protection public
      28 lines of code
      2 parameters
      2 conditional paths
      uses function setPriorityThreshold(int) defined in edu::umd::cs::findbugs::AbstractBugReporter
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function createEngine(@NonNull Project,BugReporter) defined in edu::umd::cs::findbugs::gui2::BugLoader
      uses function setUserPreferences(UserPreferences) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setProgressCallback(FindBugsProgress) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function execute() defined in edu::umd::cs::findbugs::IFindBugsEngine
      uses function setSourceFinder(SourceFinder) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setSourceBaseList(List< String >) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getBugCollection() defined in edu::umd::cs::findbugs::BugCollectionBugReporter
   function doAnalysis(@NonNull Project) in line 246
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
   function loadBugs(MainFrame,Project,URL) in line 137
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
   function loadBugs(MainFrame,Project,File) in line 145
      protection public
      8 lines of code
      3 parameters
      2 conditional paths
      uses function loadBugs(MainFrame,Project,URL) defined in edu::umd::cs::findbugs::gui2::BugLoader
   function loadBugs(MainFrame,Project,InputStream) in line 153
      protection public
      18 lines of code
      3 parameters
      3 conditional paths
      uses function readXML(String,Project) defined in edu::umd::cs::findbugs::SortedBugCollection
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function softAdd(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
   function loadBugsHelper(BugCollection) in line 124
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
   function loadProject(MainFrame,File) in line 172
      protection public
      20 lines of code
      2 parameters
      3 conditional paths
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function softAdd(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
   function redoAnalysisKeepComments(@NonNull Project) in line 267
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function add(BugInstance) defined in edu::umd::cs::findbugs::BugCollection
      uses function mergeCollections(BugCollection,BugCollection,boolean,boolean) defined in edu::umd::cs::findbugs::workflow::Update
   function BugLoader() in line 193
      4 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::BugLoader::RedoAnalysisCallback
   inherits from edu::umd::cs::findbugs::gui2::AnalysisCallback
   function analysisFinished(BugCollection) in line 300
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function analysisInterrupted() in line 306
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/BugRenderer.java
module edu::umd::cs::findbugs::gui2::BugRenderer
   inherits from javax::swing::tree::DefaultTreeCellRenderer
   function getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean) in line 39
      protection public
      32 lines of code
      7 parameters
      8 conditional paths
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable EXP_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable IGNORE_PRIORITY defined in edu::umd::cs::findbugs::Priorities
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/BugSaver.java
module edu::umd::cs::findbugs::gui2::BugSaver
   function getLastPlaceSaved() in line 65
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable lastPlaceSaved defined in edu::umd::cs::findbugs::gui2::BugSaver
   function saveBugs(OutputStream,BugCollection,Project) in line 43
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function writeXML(String,Project) defined in edu::umd::cs::findbugs::BugCollection
   function saveBugs(File,BugCollection,Project) in line 54
      protection public
      10 lines of code
      3 parameters
      2 conditional paths
      uses function saveBugs(OutputStream,BugCollection,Project) defined in edu::umd::cs::findbugs::gui2::BugSaver
      uses variable lastPlaceSaved defined in edu::umd::cs::findbugs::gui2::BugSaver
   variable lastPlaceSaved in line 42
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/BugSet.java
module edu::umd::cs::findbugs::gui2::BugSet
   inherits from Iterable
   function contains(SortableValue) in line 254
      protection public
      16 lines of code
      1 parameters
      4 conditional paths
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function filterNoCache() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function filterNoCache() in line 321
      protection public
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function get(int) in line 355
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function filterNoCache() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function getUnfiltered(int) defined in edu::umd::cs::findbugs::gui2::BugSet
   function getAll(Sortables) in line 79
      protection public
      6 lines of code
      1 parameters
      21 conditional paths
      uses variable sortablesToStrings defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function iterator() defined in edu::umd::cs::findbugs::BugCollection
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable mainBugSet defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getMessage() defined in edu::umd::cs::findbugs::BugInstance
      uses function contains(Object) defined in edu::umd::cs::findbugs::gui2::HashList
      uses function add(E) defined in edu::umd::cs::findbugs::gui2::HashList
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Filter
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function getBugsMatchingFilter(Matcher) in line 334
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function match(BugInstance) defined in edu::umd::cs::findbugs::filter::Matcher
   function getMainBugSet() in line 69
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable mainBugSet defined in edu::umd::cs::findbugs::gui2::BugSet
   function getUnfiltered(int) in line 300
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function indexOf(BugLeafNode) in line 350
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function filterNoCache() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function indexOfUnfiltered(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::BugSet
   function indexOfUnfiltered(BugLeafNode) in line 295
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   function iterator() in line 305
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneMap defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable doneContainsMap defined in edu::umd::cs::findbugs::gui2::BugSet
   function query(BugAspects) in line 275
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function size() in line 345
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function filterNoCache() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function sizeUnfiltered() defined in edu::umd::cs::findbugs::gui2::BugSet
   function sizeUnfiltered() in line 286
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable mainList defined in edu::umd::cs::findbugs::gui2::BugSet
   variable doneContainsMap in line 57
   variable doneMap in line 56
   variable mainBugSet in line 61
   variable mainList in line 55
   variable sortablesToStrings in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/BugTreeModel.java
module edu::umd::cs::findbugs::gui2::BugTreeModel
   inherits from javax::swing::tree::TreeModel
   inherits from javax::swing::event::TableColumnModelListener
   inherits from javax::swing::event::TreeExpansionListener
   function addTreeModelListener(TreeModelListener) in line 317
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function branchOperations(ArrayList< String >,TreeModification) in line 844
      83 lines of code
      2 parameters
      24 conditional paths
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function add(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
   function columnAdded(TableColumnModelEvent) in line 340
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnMarginChanged(ChangeEvent) in line 737
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function columnMoved(final TableColumnModelEvent) in line 352
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable sortOrderChanged defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnRemoved(TableColumnModelEvent) in line 346
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function columnSelectionChanged(ListSelectionEvent) in line 738
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function crawl(final ArrayList< BugAspects >,final int) in line 426
      protection public
      15 lines of code
      2 parameters
      8 conditional paths
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getPathToBug(BugInstance) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function crawlToOpen(TreePath,ArrayList< BugLeafNode >,ArrayList< TreePath >) in line 489
      protection public
      27 lines of code
      3 parameters
      7 conditional paths
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function enumsThatExist(BugAspects) in line 236
      42 lines of code
      1 parameters
      3 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function getAll() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function finalize() in line 729
      7 lines of code
      0 parameters
      1 conditional paths
   function getChild(Object,int) in line 168
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses function getChild0(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getChild0(Object,int) in line 174
      protection public
      26 lines of code
      2 parameters
      4 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function get(int) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function addToNew(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
   function getChildCount(Object) in line 201
      protection public
      31 lines of code
      1 parameters
      4 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function last() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getIndexOfChild(Object,Object) in line 286
      protection public
      30 lines of code
      2 parameters
      4 conditional paths
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function indexOf(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function enumsThatExist(BugAspects) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function indexOf(Object) defined in edu::umd::cs::findbugs::gui2::HashList
   function getOffListenerList() in line 156
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function removeColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getPathToBug(BugInstance) in line 682
      protection public
      39 lines of code
      1 parameters
      8 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function add(SortableValue) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getPathToNewlyUnsuppressedBug(BugInstance) in line 722
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getPathToBug(BugInstance) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getRoot() in line 163
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function getValues(Sortables) in line 328
      11 lines of code
      1 parameters
      2 conditional paths
      uses function getAllSorted() defined in edu::umd::cs::findbugs::gui2::Sortables
   function insertBranch(ArrayList< String >) in line 800
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function isLeaf(Object) in line 279
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function rebuild() in line 374
      51 lines of code
      0 parameters
      5 conditional paths
      uses variable TRACE defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function freezeOrder() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function setRebuilding(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable rebuildingThread defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setOldSelectedBugs() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function BugTreeModel(JTree,SorterTableColumnModel,BugSet) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function resetData() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function newTree(final JTree,final BugTreeModel) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getOffListenerList() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function thawOrder() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function removeBranch(ArrayList< String >) in line 805
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function removeTreeModelListener(TreeModelListener) in line 322
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function resetData() in line 518
      protection public
      5 lines of code
      0 parameters
      28 conditional paths
      uses variable TRACE defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function restructureBranch(ArrayList< String >,boolean) in line 792
      protection public
      7 lines of code
      2 parameters
      2 conditional paths
      uses function branchOperations(ArrayList< String >,TreeModification) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function setOldSelectedBugs() in line 746
      8 lines of code
      0 parameters
      5 conditional paths
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function isLeaf(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable sortOrderChanged defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable sortsAddedOrRemoved defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function rebuild() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function showWaitCard() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function sortBranch(TreePath) in line 810
      protection public
      24 lines of code
      1 parameters
      4 conditional paths
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChildCount(Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getChild(Object,int) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable listeners defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function treeCollapsed(TreeExpansionEvent) in line 743
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function treeExpanded(TreeExpansionEvent) in line 740
      protection public
      2 lines of code
      1 parameters
      1 conditional paths
   function valueForPathChanged(TreePath,Object) in line 284
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function BugTreeModel(JTree,SorterTableColumnModel,BugSet) in line 110
      protection public
      36 lines of code
      3 parameters
      2 conditional paths
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function addColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function setCount(int) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function addTreeModelListener(TreeModelListener) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function BugTreeModel(BugTreeModel) in line 147
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable root defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable st defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable data defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses variable tree defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   variable data in line 98
   variable DEBUG in line 103
   variable listeners in line 99
   variable rebuildingThread in line 105
   variable root in line 96
   variable sortOrderChanged in line 106
   variable sortsAddedOrRemoved in line 107
   variable st in line 97
   variable TRACE in line 517
      protection public
   variable tree in line 100
module edu::umd::cs::findbugs::gui2::BugTreeModel::MyFilterListener
   inherits from edu::umd::cs::findbugs::gui2::FilterListener
   function clearCache() in line 526
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
   function suppressBug(TreePath) in line 602
      protection public
      59 lines of code
      1 parameters
      1 conditional paths
   function unsuppressBug(TreePath) in line 536
      protection public
      65 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::BugTreeModel::BranchOperationException
   inherits from Exception
   function BranchOperationException(String) in line 838
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::BugTreeModel::TreeModification
   variable INSERT in line 843
      protection public
   variable INSERTRESTRUCTURE in line 843
      protection public
   variable REMOVE in line 843
      protection public
   variable REMOVERESTRUCTURE in line 843
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/CheckBoxList.java
module edu::umd::cs::findbugs::gui2::CheckBoxList
   inherits from javax::swing::JList
   function setEnabled(boolean) in line 68
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
   function CheckBoxList() in line 38
      protection public
      22 lines of code
      0 parameters
      2 conditional paths
   function CheckBoxList(Object[]) in line 61
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   variable noFocusBorder in line 36
module edu::umd::cs::findbugs::gui2::CheckBoxList::CellRenderer
   inherits from javax::swing::ListCellRenderer
   function getListCellRendererComponent(JList,Object,int,boolean,boolean) in line 78
      protection public
      13 lines of code
      5 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/CommentsArea.java
module edu::umd::cs::findbugs::gui2::CommentsArea
   function addToPrevComments(String) in line 386
      18 lines of code
      1 parameters
      5 conditional paths
      uses variable prevCommentsMaxSize defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function resetPrevCommentsComboBox() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function changeDesignationOfBug(BugLeafNode,String) in line 493
      6 lines of code
      2 parameters
      2 conditional paths
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDesignationKey() defined in edu::umd::cs::findbugs::BugDesignation
      uses function setDesignationKey(String) defined in edu::umd::cs::findbugs::BugDesignation
   function confirmAnnotation() in line 279
      24 lines of code
      0 parameters
      5 conditional paths
      uses variable dontShowAnnotationConfirmation defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function convertDesignationNameToDesignationKey(String) in line 655
      13 lines of code
      1 parameters
      3 conditional paths
      uses variable designationComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationKeys defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function getCurrentPrevCommentsSelection() in line 445
      4 lines of code
      0 parameters
      5 conditional paths
      uses variable prevCommentsComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignationNonLeaf(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function convertDesignationNameToDesignationKey(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function changeDesignationOfBug(BugLeafNode,String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignationComboBox(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function getCurrentUserCommentsText() in line 428
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function getNonLeafCommentsText(BugAspects) in line 540
      19 lines of code
      1 parameters
      6 conditional paths
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
   function hasFocus() in line 691
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function moveNodeAccordingToDesignation(BugLeafNode,String) in line 592
      protection public
      61 lines of code
      2 parameters
      11 conditional paths
      uses variable DESIGNATION defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getNonnullUserDesignation() defined in edu::umd::cs::findbugs::BugInstance
      uses function setDesignationKey(String) defined in edu::umd::cs::findbugs::BugDesignation
      uses function getPathToBug(BugInstance) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function suppressBug(TreePath) defined in edu::umd::cs::findbugs::gui2::FilterListener
      uses function unsuppressBug(TreePath) defined in edu::umd::cs::findbugs::gui2::FilterListener
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function sortBranch(TreePath) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function resetPrevCommentsComboBox() in line 410
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable prevCommentsComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function resized() in line 682
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function resetPrevCommentsComboBox() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function saveComments() in line 327
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function saveComments(BugLeafNode,BugAspects) in line 332
      protection public
      6 lines of code
      2 parameters
      10 conditional paths
      uses function saveCommentsToBug(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function saveCommentsToNonLeaf(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable prevCommentsMaxSize defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function resetPrevCommentsComboBox() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function saveCommentsToBug(BugLeafNode) in line 265
      13 lines of code
      1 parameters
      3 conditional paths
      uses function getCurrentUserCommentsText() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getAnnotationText() defined in edu::umd::cs::findbugs::BugInstance
      uses function setAnnotationText(String) defined in edu::umd::cs::findbugs::BugInstance
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function addToPrevComments(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function saveCommentsToNonLeaf(BugAspects) in line 304
      17 lines of code
      1 parameters
      6 conditional paths
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getCurrentUserCommentsText() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getNonLeafCommentsText(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function confirmAnnotation() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function saveCommentsToBug(BugLeafNode) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function setCurrentUserCommentsText(String) in line 437
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function setDesignationComboBox(String) in line 580
      11 lines of code
      1 parameters
      4 conditional paths
      uses variable designationComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationKeys defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function setDesignationNonLeaf(String) in line 478
      14 lines of code
      1 parameters
      4 conditional paths
      uses function convertDesignationNameToDesignationKey(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function changeDesignationOfBug(BugLeafNode,String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignationComboBox(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function setProjectChanged(boolean) in line 669
      3 lines of code
      1 parameters
      1 conditional paths
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function updateCommentsFromNonLeafInformationFromSwingThread(BugAspects) in line 512
      27 lines of code
      1 parameters
      6 conditional paths
      uses function getMatchingBugs(BugSet) defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses variable designationKeys defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable userCommentsText defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function getNonLeafCommentsText(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable changed defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function updateDesignationComboBox() in line 500
      11 lines of code
      0 parameters
      3 conditional paths
      uses function updateCommentsFromNonLeafInformationFromSwingThread(BugAspects) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationComboBox defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setDesignationComboBox(String) defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses variable designationKeys defined in edu::umd::cs::findbugs::gui2::CommentsArea
   variable changed in line 71
   variable designationComboBox in line 59
   variable designationKeys in line 61
   variable dontShowAnnotationConfirmation in line 69
   variable prevCommentsComboBox in line 67
   variable prevCommentsMaxSize in line 65
   variable userCommentsText in line 55
   variable userCommentsTextUnenabledColor in line 57
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/DeadBugFilter.java
module edu::umd::cs::findbugs::gui2::DeadBugFilter
   inherits from edu::umd::cs::findbugs::gui2::FilterMatcher
   function match(BugInstance) in line 45
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function toString() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function DeadBugFilter(Sortables,String,FilterWhere) in line 34
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/Driver.java
module edu::umd::cs::findbugs::gui2::Driver
   function getFontSize() in line 153
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::Driver
   function isDocking() in line 148
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable docking defined in edu::umd::cs::findbugs::gui2::Driver
   function main(String[]) in line 60
      protection public
      83 lines of code
      1 parameters
      13 conditional paths
      uses variable splash defined in edu::umd::cs::findbugs::gui2::Driver
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
      uses variable docking defined in edu::umd::cs::findbugs::gui2::Driver
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::Driver
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function isDocking() defined in edu::umd::cs::findbugs::gui2::Driver
   function removeSplashScreen() in line 144
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable splash defined in edu::umd::cs::findbugs::gui2::Driver
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
   variable docking in line 57
   variable fontSize in line 56
   variable splash in line 58
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FBDialog.java
module edu::umd::cs::findbugs::gui2::FBDialog
   inherits from javax::swing::JDialog
   function addNotify() in line 77
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function setFontSize(float) in line 56
      5 lines of code
      1 parameters
      1 conditional paths
   function setFontSizeHelper(Component[],float) in line 65
      10 lines of code
      2 parameters
      4 conditional paths
   function FBDialog() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FBDialog(Frame) in line 44
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function FBDialog(Dialog) in line 48
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FBFileChooser.java
module edu::umd::cs::findbugs::gui2::FBFileChooser
   inherits from javax::swing::JFileChooser
   function addNotify() in line 68
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function setFontSize(float) in line 47
      5 lines of code
      1 parameters
      1 conditional paths
      uses function setFontSizeHelper(Component[],float) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function setFontSizeHelper(Component[],float) in line 56
      10 lines of code
      2 parameters
      4 conditional paths
   function showDialog(Component,String) in line 114
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function showOpenDialog(Component) in line 89
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function showSaveDialog(Component) in line 102
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses function workAroundJFileChooserBug() defined in edu::umd::cs::findbugs::gui2::FBFileChooser
      uses function setStarterDirectoryForLoadBugs(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function workAroundJFileChooserBug() in line 74
      13 lines of code
      0 parameters
      2 conditional paths
   function FBFileChooser() in line 37
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getStarterDirectoryForLoadBugs() defined in edu::umd::cs::findbugs::gui2::GUISaveState
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FBFrame.java
module edu::umd::cs::findbugs::gui2::FBFrame
   inherits from javax::swing::JFrame
   function addNotify() in line 56
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
   function setFontSize(float) in line 35
      5 lines of code
      1 parameters
      1 conditional paths
   function setFontSizeHelper(Component[],float) in line 44
      10 lines of code
      2 parameters
      4 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FilterActivity.java
module edu::umd::cs::findbugs::gui2::FilterActivity
   function addFilterListener(FilterListener) in line 37
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function notifyListeners(FilterListener.Action,@CheckForNull TreePath) in line 47
      protection public
      19 lines of code
      2 parameters
      8 conditional paths
   function removeFilterListener(FilterListener) in line 42
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FilterFactory.java
module edu::umd::cs::findbugs::gui2::FilterFactory
   function makeAndMatcher(Collection< SortableValue >) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
   function makeMatcher(Collection< SortableValue >,boolean) in line 50
      15 lines of code
      2 parameters
      5 conditional paths
   function makeMatcher(Collection< Sortables >,BugInstance) in line 66
      protection public
      10 lines of code
      2 parameters
      4 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::CompoundMatcher
   function makeMatcher(Sortables,BugInstance) in line 82
      34 lines of code
      2 parameters
      12 conditional paths
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
      uses variable CLASS defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getPriority() defined in edu::umd::cs::findbugs::BugInstance
   function makeMatcher(SortableValue) in line 117
      36 lines of code
      1 parameters
      12 conditional paths
      uses variable EQ defined in edu::umd::cs::findbugs::filter::RelationalOp
   function makeOrMatcher(Collection< SortableValue >) in line 43
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function makeMatcher(Collection< SortableValue >,boolean) defined in edu::umd::cs::findbugs::gui2::FilterFactory
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FilterListener.java
module edu::umd::cs::findbugs::gui2::FilterListener
   function clearCache() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function suppressBug(TreePath) in line 34
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function unsuppressBug(TreePath) in line 35
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::FilterListener::Action
   variable FILTERING in line 30
      protection public
   variable SUPPRESSING in line 30
      protection public
   variable UNFILTERING in line 30
      protection public
   variable UNSUPPRESSING in line 30
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FilterMatcher.java
module edu::umd::cs::findbugs::gui2::FilterMatcher
   inherits from edu::umd::cs::findbugs::filter::Matcher
   inherits from java::io::Serializable
   inherits from Comparable
   function compareTo(FilterMatcher) in line 138
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function equals(Object) in line 123
      protection public
      8 lines of code
      1 parameters
      3 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function hashCode() in line 133
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function isActive() in line 88
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function match(BugInstance) in line 93
      protection public
      15 lines of code
      1 parameters
      6 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function compare(String,String) defined in edu::umd::cs::findbugs::gui2::SortableStringComparator
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function setActive(boolean) in line 76
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function toString() in line 110
      protection public
      11 lines of code
      0 parameters
      5 conditional paths
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function toString() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function formatValue(String) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function writeXML(XMLOutput,boolean) in line 146
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function FilterMatcher(SortableValue) in line 46
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function FilterMatcher(Sortables,String,FilterWhere) in line 61
      protection public
      7 lines of code
      3 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable mode defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function FilterMatcher(Sortables,String) in line 69
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable filterBy defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable value defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   variable active in line 45
   variable filterBy in line 42
   variable mode in line 44
   variable serialVersionUID in line 40
   variable value in line 43
module edu::umd::cs::findbugs::gui2::FilterMatcher::FilterWhere
   variable FILTER_ALL_BUT in line 39
      protection public
   variable FILTER_AT_OR_AFTER in line 39
      protection public
   variable FILTER_AT_OR_BEFORE in line 39
      protection public
   variable FILTER_EXACTLY in line 39
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FindBugsAnalysisFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsAnalysisFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 30
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 38
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FindBugsFBAFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFBAFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FindBugsFBAFileFilter() in line 30
      1 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FindBugsFBPFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFBPFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 32
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function getDescription() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function FindBugsFBPFileFilter() in line 30
      1 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FindBugsFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   inherits from javax::swing::filechooser::FileFilter
   abstract class
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FindBugsLayoutManager.java
module edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 32
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 34
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function makeCommentsVisible() in line 39
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function makeSourceVisible() in line 44
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function saveState() in line 49
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function setSourceTitle(final String) in line 51
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FindBugsLayoutManagerFactory.java
module edu::umd::cs::findbugs::gui2::FindBugsLayoutManagerFactory
   function getInstance(MainFrame) in line 33
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
   function FindBugsLayoutManagerFactory(String) in line 30
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/FindBugsProjectFileFilter.java
module edu::umd::cs::findbugs::gui2::FindBugsProjectFileFilter
   inherits from edu::umd::cs::findbugs::gui2::FindBugsFileFilter
   function accept(File) in line 32
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function getDescription() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   variable INSTANCE in line 28
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/GUISaveState.java
module edu::umd::cs::findbugs::gui2::GUISaveState
   function addRecentFile(File) in line 190
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function fileNotFound(File) in line 207
      protection public
      10 lines of code
      1 parameters
      2 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function fileReused(File) in line 174
      protection public
      11 lines of code
      1 parameters
      2 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function generateSorterKeys(int) in line 139
      9 lines of code
      1 parameters
      3 conditional paths
      uses variable useDefault defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterTable defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DEFAULT_COLUMN_HEADERS defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getDockingLayout() in line 129
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getFontSize() in line 405
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getFrameBounds() in line 391
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getInstance() in line 164
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function GUISaveState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getPreviousComments() in line 377
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getRecentFiles() in line 198
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitMain() in line 419
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitSummary() in line 433
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitTop() in line 447
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getSplitTreeComments() in line 461
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getStarterDirectoryForLoadBugs() in line 222
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getTabSize() in line 121
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function loadInstance() in line 234
      protection public
      74 lines of code
      0 parameters
      17 conditional paths
      uses function GUISaveState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable TAB_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FONT_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable STARTERDIRECTORY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PREVCOMMENTSSIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable COMMENTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable MAXNUMRECENTPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable NUMPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable RECENTPROJECTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SORTERTABLELENGTH defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function generateSorterKeys(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable useDefault defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterTable defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DOCKINGLAYOUT defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FRAME_BOUNDS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_MAIN defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_SUMMARY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TOP defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TREE_COMMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable instance defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function save() in line 309
      protection public
      53 lines of code
      0 parameters
      7 conditional paths
      uses variable TAB_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FONT_SIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable STARTERDIRECTORY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable starterDirectoryForLoadBugs defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getColumnCount() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable SORTERTABLELENGTH defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function generateSorterKeys(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable PREVCOMMENTSSIZE defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable COMMENTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable MAXNUMRECENTPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable NUMPROJECTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable RECENTPROJECTKEYS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable DOCKINGLAYOUT defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable FRAME_BOUNDS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_MAIN defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_SUMMARY defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TOP defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable SPLIT_TREE_COMMENTS defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable instance defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function GUISaveState() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setDockingLayout(byte[]) in line 134
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable dockingLayout defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setFontSize(float) in line 412
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable fontSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setFrameBounds(Rectangle) in line 398
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable frameBounds defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setPreviousComments(LinkedList< String >) in line 384
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitMain(int) in line 426
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitMain defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitSummary(int) in line 440
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitSummary defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitTop(int) in line 454
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitTop defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSplitTreeComments(int) in line 468
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable splitTreeComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setStarterDirectoryForLoadBugs(File) in line 229
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setTabSize(int) in line 125
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable tabSize defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function GUISaveState() in line 157
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable recentFiles defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable previousComments defined in edu::umd::cs::findbugs::gui2::GUISaveState
   variable COMMENTKEYS in line 82
   variable DEFAULT_COLUMN_HEADERS in line 68
   variable DOCKINGLAYOUT in line 63
   variable dockingLayout in line 113
   variable FONT_SIZE in line 118
   variable fontSize in line 119
   variable FRAME_BOUNDS in line 64
   variable frameBounds in line 114
   variable instance in line 58
   variable MAXNUMPREVCOMMENTS in line 81
   variable MAXNUMRECENTANALYSES in line 67
   variable MAXNUMRECENTPROJECTS in line 66
   variable NUMANALYSES in line 91
   variable NUMPROJECTS in line 90
   variable PREFERENCESDIRECTORY in line 62
   variable PREVCOMMENTSSIZE in line 61
   variable previousComments in line 108
   variable RECENTANALYSISKEYS in line 72
   variable recentFiles in line 111
   variable RECENTPROJECTKEYS in line 71
   variable SORTERTABLELENGTH in line 60
   variable SPLIT_MAIN in line 94
   variable SPLIT_SUMMARY in line 97
   variable SPLIT_TOP in line 96
   variable SPLIT_TREE_COMMENTS in line 95
   variable splitMain in line 99
   variable splitSummary in line 102
   variable splitTop in line 101
   variable splitTreeComments in line 100
   variable STARTERDIRECTORY in line 92
   variable starterDirectoryForLoadBugs in line 104
   variable starterTable in line 110
   variable TAB_SIZE in line 116
   variable tabSize in line 117
   variable useDefault in line 109
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/HashList.java
module edu::umd::cs::findbugs::gui2::HashList
   inherits from java::util::ArrayList
   function add(E) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
   function add(int,E) in line 61
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function addAll(Collection<?extends E >) in line 68
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function addAll(int,Collection<?extends E >) in line 76
      protection public
      10 lines of code
      2 parameters
      1 conditional paths
   function addToMap(E,int) in line 201
      18 lines of code
      2 parameters
      1 conditional paths
   function clear() in line 88
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function contains(Object) in line 95
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function containsAll(Collection<?>) in line 101
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function indexOf(Object) in line 110
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function lastIndexOf(Object) in line 122
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function listIterator() in line 239
      protection public
      81 lines of code
      0 parameters
      1 conditional paths
   function remove(int) in line 132
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function remove(Object) in line 140
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function removeAll(Collection<?>) in line 152
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   function removeFromMap(E,int) in line 220
      17 lines of code
      2 parameters
      1 conditional paths
   function removeRange(int,int) in line 178
      4 lines of code
      2 parameters
      1 conditional paths
   function retainAll(Collection<?>) in line 161
      protection public
      15 lines of code
      1 parameters
      1 conditional paths
   function set(int,E) in line 184
      protection public
      16 lines of code
      2 parameters
      1 conditional paths
   function HashList() in line 44
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function HashList(Collection<?extends E >) in line 48
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable map in line 42
   variable serialVersionUID in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/HelpDialog.java
module edu::umd::cs::findbugs::gui2::HelpDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/MainFrame.java
module edu::umd::cs::findbugs::gui2::MainFrame
   inherits from edu::umd::cs::findbugs::gui2::FBFrame
   inherits from edu::umd::cs::findbugs::gui::LogSync
   function addFileToRecent(File,SaveType) in line 2382
      8 lines of code
      2 parameters
      2 conditional paths
      uses function getRecentFiles() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function addRecentFile(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentMenuCache defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addRecentFile(final File) defined in edu::umd::cs::findbugs::gui2::RecentMenu
   function addNavItem(final ActionMap,JMenu,String,String,String,int) in line 826
      6 lines of code
      6 parameters
      3 conditional paths
   function addNotify() in line 1968
      protection public
      20 lines of code
      0 parameters
      3 conditional paths
   function bugSummaryComponent(Object,BugInstance) in line 1616
      68 lines of code
      2 parameters
      15 conditional paths
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSourceLines() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function toString() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
   function changeTitle() in line 483
      protection public
      8 lines of code
      0 parameters
      3 conditional paths
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
   function clearSummaryTab() in line 1562
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getSplitSummary() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function convertFile(File,SaveType) in line 1134
      11 lines of code
      2 parameters
      3 conditional paths
   function convertFilterToType(FileFilter) in line 1108
      6 lines of code
      1 parameters
      2 conditional paths
   function createBranchPopUpMenu() in line 533
      72 lines of code
      0 parameters
      4 conditional paths
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getMatcher() defined in edu::umd::cs::findbugs::gui2::BugAspects
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getIndexOfChild(Object,Object) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
   function createBugPopupMenu() in line 496
      31 lines of code
      0 parameters
      2 conditional paths
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
   function createMainMenuBar() in line 610
      212 lines of code
      0 parameters
      9 conditional paths
      uses function createWindowMenu() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function makeSourceVisible() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function showLine(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getUserDesignationKeys() defined in edu::umd::cs::findbugs::I18N
      uses function getUserDesignation(String) defined in edu::umd::cs::findbugs::I18N
   function error(String) in line 2168
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function fileAlreadyExists(File,SaveType) in line 1120
      10 lines of code
      2 parameters
      2 conditional paths
   function getBugTreeModel() in line 1994
      protection public
      3 lines of code
      0 parameters
      4 conditional paths
   function getProject() in line 2046
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getProjectChanged() in line 2108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceColor() in line 2161
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFinder() in line 2053
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getTree() in line 1989
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function initializeGUI() in line 257
      3 lines of code
      0 parameters
      1 conditional paths
   function loadAnalysisFromInputStream(final InputStream) in line 2241
      21 lines of code
      1 parameters
      3 conditional paths
   function loadProjectFromFile(final File) in line 2266
      21 lines of code
      1 parameters
      3 conditional paths
   function mergeAnalysis() in line 2308
      9 lines of code
      0 parameters
      1 conditional paths
   function newProjectMenu() in line 2391
      6 lines of code
      0 parameters
      2 conditional paths
      uses function saveComments() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function updateDesignationComboBox() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function newTree(final JTree,final BugTreeModel) in line 1306
      protection public
      30 lines of code
      2 parameters
      1 conditional paths
      uses function addColumnModelListener(TableColumnModelListener) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function setSorting(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function open() in line 871
      86 lines of code
      0 parameters
      17 conditional paths
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function openAnalysis(File,SaveType) in line 2205
      15 lines of code
      2 parameters
      3 conditional paths
   function openFBAFile(File) in line 964
      3 lines of code
      1 parameters
      1 conditional paths
   function openFBPFile(File) in line 972
      14 lines of code
      1 parameters
      2 conditional paths
   function openProject(final File) in line 2322
      48 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setRebuilding(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
   function prepareForFileLoad(File,SaveType) in line 2221
      15 lines of code
      2 parameters
      1 conditional paths
   function redoAnalysis() in line 2290
      15 lines of code
      0 parameters
      1 conditional paths
   function save() in line 1146
      27 lines of code
      0 parameters
      6 conditional paths
   function saveAnalysis(File) in line 2191
      7 lines of code
      1 parameters
      1 conditional paths
   function saveAs() in line 986
      118 lines of code
      0 parameters
      19 conditional paths
      uses function showSaveDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function saveComments(BugLeafNode,BugAspects) in line 2148
      4 lines of code
      2 parameters
      1 conditional paths
      uses function saveComments() defined in edu::umd::cs::findbugs::gui2::CommentsArea
   function saveFBAFile(File) in line 1178
      3 lines of code
      1 parameters
      1 conditional paths
   function saveFBPFile(File) in line 1185
      13 lines of code
      1 parameters
      2 conditional paths
      uses function writeXML(File) defined in edu::umd::cs::findbugs::Project
   function saveProject(File) in line 2116
      27 lines of code
      1 parameters
      3 conditional paths
      uses function save(OutputStream) defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function setProject(Project) in line 2049
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setProjectChanged(boolean) in line 2092
      protection public
      15 lines of code
      1 parameters
      3 conditional paths
   function setRebuilding(boolean) in line 2064
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
   function setSaveMenu() in line 2085
      3 lines of code
      0 parameters
      1 conditional paths
   function setSorting(boolean) in line 2080
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSourceFinder(SourceFinder) in line 2058
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function setStyleSheets() in line 1839
      8 lines of code
      0 parameters
      6 conditional paths
      uses function find(String) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function findNext(String) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function findPrevious(String) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function foundItem(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function setSourceTitle(final String) defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function setupTreeListeners() in line 1337
      70 lines of code
      0 parameters
      10 conditional paths
      uses function setUserCommentInputEnable(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function displaySource(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
   function setUserCommentInputEnable(boolean) in line 1448
      4 lines of code
      1 parameters
      3 conditional paths
   function showCard(final String,final Cursor) in line 1211
      14 lines of code
      2 parameters
      6 conditional paths
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function showTreeCard() in line 1208
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function showWaitCard() in line 1204
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function sourceCodeExist(SourceLineAnnotation) in line 1828
      10 lines of code
      1 parameters
      2 conditional paths
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
   function updateSummaryTab(BugLeafNode) in line 1486
      75 lines of code
      1 parameters
      14 conditional paths
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
      uses function getPrimarySourceLineAnnotation() defined in edu::umd::cs::findbugs::BugInstance
      uses function add(BugAnnotation) defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryMethod() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryField() defined in edu::umd::cs::findbugs::BugInstance
      uses function getPrimaryClass() defined in edu::umd::cs::findbugs::BugInstance
      uses function getClassName() defined in edu::umd::cs::findbugs::PackageMemberAnnotation
      uses function getMessageWithoutPrefix() defined in edu::umd::cs::findbugs::BugInstance
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function getBugPattern() defined in edu::umd::cs::findbugs::BugInstance
      uses function getDetailHTML() defined in edu::umd::cs::findbugs::BugPattern
   function writeToLog(String) in line 2177
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
   function MainFrame(FindBugsLayoutManagerFactory) in line 260
      7 lines of code
      1 parameters
      26 conditional paths
      uses function getInstance(MainFrame) defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManagerFactory
      uses function saveComments() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function setPreviousComments(LinkedList< String >) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function saveState() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function setFrameBounds(Rectangle) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function save() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function fileNotFound(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function fileReused(File) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable recentMenuCache defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addRecentFile(final File) defined in edu::umd::cs::findbugs::gui2::RecentMenu
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function softAdd(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses function getOffListenerList() defined in edu::umd::cs::findbugs::gui2::BugTreeModel
      uses function size() defined in edu::umd::cs::findbugs::gui2::BugSet
      uses function sizeUnfiltered() defined in edu::umd::cs::findbugs::gui2::BugSet
   variable branchPopupMenu in line 217
   variable bugPopupMenu in line 216
   variable curProject in line 222
   variable DEBUG in line 186
      protection public
   variable findBugsLayoutManagerFactory in line 204
   variable findButton in line 182
   variable findNextButton in line 183
   variable findPreviousButton in line 184
   variable guiLayout in line 205
   variable htmlEditorKit in line 200
   variable instance in line 218
   variable lock in line 225
   variable logger in line 231
   variable newProject in line 226
   variable osxAdapter in line 228
   variable osxPrefsEnableMethod in line 229
   variable preferencesMenuItem in line 221
   variable recentMenu in line 220
   variable recentMenuCache in line 219
   variable reconfigMenuItem in line 212
   variable redoAnalysis in line 213
   variable saveFile in line 236
   variable saveType in line 234
   variable sorter in line 195
   variable sourceCodeScrollPane in line 192
   variable sourceSearchTextField in line 181
   variable statusBarLabel in line 197
   variable summaryHtmlArea in line 201
   variable summaryHtmlScrollPane in line 202
   variable summaryTopPanel in line 199
   variable tableheader in line 196
   variable treeScrollPane in line 223
   variable treeUI in line 166
module edu::umd::cs::findbugs::gui2::MainFrame::SaveReturn
   variable SAVE_ERROR in line 237
      protection public
   variable SAVE_IO_EXCEPTION in line 237
      protection public
   variable SAVE_SUCCESSFUL in line 237
      protection public
module edu::umd::cs::findbugs::gui2::MainFrame::InitializeGUI
   inherits from Runnable
   function run() in line 1689
      protection public
      96 lines of code
      0 parameters
      9 conditional paths
      uses function initialize() defined in edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
      uses function getPreviousComments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFrameBounds() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsProjectFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsAnalysisFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsFBPFileFilter
      uses variable INSTANCE defined in edu::umd::cs::findbugs::gui2::FindBugsFBAFileFilter
      uses function resized() defined in edu::umd::cs::findbugs::gui2::CommentsArea
      uses function hasFocus() defined in edu::umd::cs::findbugs::gui2::CommentsArea
module edu::umd::cs::findbugs::gui2::MainFrame::BugSummaryMouseListener
   inherits from java::awt::event::MouseAdapter
   function mouseClicked(MouseEvent) in line 1808
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function displaySource(BugInstance,SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function mouseEntered(MouseEvent) in line 1812
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function mouseExited(MouseEvent) in line 1817
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable bugInstance in line 1797
   variable label in line 1798
   variable note in line 1799
module edu::umd::cs::findbugs::gui2::MainFrame::CutAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 2004
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function CutAction() in line 2000
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::CopyAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 2020
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function CopyAction() in line 2016
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::MainFrame::PasteAction
   inherits from javax::swing::text::TextAction
   function actionPerformed(ActionEvent) in line 2036
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function PasteAction() in line 2032
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/NewFilterFrame.java
module edu::umd::cs::findbugs::gui2::NewFilterFrame
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function close() in line 78
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 230
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function open() in line 66
      protection public
      12 lines of code
      0 parameters
      2 conditional paths
   function NewFilterFrame() in line 84
      145 lines of code
      0 parameters
      8 conditional paths
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getAllSorted() defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function formatValue(String) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function addFilters(FilterMatcher[]) defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   variable instance in line 65
   variable list in line 63
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/NewFilterFromBug.java
module edu::umd::cs::findbugs::gui2::NewFilterFromBug
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function NewFilterFromBug(final BugInstance) in line 51
      protection public
      57 lines of code
      1 parameters
      7 conditional paths
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   variable map in line 48
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/NewProjectWizard.java
module edu::umd::cs::findbugs::gui2::NewProjectWizard
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function addNotify() in line 415
      protection public
      16 lines of code
      0 parameters
      3 conditional paths
   function createFilePanel(final String,final JList,final DefaultListModel,final int,final FileFilter) in line 296
      83 lines of code
      5 parameters
      8 conditional paths
      uses function showOpenDialog(Component) defined in edu::umd::cs::findbugs::gui2::FBFileChooser
   function createTextFieldPanel(String,JTextField) in line 284
      8 lines of code
      2 parameters
      1 conditional paths
   function loadAllPanels(final JPanel) in line 397
      16 lines of code
      1 parameters
      3 conditional paths
   function NewProjectWizard() in line 99
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
   function NewProjectWizard(Project) in line 108
      protection public
      175 lines of code
      1 parameters
      30 conditional paths
      uses function getFileCount() defined in edu::umd::cs::findbugs::Project
      uses function removeFile(int) defined in edu::umd::cs::findbugs::Project
      uses function getNumAuxClasspathEntries() defined in edu::umd::cs::findbugs::Project
      uses function removeAuxClasspathEntry(int) defined in edu::umd::cs::findbugs::Project
      uses function getNumSourceDirs() defined in edu::umd::cs::findbugs::Project
      uses function removeSourceDir(int) defined in edu::umd::cs::findbugs::Project
      uses function addFile(String) defined in edu::umd::cs::findbugs::Project
      uses function addAuxClasspathEntry(String) defined in edu::umd::cs::findbugs::Project
      uses function addSourceDir(String) defined in edu::umd::cs::findbugs::Project
      uses function setProjectName(String) defined in edu::umd::cs::findbugs::Project
      uses function setProject(Project) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceDirList() defined in edu::umd::cs::findbugs::Project
      uses function setSourceFinder(SourceFinder) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSourceFinder() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setSourceBaseList(List< String >) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProjectName() defined in edu::umd::cs::findbugs::Project
      uses variable UNNAMED_PROJECT defined in edu::umd::cs::findbugs::Project
      uses function getFileList() defined in edu::umd::cs::findbugs::Project
      uses function getAuxClasspathEntryList() defined in edu::umd::cs::findbugs::Project
   variable analyzeList in line 83
   variable analyzeModel in line 84
   variable auxList in line 87
   variable auxModel in line 88
   variable border in line 61
   variable cancelButton in line 94
   variable chooser in line 65
   variable currentPanel in line 97
   variable directoryOrArchive in line 66
   variable finishButton in line 93
   variable project in line 63
   variable projectChanged in line 64
   variable projectName in line 86
   variable sourceList in line 90
   variable sourceModel in line 91
   variable wizardComponents in line 96
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/OriginalGUI2ProjectFile.java
module edu::umd::cs::findbugs::gui2::OriginalGUI2ProjectFile
   function OriginalGUI2ProjectFile() in line 28
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/PreferencesFrame.java
module edu::umd::cs::findbugs::gui2::PreferencesFrame
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function changeFontSize() in line 280
      24 lines of code
      0 parameters
      4 conditional paths
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function changeTabSize() in line 254
      25 lines of code
      0 parameters
      4 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setTabSize(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function createFilterPane() in line 315
      84 lines of code
      0 parameters
      6 conditional paths
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function isEnabled(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses function removeChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function isEmpty() defined in edu::umd::cs::findbugs::filter::Filter
      uses function clear() defined in edu::umd::cs::findbugs::filter::Filter
   function createPropertiesPane() in line 197
      56 lines of code
      0 parameters
      1 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function getInstance() in line 119
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
   function resetPropertiesPane() in line 305
      5 lines of code
      0 parameters
      1 conditional paths
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function PreferencesFrame() in line 128
      47 lines of code
      0 parameters
      2 conditional paths
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   variable addButton in line 105
   variable filterCheckBoxList in line 104
   variable FILTERS_TAB in line 98
   variable FONT_MAX in line 117
   variable FONT_MIN in line 116
   variable fontTextField in line 113
   variable instance in line 103
   variable PROPERTIES_TAB in line 97
   variable SUPPRESSIONS_TAB in line 99
   variable TAB_MAX in line 115
   variable TAB_MIN in line 114
   variable tabTextField in line 112
module edu::umd::cs::findbugs::gui2::PreferencesFrame::MatchBox
   inherits from javax::swing::JCheckBox
module edu::umd::cs::findbugs::gui2::PreferencesFrame::UneditableTableModel
   inherits from javax::swing::table::DefaultTableModel
   function isCellEditable(int,int) in line 441
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   function UneditableTableModel(Object,String[]) in line 437
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
module edu::umd::cs::findbugs::gui2::PreferencesFrame::FilterCheckBoxListener
   inherits from java::awt::event::ItemListener
   function itemStateChanged(ItemEvent) in line 456
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses function setActive(boolean) defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function setProjectChanged(boolean) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function setEnabled(boolean) defined in edu::umd::cs::findbugs::gui2::CheckBoxList
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/ProjectSettings.java
module edu::umd::cs::findbugs::gui2::ProjectSettings
   inherits from java::io::Serializable
   function addFilter(FilterMatcher) in line 132
      protection public
      56 lines of code
      1 parameters
      9 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
      uses function getFilters() defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function removeBranch(ArrayList< String >) defined in edu::umd::cs::findbugs::gui2::BugTreeModel
   function addFilters(FilterMatcher[]) in line 189
      protection public
      17 lines of code
      1 parameters
      3 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable FILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function getInstance() in line 66
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function getMaxSizeOfPreviousComments() in line 224
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable maxSizeOfPreviousComments defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function loadInstance(InputStream) in line 89
      protection public
      20 lines of code
      1 parameters
      4 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function newInstance() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function newInstance() in line 55
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses function ProjectSettings() defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable DEAD_BUG_MATCHER defined in edu::umd::cs::findbugs::filter::LastVersionMatcher
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
      uses function addChild(Matcher) defined in edu::umd::cs::findbugs::filter::Filter
   function removeFilter(FilterMatcher) in line 207
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable UNFILTERING defined in edu::umd::cs::findbugs::gui2::FilterListener::Action
   function save(OutputStream) in line 110
      protection public
      12 lines of code
      1 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getProject() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getSuppressionFilter() defined in edu::umd::cs::findbugs::Project
   function setMaxSizeOfPreviousComments(int) in line 232
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable maxSizeOfPreviousComments defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   function ProjectSettings() in line 49
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable allMatchers defined in edu::umd::cs::findbugs::gui2::ProjectSettings
      uses variable filters defined in edu::umd::cs::findbugs::gui2::ProjectSettings
   variable allMatchers in line 82
   variable filters in line 77
   variable instance in line 54
   variable maxSizeOfPreviousComments in line 87
   variable serialVersionUID in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/PropertiesDialog.java
module edu::umd::cs::findbugs::gui2::PropertiesDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function getInstance() in line 48
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function PropertiesDialog() defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
   function PropertiesDialog() in line 55
      62 lines of code
      0 parameters
      5 conditional paths
      uses variable tabTextField defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses variable fontTextField defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
      uses function getFontSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setTabSize(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function clearCache() defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function setFontSize(float) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getInstance() defined in edu::umd::cs::findbugs::gui2::PropertiesDialog
   variable fontTextField in line 46
   variable instance in line 44
   variable tabTextField in line 45
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/RecentMenu.java
module edu::umd::cs::findbugs::gui2::RecentMenu
   function addRecentFile(final File) in line 104
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function add(T) defined in edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
      uses function makeRecentMenu() defined in edu::umd::cs::findbugs::gui2::RecentMenu
   function makeRecentMenu() in line 83
      protection public
      16 lines of code
      0 parameters
      4 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function RecentMenu(JMenu) in line 70
      protection public
      12 lines of code
      1 parameters
      2 conditional paths
      uses function getRecentFiles() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function add(T) defined in edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
      uses function makeRecentMenu() defined in edu::umd::cs::findbugs::gui2::RecentMenu
module edu::umd::cs::findbugs::gui2::RecentMenu::LimitedArrayList
   inherits from java::util::ArrayList
   function add(T) in line 48
      protection public
      17 lines of code
      1 parameters
      1 conditional paths
   function LimitedArrayList() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable MAX_ENTRIES in line 40
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SaveType.java
module edu::umd::cs::findbugs::gui2::SaveType
   function forFile(File) in line 63
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   function getFileExtension() in line 49
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function getFilter() in line 27
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function isValid(File) in line 41
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
   variable FBP_FILE in line 26
      protection public
   variable NOT_KNOWN in line 26
      protection public
   variable PROJECT in line 26
      protection public
   variable XML_ANALYSIS in line 26
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/Sortables.java
module edu::umd::cs::findbugs::gui2::Sortables
   inherits from java::util::Comparator
   function compare(SortableValue,SortableValue) in line 336
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
   function formatValue(String) in line 331
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getAll() in line 322
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAll(BugSet) in line 326
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function getAllSorted() in line 342
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function getAllSorted(BugSet) in line 347
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
   function getBugLeafNodeComparator() in line 359
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function compare(SortableValue,SortableValue) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getFrom(BugInstance) defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBug() defined in edu::umd::cs::findbugs::gui2::BugLeafNode
   function getFrom(BugInstance) in line 321
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function getSortableByPrettyName(String) in line 371
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
   function toString() in line 316
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function Sortables(String) in line 310
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable BUGCODE in line 264
      protection public
   variable CATEGORY in line 216
      protection public
   variable CLASS in line 181
      protection public
   variable DESIGNATION in line 242
      protection public
   variable DIVIDER in line 306
      protection public
   variable FIRSTVERSION in line 81
      protection public
   variable LASTVERSION in line 126
      protection public
   variable PACKAGE in line 197
      protection public
   variable prettyName in line 308
      protection public
   variable PRIORITY in line 157
      protection public
   variable TYPE in line 280
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SortableStringComparator.java
module edu::umd::cs::findbugs::gui2::SortableStringComparator
   inherits from java::util::Comparator
   function compare(String,String) in line 36
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function compare(SortableValue,SortableValue) defined in edu::umd::cs::findbugs::gui2::Sortables
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SorterDialog.java
module edu::umd::cs::findbugs::gui2::SorterDialog
   inherits from edu::umd::cs::findbugs::gui2::FBDialog
   function createSorterPane() in line 93
      64 lines of code
      0 parameters
      4 conditional paths
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses variable checkBoxSortList defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function setSorterCheckBoxes() defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses variable chBList defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function createFrom(SorterTableColumnModel) defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable instance defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function getInstance() in line 60
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable instance defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function SorterDialog() defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function setSorterCheckBoxes() in line 177
      9 lines of code
      0 parameters
      3 conditional paths
      uses variable checkBoxSortList defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function setVisible(boolean) in line 68
      protection public
      9 lines of code
      1 parameters
      2 conditional paths
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses function setSorterCheckBoxes() defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function SorterDialog() in line 78
      9 lines of code
      0 parameters
      1 conditional paths
      uses function createSorterPane() defined in edu::umd::cs::findbugs::gui2::SorterDialog
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
   variable chBList in line 56
   variable checkBoxSortList in line 55
   variable instance in line 58
   variable preview in line 54
module edu::umd::cs::findbugs::gui2::SorterDialog::CheckBoxChangedListener
   inherits from javax::swing::event::ChangeListener
   function stateChanged(ChangeEvent) in line 166
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable preview defined in edu::umd::cs::findbugs::gui2::SorterDialog
   function CheckBoxChangedListener(int) in line 162
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SorterTableColumnModel.java
module edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   inherits from javax::swing::table::TableColumnModel
   function addColumn(TableColumn) in line 163
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function addColumnModelListener(TableColumnModelListener) in line 337
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function columnSelectionChanged(ListSelectionEvent) in line 345
      protection public
      3 lines of code
      1 parameters
      3 conditional paths
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
   function createFrom(SorterTableColumnModel) in line 91
      protection public
      40 lines of code
      1 parameters
      9 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable showOrder defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function freezeOrder() in line 383
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumn(int) in line 279
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnCount() in line 257
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnIndex(Object) in line 265
      protection public
      13 lines of code
      1 parameters
      4 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnIndexAtX(int) in line 287
      protection public
      10 lines of code
      1 parameters
      3 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnMargin() in line 283
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getColumns() in line 261
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getColumnSelectionAllowed() in line 311
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSelectedColumnCount() in line 322
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getSelectedColumns() in line 315
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getSelectionModel() in line 333
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function getTotalColumnWidth() in line 298
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function moveColumn(int,int) in line 232
      protection public
      20 lines of code
      2 parameters
      2 conditional paths
      uses function saveComments(BugLeafNode,BugAspects) defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function orderUpdate() in line 370
      12 lines of code
      0 parameters
      3 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable order defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function removeColumn(TableColumn) in line 168
      protection public
      4 lines of code
      1 parameters
      10 conditional paths
      uses variable showOrder defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function removeColumnModelListener(TableColumnModelListener) in line 341
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable watchers defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function setColumnMargin(int) in line 253
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setColumnSelectionAllowed(boolean) in line 307
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setSelectionModel(ListSelectionModel) in line 329
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function thawOrder() in line 388
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable frozen defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function getTree() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function SorterTableColumnModel(Sortables[]) in line 65
      protection public
      25 lines of code
      1 parameters
      4 conditional paths
      uses variable showOrder defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable columnList defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses variable dlsm defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
      uses function orderUpdate() defined in edu::umd::cs::findbugs::gui2::SorterTableColumnModel
   function SorterTableColumnModel(ArrayList< Sortables >) in line 132
      protection public
      4 lines of code
      1 parameters
      3 conditional paths
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
   variable columnList in line 60
   variable dlsm in line 61
   variable frozen in line 63
   variable order in line 58
   variable showOrder in line 59
   variable watchers in line 62
module edu::umd::cs::findbugs::gui2::SorterTableColumnModel::FBTableCellRenderer
   inherits from javax::swing::table::TableCellRenderer
   function getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int) in line 142
      protection public
      19 lines of code
      6 parameters
      1 conditional paths
   variable defaultRenderer in line 140
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SourceCodeDisplay.java
module edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   inherits from Runnable
   function charToLineNum(int) in line 252
      14 lines of code
      1 parameters
      6 conditional paths
      uses function getLineOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function clearCache() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable map defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function displaySource(BugInstance,SourceLineAnnotation) in line 73
      protection public
      7 lines of code
      2 parameters
      1 conditional paths
      uses variable bugToDisplay defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable sourceToHighlight defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable pendingUpdate defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function find(String) in line 267
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function findNext(String) in line 276
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function findPrevious(String) in line 285
      protection public
      8 lines of code
      1 parameters
      1 conditional paths
      uses function search(JavaSourceDocument,String,int,Boolean) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable currentChar defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function charToLineNum(int) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
   function foundItem(int) in line 206
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses variable myDocument defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function updateFoundLineNum(Integer) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function setHighlight(int,int,Color) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses variable FOUND_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function scrollLineToVisible(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function getDocument(SourceLineAnnotation) in line 86
      26 lines of code
      1 parameters
      5 conditional paths
      uses function findSourceFile(SourceLineAnnotation) defined in edu::umd::cs::findbugs::ba::SourceFinder
      uses function getFullFileName() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses variable map defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getInputStream() defined in edu::umd::cs::findbugs::ba::SourceFile
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses variable UNKNOWNSOURCE defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function highlight(JavaSourceDocument,SourceLineAnnotation,Color) in line 198
      7 lines of code
      3 parameters
      3 conditional paths
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getTitle() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function setHighlight(int,int,Color) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
   function run() in line 113
      protection public
      80 lines of code
      0 parameters
      16 conditional paths
      uses variable pendingUpdate defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable bugToDisplay defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable sourceToHighlight defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getDocument(SourceLineAnnotation) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getHighlightInformation() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function clear() defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function getDescription() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function annotationIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function highlight(JavaSourceDocument,SourceLineAnnotation,Color) defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable MAIN_HIGHLIGHT_MORE defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable ALTERNATIVE_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses variable MAIN_HIGHLIGHT defined in edu::umd::cs::findbugs::gui2::SourceCodeDisplay
      uses function getEditorKit() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getDocument() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getSourceFile() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getSimpleClassName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getPackageName() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function getEndLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function scrollLinesToVisible(int,int,Collection< Integer >) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function search(JavaSourceDocument,String,int,Boolean) in line 213
      38 lines of code
      4 parameters
      15 conditional paths
      uses function getDocument() defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function show(JTextPane,Document,SourceLineAnnotation) in line 294
      17 lines of code
      3 parameters
      2 conditional paths
      uses function getStartLine() defined in edu::umd::cs::findbugs::SourceLineAnnotation
      uses function scrollLineToVisible(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function showLine(int) in line 312
      protection public
      9 lines of code
      1 parameters
      1 conditional paths
      uses function scrollLineToVisible(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   variable ALTERNATIVE_HIGHLIGHT in line 50
   variable bugToDisplay in line 69
   variable currentChar in line 56
   variable FOUND_HIGHLIGHT in line 51
   variable MAIN_HIGHLIGHT in line 48
   variable MAIN_HIGHLIGHT_MORE in line 49
   variable map in line 58
   variable myDocument in line 55
      protection public
   variable pendingUpdate in line 67
   variable sourceToHighlight in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SplashFrame.java
module edu::umd::cs::findbugs::gui2::SplashFrame
   inherits from javax::swing::JWindow
   function main(String[]) in line 104
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function SplashFrame() defined in edu::umd::cs::findbugs::gui2::SplashFrame
      uses function setVisible(boolean) defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function setVisible(boolean) in line 110
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function SplashFrame() in line 58
      protection public
      45 lines of code
      0 parameters
      1 conditional paths
      uses function animate() defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   variable animator in line 56
module edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   inherits from javax::swing::JPanel
   function animate() in line 192
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   function imageToDraw() in line 202
      15 lines of code
      0 parameters
      4 conditional paths
      uses variable image defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable imageR defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2 defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2R defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   function paint(Graphics) in line 219
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
      uses function imageToDraw() defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
   function setPreferredSize(Dimension) in line 198
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function Viewer(Image,Image,Image,Image) in line 128
      protection public
      63 lines of code
      4 parameters
      8 conditional paths
      uses variable image defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2 defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable imageR defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable image2R defined in edu::umd::cs::findbugs::gui2::SplashFrame::Viewer
      uses variable animator defined in edu::umd::cs::findbugs::gui2::SplashFrame
   variable image in line 117
   variable image2 in line 118
   variable image2R in line 120
   variable imageR in line 119
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SplitLayout.java
module edu::umd::cs::findbugs::gui2::SplitLayout
   inherits from edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 61
      protection public
      30 lines of code
      0 parameters
      1 conditional paths
      uses function getSplitTreeComments() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getSplitTop() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function getSplitMain() defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function makeCommentsVisible() in line 95
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function makeSourceVisible() in line 102
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function saveState() in line 109
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function setSplitTreeComments(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitTop(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitSummary(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function setSplitMain(int) defined in edu::umd::cs::findbugs::gui2::GUISaveState
   function setSourceTitle(String) in line 119
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SplitLayout(MainFrame) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SpringUtilities.java
module edu::umd::cs::findbugs::gui2::SpringUtilities
   function getConstraintsForCell(int,int,Container,int) in line 121
      8 lines of code
      4 parameters
      1 conditional paths
   function makeCompactGrid(Container,int,int,int,int,int,int) in line 145
      protection public
      53 lines of code
      7 parameters
      9 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function getConstraintsForCell(int,int,Container,int) defined in edu::umd::cs::findbugs::gui2::SpringUtilities
   function makeGrid(Container,int,int,int,int,int,int) in line 42
      protection public
      77 lines of code
      7 parameters
      8 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function printSizes(Component) in line 20
      protection public
      7 lines of code
      1 parameters
      2 conditional paths
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/StackedFilterMatcher.java
module edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   inherits from edu::umd::cs::findbugs::gui2::FilterMatcher
   function equals(Object) in line 175
      protection public
      15 lines of code
      1 parameters
      2 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function StackedFilterMatcher(FilterMatcher...) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function getFilters() in line 142
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function hashCode() in line 192
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function hashCode() defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function main(String[]) in line 197
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function StackedFilterMatcher(FilterMatcher...) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function equals(Object) defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function match(BugInstance) in line 148
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function isActive() defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   function setActive(boolean) in line 64
      protection public
      77 lines of code
      1 parameters
      15 conditional paths
      uses variable active defined in edu::umd::cs::findbugs::gui2::FilterMatcher
      uses function getFilters() defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses variable DIVIDER defined in edu::umd::cs::findbugs::gui2::Sortables
      uses function getBugTreeModel() defined in edu::umd::cs::findbugs::gui2::MainFrame
   function toString() in line 161
      protection public
      12 lines of code
      0 parameters
      4 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
      uses function toString() defined in edu::umd::cs::findbugs::gui2::FilterMatcher
   function StackedFilterMatcher(FilterMatcher...) in line 54
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable filters defined in edu::umd::cs::findbugs::gui2::StackedFilterMatcher
   variable filters in line 40
   variable serialVersionUID in line 39
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/SwingThread.java
module edu::umd::cs::findbugs::gui2::SwingThread
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/gui2/TabbedLayout.java
module edu::umd::cs::findbugs::gui2::TabbedLayout
   inherits from edu::umd::cs::findbugs::gui2::FindBugsLayoutManager
   function createWindowMenu() in line 48
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function initialize() in line 55
      protection public
      19 lines of code
      0 parameters
      2 conditional paths
      uses variable mainTabs defined in edu::umd::cs::findbugs::gui2::TabbedLayout
   function makeCommentsVisible() in line 78
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable mainTabs defined in edu::umd::cs::findbugs::gui2::TabbedLayout
   function makeSourceVisible() in line 86
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable mainTabs defined in edu::umd::cs::findbugs::gui2::TabbedLayout
   function saveState() in line 94
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function setSourceTitle(String) in line 102
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable mainTabs defined in edu::umd::cs::findbugs::gui2::TabbedLayout
   function TabbedLayout(MainFrame) in line 41
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable mainTabs in line 37
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/DocumentCharacterIterator.java
module edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   inherits from java::text::CharacterIterator
   function clone() in line 58
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function current() in line 62
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable text defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function first() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getBeginIndex() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEndIndex() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getIndex() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable docPos defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function last() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function next() in line 89
      protection public
      13 lines of code
      0 parameters
      3 conditional paths
      uses variable docPos defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable doc defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable text defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
      uses variable segmentEnd defined in edu::umd::cs::findbugs::sourceViewer::DocumentCharacterIterator
   function previous() in line 103
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function setIndex(int) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   variable doc in line 34
   variable docPos in line 39
   variable segmentEnd in line 42
   variable text in line 36
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/HighlightInformation.java
module edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   function clear() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable foundLineNum defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   function getHighlight(Integer) in line 57
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function setHighlight(int,int,Color) in line 38
      protection public
      4 lines of code
      3 parameters
      2 conditional paths
   function setHighlight(Integer,Color) in line 43
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function unsetHighlight(Integer) in line 47
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function updateFoundLineNum(Integer) in line 51
      protection public
      5 lines of code
      1 parameters
      2 conditional paths
      uses variable foundLineNum defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
      uses function unsetHighlight(Integer) defined in edu::umd::cs::findbugs::sourceViewer::HighlightInformation
   variable foundLineNum in line 32
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/JavaScanner.java
module edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getEndPosition() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getKind() in line 88
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable kind defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getLength() in line 85
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function getStartPosition() in line 77
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function next() in line 91
      protection public
      79 lines of code
      0 parameters
      26 conditional paths
      uses variable startPosition defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable kind defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable EOF defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable buf defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable MAX_KEYWORD_LENGTH defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable NORMAL_TEXT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORDS defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORD defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable COMMENT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable JAVADOC defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable QUOTE defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   function JavaScanner(CharacterIterator) in line 73
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable iterator defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   variable buf in line 64
   variable COMMENT in line 27
      protection public
   variable EOF in line 32
      protection public
   variable iterator in line 67
   variable JAVADOC in line 28
      protection public
   variable KEYWORD in line 30
      protection public
   variable KEYWORDS in line 37
   variable kind in line 69
   variable MAX_KEYWORD_LENGTH in line 39
   variable NORMAL_TEXT in line 26
      protection public
   variable QUOTE in line 31
      protection public
   variable startPosition in line 71
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/JavaSourceDocument.java
module edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function getDocument() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getEditorKit() in line 104
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getHighlightInformation() in line 98
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getSourceFile() in line 112
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getTitle() in line 108
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable title defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
   function JavaSourceDocument(String,Reader,SourceFile) in line 116
      protection public
      66 lines of code
      3 parameters
      8 conditional paths
      uses variable title defined in edu::umd::cs::findbugs::sourceViewer::JavaSourceDocument
      uses function getTabSize() defined in edu::umd::cs::findbugs::gui2::GUISaveState
      uses function next() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable EOF defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getKind() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable COMMENT defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getStartPosition() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses function getLength() defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable KEYWORD defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable JAVADOC defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
      uses variable QUOTE defined in edu::umd::cs::findbugs::sourceViewer::JavaScanner
   variable serialVersionUID in line 182
   variable title in line 107
   variable UNKNOWNSOURCE in line 183
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/NavigableTextPane.java
module edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   inherits from javax::swing::JTextPane
   function getLineOffset(int) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses function lineToOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function lineToOffset(int) in line 62
      13 lines of code
      1 parameters
      3 conditional paths
   function lineToY(int) in line 81
      3 lines of code
      1 parameters
      1 conditional paths
      uses function offsetToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function lineToOffset(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function offsetToY(int) in line 76
      4 lines of code
      1 parameters
      1 conditional paths
   function parentHeight() in line 52
      5 lines of code
      0 parameters
      2 conditional paths
   function scrollLinesToVisible(int,int,Collection< Integer >) in line 120
      protection public
      44 lines of code
      3 parameters
      10 conditional paths
      uses function lineToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollYToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisible(int,int) in line 106
      protection public
      5 lines of code
      2 parameters
      2 conditional paths
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollLineToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisible(int) in line 113
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
      uses function parentHeight() defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollLineToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
   function scrollLineToVisibleImpl(int,int) in line 96
      8 lines of code
      2 parameters
      3 conditional paths
      uses function lineToY(int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses function scrollYToVisibleImpl(int,int) defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane
      uses variable DEBUG defined in edu::umd::cs::findbugs::gui2::MainFrame
   function scrollYToVisibleImpl(int,int) in line 85
      10 lines of code
      2 parameters
      1 conditional paths
   function NavigableTextPane() in line 43
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function NavigableTextPane(StyledDocument) in line 46
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
module edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(Integer,Integer) in line 175
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable origin defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   function DistanceComparator(int) in line 167
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable origin defined in edu::umd::cs::findbugs::sourceViewer::NavigableTextPane::DistanceComparator
   variable origin in line 166
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/NoWrapBoxView.java
module edu::umd::cs::findbugs::sourceViewer::NoWrapBoxView
   inherits from javax::swing::text::BoxView
   function getMinimumSpan(int) in line 37
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function layout(int,int) in line 32
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   function NoWrapBoxView(Element,int) in line 27
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/NumberedEditorKit.java
module edu::umd::cs::findbugs::sourceViewer::NumberedEditorKit
   inherits from javax::swing::text::StyledEditorKit
   function getViewFactory() in line 31
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function NumberedEditorKit(HighlightInformation) in line 27
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/NumberedParagraphView.java
module edu::umd::cs::findbugs::sourceViewer::NumberedParagraphView
   inherits from javax::swing::text::ParagraphView
   function getLineNumber() in line 102
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
   function getPreviousLineCount0() in line 87
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
   function paint(Graphics,Shape) in line 55
      protection public
      31 lines of code
      2 parameters
      1 conditional paths
   function NumberedParagraphView(Element,HighlightInformation) in line 44
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable NUMBERS_WIDTH in line 42
      protection public
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/edu/umd/cs/findbugs/sourceViewer/NumberedViewFactory.java
module edu::umd::cs::findbugs::sourceViewer::NumberedViewFactory
   inherits from javax::swing::text::ViewFactory
   function create(Element) in line 39
      protection public
      25 lines of code
      1 parameters
      1 conditional paths
   function NumberedViewFactory(HighlightInformation) in line 35
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/net/jcip/annotations/GuardedBy.java
module net::jcip::annotations::GuardedBy
   function value() in line 36
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/net/jcip/annotations/Immutable.java
module net::jcip::annotations::Immutable
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/net/jcip/annotations/NotThreadSafe.java
module net::jcip::annotations::NotThreadSafe
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/java5/net/jcip/annotations/ThreadSafe.java
module net::jcip::annotations::ThreadSafe
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/ch/SubtypesTest.java
module edu::umd::cs::findbugs::ba::ch::SubtypesTest
   inherits from junit::framework::TestCase
   function testExtractClassName() in line 29
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
   function testExtractClassNameBad() in line 36
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/generic/GenericSignatureParserTest.java
module edu::umd::cs::findbugs::ba::generic::GenericSignatureParserTest
   inherits from junit::framework::TestCase
   function test1() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/generic/GenericUtilitiesTest.java
module edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
   inherits from junit::framework::TestCase
   function testMapSignature() in line 45
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function testNestedSignature() in line 39
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable SAMPLE_SIGNATURE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
   function testNestedSignatureParser() in line 51
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable SAMPLE_SIGNATURE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilitiesTest
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function testUnmatchedRightAngleBracket() in line 35
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   variable SAMPLE_SIGNATURE in line 33
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/generic/TestGenericObjectType.java
module edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   inherits from junit::framework::TestCase
   function compareTypes(Type,Type) in line 97
      10 lines of code
      2 parameters
      2 conditional paths
   function initTest(String,String,String,GenericUtilities.TypeCategory,String,Type,List< ReferenceType >) in line 48
      protection public
      16 lines of code
      7 parameters
      1 conditional paths
   function processTest() in line 65
      protection public
      30 lines of code
      0 parameters
      6 conditional paths
      uses function toString(boolean) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getTypeCategory() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable PARAMETERS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses function hasParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getNumParameters() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function compareTypes(Type,Type) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses function getParameterAt(int) defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getVariable() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses function getExtension() defined in edu::umd::cs::findbugs::ba::generic::GenericObjectType
      uses variable TYPE_VARIABLE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD_EXTENDS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD_SUPER defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
   function testCreateTypes() in line 121
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,String,Type,List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses variable PARAMETERS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   function testParameterizedList() in line 108
      protection public
      12 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,String,Type,List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses variable PARAMETERS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
   function testTypeVariables() in line 137
      protection public
      57 lines of code
      0 parameters
      1 conditional paths
      uses function initTest(String,String,String,GenericUtilities.TypeCategory,String,Type,List< ReferenceType >) defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses variable TYPE_VARIABLE defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses function processTest() defined in edu::umd::cs::findbugs::ba::generic::TestGenericObjectType
      uses variable WILDCARD defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD_EXTENDS defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
      uses variable WILDCARD_SUPER defined in edu::umd::cs::findbugs::ba::generic::GenericUtilities::TypeCategory
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/generic/TestGenericSignatureParser.java
module edu::umd::cs::findbugs::ba::generic::TestGenericSignatureParser
   inherits from junit::framework::TestCase
   function processTest(String,String...) in line 31
      protection public
      10 lines of code
      2 parameters
      2 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::generic::GenericSignatureParser
   function testSignatures() in line 42
      protection public
      23 lines of code
      0 parameters
      1 conditional paths
      uses function processTest(String,String...) defined in edu::umd::cs::findbugs::ba::generic::TestGenericSignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/MethodHashTest.java
module edu::umd::cs::findbugs::ba::MethodHashTest
   inherits from junit::framework::TestCase
   function setUp() in line 45
      9 lines of code
      0 parameters
      1 conditional paths
   function testGreater() in line 70
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testHashToString() in line 55
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testLesser() in line 74
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testLonger() in line 82
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSame() in line 65
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
   function testShorter() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testStringToHash() in line 60
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/npe/IsNullValueTest.java
module edu::umd::cs::findbugs::ba::npe::IsNullValueTest
   inherits from junit::framework::TestCase
   function testMerge1() in line 6
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isDefinitelyNull() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge2() in line 13
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge3() in line 21
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge5() in line 35
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
   function testMerge6() in line 42
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function toExceptionValue() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isNullOnSomePath() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
      uses function isException() defined in edu::umd::cs::findbugs::ba::npe::IsNullValue
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/npe/NonNullParamPropertyTest.java
module edu::umd::cs::findbugs::ba::npe::NonNullParamPropertyTest
   inherits from junit::framework::TestCase
   function setUp() in line 14
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setNonNull(int,boolean) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testEmpty() in line 26
      protection public
      5 lines of code
      0 parameters
      2 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testExtremes() in line 44
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testIsEmpty() in line 32
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isEmpty() defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testNonEmpty() in line 38
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
   function testOutOfBounds() in line 50
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isNonNull(int) defined in edu::umd::cs::findbugs::ba::npe::ParameterNullnessProperty
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/npe/ReturnPathTypeTest.java
module edu::umd::cs::findbugs::ba::npe::ReturnPathTypeTest
   inherits from junit::framework::TestCase
   function setUp() in line 40
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testAbnormalMergeWithAbnormal() in line 104
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testAbnormalMergeWithNormal() in line 91
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testCannotReturnNormally() in line 64
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testCanReturnNormally() in line 59
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testMergeWithTop() in line 69
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testNormalMergeWIthAbnormal() in line 86
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testNormalMergeWithNormal() in line 96
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function setCanReturnNormally(boolean) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTop() in line 48
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function isValid() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function isTop() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTopMergeWithAbnormalReturn() in line 81
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
   function testTopMergeWithNormalReturn() in line 76
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function mergeWith(ReturnPathType) defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
      uses function canReturnNormally() defined in edu::umd::cs::findbugs::ba::npe::ReturnPathType
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/npe2/TestDefinitelyNullSet.java
module edu::umd::cs::findbugs::ba::npe2::TestDefinitelyNullSet
   inherits from junit::framework::TestCase
   function setUp() in line 35
      3 lines of code
      0 parameters
      1 conditional paths
   function testEmptyToString() in line 39
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe2::DefinitelyNullSet
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/npe2/TestNullnessValue.java
module edu::umd::cs::findbugs::ba::npe2::TestNullnessValue
   inherits from junit::framework::TestCase
   function setUp() in line 32
      3 lines of code
      0 parameters
      1 conditional paths
   function testDefinitelyNullToCheckedString() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toCheckedValue() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
   function testDefinitelyNullToString() in line 36
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::ba::npe2::NullnessValue
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ba/SignatureParserTest.java
module edu::umd::cs::findbugs::ba::SignatureParserTest
   inherits from junit::framework::TestCase
   function setUp() in line 13
      4 lines of code
      0 parameters
      1 conditional paths
   function testManyParams() in line 23
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
   function testNoParams() in line 18
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function parameterSignatureIterator() defined in edu::umd::cs::findbugs::ba::SignatureParser
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/BugInstanceTest.java
module edu::umd::cs::findbugs::BugInstanceTest
   inherits from junit::framework::TestCase
   function checkProperty(BugProperty,String,String) in line 121
      4 lines of code
      3 parameters
      1 conditional paths
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
      uses function getValue() defined in edu::umd::cs::findbugs::BugProperty
   function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) in line 109
      11 lines of code
      3 parameters
      3 conditional paths
      uses function checkProperty(BugProperty,String,String) defined in edu::umd::cs::findbugs::BugInstanceTest
   function get(Iterator< BugProperty >) in line 91
      8 lines of code
      1 parameters
      2 conditional paths
   function noMore(Iterator< BugProperty >) in line 100
      8 lines of code
      1 parameters
      2 conditional paths
   function removeThroughIterator(Iterator< BugProperty >,String) in line 126
      7 lines of code
      2 parameters
      3 conditional paths
      uses variable next defined in edu::umd::cs::findbugs::BugProperty
      uses function getName() defined in edu::umd::cs::findbugs::BugProperty
   function setUp() in line 18
      6 lines of code
      0 parameters
      1 conditional paths
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
   function testIterateTooFar() in line 44
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function noMore(Iterator< BugProperty >) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testMultipleRemove() in line 52
      protection public
      11 lines of code
      0 parameters
      2 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testPropertyIterator() in line 25
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testRemoveAll1() in line 82
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveAndAdd() in line 74
      protection public
      7 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function setProperty(String,String) defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveBeforeNext() in line 64
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
   function testRemoveThroughIterator1() in line 29
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveThroughIterator2() in line 34
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
   function testRemoveThroughIterator3() in line 39
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function removeThroughIterator(Iterator< BugProperty >,String) defined in edu::umd::cs::findbugs::BugInstanceTest
      uses function propertyIterator() defined in edu::umd::cs::findbugs::BugInstance
      uses function checkPropertyIterator(Iterator< BugProperty >,String[],String[]) defined in edu::umd::cs::findbugs::BugInstanceTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ClassScreenerTest.java
module edu::umd::cs::findbugs::ClassScreenerTest
   inherits from junit::framework::TestCase
   function makeFileName(String) in line 31
      3 lines of code
      1 parameters
      1 conditional paths
   function makeJarURL(String) in line 35
      3 lines of code
      1 parameters
      1 conditional paths
   function setUp() in line 56
      12 lines of code
      0 parameters
      1 conditional paths
      uses variable emptyScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularClassScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function addAllowedClass(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SOME_CLASS defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function addAllowedPackage(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable FOOBAR_PACKAGE defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener2 defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable FOOBAR_PACKAGE_WITH_TRAILING_DOT defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testEmptyClassScreener() in line 69
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable emptyScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testPackageScreener(IClassScreener) in line 94
      8 lines of code
      1 parameters
      1 conditional paths
      uses function matches(String) defined in edu::umd::cs::findbugs::IClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testParticularClassScreener() in line 79
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses variable particularClassScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses function matches(String) defined in edu::umd::cs::findbugs::ClassScreener
      uses variable SOME_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_FILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable SOME_OTHER_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable UNRELATED_THING_CLASS_JARFILENAME defined in edu::umd::cs::findbugs::ClassScreenerTest
   function testParticularPackageScreener() in line 89
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function testPackageScreener(IClassScreener) defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener defined in edu::umd::cs::findbugs::ClassScreenerTest
      uses variable particularPackageScreener2 defined in edu::umd::cs::findbugs::ClassScreenerTest
   variable emptyScreener in line 26
   variable FOOBAR_PACKAGE in line 39
   variable FOOBAR_PACKAGE_WITH_TRAILING_DOT in line 40
   variable FURRYLEMUR_PACKAGE in line 41
   variable particularClassScreener in line 27
   variable particularPackageScreener in line 28
   variable particularPackageScreener2 in line 29
   variable SOME_CLASS in line 43
   variable SOME_CLASS_FILENAME in line 47
   variable SOME_CLASS_JARFILENAME in line 51
   variable SOME_OTHER_CLASS in line 44
   variable SOME_OTHER_CLASS_FILENAME in line 48
   variable SOME_OTHER_CLASS_JARFILENAME in line 52
   variable UNRELATED_THING_CLASS in line 45
   variable UNRELATED_THING_CLASS_FILENAME in line 49
   variable UNRELATED_THING_CLASS_JARFILENAME in line 53
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/config/ProjectFilterSettingsTest.java
module edu::umd::cs::findbugs::config::ProjectFilterSettingsTest
   inherits from junit::framework::TestCase
   function setUp() in line 36
      20 lines of code
      0 parameters
      1 conditional paths
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testAddCategory() in line 70
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function addCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testDisplayFalseWarnings() in line 125
      protection public
      15 lines of code
      0 parameters
      1 conditional paths
      uses variable displayFalseWarnings defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function setDisplayFalseWarnings(boolean) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testEncodeDecode() in line 113
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function toEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function hiddenToEncodedString() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testEquals() in line 94
      protection public
      18 lines of code
      0 parameters
      1 conditional paths
      uses function equals(Object) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testPlainCategories() in line 61
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
      uses function getBugCategories() defined in edu::umd::cs::findbugs::I18N
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getActiveCategorySet() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testPlainPrio() in line 57
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable DEFAULT_PRIORITY defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testRemoveCategory() in line 76
      protection public
      5 lines of code
      0 parameters
      1 conditional paths
      uses function containsCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function removeCategory(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
   function testSetMinPriority() in line 82
      protection public
      11 lines of code
      0 parameters
      1 conditional paths
      uses function setMinPriority(String) defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriority() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses function getMinPriorityAsInt() defined in edu::umd::cs::findbugs::config::ProjectFilterSettings
      uses variable HIGH_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable NORMAL_PRIORITY defined in edu::umd::cs::findbugs::Priorities
      uses variable LOW_PRIORITY defined in edu::umd::cs::findbugs::Priorities
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/config/UserPreferencesTest.java
module edu::umd::cs::findbugs::config::UserPreferencesTest
   inherits from junit::framework::TestCase
   function setUp() in line 11
      3 lines of code
      0 parameters
      1 conditional paths
   function testClone() in line 15
      protection public
      6 lines of code
      0 parameters
      1 conditional paths
      uses function clone() defined in edu::umd::cs::findbugs::config::UserPreferences
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/detect/FindSqlInjectionTest.java
module edu::umd::cs::findbugs::detect::FindSqlInjectionTest
   inherits from junit::framework::TestCase
   function testCloseQuote() in line 39
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
   function testOpenQuote() in line 29
      protection public
      10 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/gui2/HashListTest.java
module edu::umd::cs::findbugs::gui2::HashListTest
   inherits from junit::framework::TestCase
   function testAdd() in line 42
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function add(E) defined in edu::umd::cs::findbugs::gui2::HashList
      uses function indexOf(Object) defined in edu::umd::cs::findbugs::gui2::HashList
   function testBadHasher() in line 51
      protection public
      10 lines of code
      0 parameters
      2 conditional paths
      uses function add(E) defined in edu::umd::cs::findbugs::gui2::HashList
      uses variable ZERO defined in edu::umd::cs::findbugs::gui2::HashListTest
      uses variable ONE defined in edu::umd::cs::findbugs::gui2::HashListTest
      uses variable TWO defined in edu::umd::cs::findbugs::gui2::HashListTest
      uses function indexOf(Object) defined in edu::umd::cs::findbugs::gui2::HashList
   function testRetainAllEmptu() in line 81
      protection public
      9 lines of code
      0 parameters
      1 conditional paths
      uses function add(E) defined in edu::umd::cs::findbugs::gui2::HashList
      uses function retainAll(Collection<?>) defined in edu::umd::cs::findbugs::gui2::HashList
   function testRetainAllEven() in line 91
      protection public
      11 lines of code
      0 parameters
      3 conditional paths
      uses function add(E) defined in edu::umd::cs::findbugs::gui2::HashList
      uses function retainAll(Collection<?>) defined in edu::umd::cs::findbugs::gui2::HashList
   variable ONE in line 36
   variable THREE in line 40
   variable TWO in line 38
   variable ZERO in line 35
module edu::umd::cs::findbugs::gui2::HashListTest::BadHasher
   function equals(Object) in line 76
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   function hashCode() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function toString() in line 68
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function BadHasher(int) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/ml/SplitCamelCaseIdentifierTest.java
module edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   inherits from junit::framework::TestCase
   function checkContents(Collection< String >,String[]) in line 57
      6 lines of code
      2 parameters
      2 conditional paths
   function setUp() in line 18
      8 lines of code
      0 parameters
      1 conditional paths
   function testAllLower() in line 42
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testAllUpper() in line 47
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testCapitalized() in line 52
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplit() in line 27
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplit2() in line 32
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
   function testSplitLong() in line 37
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses function split() defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifier
      uses function checkContents(Collection< String >,String[]) defined in edu::umd::cs::findbugs::ml::SplitCamelCaseIdentifierTest
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/OpcodeStackItemTest.java
module edu::umd::cs::findbugs::OpcodeStackItemTest
   inherits from junit::framework::TestCase
   function testMergeIntAndZero() in line 26
      protection public
      8 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/TigerSubstitutesTest.java
module edu::umd::cs::findbugs::TigerSubstitutesTest
   inherits from junit::framework::TestCase
   function check(Object) in line 58
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function check(Class) in line 61
      protection public
      6 lines of code
      1 parameters
      1 conditional paths
   function main(String) in line 68
      protection public
      10 lines of code
      1 parameters
      1 conditional paths
   function testGetSimpleName() in line 44
      protection public
      14 lines of code
      0 parameters
      1 conditional paths
      uses function main(String) defined in edu::umd::cs::findbugs::TigerSubstitutesTest
      uses function check(Object) defined in edu::umd::cs::findbugs::TigerSubstitutesTest
module edu::umd::cs::findbugs::TigerSubstitutesTest::Foo
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/visitclass/GetNumberArgumentsTest.java
module edu::umd::cs::findbugs::visitclass::GetNumberArgumentsTest
   inherits from junit::framework::TestCase
   function testArrays() in line 40
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
   function testSimpleObjectArgument() in line 54
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testSimpleWithVoidIntegerType() in line 36
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function testSimpleWithVoidReturnType() in line 31
      protection public
      4 lines of code
      0 parameters
      2 conditional paths
   function testStringArguments() in line 47
      protection public
      6 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/junit/edu/umd/cs/findbugs/workflow/FindSeqNumTest.java
module edu::umd::cs::findbugs::workflow::FindSeqNumTest
   inherits from junit::framework::TestCase
   function setUp() in line 20
      16 lines of code
      0 parameters
      2 conditional paths
   function test0() in line 37
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function test1() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune15() in line 72
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune25() in line 75
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterJune5() in line 69
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testAfterMay5() in line 66
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune15() in line 84
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune25() in line 87
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeJune5() in line 81
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testBeforeMay5() in line 78
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testminusOne() in line 40
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testminusTwo() in line 43
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV1_0() in line 49
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV1_1() in line 52
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV2_0() in line 55
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function testV2_1() in line 58
      protection public
      8 lines of code
      0 parameters
      2 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/eclipse/EclipseClasspath.java
module edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function addRequiredPlugin(String,String) in line 329
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses variable pluginDirectoryMap defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function execute() in line 346
      protection public
      71 lines of code
      0 parameters
      15 conditional paths
      uses variable eclipseDir defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function EclipseClasspathException(String) defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::EclipseClasspathException
      uses function getPluginId(String) defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses variable pluginDirectoryMap defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses variable varMap defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses variable rootPluginDir defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function getDirectory() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::WorkListItem
      uses variable isDependent defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::WorkListItem
      uses function getId() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::Plugin
      uses variable isDependent defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::Plugin
      uses variable rootPlugin defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function requiredPluginIdIterator() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::Plugin
      uses variable importList defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function getClasspath() in line 422
      protection public
      23 lines of code
      0 parameters
      4 conditional paths
      uses variable importList defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function importListIterator() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function getPluginId(String) in line 455
      4 lines of code
      1 parameters
      1 conditional paths
      uses variable pluginDirPattern defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses variable PLUGIN_ID_GROUP defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function getRootPlugin() in line 446
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable rootPlugin defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function importListIterator() in line 418
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable importList defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function main(String[]) in line 483
      protection public
      20 lines of code
      1 parameters
      3 conditional paths
      uses function EclipseClasspath(String,String) defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function addRequiredPlugin(String,String) defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function execute() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function getClasspath() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function getRootPlugin() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses function getId() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::Plugin
      uses function getVersion() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::Plugin
   function replaceSpecial(String) in line 465
      17 lines of code
      1 parameters
      4 conditional paths
      uses variable varMap defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function EclipseClasspath(String,String) in line 322
      protection public
      6 lines of code
      2 parameters
      1 conditional paths
      uses variable eclipseDir defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
      uses variable rootPluginDir defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   variable eclipseDir in line 315
   variable importList in line 320
   variable PLUGIN_ID_GROUP in line 313
   variable pluginDirectoryMap in line 317
   variable pluginDirPattern in line 312
   variable rootPlugin in line 319
   variable rootPluginDir in line 316
   variable varMap in line 318
module edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::EclipseClasspathException
   inherits from Exception
   function EclipseClasspathException(String) in line 69
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function EclipseClasspathException(String,Throwable) in line 73
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
   variable serialVersionUID in line 67
module edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::EclipseXMLReader
   inherits from java::io::Reader
   function close() in line 114
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function fill() in line 118
      13 lines of code
      0 parameters
      4 conditional paths
   function isIllegal(String) in line 132
      3 lines of code
      1 parameters
      1 conditional paths
   function read(char[],int,int) in line 98
      protection public
      14 lines of code
      3 parameters
      5 conditional paths
   function EclipseXMLReader(Reader) in line 92
      protection public
      4 lines of code
      1 parameters
      1 conditional paths
   variable lineList in line 90
   variable reader in line 89
module edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::Plugin
   function exportedLibraryIterator() in line 199
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getDirectory() in line 179
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getId() in line 187
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getVersion() in line 191
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function isDependent() in line 183
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function parseNewPluginDescriptor(String,boolean) in line 243
      60 lines of code
      2 parameters
      10 conditional paths
      uses function EclipseClasspathException(String) defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::EclipseClasspathException
   function parseOldPluginDescriptor(String,Document,boolean) in line 203
      39 lines of code
      3 parameters
      7 conditional paths
      uses function EclipseClasspathException(String) defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::EclipseClasspathException
      uses function replaceSpecial(String) defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath
   function requiredPluginIdIterator() in line 195
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function stripSemiPart(String) in line 304
      6 lines of code
      1 parameters
      2 conditional paths
   function Plugin(String,boolean) in line 145
      protection public
      33 lines of code
      2 parameters
      4 conditional paths
      uses function EclipseClasspathException(String) defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::EclipseClasspathException
   variable directory in line 138
   variable exportedLibraryList in line 143
   variable isDependent in line 139
   variable pluginId in line 140
   variable pluginVersion in line 141
   variable requiredPluginIdList in line 142
module edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::WorkListItem
   function getDirectory() in line 342
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function isDependent() in line 343
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses function isDependent() defined in edu::umd::cs::findbugs::tools::eclipse::EclipseClasspath::WorkListItem
   function WorkListItem(String,boolean) in line 337
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
   variable directory in line 334
   variable isDependent in line 335
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/FilterPropertyDatabase.java
module edu::umd::cs::findbugs::tools::FilterPropertyDatabase
   function main(String[]) in line 43
      protection public
      19 lines of code
      1 parameters
      6 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/FixIndentation.java
module edu::umd::cs::findbugs::tools::FixIndentation
   function main(String) in line 43
      protection public
      3 lines of code
      1 parameters
      24 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/html/ColorAlternator.java
module edu::umd::cs::findbugs::tools::html::ColorAlternator
   function nextColor() in line 30
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable colorList defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
   function ColorAlternator(String[]) in line 26
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable colorList defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
   variable colorList in line 23
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/html/PlainPrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   inherits from edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function beginBody() in line 68
      2 lines of code
      0 parameters
      1 conditional paths
   function emit(BugPattern) in line 51
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function endBody() in line 72
      2 lines of code
      0 parameters
      1 conditional paths
   function epilogue() in line 58
      4 lines of code
      0 parameters
      1 conditional paths
      uses function endBody() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function getDocTitle() in line 37
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function getPrintStream() in line 39
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function header() in line 64
      2 lines of code
      0 parameters
      1 conditional paths
   function main(String[]) in line 75
      protection public
      6 lines of code
      1 parameters
      2 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function PlainPrintBugDescriptions(String,OutputStream) defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function prologue() in line 42
      7 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function header() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function beginBody() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function PlainPrintBugDescriptions(String,OutputStream) in line 32
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   variable docTitle in line 29
   variable out in line 30
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/html/PrettyPrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   inherits from edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   function beginBody() in line 103
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable beginBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emit(BugPattern) in line 84
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emitBugDescriptions() in line 137
      14 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function emitSummaryTable() in line 115
      21 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable TABLE_COLORS defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses variable bugPatternSet defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function nextColor() defined in edu::umd::cs::findbugs::tools::html::ColorAlternator
      uses function getBugCategoryDescription(String) defined in edu::umd::cs::findbugs::I18N
   function endBody() in line 110
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable endBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function epilogue() in line 89
      5 lines of code
      0 parameters
      1 conditional paths
      uses function emitSummaryTable() defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function emitBugDescriptions() defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function header() in line 96
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable headerText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function isEnabled(DetectorFactory) in line 153
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable unabridged defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function main(String[]) in line 157
      protection public
      39 lines of code
      1 parameters
      9 conditional paths
      uses variable unabridged defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function PrettyPrintBugDescriptions(String,OutputStream) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setHeaderText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setBeginBodyText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setPrologueText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function setEndBodyText(String) defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
      uses function print() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function prologue() in line 77
      5 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses function getPrintStream() defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable prologueText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setBeginBodyText(String) in line 64
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable beginBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setEndBodyText(String) in line 72
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable endBodyText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setHeaderText(String) in line 60
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable headerText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function setPrologueText(String) in line 68
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable prologueText defined in edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions
   function PrettyPrintBugDescriptions(String,OutputStream) in line 54
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable docTitle defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
      uses variable out defined in edu::umd::cs::findbugs::tools::html::PlainPrintBugDescriptions
   variable beginBodyText in line 37
   variable bugPatternSet in line 35
   variable endBodyText in line 39
   variable headerText in line 36
   variable prologueText in line 38
   variable TABLE_COLORS in line 42
   variable unabridged in line 40
module edu::umd::cs::findbugs::tools::html::PrettyPrintBugDescriptions::BugPatternComparator
   inherits from java::util::Comparator
   inherits from java::io::Serializable
   function compare(BugPattern,BugPattern) in line 45
      protection public
      7 lines of code
      2 parameters
      3 conditional paths
      uses function getCategory() defined in edu::umd::cs::findbugs::BugPattern
      uses function getAbbrev() defined in edu::umd::cs::findbugs::BugPattern
      uses function getType() defined in edu::umd::cs::findbugs::BugPattern
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/html/PrintBugDescriptions.java
module edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   abstract class
   function emit(BugPattern) in line 64
      1 lines of code
      1 parameters
      1 conditional paths
   function epilogue() in line 66
      1 lines of code
      0 parameters
      1 conditional paths
   function isEnabled(DetectorFactory) in line 58
      3 lines of code
      1 parameters
      1 conditional paths
      uses function isDefaultEnabled() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function prologue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function emit(BugPattern) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function epilogue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function print() in line 33
      protection public
      24 lines of code
      0 parameters
      5 conditional paths
      uses function factoryIterator() defined in edu::umd::cs::findbugs::DetectorFactoryCollection
      uses function isEnabled(DetectorFactory) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function getReportedBugPatterns() defined in edu::umd::cs::findbugs::DetectorFactory
      uses function prologue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function bugPatternIterator() defined in edu::umd::cs::findbugs::I18N
      uses function emit(BugPattern) defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
      uses function epilogue() defined in edu::umd::cs::findbugs::tools::html::PrintBugDescriptions
   function prologue() in line 62
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/junit/JUnitJarRunner.java
module edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function buildTestSuite() in line 71
      protection public
      42 lines of code
      0 parameters
      7 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses variable classpath defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function run(TestSuite,String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function main(String[]) in line 124
      protection public
      19 lines of code
      1 parameters
      4 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function JUnitJarRunner(String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function setClassPath(String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function buildTestSuite() defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
      uses function run(TestSuite,String) defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function run(TestSuite,String) in line 114
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
   function setClassPath(String) in line 62
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable classpath defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   function JUnitJarRunner(String) in line 53
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable jarFileName defined in edu::umd::cs::findbugs::tools::junit::JUnitJarRunner
   variable classpath in line 47
   variable jarFileName in line 46
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/patcomp/CodeEmitter.java
module edu::umd::cs::findbugs::tools::patcomp::CodeEmitter
   function emitToken(String) in line 32
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function finish() in line 35
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/patcomp/CodeGen.java
module edu::umd::cs::findbugs::tools::patcomp::CodeGen
   inherits from PatternCompilerTreeConstants
   function generate(SimpleNode,CodeEmitter) in line 36
      protection public
      5 lines of code
      2 parameters
      1 conditional paths
      uses variable emitter defined in edu::umd::cs::findbugs::tools::patcomp::CodeGen
      uses function visit(SimpleNode) defined in edu::umd::cs::findbugs::tools::patcomp::CodeGen
      uses function finish() defined in edu::umd::cs::findbugs::tools::patcomp::CodeEmitter
   function generateDefault(SimpleNode) in line 53
      protection public
      53 lines of code
      1 parameters
      9 conditional paths
      uses function jjtGetChild(int) defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
      uses function getLastToken() defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
      uses function getFirstToken() defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
      uses variable next defined in edu::umd::cs::findbugs::tools::patcomp::Token
      uses variable emitter defined in edu::umd::cs::findbugs::tools::patcomp::CodeGen
      uses function emitToken(String) defined in edu::umd::cs::findbugs::tools::patcomp::CodeEmitter
      uses variable image defined in edu::umd::cs::findbugs::tools::patcomp::Token
      uses function visit(SimpleNode) defined in edu::umd::cs::findbugs::tools::patcomp::CodeGen
   function generatePrescreen(SimpleNode) in line 107
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function visit(SimpleNode) in line 42
      10 lines of code
      1 parameters
      2 conditional paths
      uses function generatePrescreen(SimpleNode) defined in edu::umd::cs::findbugs::tools::patcomp::CodeGen
      uses function generateDefault(SimpleNode) defined in edu::umd::cs::findbugs::tools::patcomp::CodeGen
   function CodeGen() in line 33
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   variable emitter in line 31
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/patcomp/Node.java
module edu::umd::cs::findbugs::tools::patcomp::Node
   function jjtAddChild(Node,int) in line 26
      protection public
      1 lines of code
      2 parameters
      1 conditional paths
   function jjtClose() in line 17
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtGetChild(int) in line 30
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
   function jjtGetNumChildren() in line 33
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtGetParent() in line 22
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtOpen() in line 13
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function jjtSetParent(Node) in line 21
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/patcomp/PrettyCodeEmitter.java
module edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
   inherits from edu::umd::cs::findbugs::tools::patcomp::CodeEmitter
   function emitToken(String) in line 53
      protection public
      25 lines of code
      1 parameters
      6 conditional paths
      uses variable newline defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
      uses function indent() defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
      uses variable out defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
      uses variable alwaysSpaceBeforeAndAfter defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
      uses variable last defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
      uses variable noSpaceAfter defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
      uses variable noSpaceBefore defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
   function finish() in line 79
      protection public
      4 lines of code
      0 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
   function indent() in line 84
      4 lines of code
      0 parameters
      2 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
   function PrettyCodeEmitter(PrintStream) in line 47
      protection public
      5 lines of code
      1 parameters
      1 conditional paths
      uses variable out defined in edu::umd::cs::findbugs::tools::patcomp::PrettyCodeEmitter
   variable alwaysSpaceBeforeAndAfter in line 35
   variable indent in line 29
   variable last in line 30
   variable newline in line 31
   variable noSpaceAfter in line 34
   variable noSpaceBefore in line 33
   variable out in line 28
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/patcomp/SimpleNode.java
module edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   inherits from edu::umd::cs::findbugs::tools::patcomp::Node
   function dump(String) in line 117
      protection public
      11 lines of code
      1 parameters
      4 conditional paths
      uses function toString() defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
      uses variable children defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
      uses function SimpleNode(int) defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
      uses function dump(String) defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function getFirstToken() in line 35
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable firstToken defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function getId() in line 24
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function getLastToken() in line 46
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
   function getNumTokens() in line 51
      protection public
      9 lines of code
      0 parameters
      2 conditional paths
      uses variable firstToken defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
      uses variable next defined in edu::umd::cs::findbugs::tools::patcomp::Token
   function getToken(int) in line 65
      protection public
      11 lines of code
      1 parameters
      3 conditional paths
      uses variable firstToken defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
      uses variable next defined in edu::umd::cs::findbugs::tools::patcomp::Token
   function jjtAddChild(Node,int) in line 86
      protection public
      10 lines of code
      2 parameters
      3 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function jjtClose() in line 80
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function jjtGetChild(int) in line 97
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function jjtGetNumChildren() in line 101
      protection public
      3 lines of code
      0 parameters
      1 conditional paths
      uses variable children defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function jjtGetParent() in line 84
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function jjtOpen() in line 77
      protection public
      2 lines of code
      0 parameters
      1 conditional paths
   function jjtSetParent(Node) in line 83
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
      uses variable parent defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function setFirstToken(Token) in line 29
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function setLastToken(Token) in line 40
      protection public
      4 lines of code
      1 parameters
      2 conditional paths
   function toString() in line 111
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
      uses variable id defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function toString(String) in line 112
      protection public
      1 lines of code
      1 parameters
      1 conditional paths
      uses function toString(String) defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   function SimpleNode(int) in line 14
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function SimpleNode(PatternCompiler,int) in line 18
      protection public
      4 lines of code
      2 parameters
      1 conditional paths
      uses variable parser defined in edu::umd::cs::findbugs::tools::patcomp::SimpleNode
   variable children in line 7
   variable firstToken in line 12
   variable id in line 8
   variable parent in line 6
   variable parser in line 9
file /DISSERTACAO-UFBA-2016/dataset/static-analysis-tools/findbugs/findbugs-1.2.1-source/findbugs-1.2.1/src/tools/edu/umd/cs/findbugs/tools/xml/CheckMessages.java
module edu::umd::cs::findbugs::tools::xml::CheckMessages
   function checkDescribed(String,XMLFile,Set< String >,Set< String >) in line 188
      protection public
      10 lines of code
      4 parameters
      2 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkMessages(XMLFile) in line 147
      protection public
      40 lines of code
      1 parameters
      4 conditional paths
      uses function checkDescribed(String,XMLFile,Set< String >,Set< String >) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses variable declaredDetectorsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses variable declaredAbbrevsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   function main(String[]) in line 199
      protection public
      23 lines of code
      1 parameters
      4 conditional paths
      uses function checkMessages(XMLFile) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses function CheckMessages(String) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   function CheckMessages(String) in line 131
      protection public
      11 lines of code
      1 parameters
      1 conditional paths
      uses variable declaredDetectorsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
      uses function collectAttributes(String,String) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
      uses variable declaredAbbrevsSet defined in edu::umd::cs::findbugs::tools::xml::CheckMessages
   variable declaredAbbrevsSet in line 129
   variable declaredDetectorsSet in line 128
module edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   inherits from org::dom4j::DocumentException
   function CheckMessagesException(String,XMLFile,Node) in line 47
      protection public
      3 lines of code
      3 parameters
      1 conditional paths
      uses function getFilename() defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   function CheckMessagesException(String,XMLFile) in line 51
      protection public
      3 lines of code
      2 parameters
      1 conditional paths
      uses function getFilename() defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   variable serialVersionUID in line 45
module edu::umd::cs::findbugs::tools::xml::CheckMessages::XMLFile
   function checkAttribute(Node,String) in line 97
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkElement(Node,String) in line 107
      protection public
      9 lines of code
      2 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function checkNonEmptyText(Node) in line 117
      protection public
      9 lines of code
      1 parameters
      3 conditional paths
      uses function CheckMessagesException(String,XMLFile,Node) defined in edu::umd::cs::findbugs::tools::xml::CheckMessages::CheckMessagesException
   function collectAttributes(String,String) in line 84
      protection public
      12 lines of code
      2 parameters
      2 conditional paths
   function getDocument() in line 70
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function getFilename() in line 68
      protection public
      1 lines of code
      0 parameters
      1 conditional paths
   function xpathIterator(String) in line 76
      protection public
      3 lines of code
      1 parameters
      1 conditional paths
   function XMLFile(String) in line 60
      protection public
      7 lines of code
      1 parameters
      1 conditional paths
   variable document in line 58
   variable filename in line 57
